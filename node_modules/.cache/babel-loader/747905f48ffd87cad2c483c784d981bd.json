{"remainingRequest":"/home/natalie/Workspaces/nmarno68.github.io/node_modules/babel-loader/lib/index.js!/home/natalie/Workspaces/nmarno68.github.io/node_modules/vuetify/dist/vuetify.js","dependencies":[{"path":"/home/natalie/Workspaces/nmarno68.github.io/node_modules/vuetify/dist/vuetify.js","mtime":499162500000},{"path":"/home/natalie/Workspaces/nmarno68.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/natalie/Workspaces/nmarno68.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvciI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wudG8tc3RyaW5nLXRhZyI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZXZlcnkiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbCI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLWluZGV4IjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZsYXQiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbSI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZiI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmV2ZXJzZSI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb21lIjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvcnQiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnVuc2NvcGFibGVzLmZsYXQiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnRvLXN0cmluZy10YWciO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMubWFwIjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLm1hdGguY2JydCI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5tYXRoLnNpZ24iO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMubWF0aC50by1zdHJpbmctdGFnIjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIubWF4LXNhZmUtaW50ZWdlciI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWQiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmZyZWV6ZSI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuaXMtZXh0ZW5zaWJsZSI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Quc2V0LXByb3RvdHlwZS1vZiI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC52YWx1ZXMiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtZmxvYXQiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtaW50IjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuc2V0IjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5lbmRzLXdpdGgiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2giO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnBhZC1lbmQiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnBhZC1zdGFydCI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwZWF0IjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zZWFyY2giO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aCI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbSI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuYW5jaG9yIjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5maXhlZCI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubGluayI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc21hbGwiO2ltcG9ydCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN1YiI7aW1wb3J0ImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjtpbXBvcnQiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiO2ltcG9ydCBfdHlwZW9mMiBmcm9tIi9ob21lL25hdGFsaWUvV29ya3NwYWNlcy9ubWFybm82OC5naXRodWIuaW8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vdHlwZW9mIjsoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCxmYWN0b3J5KXtpZigodHlwZW9mIGV4cG9ydHM9PT0idW5kZWZpbmVkIj8idW5kZWZpbmVkIjpfdHlwZW9mMihleHBvcnRzKSk9PT0nb2JqZWN0JyYmKHR5cGVvZiBtb2R1bGU9PT0idW5kZWZpbmVkIj8idW5kZWZpbmVkIjpfdHlwZW9mMihtb2R1bGUpKT09PSdvYmplY3QnKW1vZHVsZS5leHBvcnRzPWZhY3RvcnkocmVxdWlyZSgidnVlIikpO2Vsc2UgaWYodHlwZW9mIGRlZmluZT09PSdmdW5jdGlvbicmJmRlZmluZS5hbWQpZGVmaW5lKFsidnVlIl0sZmFjdG9yeSk7ZWxzZSBpZigodHlwZW9mIGV4cG9ydHM9PT0idW5kZWZpbmVkIj8idW5kZWZpbmVkIjpfdHlwZW9mMihleHBvcnRzKSk9PT0nb2JqZWN0JylleHBvcnRzWyJWdWV0aWZ5Il09ZmFjdG9yeShyZXF1aXJlKCJ2dWUiKSk7ZWxzZSByb290WyJWdWV0aWZ5Il09ZmFjdG9yeShyb290WyJWdWUiXSk7fSkodHlwZW9mIHNlbGYhPT0ndW5kZWZpbmVkJz9zZWxmOnRoaXMsZnVuY3Rpb24oX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV92dWVfXyl7cmV0dXJuKC8qKioqKiovZnVuY3Rpb24obW9kdWxlcyl7Ly8gd2VicGFja0Jvb3RzdHJhcAovKioqKioqLyAvLyBUaGUgbW9kdWxlIGNhY2hlCi8qKioqKiovdmFyIGluc3RhbGxlZE1vZHVsZXM9e307LyoqKioqKi8gLyoqKioqKi8gLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb24KLyoqKioqKi9mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKXsvKioqKioqLyAvKioqKioqLyAvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGUKLyoqKioqKi9pZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSl7LyoqKioqKi9yZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0czsvKioqKioqL30vKioqKioqLyAvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKQovKioqKioqL3ZhciBtb2R1bGU9aW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF09ey8qKioqKiovaTptb2R1bGVJZCwvKioqKioqL2w6ZmFsc2UsLyoqKioqKi9leHBvcnRzOnt9LyoqKioqKi99Oy8qKioqKiovIC8qKioqKiovIC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvbgovKioqKioqL21vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsbW9kdWxlLG1vZHVsZS5leHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pOy8qKioqKiovIC8qKioqKiovIC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWQKLyoqKioqKi9tb2R1bGUubD10cnVlOy8qKioqKiovIC8qKioqKiovIC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlCi8qKioqKiovcmV0dXJuIG1vZHVsZS5leHBvcnRzOy8qKioqKiovfS8qKioqKiovIC8qKioqKiovIC8qKioqKiovIC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pCi8qKioqKiovX193ZWJwYWNrX3JlcXVpcmVfXy5tPW1vZHVsZXM7LyoqKioqKi8gLyoqKioqKi8gLy8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGUKLyoqKioqKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmM9aW5zdGFsbGVkTW9kdWxlczsvKioqKioqLyAvKioqKioqLyAvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHMKLyoqKioqKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQ9ZnVuY3Rpb24oZXhwb3J0cyxuYW1lLGdldHRlcil7LyoqKioqKi9pZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsbmFtZSkpey8qKioqKiovT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsbmFtZSx7ZW51bWVyYWJsZTp0cnVlLGdldDpnZXR0ZXJ9KTsvKioqKioqL30vKioqKioqL307LyoqKioqKi8gLyoqKioqKi8gLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0cwovKioqKioqL19fd2VicGFja19yZXF1aXJlX18ucj1mdW5jdGlvbihleHBvcnRzKXsvKioqKioqL2lmKHR5cGVvZiBTeW1ib2whPT0ndW5kZWZpbmVkJyYmU3ltYm9sLnRvU3RyaW5nVGFnKXsvKioqKioqL09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6J01vZHVsZSd9KTsvKioqKioqL30vKioqKioqL09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCdfX2VzTW9kdWxlJyx7dmFsdWU6dHJ1ZX0pOy8qKioqKiovfTsvKioqKioqLyAvKioqKioqLyAvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3QKLyoqKioqKi8gLy8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0Ci8qKioqKiovIC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBucwovKioqKioqLyAvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3QKLyoqKioqKi8gLy8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZQovKioqKioqL19fd2VicGFja19yZXF1aXJlX18udD1mdW5jdGlvbih2YWx1ZSxtb2RlKXsvKioqKioqL2lmKG1vZGUmMSl2YWx1ZT1fX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTsvKioqKioqL2lmKG1vZGUmOClyZXR1cm4gdmFsdWU7LyoqKioqKi9pZihtb2RlJjQmJl90eXBlb2YyKHZhbHVlKT09PSdvYmplY3QnJiZ2YWx1ZSYmdmFsdWUuX19lc01vZHVsZSlyZXR1cm4gdmFsdWU7LyoqKioqKi92YXIgbnM9T2JqZWN0LmNyZWF0ZShudWxsKTsvKioqKioqL19fd2VicGFja19yZXF1aXJlX18ucihucyk7LyoqKioqKi9PYmplY3QuZGVmaW5lUHJvcGVydHkobnMsJ2RlZmF1bHQnLHtlbnVtZXJhYmxlOnRydWUsdmFsdWU6dmFsdWV9KTsvKioqKioqL2lmKG1vZGUmMiYmdHlwZW9mIHZhbHVlIT0nc3RyaW5nJylmb3IodmFyIGtleSBpbiB2YWx1ZSl7X193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLGtleSxmdW5jdGlvbihrZXkpe3JldHVybiB2YWx1ZVtrZXldO30uYmluZChudWxsLGtleSkpO30vKioqKioqL3JldHVybiBuczsvKioqKioqL307LyoqKioqKi8gLyoqKioqKi8gLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXMKLyoqKioqKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm49ZnVuY3Rpb24obW9kdWxlKXsvKioqKioqL3ZhciBnZXR0ZXI9bW9kdWxlJiZtb2R1bGUuX19lc01vZHVsZT8vKioqKioqL2Z1bmN0aW9uIGdldERlZmF1bHQoKXtyZXR1cm4gbW9kdWxlWydkZWZhdWx0J107fTovKioqKioqL2Z1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKXtyZXR1cm4gbW9kdWxlO307LyoqKioqKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCdhJyxnZXR0ZXIpOy8qKioqKiovcmV0dXJuIGdldHRlcjsvKioqKioqL307LyoqKioqKi8gLyoqKioqKi8gLy8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsCi8qKioqKiovX193ZWJwYWNrX3JlcXVpcmVfXy5vPWZ1bmN0aW9uKG9iamVjdCxwcm9wZXJ0eSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QscHJvcGVydHkpO307LyoqKioqKi8gLyoqKioqKi8gLy8gX193ZWJwYWNrX3B1YmxpY19wYXRoX18KLyoqKioqKi9fX3dlYnBhY2tfcmVxdWlyZV9fLnA9Ii9kaXN0LyI7LyoqKioqKi8gLyoqKioqKi8gLyoqKioqKi8gLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzCi8qKioqKiovcmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zPSIuL3NyYy9pbmRleC50cyIpOy8qKioqKiovfSgvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKioqKioqL3svKioqLyIuL3NyYy9jb21wb25lbnRzL1ZBbGVydC9WQWxlcnQuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQWxlcnQvVkFsZXJ0LnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkFsZXJ0VkFsZXJ0U2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkFsZXJ0L1ZBbGVydC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkFsZXJ0L1ZBbGVydC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQWxlcnRWQWxlcnRUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQWxlcnRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkFsZXJ0LnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WQWxlcnQvVkFsZXJ0LnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkFsZXJ0X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZBbGVydF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WU2hlZXQgKi8iLi9zcmMvY29tcG9uZW50cy9WU2hlZXQvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJ0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZCdG4gKi8iLi9zcmMvY29tcG9uZW50cy9WQnRuL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkljb24gKi8iLi9zcmMvY29tcG9uZW50cy9WSWNvbi9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy90b2dnbGVhYmxlICovIi4vc3JjL21peGlucy90b2dnbGVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RyYW5zaXRpb25hYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RyYW5zaXRpb25hYmxlICovIi4vc3JjL21peGlucy90cmFuc2l0aW9uYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvY29uc29sZSAqLyIuL3NyYy91dGlsL2NvbnNvbGUudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBFeHRlbnNpb25zCi8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8vIFV0aWxpdGllcwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siZGVmYXVsdCJdKShfVlNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfbWl4aW5zX3RvZ2dsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLF9taXhpbnNfdHJhbnNpdGlvbmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3YtYWxlcnQnLHByb3BzOntib3JkZXI6e3R5cGU6U3RyaW5nLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsKXtyZXR1cm5bJ3RvcCcsJ3JpZ2h0JywnYm90dG9tJywnbGVmdCddLmluY2x1ZGVzKHZhbCk7fX0sY2xvc2VMYWJlbDp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJHZ1ZXRpZnkuY2xvc2UnfSxjb2xvcmVkQm9yZGVyOkJvb2xlYW4sZGVuc2U6Qm9vbGVhbixkaXNtaXNzaWJsZTpCb29sZWFuLGljb246e2RlZmF1bHQ6JycsdHlwZTpbQm9vbGVhbixTdHJpbmddLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsKXtyZXR1cm4gdHlwZW9mIHZhbD09PSdzdHJpbmcnfHx2YWw9PT1mYWxzZTt9fSxvdXRsaW5lZDpCb29sZWFuLHByb21pbmVudDpCb29sZWFuLHRleHQ6Qm9vbGVhbix0eXBlOnt0eXBlOlN0cmluZyx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7cmV0dXJuWydpbmZvJywnZXJyb3InLCdzdWNjZXNzJywnd2FybmluZyddLmluY2x1ZGVzKHZhbCk7fX0sdmFsdWU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9fSxjb21wdXRlZDp7X19jYWNoZWRCb3JkZXI6ZnVuY3Rpb24gX19jYWNoZWRCb3JkZXIoKXt2YXIgX2E7aWYoIXRoaXMuYm9yZGVyKXJldHVybiBudWxsO3ZhciBkYXRhPXtzdGF0aWNDbGFzczondi1hbGVydF9fYm9yZGVyJyxjbGFzczooX2E9e30sX2FbInYtYWxlcnRfX2JvcmRlci0tIit0aGlzLmJvcmRlcl09dHJ1ZSxfYSl9O2lmKHRoaXMuY29sb3JlZEJvcmRlcil7ZGF0YT10aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbXB1dGVkQ29sb3IsZGF0YSk7ZGF0YS5jbGFzc1sndi1hbGVydF9fYm9yZGVyLS1oYXMtY29sb3InXT10cnVlO31yZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2JyxkYXRhKTt9LF9fY2FjaGVkRGlzbWlzc2libGU6ZnVuY3Rpb24gX19jYWNoZWREaXNtaXNzaWJsZSgpe3ZhciBfdGhpcz10aGlzO2lmKCF0aGlzLmRpc21pc3NpYmxlKXJldHVybiBudWxsO3ZhciBjb2xvcj10aGlzLmljb25Db2xvcjtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkJ0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0se3N0YXRpY0NsYXNzOid2LWFsZXJ0X19kaXNtaXNzaWJsZScscHJvcHM6e2NvbG9yOmNvbG9yLGljb246dHJ1ZSxzbWFsbDp0cnVlfSxhdHRyczp7J2FyaWEtbGFiZWwnOnRoaXMuJHZ1ZXRpZnkubGFuZy50KHRoaXMuY2xvc2VMYWJlbCl9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygpe3JldHVybiBfdGhpcy5pc0FjdGl2ZT1mYWxzZTt9fX0sW3RoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSx7cHJvcHM6e2NvbG9yOmNvbG9yfX0sJyRjYW5jZWwnKV0pO30sX19jYWNoZWRJY29uOmZ1bmN0aW9uIF9fY2FjaGVkSWNvbigpe2lmKCF0aGlzLmNvbXB1dGVkSWNvbilyZXR1cm4gbnVsbDtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLHtzdGF0aWNDbGFzczondi1hbGVydF9faWNvbicscHJvcHM6e2NvbG9yOnRoaXMuaWNvbkNvbG9yfX0sdGhpcy5jb21wdXRlZEljb24pO30sY2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7dmFyIGNsYXNzZXM9X19hc3NpZ24oe30sX1ZTaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LWFsZXJ0LS1ib3JkZXInOkJvb2xlYW4odGhpcy5ib3JkZXIpLCd2LWFsZXJ0LS1kZW5zZSc6dGhpcy5kZW5zZSwndi1hbGVydC0tb3V0bGluZWQnOnRoaXMub3V0bGluZWQsJ3YtYWxlcnQtLXByb21pbmVudCc6dGhpcy5wcm9taW5lbnQsJ3YtYWxlcnQtLXRleHQnOnRoaXMudGV4dH0pO2lmKHRoaXMuYm9yZGVyKXtjbGFzc2VzWyJ2LWFsZXJ0LS1ib3JkZXItIit0aGlzLmJvcmRlcl09dHJ1ZTt9cmV0dXJuIGNsYXNzZXM7fSxjb21wdXRlZENvbG9yOmZ1bmN0aW9uIGNvbXB1dGVkQ29sb3IoKXtyZXR1cm4gdGhpcy5jb2xvcnx8dGhpcy50eXBlO30sY29tcHV0ZWRJY29uOmZ1bmN0aW9uIGNvbXB1dGVkSWNvbigpe2lmKHRoaXMuaWNvbj09PWZhbHNlKXJldHVybiBmYWxzZTtpZih0eXBlb2YgdGhpcy5pY29uPT09J3N0cmluZycmJnRoaXMuaWNvbilyZXR1cm4gdGhpcy5pY29uO2lmKCFbJ2Vycm9yJywnaW5mbycsJ3N1Y2Nlc3MnLCd3YXJuaW5nJ10uaW5jbHVkZXModGhpcy50eXBlKSlyZXR1cm4gZmFsc2U7cmV0dXJuIiQiK3RoaXMudHlwZTt9LGhhc0NvbG9yZWRJY29uOmZ1bmN0aW9uIGhhc0NvbG9yZWRJY29uKCl7cmV0dXJuIHRoaXMuaGFzVGV4dHx8Qm9vbGVhbih0aGlzLmJvcmRlcikmJnRoaXMuY29sb3JlZEJvcmRlcjt9LGhhc1RleHQ6ZnVuY3Rpb24gaGFzVGV4dCgpe3JldHVybiB0aGlzLnRleHR8fHRoaXMub3V0bGluZWQ7fSxpY29uQ29sb3I6ZnVuY3Rpb24gaWNvbkNvbG9yKCl7cmV0dXJuIHRoaXMuaGFzQ29sb3JlZEljb24/dGhpcy5jb21wdXRlZENvbG9yOnVuZGVmaW5lZDt9LGlzRGFyazpmdW5jdGlvbiBpc0RhcmsoKXtpZih0aGlzLnR5cGUmJiF0aGlzLmNvbG9yZWRCb3JkZXImJiF0aGlzLm91dGxpbmVkKXJldHVybiB0cnVlO3JldHVybiBfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5pc0RhcmsuY2FsbCh0aGlzKTt9fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXsvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2lmKHRoaXMuJGF0dHJzLmhhc093blByb3BlcnR5KCdvdXRsaW5lJykpe09iamVjdChfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImJyZWFraW5nIl0pKCdvdXRsaW5lJywnb3V0bGluZWQnLHRoaXMpO319LG1ldGhvZHM6e2dlbldyYXBwZXI6ZnVuY3Rpb24gZ2VuV3JhcHBlcigpe3ZhciBjaGlsZHJlbj1bdGhpcy4kc2xvdHMucHJlcGVuZHx8dGhpcy5fX2NhY2hlZEljb24sdGhpcy5nZW5Db250ZW50KCksdGhpcy5fX2NhY2hlZEJvcmRlcix0aGlzLiRzbG90cy5hcHBlbmQsdGhpcy4kc2NvcGVkU2xvdHMuY2xvc2U/dGhpcy4kc2NvcGVkU2xvdHMuY2xvc2Uoe3RvZ2dsZTp0aGlzLnRvZ2dsZX0pOnRoaXMuX19jYWNoZWREaXNtaXNzaWJsZV07dmFyIGRhdGE9e3N0YXRpY0NsYXNzOid2LWFsZXJ0X193cmFwcGVyJ307cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsZGF0YSxjaGlsZHJlbik7fSxnZW5Db250ZW50OmZ1bmN0aW9uIGdlbkNvbnRlbnQoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtYWxlcnRfX2NvbnRlbnQnfSx0aGlzLiRzbG90cy5kZWZhdWx0KTt9LGdlbkFsZXJ0OmZ1bmN0aW9uIGdlbkFsZXJ0KCl7dmFyIGRhdGE9e3N0YXRpY0NsYXNzOid2LWFsZXJ0JyxhdHRyczp7cm9sZTonYWxlcnQnfSxjbGFzczp0aGlzLmNsYXNzZXMsc3R5bGU6dGhpcy5zdHlsZXMsZGlyZWN0aXZlczpbe25hbWU6J3Nob3cnLHZhbHVlOnRoaXMuaXNBY3RpdmV9XX07aWYoIXRoaXMuY29sb3JlZEJvcmRlcil7dmFyIHNldENvbG9yPXRoaXMuaGFzVGV4dD90aGlzLnNldFRleHRDb2xvcjp0aGlzLnNldEJhY2tncm91bmRDb2xvcjtkYXRhPXNldENvbG9yKHRoaXMuY29tcHV0ZWRDb2xvcixkYXRhKTt9cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsZGF0YSxbdGhpcy5nZW5XcmFwcGVyKCldKTt9LC8qKiBAcHVibGljICovdG9nZ2xlOmZ1bmN0aW9uIHRvZ2dsZSgpe3RoaXMuaXNBY3RpdmU9IXRoaXMuaXNBY3RpdmU7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgcmVuZGVyPXRoaXMuZ2VuQWxlcnQoKTtpZighdGhpcy50cmFuc2l0aW9uKXJldHVybiByZW5kZXI7cmV0dXJuIGgoJ3RyYW5zaXRpb24nLHtwcm9wczp7bmFtZTp0aGlzLnRyYW5zaXRpb24sb3JpZ2luOnRoaXMub3JpZ2luLG1vZGU6dGhpcy5tb2RlfX0sW3JlbmRlcl0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQWxlcnQvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkFsZXJ0L2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZBbGVydCwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQWxlcnRJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZBbGVydF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkFsZXJ0ICovIi4vc3JjL2NvbXBvbmVudHMvVkFsZXJ0L1ZBbGVydC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZBbGVydCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZBbGVydF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVkFsZXJ0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQXBwL1ZBcHAuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZBcHAvVkFwcC5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkFwcFZBcHBTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQXBwL1ZBcHAudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkFwcC9WQXBwLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkFwcFZBcHBUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXBwX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZBcHAuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZBcHAvVkFwcC5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZBcHBfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkFwcF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBNaXhpbnMKLy8gVXRpbGl0aWVzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pKF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOid2LWFwcCcscHJvcHM6e2Rhcms6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnVuZGVmaW5lZH0saWQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2FwcCd9LGxpZ2h0Ont0eXBlOkJvb2xlYW4sZGVmYXVsdDp1bmRlZmluZWR9fSxjb21wdXRlZDp7aXNEYXJrOmZ1bmN0aW9uIGlzRGFyaygpe3JldHVybiB0aGlzLiR2dWV0aWZ5LnRoZW1lLmRhcms7fX0sYmVmb3JlQ3JlYXRlOmZ1bmN0aW9uIGJlZm9yZUNyZWF0ZSgpe2lmKCF0aGlzLiR2dWV0aWZ5fHx0aGlzLiR2dWV0aWZ5PT09dGhpcy4kcm9vdCl7dGhyb3cgbmV3IEVycm9yKCdWdWV0aWZ5IGlzIG5vdCBwcm9wZXJseSBpbml0aWFsaXplZCwgc2VlIGh0dHBzOi8vdnVldGlmeWpzLmNvbS9nZXR0aW5nLXN0YXJ0ZWQvcXVpY2stc3RhcnQjYm9vdHN0cmFwcGluZy10aGUtdnVldGlmeS1vYmplY3QnKTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciB3cmFwcGVyPWgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWFwcGxpY2F0aW9uLS13cmFwJ30sdGhpcy4kc2xvdHMuZGVmYXVsdCk7cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWFwcGxpY2F0aW9uJyxjbGFzczpfX2Fzc2lnbih7J3YtYXBwbGljYXRpb24tLWlzLXJ0bCc6dGhpcy4kdnVldGlmeS5ydGwsJ3YtYXBwbGljYXRpb24tLWlzLWx0cic6IXRoaXMuJHZ1ZXRpZnkucnRsfSx0aGlzLnRoZW1lQ2xhc3NlcyksYXR0cnM6eydkYXRhLWFwcCc6dHJ1ZX0sZG9tUHJvcHM6e2lkOnRoaXMuaWR9fSxbd3JhcHBlcl0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQXBwL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQXBwL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWQXBwLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZBcHBJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZBcHBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZBcHAgKi8iLi9zcmMvY29tcG9uZW50cy9WQXBwL1ZBcHAudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQXBwIixmdW5jdGlvbigpe3JldHVybiBfVkFwcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVkFwcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkFwcEJhci9WQXBwQmFyLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQXBwQmFyL1ZBcHBCYXIuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZBcHBCYXJWQXBwQmFyU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkFwcEJhci9WQXBwQmFyLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZBcHBCYXIvVkFwcEJhci50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZBcHBCYXJWQXBwQmFyVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkFwcEJhcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQXBwQmFyLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WQXBwQmFyL1ZBcHBCYXIuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXBwQmFyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZBcHBCYXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRvb2xiYXJfVlRvb2xiYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WVG9vbGJhci9WVG9vbGJhciAqLyIuL3NyYy9jb21wb25lbnRzL1ZUb29sYmFyL1ZUb29sYmFyLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfc2Nyb2xsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vZGlyZWN0aXZlcy9zY3JvbGwgKi8iLi9zcmMvZGlyZWN0aXZlcy9zY3JvbGwvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2FwcGxpY2F0aW9uYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9hcHBsaWNhdGlvbmFibGUgKi8iLi9zcmMvbWl4aW5zL2FwcGxpY2F0aW9uYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfc2Nyb2xsYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9zY3JvbGxhYmxlICovIi4vc3JjL21peGlucy9zY3JvbGxhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19zc3JfYm9vdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvc3NyLWJvb3RhYmxlICovIi4vc3JjL21peGlucy9zc3ItYm9vdGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RvZ2dsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdG9nZ2xlYWJsZSAqLyIuL3NyYy9taXhpbnMvdG9nZ2xlYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBFeHRlbnNpb25zCi8vIERpcmVjdGl2ZXMKLy8gTWl4aW5zCi8vIFV0aWxpdGllcwp2YXIgYmFzZU1peGlucz1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImRlZmF1bHQiXSkoX1ZUb29sYmFyX1ZUb29sYmFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfbWl4aW5zX3Njcm9sbGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLF9taXhpbnNfc3NyX2Jvb3RhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSxfbWl4aW5zX3RvZ2dsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdLE9iamVjdChfbWl4aW5zX2FwcGxpY2F0aW9uYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKCd0b3AnLFsnY2xpcHBlZExlZnQnLCdjbGlwcGVkUmlnaHQnLCdjb21wdXRlZEhlaWdodCcsJ2ludmVydGVkU2Nyb2xsJywnaXNFeHRlbmRlZCcsJ2lzUHJvbWluZW50JywndmFsdWUnXSkpOy8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09YmFzZU1peGlucy5leHRlbmQoe25hbWU6J3YtYXBwLWJhcicsZGlyZWN0aXZlczp7U2Nyb2xsOl9kaXJlY3RpdmVzX3Njcm9sbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il19LHByb3BzOntjbGlwcGVkTGVmdDpCb29sZWFuLGNsaXBwZWRSaWdodDpCb29sZWFuLGNvbGxhcHNlT25TY3JvbGw6Qm9vbGVhbixlbGV2YXRlT25TY3JvbGw6Qm9vbGVhbixmYWRlSW1nT25TY3JvbGw6Qm9vbGVhbixoaWRlT25TY3JvbGw6Qm9vbGVhbixpbnZlcnRlZFNjcm9sbDpCb29sZWFuLHNjcm9sbE9mZlNjcmVlbjpCb29sZWFuLHNocmlua09uU2Nyb2xsOkJvb2xlYW4sdmFsdWU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aXNBY3RpdmU6dGhpcy52YWx1ZX07fSxjb21wdXRlZDp7YXBwbGljYXRpb25Qcm9wZXJ0eTpmdW5jdGlvbiBhcHBsaWNhdGlvblByb3BlcnR5KCl7cmV0dXJuIXRoaXMuYm90dG9tPyd0b3AnOidib3R0b20nO30sY2FuU2Nyb2xsOmZ1bmN0aW9uIGNhblNjcm9sbCgpe3JldHVybiBfbWl4aW5zX3Njcm9sbGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuY2FuU2Nyb2xsLmNhbGwodGhpcykmJih0aGlzLmludmVydGVkU2Nyb2xsfHx0aGlzLmVsZXZhdGVPblNjcm9sbHx8dGhpcy5oaWRlT25TY3JvbGx8fHRoaXMuY29sbGFwc2VPblNjcm9sbHx8dGhpcy5pc0Jvb3RlZHx8Ly8gSWYgZmFsc2V5LCB1c2VyIGhhcyBwcm92aWRlZCBhbgovLyBleHBsaWNpdCB2YWx1ZSB3aGljaCBzaG91bGQKLy8gb3ZlcndyaXRlIGFueXRoaW5nIHdlIGRvCiF0aGlzLnZhbHVlKTt9LGNsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7fSxfVlRvb2xiYXJfVlRvb2xiYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuY2xhc3Nlcy5jYWxsKHRoaXMpLHsndi10b29sYmFyLS1jb2xsYXBzZSc6dGhpcy5jb2xsYXBzZXx8dGhpcy5jb2xsYXBzZU9uU2Nyb2xsLCd2LWFwcC1iYXInOnRydWUsJ3YtYXBwLWJhci0tY2xpcHBlZCc6dGhpcy5jbGlwcGVkTGVmdHx8dGhpcy5jbGlwcGVkUmlnaHQsJ3YtYXBwLWJhci0tZmFkZS1pbWctb24tc2Nyb2xsJzp0aGlzLmZhZGVJbWdPblNjcm9sbCwndi1hcHAtYmFyLS1lbGV2YXRlLW9uLXNjcm9sbCc6dGhpcy5lbGV2YXRlT25TY3JvbGwsJ3YtYXBwLWJhci0tZml4ZWQnOiF0aGlzLmFic29sdXRlJiYodGhpcy5hcHB8fHRoaXMuZml4ZWQpLCd2LWFwcC1iYXItLWhpZGUtc2hhZG93Jzp0aGlzLmhpZGVTaGFkb3csJ3YtYXBwLWJhci0taXMtc2Nyb2xsZWQnOnRoaXMuY3VycmVudFNjcm9sbD4wLCd2LWFwcC1iYXItLXNocmluay1vbi1zY3JvbGwnOnRoaXMuc2hyaW5rT25TY3JvbGx9KTt9LGNvbXB1dGVkQ29udGVudEhlaWdodDpmdW5jdGlvbiBjb21wdXRlZENvbnRlbnRIZWlnaHQoKXtpZighdGhpcy5zaHJpbmtPblNjcm9sbClyZXR1cm4gX1ZUb29sYmFyX1ZUb29sYmFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLmNvbXB1dGVkQ29udGVudEhlaWdodC5jYWxsKHRoaXMpO3ZhciBoZWlnaHQ9dGhpcy5jb21wdXRlZE9yaWdpbmFsSGVpZ2h0O3ZhciBtaW49dGhpcy5kZW5zZT80ODo1Njt2YXIgbWF4PWhlaWdodDt2YXIgZGlmZmVyZW5jZT1tYXgtbWluO3ZhciBpdGVyYXRpb249ZGlmZmVyZW5jZS90aGlzLmNvbXB1dGVkU2Nyb2xsVGhyZXNob2xkO3ZhciBvZmZzZXQ9dGhpcy5jdXJyZW50U2Nyb2xsKml0ZXJhdGlvbjtyZXR1cm4gTWF0aC5tYXgobWluLG1heC1vZmZzZXQpO30sY29tcHV0ZWRGb250U2l6ZTpmdW5jdGlvbiBjb21wdXRlZEZvbnRTaXplKCl7aWYoIXRoaXMuaXNQcm9taW5lbnQpcmV0dXJuIHVuZGVmaW5lZDt2YXIgbWF4PXRoaXMuZGVuc2U/OTY6MTI4O3ZhciBkaWZmZXJlbmNlPW1heC10aGlzLmNvbXB1dGVkQ29udGVudEhlaWdodDt2YXIgaW5jcmVtZW50PTAuMDAzNDc7Ly8gMS41cmVtIHRvIGEgbWluaW11bSBvZiAxLjI1cmVtCnJldHVybiBOdW1iZXIoKDEuNTAtZGlmZmVyZW5jZSppbmNyZW1lbnQpLnRvRml4ZWQoMikpO30sY29tcHV0ZWRMZWZ0OmZ1bmN0aW9uIGNvbXB1dGVkTGVmdCgpe2lmKCF0aGlzLmFwcHx8dGhpcy5jbGlwcGVkTGVmdClyZXR1cm4gMDtyZXR1cm4gdGhpcy4kdnVldGlmeS5hcHBsaWNhdGlvbi5sZWZ0O30sY29tcHV0ZWRNYXJnaW5Ub3A6ZnVuY3Rpb24gY29tcHV0ZWRNYXJnaW5Ub3AoKXtpZighdGhpcy5hcHApcmV0dXJuIDA7cmV0dXJuIHRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24uYmFyO30sY29tcHV0ZWRPcGFjaXR5OmZ1bmN0aW9uIGNvbXB1dGVkT3BhY2l0eSgpe2lmKCF0aGlzLmZhZGVJbWdPblNjcm9sbClyZXR1cm4gdW5kZWZpbmVkO3ZhciBvcGFjaXR5PU1hdGgubWF4KCh0aGlzLmNvbXB1dGVkU2Nyb2xsVGhyZXNob2xkLXRoaXMuY3VycmVudFNjcm9sbCkvdGhpcy5jb21wdXRlZFNjcm9sbFRocmVzaG9sZCwwKTtyZXR1cm4gTnVtYmVyKHBhcnNlRmxvYXQob3BhY2l0eSkudG9GaXhlZCgyKSk7fSxjb21wdXRlZE9yaWdpbmFsSGVpZ2h0OmZ1bmN0aW9uIGNvbXB1dGVkT3JpZ2luYWxIZWlnaHQoKXt2YXIgaGVpZ2h0PV9WVG9vbGJhcl9WVG9vbGJhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jb21wdXRlZENvbnRlbnRIZWlnaHQuY2FsbCh0aGlzKTtpZih0aGlzLmlzRXh0ZW5kZWQpaGVpZ2h0Kz1wYXJzZUludCh0aGlzLmV4dGVuc2lvbkhlaWdodCk7cmV0dXJuIGhlaWdodDt9LGNvbXB1dGVkUmlnaHQ6ZnVuY3Rpb24gY29tcHV0ZWRSaWdodCgpe2lmKCF0aGlzLmFwcHx8dGhpcy5jbGlwcGVkUmlnaHQpcmV0dXJuIDA7cmV0dXJuIHRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24ucmlnaHQ7fSxjb21wdXRlZFNjcm9sbFRocmVzaG9sZDpmdW5jdGlvbiBjb21wdXRlZFNjcm9sbFRocmVzaG9sZCgpe2lmKHRoaXMuc2Nyb2xsVGhyZXNob2xkKXJldHVybiBOdW1iZXIodGhpcy5zY3JvbGxUaHJlc2hvbGQpO3JldHVybiB0aGlzLmNvbXB1dGVkT3JpZ2luYWxIZWlnaHQtKHRoaXMuZGVuc2U/NDg6NTYpO30sY29tcHV0ZWRUcmFuc2Zvcm06ZnVuY3Rpb24gY29tcHV0ZWRUcmFuc2Zvcm0oKXtpZighdGhpcy5jYW5TY3JvbGx8fHRoaXMuZWxldmF0ZU9uU2Nyb2xsJiZ0aGlzLmN1cnJlbnRTY3JvbGw9PT0wJiZ0aGlzLmlzQWN0aXZlKXJldHVybiAwO2lmKHRoaXMuaXNBY3RpdmUpcmV0dXJuIDA7dmFyIHNjcm9sbE9mZlNjcmVlbj10aGlzLnNjcm9sbE9mZlNjcmVlbj90aGlzLmNvbXB1dGVkSGVpZ2h0OnRoaXMuY29tcHV0ZWRDb250ZW50SGVpZ2h0O3JldHVybiB0aGlzLmJvdHRvbT9zY3JvbGxPZmZTY3JlZW46LXNjcm9sbE9mZlNjcmVlbjt9LGhpZGVTaGFkb3c6ZnVuY3Rpb24gaGlkZVNoYWRvdygpe2lmKHRoaXMuZWxldmF0ZU9uU2Nyb2xsJiZ0aGlzLmlzRXh0ZW5kZWQpe3JldHVybiB0aGlzLmN1cnJlbnRTY3JvbGw8dGhpcy5jb21wdXRlZFNjcm9sbFRocmVzaG9sZDt9aWYodGhpcy5lbGV2YXRlT25TY3JvbGwpe3JldHVybiB0aGlzLmN1cnJlbnRTY3JvbGw9PT0wfHx0aGlzLmNvbXB1dGVkVHJhbnNmb3JtPDA7fXJldHVybighdGhpcy5pc0V4dGVuZGVkfHx0aGlzLnNjcm9sbE9mZlNjcmVlbikmJnRoaXMuY29tcHV0ZWRUcmFuc2Zvcm0hPT0wO30saXNDb2xsYXBzZWQ6ZnVuY3Rpb24gaXNDb2xsYXBzZWQoKXtpZighdGhpcy5jb2xsYXBzZU9uU2Nyb2xsKXtyZXR1cm4gX1ZUb29sYmFyX1ZUb29sYmFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLmlzQ29sbGFwc2VkLmNhbGwodGhpcyk7fXJldHVybiB0aGlzLmN1cnJlbnRTY3JvbGw+MDt9LGlzUHJvbWluZW50OmZ1bmN0aW9uIGlzUHJvbWluZW50KCl7cmV0dXJuIF9WVG9vbGJhcl9WVG9vbGJhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5pc1Byb21pbmVudC5jYWxsKHRoaXMpfHx0aGlzLnNocmlua09uU2Nyb2xsO30sc3R5bGVzOmZ1bmN0aW9uIHN0eWxlcygpe3JldHVybiBfX2Fzc2lnbih7fSxfVlRvb2xiYXJfVlRvb2xiYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuc3R5bGVzLmNhbGwodGhpcykse2ZvbnRTaXplOk9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5jb21wdXRlZEZvbnRTaXplLCdyZW0nKSxtYXJnaW5Ub3A6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmNvbXB1dGVkTWFyZ2luVG9wKSx0cmFuc2Zvcm06InRyYW5zbGF0ZVkoIitPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuY29tcHV0ZWRUcmFuc2Zvcm0pKyIpIixsZWZ0Ok9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5jb21wdXRlZExlZnQpLHJpZ2h0Ok9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5jb21wdXRlZFJpZ2h0KX0pO319LHdhdGNoOntjYW5TY3JvbGw6J29uU2Nyb2xsJyxjb21wdXRlZFRyYW5zZm9ybTpmdW5jdGlvbiBjb21wdXRlZFRyYW5zZm9ybSgpey8vIE5vcm1hbGx5IHdlIGRvIG5vdCB3YW50IHRoZSB2LWFwcC1iYXIKLy8gdG8gdXBkYXRlIHRoZSBhcHBsaWNhdGlvbiB0b3AgdmFsdWUKLy8gdG8gYXZvaWQgc2NyZWVuIGp1bXAuIEhvd2V2ZXIsIGluCi8vIHRoaXMgc2l0dWF0aW9uLCB3ZSBtdXN0IHNvIHRoYXQKLy8gdGhlIGNsaXBwZWQgZHJhd2VyIGNhbiB1cGRhdGUKLy8gaXRzIHRvcCB2YWx1ZSB3aGVuIHNjcm9sbGVkCmlmKCF0aGlzLmNhblNjcm9sbHx8IXRoaXMuY2xpcHBlZExlZnQmJiF0aGlzLmNsaXBwZWRSaWdodClyZXR1cm47dGhpcy5jYWxsVXBkYXRlKCk7fSxpbnZlcnRlZFNjcm9sbDpmdW5jdGlvbiBpbnZlcnRlZFNjcm9sbCh2YWwpe3RoaXMuaXNBY3RpdmU9IXZhbDt9fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXtpZih0aGlzLmludmVydGVkU2Nyb2xsKXRoaXMuaXNBY3RpdmU9ZmFsc2U7fSxtZXRob2RzOntnZW5CYWNrZ3JvdW5kOmZ1bmN0aW9uIGdlbkJhY2tncm91bmQoKXt2YXIgcmVuZGVyPV9WVG9vbGJhcl9WVG9vbGJhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlbkJhY2tncm91bmQuY2FsbCh0aGlzKTtyZW5kZXIuZGF0YT10aGlzLl9iKHJlbmRlci5kYXRhfHx7fSxyZW5kZXIudGFnLHtzdHlsZTp7b3BhY2l0eTp0aGlzLmNvbXB1dGVkT3BhY2l0eX19KTtyZXR1cm4gcmVuZGVyO30sdXBkYXRlQXBwbGljYXRpb246ZnVuY3Rpb24gdXBkYXRlQXBwbGljYXRpb24oKXtyZXR1cm4gdGhpcy5pbnZlcnRlZFNjcm9sbD8wOnRoaXMuY29tcHV0ZWRIZWlnaHQrdGhpcy5jb21wdXRlZFRyYW5zZm9ybTt9LHRocmVzaG9sZE1ldDpmdW5jdGlvbiB0aHJlc2hvbGRNZXQoKXtpZih0aGlzLmludmVydGVkU2Nyb2xsKXt0aGlzLmlzQWN0aXZlPXRoaXMuY3VycmVudFNjcm9sbD50aGlzLmNvbXB1dGVkU2Nyb2xsVGhyZXNob2xkO3JldHVybjt9aWYodGhpcy5jdXJyZW50VGhyZXNob2xkPHRoaXMuY29tcHV0ZWRTY3JvbGxUaHJlc2hvbGQpcmV0dXJuO2lmKHRoaXMuaGlkZU9uU2Nyb2xsKXt0aGlzLmlzQWN0aXZlPXRoaXMuaXNTY3JvbGxpbmdVcDt9dGhpcy5zYXZlZFNjcm9sbD10aGlzLmN1cnJlbnRTY3JvbGw7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgcmVuZGVyPV9WVG9vbGJhcl9WVG9vbGJhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5yZW5kZXIuY2FsbCh0aGlzLGgpO3JlbmRlci5kYXRhPXJlbmRlci5kYXRhfHx7fTtpZih0aGlzLmNhblNjcm9sbCl7cmVuZGVyLmRhdGEuZGlyZWN0aXZlcz1yZW5kZXIuZGF0YS5kaXJlY3RpdmVzfHxbXTtyZW5kZXIuZGF0YS5kaXJlY3RpdmVzLnB1c2goe2FyZzp0aGlzLnNjcm9sbFRhcmdldCxuYW1lOidzY3JvbGwnLHZhbHVlOnRoaXMub25TY3JvbGx9KTt9cmV0dXJuIHJlbmRlcjt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkFwcEJhci9WQXBwQmFyTmF2SWNvbi50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkFwcEJhci9WQXBwQmFyTmF2SWNvbi50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQXBwQmFyVkFwcEJhck5hdkljb25Ucyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJY29uICovIi4vc3JjL2NvbXBvbmVudHMvVkljb24vaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJ0bl9WQnRuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkJ0bi9WQnRuICovIi4vc3JjL2NvbXBvbmVudHMvVkJ0bi9WQnRuLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyk7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBDb21wb25lbnRzCi8vIFR5cGVzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09dnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19fZGVmYXVsdC5hLmV4dGVuZCh7bmFtZTondi1hcHAtYmFyLW5hdi1pY29uJyxmdW5jdGlvbmFsOnRydWUscmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoLF9hKXt2YXIgc2xvdHM9X2Euc2xvdHMsbGlzdGVuZXJzPV9hLmxpc3RlbmVycyxwcm9wcz1fYS5wcm9wcyxkYXRhPV9hLmRhdGE7dmFyIGQ9T2JqZWN0LmFzc2lnbihkYXRhLHtzdGF0aWNDbGFzczooInYtYXBwLWJhcl9fbmF2LWljb24gIisoZGF0YS5zdGF0aWNDbGFzc3x8JycpKS50cmltKCkscHJvcHM6X19hc3NpZ24oe30scHJvcHMse2ljb246dHJ1ZX0pLG9uOmxpc3RlbmVyc30pO3ZhciBkZWZhdWx0U2xvdD1zbG90cygpLmRlZmF1bHQ7cmV0dXJuIGgoX1ZCdG5fVkJ0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sZCxkZWZhdWx0U2xvdHx8W2goX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSwnJG1lbnUnKV0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQXBwQmFyL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQXBwQmFyL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWQXBwQmFyLCBWQXBwQmFyTmF2SWNvbiwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQXBwQmFySW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXBwQmFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQXBwQmFyICovIi4vc3JjL2NvbXBvbmVudHMvVkFwcEJhci9WQXBwQmFyLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkFwcEJhciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZBcHBCYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXBwQmFyTmF2SWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkFwcEJhck5hdkljb24gKi8iLi9zcmMvY29tcG9uZW50cy9WQXBwQmFyL1ZBcHBCYXJOYXZJY29uLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkFwcEJhck5hdkljb24iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQXBwQmFyTmF2SWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT17JF92dWV0aWZ5X3N1YmNvbXBvbmVudHM6e1ZBcHBCYXI6X1ZBcHBCYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLFZBcHBCYXJOYXZJY29uOl9WQXBwQmFyTmF2SWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il19fTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQXV0b2NvbXBsZXRlL1ZBdXRvY29tcGxldGUuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZBdXRvY29tcGxldGUvVkF1dG9jb21wbGV0ZS5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkF1dG9jb21wbGV0ZVZBdXRvY29tcGxldGVTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQXV0b2NvbXBsZXRlL1ZBdXRvY29tcGxldGUudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkF1dG9jb21wbGV0ZS9WQXV0b2NvbXBsZXRlLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkF1dG9jb21wbGV0ZVZBdXRvY29tcGxldGVUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXV0b2NvbXBsZXRlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZBdXRvY29tcGxldGUuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZBdXRvY29tcGxldGUvVkF1dG9jb21wbGV0ZS5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZBdXRvY29tcGxldGVfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkF1dG9jb21wbGV0ZV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2VsZWN0X1ZTZWxlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WU2VsZWN0L1ZTZWxlY3QgKi8iLi9zcmMvY29tcG9uZW50cy9WU2VsZWN0L1ZTZWxlY3QudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRleHRGaWVsZF9WVGV4dEZpZWxkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVlRleHRGaWVsZC9WVGV4dEZpZWxkICovIi4vc3JjL2NvbXBvbmVudHMvVlRleHRGaWVsZC9WVGV4dEZpZWxkLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBFeHRlbnNpb25zCi8vIFV0aWxpdGllcwp2YXIgZGVmYXVsdE1lbnVQcm9wcz1fX2Fzc2lnbih7fSxfVlNlbGVjdF9WU2VsZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHRNZW51UHJvcHMiXSx7b2Zmc2V0WTp0cnVlLG9mZnNldE92ZXJmbG93OnRydWUsdHJhbnNpdGlvbjpmYWxzZX0pOy8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZTZWxlY3RfVlNlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0uZXh0ZW5kKHtuYW1lOid2LWF1dG9jb21wbGV0ZScscHJvcHM6e2FsbG93T3ZlcmZsb3c6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGF1dG9TZWxlY3RGaXJzdDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LGZpbHRlcjp7dHlwZTpGdW5jdGlvbixkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KGl0ZW0scXVlcnlUZXh0LGl0ZW1UZXh0KXtyZXR1cm4gaXRlbVRleHQudG9Mb2NhbGVMb3dlckNhc2UoKS5pbmRleE9mKHF1ZXJ5VGV4dC50b0xvY2FsZUxvd2VyQ2FzZSgpKT4tMTt9fSxoaWRlTm9EYXRhOkJvb2xlYW4sbWVudVByb3BzOnt0eXBlOl9WU2VsZWN0X1ZTZWxlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMucHJvcHMubWVudVByb3BzLnR5cGUsZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybiBkZWZhdWx0TWVudVByb3BzO319LG5vRmlsdGVyOkJvb2xlYW4sc2VhcmNoSW5wdXQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6dW5kZWZpbmVkfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2xhenlTZWFyY2g6dGhpcy5zZWFyY2hJbnB1dH07fSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJuIF9fYXNzaWduKHt9LF9WU2VsZWN0X1ZTZWxlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuY2xhc3Nlcy5jYWxsKHRoaXMpLHsndi1hdXRvY29tcGxldGUnOnRydWUsJ3YtYXV0b2NvbXBsZXRlLS1pcy1zZWxlY3RpbmctaW5kZXgnOnRoaXMuc2VsZWN0ZWRJbmRleD4tMX0pO30sY29tcHV0ZWRJdGVtczpmdW5jdGlvbiBjb21wdXRlZEl0ZW1zKCl7cmV0dXJuIHRoaXMuZmlsdGVyZWRJdGVtczt9LHNlbGVjdGVkVmFsdWVzOmZ1bmN0aW9uIHNlbGVjdGVkVmFsdWVzKCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuc2VsZWN0ZWRJdGVtcy5tYXAoZnVuY3Rpb24oaXRlbSl7cmV0dXJuIF90aGlzLmdldFZhbHVlKGl0ZW0pO30pO30saGFzRGlzcGxheWVkSXRlbXM6ZnVuY3Rpb24gaGFzRGlzcGxheWVkSXRlbXMoKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gdGhpcy5oaWRlU2VsZWN0ZWQ/dGhpcy5maWx0ZXJlZEl0ZW1zLnNvbWUoZnVuY3Rpb24oaXRlbSl7cmV0dXJuIV90aGlzLmhhc0l0ZW0oaXRlbSk7fSk6dGhpcy5maWx0ZXJlZEl0ZW1zLmxlbmd0aD4wO30sY3VycmVudFJhbmdlOmZ1bmN0aW9uIGN1cnJlbnRSYW5nZSgpe2lmKHRoaXMuc2VsZWN0ZWRJdGVtPT1udWxsKXJldHVybiAwO3JldHVybiBTdHJpbmcodGhpcy5nZXRUZXh0KHRoaXMuc2VsZWN0ZWRJdGVtKSkubGVuZ3RoO30sZmlsdGVyZWRJdGVtczpmdW5jdGlvbiBmaWx0ZXJlZEl0ZW1zKCl7dmFyIF90aGlzPXRoaXM7aWYoIXRoaXMuaXNTZWFyY2hpbmd8fHRoaXMubm9GaWx0ZXJ8fHRoaXMuaW50ZXJuYWxTZWFyY2g9PW51bGwpcmV0dXJuIHRoaXMuYWxsSXRlbXM7cmV0dXJuIHRoaXMuYWxsSXRlbXMuZmlsdGVyKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBfdGhpcy5maWx0ZXIoaXRlbSxTdHJpbmcoX3RoaXMuaW50ZXJuYWxTZWFyY2gpLFN0cmluZyhfdGhpcy5nZXRUZXh0KGl0ZW0pKSk7fSk7fSxpbnRlcm5hbFNlYXJjaDp7Z2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLmxhenlTZWFyY2g7fSxzZXQ6ZnVuY3Rpb24gc2V0KHZhbCl7dGhpcy5sYXp5U2VhcmNoPXZhbDt0aGlzLiRlbWl0KCd1cGRhdGU6c2VhcmNoLWlucHV0Jyx2YWwpO319LGlzQW55VmFsdWVBbGxvd2VkOmZ1bmN0aW9uIGlzQW55VmFsdWVBbGxvd2VkKCl7cmV0dXJuIGZhbHNlO30saXNEaXJ0eTpmdW5jdGlvbiBpc0RpcnR5KCl7cmV0dXJuIHRoaXMuc2VhcmNoSXNEaXJ0eXx8dGhpcy5zZWxlY3RlZEl0ZW1zLmxlbmd0aD4wO30saXNTZWFyY2hpbmc6ZnVuY3Rpb24gaXNTZWFyY2hpbmcoKXtyZXR1cm4gdGhpcy5tdWx0aXBsZSYmdGhpcy5zZWFyY2hJc0RpcnR5fHx0aGlzLnNlYXJjaElzRGlydHkmJnRoaXMuaW50ZXJuYWxTZWFyY2ghPT10aGlzLmdldFRleHQodGhpcy5zZWxlY3RlZEl0ZW0pO30sbWVudUNhblNob3c6ZnVuY3Rpb24gbWVudUNhblNob3coKXtpZighdGhpcy5pc0ZvY3VzZWQpcmV0dXJuIGZhbHNlO3JldHVybiB0aGlzLmhhc0Rpc3BsYXllZEl0ZW1zfHwhdGhpcy5oaWRlTm9EYXRhO30sJF9tZW51UHJvcHM6ZnVuY3Rpb24gJF9tZW51UHJvcHMoKXt2YXIgcHJvcHM9X1ZTZWxlY3RfVlNlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC4kX21lbnVQcm9wcy5jYWxsKHRoaXMpO3Byb3BzLmNvbnRlbnRDbGFzcz0oInYtYXV0b2NvbXBsZXRlX19jb250ZW50ICIrKHByb3BzLmNvbnRlbnRDbGFzc3x8JycpKS50cmltKCk7cmV0dXJuIF9fYXNzaWduKHt9LGRlZmF1bHRNZW51UHJvcHMscHJvcHMpO30sc2VhcmNoSXNEaXJ0eTpmdW5jdGlvbiBzZWFyY2hJc0RpcnR5KCl7cmV0dXJuIHRoaXMuaW50ZXJuYWxTZWFyY2ghPW51bGwmJnRoaXMuaW50ZXJuYWxTZWFyY2ghPT0nJzt9LHNlbGVjdGVkSXRlbTpmdW5jdGlvbiBzZWxlY3RlZEl0ZW0oKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLm11bHRpcGxlKXJldHVybiBudWxsO3JldHVybiB0aGlzLnNlbGVjdGVkSXRlbXMuZmluZChmdW5jdGlvbihpKXtyZXR1cm4gX3RoaXMudmFsdWVDb21wYXJhdG9yKF90aGlzLmdldFZhbHVlKGkpLF90aGlzLmdldFZhbHVlKF90aGlzLmludGVybmFsVmFsdWUpKTt9KTt9LGxpc3REYXRhOmZ1bmN0aW9uIGxpc3REYXRhKCl7dmFyIGRhdGE9X1ZTZWxlY3RfVlNlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5saXN0RGF0YS5jYWxsKHRoaXMpO2RhdGEucHJvcHM9X19hc3NpZ24oe30sZGF0YS5wcm9wcyx7aXRlbXM6dGhpcy52aXJ0dWFsaXplZEl0ZW1zLG5vRmlsdGVyOnRoaXMubm9GaWx0ZXJ8fCF0aGlzLmlzU2VhcmNoaW5nfHwhdGhpcy5maWx0ZXJlZEl0ZW1zLmxlbmd0aCxzZWFyY2hJbnB1dDp0aGlzLmludGVybmFsU2VhcmNofSk7cmV0dXJuIGRhdGE7fX0sd2F0Y2g6e2ZpbHRlcmVkSXRlbXM6J29uRmlsdGVyZWRJdGVtc0NoYW5nZWQnLGludGVybmFsVmFsdWU6J3NldFNlYXJjaCcsaXNGb2N1c2VkOmZ1bmN0aW9uIGlzRm9jdXNlZCh2YWwpe2lmKHZhbCl7ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY29weScsdGhpcy5vbkNvcHkpO3RoaXMuJHJlZnMuaW5wdXQmJnRoaXMuJHJlZnMuaW5wdXQuc2VsZWN0KCk7fWVsc2V7ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY29weScsdGhpcy5vbkNvcHkpO3RoaXMudXBkYXRlU2VsZigpO319LGlzTWVudUFjdGl2ZTpmdW5jdGlvbiBpc01lbnVBY3RpdmUodmFsKXtpZih2YWx8fCF0aGlzLmhhc1Nsb3QpcmV0dXJuO3RoaXMubGF6eVNlYXJjaD11bmRlZmluZWQ7fSxpdGVtczpmdW5jdGlvbiBpdGVtcyh2YWwsb2xkVmFsKXsvLyBJZiB3ZSBhcmUgZm9jdXNlZCwgdGhlIG1lbnUKLy8gaXMgbm90IGFjdGl2ZSwgaGlkZSBubyBkYXRhIGlzIGVuYWJsZWQsCi8vIGFuZCBpdGVtcyBjaGFuZ2UKLy8gVXNlciBpcyBwcm9iYWJseSBhc3luYyBsb2FkaW5nCi8vIGl0ZW1zLCB0cnkgdG8gYWN0aXZhdGUgdGhlIG1lbnUKaWYoIShvbGRWYWwmJm9sZFZhbC5sZW5ndGgpJiZ0aGlzLmhpZGVOb0RhdGEmJnRoaXMuaXNGb2N1c2VkJiYhdGhpcy5pc01lbnVBY3RpdmUmJnZhbC5sZW5ndGgpdGhpcy5hY3RpdmF0ZU1lbnUoKTt9LHNlYXJjaElucHV0OmZ1bmN0aW9uIHNlYXJjaElucHV0KHZhbCl7dGhpcy5sYXp5U2VhcmNoPXZhbDt9LGludGVybmFsU2VhcmNoOidvbkludGVybmFsU2VhcmNoQ2hhbmdlZCcsaXRlbVRleHQ6J3VwZGF0ZVNlbGYnfSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXt0aGlzLnNldFNlYXJjaCgpO30sbWV0aG9kczp7b25GaWx0ZXJlZEl0ZW1zQ2hhbmdlZDpmdW5jdGlvbiBvbkZpbHRlcmVkSXRlbXNDaGFuZ2VkKHZhbCxvbGRWYWwpe3ZhciBfdGhpcz10aGlzOy8vIFRPRE86IEhvdyBpcyB0aGUgd2F0Y2hlciB0cmlnZ2VyZWQKLy8gZm9yIGR1cGxpY2F0ZSBpdGVtcz8gbm8gaWRlYQppZih2YWw9PT1vbGRWYWwpcmV0dXJuO3RoaXMuc2V0TWVudUluZGV4KC0xKTt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe2lmKCFfdGhpcy5pbnRlcm5hbFNlYXJjaHx8dmFsLmxlbmd0aCE9PTEmJiFfdGhpcy5hdXRvU2VsZWN0Rmlyc3QpcmV0dXJuO190aGlzLiRyZWZzLm1lbnUuZ2V0VGlsZXMoKTtfdGhpcy5zZXRNZW51SW5kZXgoMCk7fSk7fSxvbkludGVybmFsU2VhcmNoQ2hhbmdlZDpmdW5jdGlvbiBvbkludGVybmFsU2VhcmNoQ2hhbmdlZCgpe3RoaXMudXBkYXRlTWVudURpbWVuc2lvbnMoKTt9LHVwZGF0ZU1lbnVEaW1lbnNpb25zOmZ1bmN0aW9uIHVwZGF0ZU1lbnVEaW1lbnNpb25zKCl7Ly8gVHlwZSBmcm9tIG1lbnVhYmxlIGlzIG5vdCBtYWtpbmcgaXQgdGhyb3VnaAp0aGlzLmlzTWVudUFjdGl2ZSYmdGhpcy4kcmVmcy5tZW51JiZ0aGlzLiRyZWZzLm1lbnUudXBkYXRlRGltZW5zaW9ucygpO30sY2hhbmdlU2VsZWN0ZWRJbmRleDpmdW5jdGlvbiBjaGFuZ2VTZWxlY3RlZEluZGV4KGtleUNvZGUpey8vIERvIG5vdCBhbGxvdyBjaGFuZ2luZyBvZiBzZWxlY3RlZEluZGV4Ci8vIHdoZW4gc2VhcmNoIGlzIGRpcnR5CmlmKHRoaXMuc2VhcmNoSXNEaXJ0eXx8IXRoaXMubXVsdGlwbGUpcmV0dXJuO2lmKCFbX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJrZXlDb2RlcyJdLmJhY2tzcGFjZSxfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImtleUNvZGVzIl0ubGVmdCxfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImtleUNvZGVzIl0ucmlnaHQsX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJrZXlDb2RlcyJdLmRlbGV0ZV0uaW5jbHVkZXMoa2V5Q29kZSkpcmV0dXJuO3ZhciBpbmRleD10aGlzLnNlbGVjdGVkSXRlbXMubGVuZ3RoLTE7aWYoa2V5Q29kZT09PV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1sia2V5Q29kZXMiXS5sZWZ0KXtpZih0aGlzLnNlbGVjdGVkSW5kZXg9PT0tMSl7dGhpcy5zZWxlY3RlZEluZGV4PWluZGV4O31lbHNle3RoaXMuc2VsZWN0ZWRJbmRleC0tO319ZWxzZSBpZihrZXlDb2RlPT09X3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJrZXlDb2RlcyJdLnJpZ2h0KXtpZih0aGlzLnNlbGVjdGVkSW5kZXg+PWluZGV4KXt0aGlzLnNlbGVjdGVkSW5kZXg9LTE7fWVsc2V7dGhpcy5zZWxlY3RlZEluZGV4Kys7fX1lbHNlIGlmKHRoaXMuc2VsZWN0ZWRJbmRleD09PS0xKXt0aGlzLnNlbGVjdGVkSW5kZXg9aW5kZXg7cmV0dXJuO312YXIgY3VycmVudEl0ZW09dGhpcy5zZWxlY3RlZEl0ZW1zW3RoaXMuc2VsZWN0ZWRJbmRleF07aWYoW191dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1sia2V5Q29kZXMiXS5iYWNrc3BhY2UsX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJrZXlDb2RlcyJdLmRlbGV0ZV0uaW5jbHVkZXMoa2V5Q29kZSkmJiF0aGlzLmdldERpc2FibGVkKGN1cnJlbnRJdGVtKSl7dmFyIG5ld0luZGV4PXRoaXMuc2VsZWN0ZWRJbmRleD09PWluZGV4P3RoaXMuc2VsZWN0ZWRJbmRleC0xOnRoaXMuc2VsZWN0ZWRJdGVtc1t0aGlzLnNlbGVjdGVkSW5kZXgrMV0/dGhpcy5zZWxlY3RlZEluZGV4Oi0xO2lmKG5ld0luZGV4PT09LTEpe3RoaXMuc2V0VmFsdWUodGhpcy5tdWx0aXBsZT9bXTp1bmRlZmluZWQpO31lbHNle3RoaXMuc2VsZWN0SXRlbShjdXJyZW50SXRlbSk7fXRoaXMuc2VsZWN0ZWRJbmRleD1uZXdJbmRleDt9fSxjbGVhcmFibGVDYWxsYmFjazpmdW5jdGlvbiBjbGVhcmFibGVDYWxsYmFjaygpe3RoaXMuaW50ZXJuYWxTZWFyY2g9dW5kZWZpbmVkO19WU2VsZWN0X1ZTZWxlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5jbGVhcmFibGVDYWxsYmFjay5jYWxsKHRoaXMpO30sZ2VuSW5wdXQ6ZnVuY3Rpb24gZ2VuSW5wdXQoKXt2YXIgaW5wdXQ9X1ZUZXh0RmllbGRfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlbklucHV0LmNhbGwodGhpcyk7aW5wdXQuZGF0YT1pbnB1dC5kYXRhfHx7fTtpbnB1dC5kYXRhLmF0dHJzPWlucHV0LmRhdGEuYXR0cnN8fHt9O2lucHV0LmRhdGEuYXR0cnMuYXV0b2NvbXBsZXRlPWlucHV0LmRhdGEuYXR0cnMuYXV0b2NvbXBsZXRlfHwnZGlzYWJsZWQnO2lucHV0LmRhdGEuZG9tUHJvcHM9aW5wdXQuZGF0YS5kb21Qcm9wc3x8e307aW5wdXQuZGF0YS5kb21Qcm9wcy52YWx1ZT10aGlzLmludGVybmFsU2VhcmNoO3JldHVybiBpbnB1dDt9LGdlbklucHV0U2xvdDpmdW5jdGlvbiBnZW5JbnB1dFNsb3QoKXt2YXIgc2xvdD1fVlNlbGVjdF9WU2VsZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuZ2VuSW5wdXRTbG90LmNhbGwodGhpcyk7c2xvdC5kYXRhLmF0dHJzLnJvbGU9J2NvbWJvYm94JztyZXR1cm4gc2xvdDt9LGdlblNlbGVjdGlvbnM6ZnVuY3Rpb24gZ2VuU2VsZWN0aW9ucygpe3JldHVybiB0aGlzLmhhc1Nsb3R8fHRoaXMubXVsdGlwbGU/X1ZTZWxlY3RfVlNlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlblNlbGVjdGlvbnMuY2FsbCh0aGlzKTpbXTt9LG9uQ2xpY2s6ZnVuY3Rpb24gb25DbGljaygpe2lmKHRoaXMuaXNEaXNhYmxlZClyZXR1cm47dGhpcy5zZWxlY3RlZEluZGV4Pi0xP3RoaXMuc2VsZWN0ZWRJbmRleD0tMTp0aGlzLm9uRm9jdXMoKTt0aGlzLmFjdGl2YXRlTWVudSgpO30sb25JbnB1dDpmdW5jdGlvbiBvbklucHV0KGUpe2lmKHRoaXMuc2VsZWN0ZWRJbmRleD4tMXx8IWUudGFyZ2V0KXJldHVybjt2YXIgdGFyZ2V0PWUudGFyZ2V0O3ZhciB2YWx1ZT10YXJnZXQudmFsdWU7Ly8gSWYgdHlwaW5nIGFuZCBtZW51IGlzIG5vdCBjdXJyZW50bHkgYWN0aXZlCmlmKHRhcmdldC52YWx1ZSl0aGlzLmFjdGl2YXRlTWVudSgpO3RoaXMuaW50ZXJuYWxTZWFyY2g9dmFsdWU7dGhpcy5iYWRJbnB1dD10YXJnZXQudmFsaWRpdHkmJnRhcmdldC52YWxpZGl0eS5iYWRJbnB1dDt9LG9uS2V5RG93bjpmdW5jdGlvbiBvbktleURvd24oZSl7dmFyIGtleUNvZGU9ZS5rZXlDb2RlO19WU2VsZWN0X1ZTZWxlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5vbktleURvd24uY2FsbCh0aGlzLGUpOy8vIFRoZSBvcmRlcmluZyBpcyBpbXBvcnRhbnQgaGVyZQovLyBhbGxvd3MgbmV3IHZhbHVlIHRvIGJlIHVwZGF0ZWQKLy8gYW5kIHRoZW4gbW92ZXMgdGhlIGluZGV4IHRvIHRoZQovLyBwcm9wZXIgbG9jYXRpb24KdGhpcy5jaGFuZ2VTZWxlY3RlZEluZGV4KGtleUNvZGUpO30sb25TcGFjZURvd246ZnVuY3Rpb24gb25TcGFjZURvd24oZSl7fSxvblRhYkRvd246ZnVuY3Rpb24gb25UYWJEb3duKGUpe19WU2VsZWN0X1ZTZWxlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5vblRhYkRvd24uY2FsbCh0aGlzLGUpO3RoaXMudXBkYXRlU2VsZigpO30sb25VcERvd246ZnVuY3Rpb24gb25VcERvd24oKXsvLyBGb3IgYXV0b2NvbXBsZXRlIC8gY29tYm9ib3gsIGN5Y2xpbmcKLy8gaW50ZXJmZXJzIHdpdGggbmF0aXZlIHVwL2Rvd24gYmVoYXZpb3IKLy8gaW5zdGVhZCBhY3RpdmF0ZSB0aGUgbWVudQp0aGlzLmFjdGl2YXRlTWVudSgpO30sc2VsZWN0SXRlbTpmdW5jdGlvbiBzZWxlY3RJdGVtKGl0ZW0pe19WU2VsZWN0X1ZTZWxlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5zZWxlY3RJdGVtLmNhbGwodGhpcyxpdGVtKTt0aGlzLnNldFNlYXJjaCgpO30sc2V0U2VsZWN0ZWRJdGVtczpmdW5jdGlvbiBzZXRTZWxlY3RlZEl0ZW1zKCl7X1ZTZWxlY3RfVlNlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLnNldFNlbGVjdGVkSXRlbXMuY2FsbCh0aGlzKTsvLyAjNDI3MyBEb24ndCByZXBsYWNlIGlmIHNlYXJjaGluZwovLyAjNDQwMyBEb24ndCByZXBsYWNlIGlmIGZvY3VzZWQKaWYoIXRoaXMuaXNGb2N1c2VkKXRoaXMuc2V0U2VhcmNoKCk7fSxzZXRTZWFyY2g6ZnVuY3Rpb24gc2V0U2VhcmNoKCl7dmFyIF90aGlzPXRoaXM7Ly8gV2FpdCBmb3IgbmV4dFRpY2sgc28gc2VsZWN0ZWRJdGVtCi8vIGhhcyBoYWQgdGltZSB0byB1cGRhdGUKdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtpZighX3RoaXMubXVsdGlwbGV8fCFfdGhpcy5pbnRlcm5hbFNlYXJjaHx8IV90aGlzLmlzTWVudUFjdGl2ZSl7X3RoaXMuaW50ZXJuYWxTZWFyY2g9IV90aGlzLnNlbGVjdGVkSXRlbXMubGVuZ3RofHxfdGhpcy5tdWx0aXBsZXx8X3RoaXMuaGFzU2xvdD9udWxsOl90aGlzLmdldFRleHQoX3RoaXMuc2VsZWN0ZWRJdGVtKTt9fSk7fSx1cGRhdGVTZWxmOmZ1bmN0aW9uIHVwZGF0ZVNlbGYoKXtpZighdGhpcy5zZWFyY2hJc0RpcnR5JiYhdGhpcy5pbnRlcm5hbFZhbHVlKXJldHVybjtpZighdGhpcy52YWx1ZUNvbXBhcmF0b3IodGhpcy5pbnRlcm5hbFNlYXJjaCx0aGlzLmdldFZhbHVlKHRoaXMuaW50ZXJuYWxWYWx1ZSkpKXt0aGlzLnNldFNlYXJjaCgpO319LGhhc0l0ZW06ZnVuY3Rpb24gaGFzSXRlbShpdGVtKXtyZXR1cm4gdGhpcy5zZWxlY3RlZFZhbHVlcy5pbmRleE9mKHRoaXMuZ2V0VmFsdWUoaXRlbSkpPi0xO30sb25Db3B5OmZ1bmN0aW9uIG9uQ29weShldmVudCl7aWYodGhpcy5zZWxlY3RlZEluZGV4PT09LTEpcmV0dXJuO3ZhciBjdXJyZW50SXRlbT10aGlzLnNlbGVjdGVkSXRlbXNbdGhpcy5zZWxlY3RlZEluZGV4XTt2YXIgY3VycmVudEl0ZW1UZXh0PXRoaXMuZ2V0VGV4dChjdXJyZW50SXRlbSk7ZXZlbnQuY2xpcGJvYXJkRGF0YS5zZXREYXRhKCd0ZXh0L3BsYWluJyxjdXJyZW50SXRlbVRleHQpO2V2ZW50LmNsaXBib2FyZERhdGEuc2V0RGF0YSgndGV4dC92bmQudnVldGlmeS5hdXRvY29tcGxldGUuaXRlbStwbGFpbicsY3VycmVudEl0ZW1UZXh0KTtldmVudC5wcmV2ZW50RGVmYXVsdCgpO319fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkF1dG9jb21wbGV0ZS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkF1dG9jb21wbGV0ZS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVkF1dG9jb21wbGV0ZSwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQXV0b2NvbXBsZXRlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXV0b2NvbXBsZXRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQXV0b2NvbXBsZXRlICovIi4vc3JjL2NvbXBvbmVudHMvVkF1dG9jb21wbGV0ZS9WQXV0b2NvbXBsZXRlLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkF1dG9jb21wbGV0ZSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZBdXRvY29tcGxldGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZBdXRvY29tcGxldGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZBdmF0YXIvVkF2YXRhci5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkF2YXRhci9WQXZhdGFyLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQXZhdGFyVkF2YXRhclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZBdmF0YXIvVkF2YXRhci50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQXZhdGFyL1ZBdmF0YXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQXZhdGFyVkF2YXRhclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZBdmF0YXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkF2YXRhci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkF2YXRhci9WQXZhdGFyLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkF2YXRhcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WQXZhdGFyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX21lYXN1cmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvbWVhc3VyYWJsZSAqLyIuL3NyYy9taXhpbnMvbWVhc3VyYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIE1peGlucwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdKShfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sX21peGluc19tZWFzdXJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS8qIEB2dWUvY29tcG9uZW50ICovKS5leHRlbmQoe25hbWU6J3YtYXZhdGFyJyxwcm9wczp7bGVmdDpCb29sZWFuLHJpZ2h0OkJvb2xlYW4sc2l6ZTp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDo0OH0sdGlsZTpCb29sZWFufSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJueyd2LWF2YXRhci0tbGVmdCc6dGhpcy5sZWZ0LCd2LWF2YXRhci0tcmlnaHQnOnRoaXMucmlnaHQsJ3YtYXZhdGFyLS10aWxlJzp0aGlzLnRpbGV9O30sc3R5bGVzOmZ1bmN0aW9uIHN0eWxlcygpe3JldHVybiBfX2Fzc2lnbih7aGVpZ2h0Ok9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5zaXplKSxtaW5XaWR0aDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuc2l6ZSksd2lkdGg6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLnNpemUpfSx0aGlzLm1lYXN1cmFibGVTdHlsZXMpO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGRhdGE9e3N0YXRpY0NsYXNzOid2LWF2YXRhcicsY2xhc3M6dGhpcy5jbGFzc2VzLHN0eWxlOnRoaXMuc3R5bGVzLG9uOnRoaXMuJGxpc3RlbmVyc307cmV0dXJuIGgoJ2RpdicsdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IodGhpcy5jb2xvcixkYXRhKSx0aGlzLiRzbG90cy5kZWZhdWx0KTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkF2YXRhci9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkF2YXRhci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVkF2YXRhciwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQXZhdGFySW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXZhdGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQXZhdGFyICovIi4vc3JjL2NvbXBvbmVudHMvVkF2YXRhci9WQXZhdGFyLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkF2YXRhciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZBdmF0YXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZBdmF0YXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZCYWRnZS9WQmFkZ2Uuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQmFkZ2UvVkJhZGdlLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkJhZGdlVkJhZGdlU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkJhZGdlL1ZCYWRnZS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkJhZGdlL1ZCYWRnZS50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQmFkZ2VWQmFkZ2VUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQmFkZ2Vfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkJhZGdlLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WQmFkZ2UvVkJhZGdlLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJhZGdlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZCYWRnZV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190b2dnbGVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RvZ2dsZWFibGUgKi8iLi9zcmMvbWl4aW5zL3RvZ2dsZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3Bvc2l0aW9uYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9wb3NpdGlvbmFibGUgKi8iLi9zcmMvbWl4aW5zL3Bvc2l0aW9uYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdHJhbnNpdGlvbmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdHJhbnNpdGlvbmFibGUgKi8iLi9zcmMvbWl4aW5zL3RyYW5zaXRpb25hYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvLyBTdHlsZXMKLy8gTWl4aW5zCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0pKF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfbWl4aW5zX3RvZ2dsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLE9iamVjdChfbWl4aW5zX3Bvc2l0aW9uYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJmYWN0b3J5Il0pKFsnbGVmdCcsJ2JvdHRvbSddKSxfbWl4aW5zX3RyYW5zaXRpb25hYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXS8qIEB2dWUvY29tcG9uZW50ICovKS5leHRlbmQoe25hbWU6J3YtYmFkZ2UnLHByb3BzOntjb2xvcjp7dHlwZTpTdHJpbmcsZGVmYXVsdDoncHJpbWFyeSd9LG92ZXJsYXA6Qm9vbGVhbix0cmFuc2l0aW9uOnt0eXBlOlN0cmluZyxkZWZhdWx0OidmYWItdHJhbnNpdGlvbid9LHZhbHVlOntkZWZhdWx0OnRydWV9fSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJueyd2LWJhZGdlLS1ib3R0b20nOnRoaXMuYm90dG9tLCd2LWJhZGdlLS1sZWZ0Jzp0aGlzLmxlZnQsJ3YtYmFkZ2UtLW92ZXJsYXAnOnRoaXMub3ZlcmxhcH07fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgYmFkZ2U9dGhpcy4kc2xvdHMuYmFkZ2UmJltoKCdzcGFuJyx0aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbG9yLHtzdGF0aWNDbGFzczondi1iYWRnZV9fYmFkZ2UnLGF0dHJzOnRoaXMuJGF0dHJzLGRpcmVjdGl2ZXM6W3tuYW1lOidzaG93Jyx2YWx1ZTp0aGlzLmlzQWN0aXZlfV19KSx0aGlzLiRzbG90cy5iYWRnZSldO3JldHVybiBoKCdzcGFuJyx7c3RhdGljQ2xhc3M6J3YtYmFkZ2UnLGNsYXNzOnRoaXMuY2xhc3Nlc30sW3RoaXMuJHNsb3RzLmRlZmF1bHQsdGhpcy50cmFuc2l0aW9uP2goJ3RyYW5zaXRpb24nLHtwcm9wczp7bmFtZTp0aGlzLnRyYW5zaXRpb24sb3JpZ2luOnRoaXMub3JpZ2luLG1vZGU6dGhpcy5tb2RlfX0sYmFkZ2UpOmJhZGdlXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZCYWRnZS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQmFkZ2UvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVkJhZGdlLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZCYWRnZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJhZGdlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQmFkZ2UgKi8iLi9zcmMvY29tcG9uZW50cy9WQmFkZ2UvVkJhZGdlLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkJhZGdlIixmdW5jdGlvbigpe3JldHVybiBfVkJhZGdlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WQmFkZ2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZCYW5uZXIvVkJhbm5lci5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkJhbm5lci9WQmFubmVyLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQmFubmVyVkJhbm5lclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZCYW5uZXIvVkJhbm5lci50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQmFubmVyL1ZCYW5uZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQmFubmVyVkJhbm5lclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZCYW5uZXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkJhbm5lci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkJhbm5lci9WQmFubmVyLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJhbm5lcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WQmFubmVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZTaGVldCAqLyIuL3NyYy9jb21wb25lbnRzL1ZTaGVldC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXZhdGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkF2YXRhciAqLyIuL3NyYy9jb21wb25lbnRzL1ZBdmF0YXIvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdHJhbnNpdGlvbnMgKi8iLi9zcmMvY29tcG9uZW50cy90cmFuc2l0aW9ucy9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy90b2dnbGVhYmxlICovIi4vc3JjL21peGlucy90b2dnbGVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBFeHRlbnNpb25zCi8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJkZWZhdWx0Il0pKF9WU2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0pLmV4dGVuZCh7bmFtZTondi1iYW5uZXInLGluaGVyaXRBdHRyczpmYWxzZSxwcm9wczp7aWNvbjpTdHJpbmcsaWNvbkNvbG9yOlN0cmluZyxtb2JpbGVCcmVha1BvaW50Ont0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0Ojk2MH0sc2luZ2xlTGluZTpCb29sZWFuLHN0aWNreTpCb29sZWFuLHRpbGU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LHZhbHVlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfX0sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7fSxfVlNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSx7J3YtYmFubmVyLS1oYXMtaWNvbic6dGhpcy5oYXNJY29uLCd2LWJhbm5lci0taXMtbW9iaWxlJzp0aGlzLmlzTW9iaWxlLCd2LWJhbm5lci0tc2luZ2xlLWxpbmUnOnRoaXMuc2luZ2xlTGluZSwndi1iYW5uZXItLXN0aWNreSc6dGhpcy5zdGlja3l9KTt9LGhhc0FjdGlvbnM6ZnVuY3Rpb24gaGFzQWN0aW9ucygpe3JldHVybiBCb29sZWFuKHRoaXMuJHNsb3RzLmFjdGlvbnN8fHRoaXMuJHNjb3BlZFNsb3RzLmFjdGlvbnMpO30saGFzSWNvbjpmdW5jdGlvbiBoYXNJY29uKCl7cmV0dXJuIEJvb2xlYW4odGhpcy5pY29ufHx0aGlzLiRzbG90cy5pY29uKTt9LGlzTW9iaWxlOmZ1bmN0aW9uIGlzTW9iaWxlKCl7cmV0dXJuIHRoaXMuJHZ1ZXRpZnkuYnJlYWtwb2ludC53aWR0aDxOdW1iZXIodGhpcy5tb2JpbGVCcmVha1BvaW50KTt9LHN0eWxlczpmdW5jdGlvbiBzdHlsZXMoKXt2YXIgc3R5bGVzPV9WU2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuc3R5bGVzLmNhbGwodGhpcyk7aWYoIXRoaXMuc3RpY2t5KXJldHVybiBzdHlsZXM7dmFyIF9hPXRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24sYmFyPV9hLmJhcix0b3A9X2EudG9wO3JldHVybiBfX2Fzc2lnbih7fSxzdHlsZXMse3Bvc2l0aW9uOidzdGlja3knLHRvcDpiYXIrdG9wKyJweCIsekluZGV4OjF9KTt9fSxtZXRob2RzOnsvKiogQHB1YmxpYyAqL3RvZ2dsZTpmdW5jdGlvbiB0b2dnbGUoKXt0aGlzLmlzQWN0aXZlPSF0aGlzLmlzQWN0aXZlO30saWNvbkNsaWNrOmZ1bmN0aW9uIGljb25DbGljayhlKXt0aGlzLiRlbWl0KCdjbGljazppY29uJyxlKTt9LGdlbkljb246ZnVuY3Rpb24gZ2VuSWNvbigpe2lmKCF0aGlzLmhhc0ljb24pcmV0dXJuIHVuZGVmaW5lZDt2YXIgY29udGVudDtpZih0aGlzLmljb24pe2NvbnRlbnQ9dGhpcy4kY3JlYXRlRWxlbWVudChfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLHtwcm9wczp7Y29sb3I6dGhpcy5pY29uQ29sb3Isc2l6ZToyOH19LFt0aGlzLmljb25dKTt9ZWxzZXtjb250ZW50PXRoaXMuJHNsb3RzLmljb247fXJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WQXZhdGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSx7c3RhdGljQ2xhc3M6J3YtYmFubmVyX19pY29uJyxwcm9wczp7Y29sb3I6dGhpcy5jb2xvcixzaXplOjQwfSxvbjp7Y2xpY2s6dGhpcy5pY29uQ2xpY2t9fSxbY29udGVudF0pO30sZ2VuVGV4dDpmdW5jdGlvbiBnZW5UZXh0KCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWJhbm5lcl9fdGV4dCd9LHRoaXMuJHNsb3RzLmRlZmF1bHQpO30sZ2VuQWN0aW9uczpmdW5jdGlvbiBnZW5BY3Rpb25zKCl7dmFyIF90aGlzPXRoaXM7aWYoIXRoaXMuaGFzQWN0aW9ucylyZXR1cm4gdW5kZWZpbmVkO3ZhciBjaGlsZHJlbj10aGlzLiRzY29wZWRTbG90cy5hY3Rpb25zP3RoaXMuJHNjb3BlZFNsb3RzLmFjdGlvbnMoe2Rpc21pc3M6ZnVuY3Rpb24gZGlzbWlzcygpe3JldHVybiBfdGhpcy5pc0FjdGl2ZT1mYWxzZTt9fSk6dGhpcy4kc2xvdHMuYWN0aW9ucztyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtYmFubmVyX19hY3Rpb25zJ30sY2hpbGRyZW4pO30sZ2VuQ29udGVudDpmdW5jdGlvbiBnZW5Db250ZW50KCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWJhbm5lcl9fY29udGVudCd9LFt0aGlzLmdlbkljb24oKSx0aGlzLmdlblRleHQoKV0pO30sZ2VuV3JhcHBlcjpmdW5jdGlvbiBnZW5XcmFwcGVyKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWJhbm5lcl9fd3JhcHBlcid9LFt0aGlzLmdlbkNvbnRlbnQoKSx0aGlzLmdlbkFjdGlvbnMoKV0pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bIlZFeHBhbmRUcmFuc2l0aW9uIl0sW2goJ2Rpdicse3N0YXRpY0NsYXNzOid2LWJhbm5lcicsY2xhc3M6dGhpcy5jbGFzc2VzLHN0eWxlOnRoaXMuc3R5bGVzLGRpcmVjdGl2ZXM6W3tuYW1lOidzaG93Jyx2YWx1ZTp0aGlzLmlzQWN0aXZlfV19LFt0aGlzLmdlbldyYXBwZXIoKV0pXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZCYW5uZXIvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZCYW5uZXIvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZCYW5uZXIsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkJhbm5lckluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJhbm5lcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkJhbm5lciAqLyIuL3NyYy9jb21wb25lbnRzL1ZCYW5uZXIvVkJhbm5lci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZCYW5uZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQmFubmVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WQmFubmVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQm90dG9tTmF2aWdhdGlvbi9WQm90dG9tTmF2aWdhdGlvbi5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQm90dG9tTmF2aWdhdGlvbi9WQm90dG9tTmF2aWdhdGlvbi5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQm90dG9tTmF2aWdhdGlvblZCb3R0b21OYXZpZ2F0aW9uU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkJvdHRvbU5hdmlnYXRpb24vVkJvdHRvbU5hdmlnYXRpb24udHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQm90dG9tTmF2aWdhdGlvbi9WQm90dG9tTmF2aWdhdGlvbi50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkJvdHRvbU5hdmlnYXRpb25WQm90dG9tTmF2aWdhdGlvblRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZCb3R0b21OYXZpZ2F0aW9uX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZCb3R0b21OYXZpZ2F0aW9uLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WQm90dG9tTmF2aWdhdGlvbi9WQm90dG9tTmF2aWdhdGlvbi5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZCb3R0b21OYXZpZ2F0aW9uX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZCb3R0b21OYXZpZ2F0aW9uX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19hcHBsaWNhdGlvbmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvYXBwbGljYXRpb25hYmxlICovIi4vc3JjL21peGlucy9hcHBsaWNhdGlvbmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2J1dHRvbl9ncm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9idXR0b24tZ3JvdXAgKi8iLi9zcmMvbWl4aW5zL2J1dHRvbi1ncm91cC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19tZWFzdXJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL21lYXN1cmFibGUgKi8iLi9zcmMvbWl4aW5zL21lYXN1cmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3Byb3h5YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9wcm94eWFibGUgKi8iLi9zcmMvbWl4aW5zL3Byb3h5YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfc2Nyb2xsYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9zY3JvbGxhYmxlICovIi4vc3JjL21peGlucy9zY3JvbGxhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RvZ2dsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdG9nZ2xlYWJsZSAqLyIuL3NyYy9taXhpbnMvdG9nZ2xlYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gTWl4aW5zCi8vIFV0aWxpdGllcwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siZGVmYXVsdCJdKShPYmplY3QoX21peGluc19hcHBsaWNhdGlvbmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKSgnYm90dG9tJyxbJ2hlaWdodCcsJ2lucHV0VmFsdWUnXSksX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLF9taXhpbnNfbWVhc3VyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sT2JqZWN0KF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJmYWN0b3J5Il0pKCdpbnB1dFZhbHVlJyksX21peGluc19wcm94eWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdLF9taXhpbnNfc2Nyb2xsYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJkZWZhdWx0Il0sX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siZGVmYXVsdCJdLyogQHZ1ZS9jb21wb25lbnQgKi8pLmV4dGVuZCh7bmFtZTondi1ib3R0b20tbmF2aWdhdGlvbicscHJvcHM6e2FjdGl2ZUNsYXNzOnt0eXBlOlN0cmluZyxkZWZhdWx0Oid2LWJ0bi0tYWN0aXZlJ30sYmFja2dyb3VuZENvbG9yOlN0cmluZyxncm93OkJvb2xlYW4saGVpZ2h0Ont0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjU2fSxoaWRlT25TY3JvbGw6Qm9vbGVhbixob3Jpem9udGFsOkJvb2xlYW4saW5wdXRWYWx1ZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sbWFuZGF0b3J5OkJvb2xlYW4sc2hpZnQ6Qm9vbGVhbn0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2lzQWN0aXZlOnRoaXMuaW5wdXRWYWx1ZX07fSxjb21wdXRlZDp7Y2FuU2Nyb2xsOmZ1bmN0aW9uIGNhblNjcm9sbCgpe3JldHVybiBfbWl4aW5zX3Njcm9sbGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuY2FuU2Nyb2xsLmNhbGwodGhpcykmJih0aGlzLmhpZGVPblNjcm9sbHx8IXRoaXMuaW5wdXRWYWx1ZSk7fSxjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm57J3YtYm90dG9tLW5hdmlnYXRpb24tLWFic29sdXRlJzp0aGlzLmFic29sdXRlLCd2LWJvdHRvbS1uYXZpZ2F0aW9uLS1ncm93Jzp0aGlzLmdyb3csJ3YtYm90dG9tLW5hdmlnYXRpb24tLWZpeGVkJzohdGhpcy5hYnNvbHV0ZSYmKHRoaXMuYXBwfHx0aGlzLmZpeGVkKSwndi1ib3R0b20tbmF2aWdhdGlvbi0taG9yaXpvbnRhbCc6dGhpcy5ob3Jpem9udGFsLCd2LWJvdHRvbS1uYXZpZ2F0aW9uLS1zaGlmdCc6dGhpcy5zaGlmdH07fSxzdHlsZXM6ZnVuY3Rpb24gc3R5bGVzKCl7cmV0dXJuIF9fYXNzaWduKHt9LHRoaXMubWVhc3VyYWJsZVN0eWxlcyx7dHJhbnNmb3JtOnRoaXMuaXNBY3RpdmU/J25vbmUnOid0cmFuc2xhdGVZKDEwMCUpJ30pO319LGNyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpey8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovaWYodGhpcy4kYXR0cnMuaGFzT3duUHJvcGVydHkoJ2FjdGl2ZScpKXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfX1siYnJlYWtpbmciXSkoJ2FjdGl2ZS5zeW5jJywndmFsdWUgb3Igdi1tb2RlbCcsdGhpcyk7fX0sbWV0aG9kczp7dGhyZXNob2xkTWV0OmZ1bmN0aW9uIHRocmVzaG9sZE1ldCgpe3RoaXMuaXNBY3RpdmU9IXRoaXMuaXNTY3JvbGxpbmdVcDt0aGlzLiRlbWl0KCd1cGRhdGU6aW5wdXQtdmFsdWUnLHRoaXMuaXNBY3RpdmUpO30sdXBkYXRlQXBwbGljYXRpb246ZnVuY3Rpb24gdXBkYXRlQXBwbGljYXRpb24oKXtyZXR1cm4gdGhpcy4kZWw/dGhpcy4kZWwuY2xpZW50SGVpZ2h0OjA7fSx1cGRhdGVWYWx1ZTpmdW5jdGlvbiB1cGRhdGVWYWx1ZSh2YWwpe3RoaXMuJGVtaXQoJ2NoYW5nZScsdmFsKTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBkYXRhPXRoaXMuc2V0QmFja2dyb3VuZENvbG9yKHRoaXMuYmFja2dyb3VuZENvbG9yLHtzdGF0aWNDbGFzczondi1ib3R0b20tbmF2aWdhdGlvbicsY2xhc3M6dGhpcy5jbGFzc2VzLHN0eWxlOnRoaXMuc3R5bGVzLHByb3BzOnthY3RpdmVDbGFzczp0aGlzLmFjdGl2ZUNsYXNzLG1hbmRhdG9yeTpCb29sZWFuKHRoaXMubWFuZGF0b3J5fHx0aGlzLnZhbHVlIT09dW5kZWZpbmVkKSx2YWx1ZTp0aGlzLmludGVybmFsVmFsdWV9LG9uOntjaGFuZ2U6dGhpcy51cGRhdGVWYWx1ZX19KTtpZih0aGlzLmNhblNjcm9sbCl7ZGF0YS5kaXJlY3RpdmVzPWRhdGEuZGlyZWN0aXZlc3x8W107ZGF0YS5kaXJlY3RpdmVzLnB1c2goe2FyZzp0aGlzLnNjcm9sbFRhcmdldCxuYW1lOidzY3JvbGwnLHZhbHVlOnRoaXMub25TY3JvbGx9KTt9cmV0dXJuIGgoX21peGluc19idXR0b25fZ3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLHRoaXMuc2V0VGV4dENvbG9yKHRoaXMuY29sb3IsZGF0YSksdGhpcy4kc2xvdHMuZGVmYXVsdCk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZCb3R0b21OYXZpZ2F0aW9uL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkJvdHRvbU5hdmlnYXRpb24vaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWQm90dG9tTmF2aWdhdGlvbiwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQm90dG9tTmF2aWdhdGlvbkluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJvdHRvbU5hdmlnYXRpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZCb3R0b21OYXZpZ2F0aW9uICovIi4vc3JjL2NvbXBvbmVudHMvVkJvdHRvbU5hdmlnYXRpb24vVkJvdHRvbU5hdmlnYXRpb24udHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQm90dG9tTmF2aWdhdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZCb3R0b21OYXZpZ2F0aW9uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WQm90dG9tTmF2aWdhdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkJvdHRvbVNoZWV0L1ZCb3R0b21TaGVldC5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZCb3R0b21TaGVldC9WQm90dG9tU2hlZXQuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQm90dG9tU2hlZXRWQm90dG9tU2hlZXRTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQm90dG9tU2hlZXQvVkJvdHRvbVNoZWV0LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQm90dG9tU2hlZXQvVkJvdHRvbVNoZWV0LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZCb3R0b21TaGVldFZCb3R0b21TaGVldFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZCb3R0b21TaGVldF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQm90dG9tU2hlZXQuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZCb3R0b21TaGVldC9WQm90dG9tU2hlZXQuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQm90dG9tU2hlZXRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkJvdHRvbVNoZWV0X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEaWFsb2dfVkRpYWxvZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZEaWFsb2cvVkRpYWxvZyAqLyIuL3NyYy9jb21wb25lbnRzL1ZEaWFsb2cvVkRpYWxvZy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gRXh0ZW5zaW9ucwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WRGlhbG9nX1ZEaWFsb2dfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLmV4dGVuZCh7bmFtZTondi1ib3R0b20tc2hlZXQnLHByb3BzOntpbnNldDpCb29sZWFuLG1heFdpZHRoOnt0eXBlOltTdHJpbmcsTnVtYmVyXSxkZWZhdWx0OidhdXRvJ30sdHJhbnNpdGlvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonYm90dG9tLXNoZWV0LXRyYW5zaXRpb24nfX0sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7fSxfVkRpYWxvZ19WRGlhbG9nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSx7J3YtYm90dG9tLXNoZWV0Jzp0cnVlLCd2LWJvdHRvbS1zaGVldC0taW5zZXQnOnRoaXMuaW5zZXR9KTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZCb3R0b21TaGVldC9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQm90dG9tU2hlZXQvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVkJvdHRvbVNoZWV0LCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZCb3R0b21TaGVldEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJvdHRvbVNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQm90dG9tU2hlZXQgKi8iLi9zcmMvY29tcG9uZW50cy9WQm90dG9tU2hlZXQvVkJvdHRvbVNoZWV0LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkJvdHRvbVNoZWV0IixmdW5jdGlvbigpe3JldHVybiBfVkJvdHRvbVNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WQm90dG9tU2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZCcmVhZGNydW1icy9WQnJlYWRjcnVtYnMuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQnJlYWRjcnVtYnMvVkJyZWFkY3J1bWJzLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkJyZWFkY3J1bWJzVkJyZWFkY3J1bWJzU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkJyZWFkY3J1bWJzL1ZCcmVhZGNydW1icy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkJyZWFkY3J1bWJzL1ZCcmVhZGNydW1icy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQnJlYWRjcnVtYnNWQnJlYWRjcnVtYnNUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQnJlYWRjcnVtYnNfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkJyZWFkY3J1bWJzLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WQnJlYWRjcnVtYnMvVkJyZWFkY3J1bWJzLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJyZWFkY3J1bWJzX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZCcmVhZGNydW1ic19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuICovIi4vc3JjL2NvbXBvbmVudHMvVkJyZWFkY3J1bWJzL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gU3R5bGVzCi8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8vIFV0aWxzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS8qIEB2dWUvY29tcG9uZW50ICovKS5leHRlbmQoe25hbWU6J3YtYnJlYWRjcnVtYnMnLHByb3BzOntkaXZpZGVyOnt0eXBlOlN0cmluZyxkZWZhdWx0OicvJ30saXRlbXM6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LGxhcmdlOkJvb2xlYW59LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LWJyZWFkY3J1bWJzLS1sYXJnZSc6dGhpcy5sYXJnZX0sdGhpcy50aGVtZUNsYXNzZXMpO319LG1ldGhvZHM6e2dlbkRpdmlkZXI6ZnVuY3Rpb24gZ2VuRGl2aWRlcigpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siVkJyZWFkY3J1bWJzRGl2aWRlciJdLHRoaXMuJHNsb3RzLmRpdmlkZXI/dGhpcy4kc2xvdHMuZGl2aWRlcjp0aGlzLmRpdmlkZXIpO30sZ2VuSXRlbXM6ZnVuY3Rpb24gZ2VuSXRlbXMoKXt2YXIgaXRlbXM9W107dmFyIGhhc1Nsb3Q9ISF0aGlzLiRzY29wZWRTbG90cy5pdGVtO3ZhciBrZXlzPVtdO2Zvcih2YXIgaT0wO2k8dGhpcy5pdGVtcy5sZW5ndGg7aSsrKXt2YXIgaXRlbT10aGlzLml0ZW1zW2ldO2tleXMucHVzaChpdGVtLnRleHQpO2lmKGhhc1Nsb3QpaXRlbXMucHVzaCh0aGlzLiRzY29wZWRTbG90cy5pdGVtKHtpdGVtOml0ZW19KSk7ZWxzZSBpdGVtcy5wdXNoKHRoaXMuJGNyZWF0ZUVsZW1lbnQoX19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJWQnJlYWRjcnVtYnNJdGVtIl0se2tleTprZXlzLmpvaW4oJy4nKSxwcm9wczppdGVtfSxbaXRlbS50ZXh0XSkpO2lmKGk8dGhpcy5pdGVtcy5sZW5ndGgtMSlpdGVtcy5wdXNoKHRoaXMuZ2VuRGl2aWRlcigpKTt9cmV0dXJuIGl0ZW1zO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGNoaWxkcmVuPXRoaXMuJHNsb3RzLmRlZmF1bHR8fHRoaXMuZ2VuSXRlbXMoKTtyZXR1cm4gaCgndWwnLHtzdGF0aWNDbGFzczondi1icmVhZGNydW1icycsY2xhc3M6dGhpcy5jbGFzc2VzfSxjaGlsZHJlbik7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZCcmVhZGNydW1icy9WQnJlYWRjcnVtYnNJdGVtLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkJyZWFkY3J1bWJzL1ZCcmVhZGNydW1ic0l0ZW0udHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZCcmVhZGNydW1ic1ZCcmVhZGNydW1ic0l0ZW1Ucyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfcm91dGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvcm91dGFibGUgKi8iLi9zcmMvbWl4aW5zL3JvdXRhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0pKF9taXhpbnNfcm91dGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3YtYnJlYWRjcnVtYnMtaXRlbScscHJvcHM6ey8vIEluIGEgYnJlYWRjcnVtYiwgdGhlIGN1cnJlbnRseQovLyBhY3RpdmUgaXRlbSBzaG91bGQgYmUgZGltbWVkCmFjdGl2ZUNsYXNzOnt0eXBlOlN0cmluZyxkZWZhdWx0Oid2LWJyZWFkY3J1bWJzX19pdGVtLS1kaXNhYmxlZCd9LHJpcHBsZTp7dHlwZTpbQm9vbGVhbixPYmplY3RdLGRlZmF1bHQ6ZmFsc2V9fSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7dmFyIF9hO3JldHVybiBfYT17J3YtYnJlYWRjcnVtYnNfX2l0ZW0nOnRydWV9LF9hW3RoaXMuYWN0aXZlQ2xhc3NdPXRoaXMuZGlzYWJsZWQsX2E7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgX2E9dGhpcy5nZW5lcmF0ZVJvdXRlTGluaygpLHRhZz1fYS50YWcsZGF0YT1fYS5kYXRhO3JldHVybiBoKCdsaScsW2godGFnLF9fYXNzaWduKHt9LGRhdGEse2F0dHJzOl9fYXNzaWduKHt9LGRhdGEuYXR0cnMseydhcmlhLWN1cnJlbnQnOnRoaXMuaXNBY3RpdmUmJnRoaXMuaXNMaW5rPydwYWdlJzp1bmRlZmluZWR9KX0pLHRoaXMuJHNsb3RzLmRlZmF1bHQpXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZCcmVhZGNydW1icy9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQnJlYWRjcnVtYnMvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVkJyZWFkY3J1bWJzLCBWQnJlYWRjcnVtYnNJdGVtLCBWQnJlYWRjcnVtYnNEaXZpZGVyLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZCcmVhZGNydW1ic0luZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkJyZWFkY3J1bWJzRGl2aWRlciIsZnVuY3Rpb24oKXtyZXR1cm4gVkJyZWFkY3J1bWJzRGl2aWRlcjt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJyZWFkY3J1bWJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQnJlYWRjcnVtYnMgKi8iLi9zcmMvY29tcG9uZW50cy9WQnJlYWRjcnVtYnMvVkJyZWFkY3J1bWJzLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkJyZWFkY3J1bWJzIixmdW5jdGlvbigpe3JldHVybiBfVkJyZWFkY3J1bWJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJyZWFkY3J1bWJzSXRlbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkJyZWFkY3J1bWJzSXRlbSAqLyIuL3NyYy9jb21wb25lbnRzL1ZCcmVhZGNydW1icy9WQnJlYWRjcnVtYnNJdGVtLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkJyZWFkY3J1bWJzSXRlbSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZCcmVhZGNydW1ic0l0ZW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7dmFyIFZCcmVhZGNydW1ic0RpdmlkZXI9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siY3JlYXRlU2ltcGxlRnVuY3Rpb25hbCJdKSgndi1icmVhZGNydW1ic19fZGl2aWRlcicsJ2xpJyk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT17JF92dWV0aWZ5X3N1YmNvbXBvbmVudHM6e1ZCcmVhZGNydW1iczpfVkJyZWFkY3J1bWJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSxWQnJlYWRjcnVtYnNJdGVtOl9WQnJlYWRjcnVtYnNJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxWQnJlYWRjcnVtYnNEaXZpZGVyOlZCcmVhZGNydW1ic0RpdmlkZXJ9fTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQnRuL1ZCdG4uc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZCdG4vVkJ0bi5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkJ0blZCdG5TYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQnRuL1ZCdG4udHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkJ0bi9WQnRuLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkJ0blZCdG5Ucyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQnRuX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZCdG4uc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZCdG4vVkJ0bi5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZCdG5fc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkJ0bl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WU2hlZXQgKi8iLi9zcmMvY29tcG9uZW50cy9WU2hlZXQvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlByb2dyZXNzQ2lyY3VsYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WUHJvZ3Jlc3NDaXJjdWxhciAqLyIuL3NyYy9jb21wb25lbnRzL1ZQcm9ncmVzc0NpcmN1bGFyL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19ncm91cGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvZ3JvdXBhYmxlICovIi4vc3JjL21peGlucy9ncm91cGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RvZ2dsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdG9nZ2xlYWJsZSAqLyIuL3NyYy9taXhpbnMvdG9nZ2xlYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfcG9zaXRpb25hYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3Bvc2l0aW9uYWJsZSAqLyIuL3NyYy9taXhpbnMvcG9zaXRpb25hYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19yb3V0YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9yb3V0YWJsZSAqLyIuL3NyYy9taXhpbnMvcm91dGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3NpemVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3NpemVhYmxlICovIi4vc3JjL21peGlucy9zaXplYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvY29uc29sZSAqLyIuL3NyYy91dGlsL2NvbnNvbGUudHMiKTtmdW5jdGlvbiBfdHlwZW9mKG9iail7aWYodHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJl90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcik9PT0ic3ltYm9sIil7X3R5cGVvZj1mdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIF90eXBlb2YyKG9iaik7fTt9ZWxzZXtfdHlwZW9mPWZ1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gb2JqJiZ0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb2JqLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZvYmohPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOl90eXBlb2YyKG9iaik7fTt9cmV0dXJuIF90eXBlb2Yob2JqKTt9dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTt2YXIgX19yZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fcmVhZHx8ZnVuY3Rpb24obyxuKXt2YXIgbT10eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb1tTeW1ib2wuaXRlcmF0b3JdO2lmKCFtKXJldHVybiBvO3ZhciBpPW0uY2FsbChvKSxyLGFyPVtdLGU7dHJ5e3doaWxlKChuPT09dm9pZCAwfHxuLS0+MCkmJiEocj1pLm5leHQoKSkuZG9uZSl7YXIucHVzaChyLnZhbHVlKTt9fWNhdGNoKGVycm9yKXtlPXtlcnJvcjplcnJvcn07fWZpbmFsbHl7dHJ5e2lmKHImJiFyLmRvbmUmJihtPWlbInJldHVybiJdKSltLmNhbGwoaSk7fWZpbmFsbHl7aWYoZSl0aHJvdyBlLmVycm9yO319cmV0dXJuIGFyO307Ly8gU3R5bGVzCi8vIEV4dGVuc2lvbnMKLy8gQ29tcG9uZW50cwovLyBNaXhpbnMKLy8gVXRpbGl0aWVzCnZhciBiYXNlTWl4aW5zPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZGVmYXVsdCJdKShfVlNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfbWl4aW5zX3JvdXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXSxfbWl4aW5zX3Bvc2l0aW9uYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0sX21peGluc19zaXplYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJkZWZhdWx0Il0sT2JqZWN0KF9taXhpbnNfZ3JvdXBhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImZhY3RvcnkiXSkoJ2J0blRvZ2dsZScpLE9iamVjdChfbWl4aW5zX3RvZ2dsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZmFjdG9yeSJdKSgnaW5wdXRWYWx1ZScpLyogQHZ1ZS9jb21wb25lbnQgKi8pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09YmFzZU1peGlucy5leHRlbmQoKS5leHRlbmQoe25hbWU6J3YtYnRuJyxwcm9wczp7YWN0aXZlQ2xhc3M6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtpZighdGhpcy5idG5Ub2dnbGUpcmV0dXJuJyc7cmV0dXJuIHRoaXMuYnRuVG9nZ2xlLmFjdGl2ZUNsYXNzO319LGJsb2NrOkJvb2xlYW4sZGVwcmVzc2VkOkJvb2xlYW4sZmFiOkJvb2xlYW4saWNvbjpCb29sZWFuLGxvYWRpbmc6Qm9vbGVhbixvdXRsaW5lZDpCb29sZWFuLHJldGFpbkZvY3VzT25DbGljazpCb29sZWFuLHJvdW5kZWQ6Qm9vbGVhbix0YWc6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2J1dHRvbid9LHRleHQ6Qm9vbGVhbix0eXBlOnt0eXBlOlN0cmluZyxkZWZhdWx0OididXR0b24nfSx2YWx1ZTpudWxsfSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57cHJveHlDbGFzczondi1idG4tLWFjdGl2ZSd9O30sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7J3YtYnRuJzp0cnVlfSxfbWl4aW5zX3JvdXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSx7J3YtYnRuLS1hYnNvbHV0ZSc6dGhpcy5hYnNvbHV0ZSwndi1idG4tLWJsb2NrJzp0aGlzLmJsb2NrLCd2LWJ0bi0tYm90dG9tJzp0aGlzLmJvdHRvbSwndi1idG4tLWNvbnRhaW5lZCc6dGhpcy5jb250YWluZWQsJ3YtYnRuLS1kZXByZXNzZWQnOnRoaXMuZGVwcmVzc2VkfHx0aGlzLm91dGxpbmVkLCd2LWJ0bi0tZGlzYWJsZWQnOnRoaXMuZGlzYWJsZWQsJ3YtYnRuLS1mYWInOnRoaXMuZmFiLCd2LWJ0bi0tZml4ZWQnOnRoaXMuZml4ZWQsJ3YtYnRuLS1mbGF0Jzp0aGlzLmlzRmxhdCwndi1idG4tLWljb24nOnRoaXMuaWNvbiwndi1idG4tLWxlZnQnOnRoaXMubGVmdCwndi1idG4tLWxvYWRpbmcnOnRoaXMubG9hZGluZywndi1idG4tLW91dGxpbmVkJzp0aGlzLm91dGxpbmVkLCd2LWJ0bi0tcmlnaHQnOnRoaXMucmlnaHQsJ3YtYnRuLS1yb3VuZCc6dGhpcy5pc1JvdW5kLCd2LWJ0bi0tcm91bmRlZCc6dGhpcy5yb3VuZGVkLCd2LWJ0bi0tcm91dGVyJzp0aGlzLnRvLCd2LWJ0bi0tdGV4dCc6dGhpcy50ZXh0LCd2LWJ0bi0tdGlsZSc6dGhpcy50aWxlLCd2LWJ0bi0tdG9wJzp0aGlzLnRvcH0sdGhpcy50aGVtZUNsYXNzZXMsdGhpcy5ncm91cENsYXNzZXMsdGhpcy5lbGV2YXRpb25DbGFzc2VzLHRoaXMuc2l6ZWFibGVDbGFzc2VzKTt9LGNvbnRhaW5lZDpmdW5jdGlvbiBjb250YWluZWQoKXtyZXR1cm4gQm9vbGVhbighdGhpcy5pc0ZsYXQmJiF0aGlzLmRlcHJlc3NlZCYmLy8gQ29udGFpbmVkIGNsYXNzIG9ubHkgYWRkcyBlbGV2YXRpb24KLy8gaXMgbm90IG5lZWRlZCBpZiB1c2VyIHByb3ZpZGVzIHZhbHVlCiF0aGlzLmVsZXZhdGlvbik7fSxjb21wdXRlZFJpcHBsZTpmdW5jdGlvbiBjb21wdXRlZFJpcHBsZSgpe3ZhciBkZWZhdWx0UmlwcGxlPXRoaXMuaWNvbnx8dGhpcy5mYWI/e2NpcmNsZTp0cnVlfTp0cnVlO2lmKHRoaXMuZGlzYWJsZWQpcmV0dXJuIGZhbHNlO2Vsc2UgcmV0dXJuIHRoaXMucmlwcGxlIT1udWxsP3RoaXMucmlwcGxlOmRlZmF1bHRSaXBwbGU7fSxpc0ZsYXQ6ZnVuY3Rpb24gaXNGbGF0KCl7cmV0dXJuIEJvb2xlYW4odGhpcy5pY29ufHx0aGlzLnRleHR8fHRoaXMub3V0bGluZWQpO30saXNSb3VuZDpmdW5jdGlvbiBpc1JvdW5kKCl7cmV0dXJuIEJvb2xlYW4odGhpcy5pY29ufHx0aGlzLmZhYik7fSxzdHlsZXM6ZnVuY3Rpb24gc3R5bGVzKCl7cmV0dXJuIF9fYXNzaWduKHt9LHRoaXMubWVhc3VyYWJsZVN0eWxlcyk7fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dmFyIF90aGlzPXRoaXM7dmFyIGJyZWFraW5nUHJvcHM9W1snZmxhdCcsJ3RleHQnXSxbJ291dGxpbmUnLCdvdXRsaW5lZCddLFsncm91bmQnLCdyb3VuZGVkJ11dOy8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovYnJlYWtpbmdQcm9wcy5mb3JFYWNoKGZ1bmN0aW9uKF9hKXt2YXIgX2I9X19yZWFkKF9hLDIpLG9yaWdpbmFsPV9iWzBdLHJlcGxhY2VtZW50PV9iWzFdO2lmKF90aGlzLiRhdHRycy5oYXNPd25Qcm9wZXJ0eShvcmlnaW5hbCkpT2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siYnJlYWtpbmciXSkob3JpZ2luYWwscmVwbGFjZW1lbnQsX3RoaXMpO30pO30sbWV0aG9kczp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soZSl7IXRoaXMucmV0YWluRm9jdXNPbkNsaWNrJiYhdGhpcy5mYWImJmUuZGV0YWlsJiZ0aGlzLiRlbC5ibHVyKCk7dGhpcy4kZW1pdCgnY2xpY2snLGUpO3RoaXMuYnRuVG9nZ2xlJiZ0aGlzLnRvZ2dsZSgpO30sZ2VuQ29udGVudDpmdW5jdGlvbiBnZW5Db250ZW50KCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLHtzdGF0aWNDbGFzczondi1idG5fX2NvbnRlbnQnfSx0aGlzLiRzbG90cy5kZWZhdWx0KTt9LGdlbkxvYWRlcjpmdW5jdGlvbiBnZW5Mb2FkZXIoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnc3Bhbicse2NsYXNzOid2LWJ0bl9fbG9hZGVyJ30sdGhpcy4kc2xvdHMubG9hZGVyfHxbdGhpcy4kY3JlYXRlRWxlbWVudChfVlByb2dyZXNzQ2lyY3VsYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLHtwcm9wczp7aW5kZXRlcm1pbmF0ZTp0cnVlLHNpemU6MjMsd2lkdGg6Mn19KV0pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGNoaWxkcmVuPVt0aGlzLmdlbkNvbnRlbnQoKSx0aGlzLmxvYWRpbmcmJnRoaXMuZ2VuTG9hZGVyKCldO3ZhciBzZXRDb2xvcj0hdGhpcy5pc0ZsYXQ/dGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3I6dGhpcy5zZXRUZXh0Q29sb3I7dmFyIF9hPXRoaXMuZ2VuZXJhdGVSb3V0ZUxpbmsoKSx0YWc9X2EudGFnLGRhdGE9X2EuZGF0YTtpZih0YWc9PT0nYnV0dG9uJyl7ZGF0YS5hdHRycy50eXBlPXRoaXMudHlwZTtkYXRhLmF0dHJzLmRpc2FibGVkPXRoaXMuZGlzYWJsZWQ7fWRhdGEuYXR0cnMudmFsdWU9WydzdHJpbmcnLCdudW1iZXInXS5pbmNsdWRlcyhfdHlwZW9mKHRoaXMudmFsdWUpKT90aGlzLnZhbHVlOkpTT04uc3RyaW5naWZ5KHRoaXMudmFsdWUpO3JldHVybiBoKHRhZyx0aGlzLmRpc2FibGVkP2RhdGE6c2V0Q29sb3IodGhpcy5jb2xvcixkYXRhKSxjaGlsZHJlbik7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZCdG4vaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZCdG4vaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZCdG4sIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkJ0bkluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJ0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkJ0biAqLyIuL3NyYy9jb21wb25lbnRzL1ZCdG4vVkJ0bi50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZCdG4iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQnRuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WQnRuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQnRuVG9nZ2xlL1ZCdG5Ub2dnbGUuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZCdG5Ub2dnbGUvVkJ0blRvZ2dsZS5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkJ0blRvZ2dsZVZCdG5Ub2dnbGVTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQnRuVG9nZ2xlL1ZCdG5Ub2dnbGUudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkJ0blRvZ2dsZS9WQnRuVG9nZ2xlLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkJ0blRvZ2dsZVZCdG5Ub2dnbGVUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQnRuVG9nZ2xlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZCdG5Ub2dnbGUuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZCdG5Ub2dnbGUvVkJ0blRvZ2dsZS5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZCdG5Ub2dnbGVfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkJ0blRvZ2dsZV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfYnV0dG9uX2dyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2J1dHRvbi1ncm91cCAqLyIuL3NyYy9taXhpbnMvYnV0dG9uLWdyb3VwL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gU3R5bGVzCi8vIE1peGlucwovLyBVdGlsaXRpZXMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoX21peGluc19idXR0b25fZ3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOid2LWJ0bi10b2dnbGUnLHByb3BzOntiYWNrZ3JvdW5kQ29sb3I6U3RyaW5nLGJvcmRlcmxlc3M6Qm9vbGVhbixkZW5zZTpCb29sZWFuLGdyb3VwOkJvb2xlYW4scm91bmRlZDpCb29sZWFuLHNoYXBlZDpCb29sZWFuLHRpbGU6Qm9vbGVhbn0sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7fSxfbWl4aW5zX2J1dHRvbl9ncm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LWJ0bi10b2dnbGUnOnRydWUsJ3YtYnRuLXRvZ2dsZS0tYm9yZGVybGVzcyc6dGhpcy5ib3JkZXJsZXNzLCd2LWJ0bi10b2dnbGUtLWRlbnNlJzp0aGlzLmRlbnNlLCd2LWJ0bi10b2dnbGUtLWdyb3VwJzp0aGlzLmdyb3VwLCd2LWJ0bi10b2dnbGUtLXJvdW5kZWQnOnRoaXMucm91bmRlZCwndi1idG4tdG9nZ2xlLS1zaGFwZWQnOnRoaXMuc2hhcGVkLCd2LWJ0bi10b2dnbGUtLXRpbGUnOnRoaXMudGlsZX0sdGhpcy50aGVtZUNsYXNzZXMpO319LG1ldGhvZHM6e2dlbkRhdGE6ZnVuY3Rpb24gZ2VuRGF0YSgpe3ZhciBkYXRhPXRoaXMuc2V0VGV4dENvbG9yKHRoaXMuY29sb3IsX19hc3NpZ24oe30sX21peGluc19idXR0b25fZ3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5nZW5EYXRhLmNhbGwodGhpcykpKTtpZih0aGlzLmdyb3VwKXJldHVybiBkYXRhO3JldHVybiB0aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmJhY2tncm91bmRDb2xvcixkYXRhKTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZCdG5Ub2dnbGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZCdG5Ub2dnbGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZCdG5Ub2dnbGUsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkJ0blRvZ2dsZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJ0blRvZ2dsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkJ0blRvZ2dsZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZCdG5Ub2dnbGUvVkJ0blRvZ2dsZS50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZCdG5Ub2dnbGUiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQnRuVG9nZ2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WQnRuVG9nZ2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvVkNhbGVuZGFyLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvVkNhbGVuZGFyLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDYWxlbmRhclZDYWxlbmRhclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jYWxlbmRhcl93aXRoX2V2ZW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vbWl4aW5zL2NhbGVuZGFyLXdpdGgtZXZlbnRzICovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL21peGlucy9jYWxlbmRhci13aXRoLWV2ZW50cy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX3Byb3BzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsL3Byb3BzICovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL3V0aWwvcHJvcHMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwvdGltZXN0YW1wICovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL3V0aWwvdGltZXN0YW1wLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDYWxlbmRhck1vbnRobHlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDYWxlbmRhck1vbnRobHkgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvVkNhbGVuZGFyTW9udGhseS50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2FsZW5kYXJEYWlseV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNhbGVuZGFyRGFpbHkgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvVkNhbGVuZGFyRGFpbHkudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNhbGVuZGFyV2Vla2x5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ2FsZW5kYXJXZWVrbHkgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvVkNhbGVuZGFyV2Vla2x5LnRzIik7Ly8gU3R5bGVzCi8vIGltcG9ydCAnLi4vLi4vc3R5bHVzL2NvbXBvbmVudHMvX2NhbGVuZGFyLWRhaWx5LnN0eWwnCnZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gTWl4aW5zCi8vIFV0aWwKLy8gQ2FsZW5kYXJzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X21peGluc19jYWxlbmRhcl93aXRoX2V2ZW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0uZXh0ZW5kKHtuYW1lOid2LWNhbGVuZGFyJyxwcm9wczpfX2Fzc2lnbih7fSxfdXRpbF9wcm9wc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0uY2FsZW5kYXIsX3V0aWxfcHJvcHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLndlZWtzLF91dGlsX3Byb3BzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5pbnRlcnZhbHMpLGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntsYXN0U3RhcnQ6bnVsbCxsYXN0RW5kOm51bGx9O30sY29tcHV0ZWQ6e3BhcnNlZFZhbHVlOmZ1bmN0aW9uIHBhcnNlZFZhbHVlKCl7cmV0dXJuIE9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sidmFsaWRhdGVUaW1lc3RhbXAiXSkodGhpcy52YWx1ZSk/T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJwYXJzZVRpbWVzdGFtcCJdKSh0aGlzLnZhbHVlKTp0aGlzLnBhcnNlZFN0YXJ0fHx0aGlzLnRpbWVzLnRvZGF5O30scmVuZGVyUHJvcHM6ZnVuY3Rpb24gcmVuZGVyUHJvcHMoKXt2YXIgYXJvdW5kPXRoaXMucGFyc2VkVmFsdWU7dmFyIGNvbXBvbmVudD1udWxsO3ZhciBtYXhEYXlzPXRoaXMubWF4RGF5czt2YXIgc3RhcnQ9YXJvdW5kO3ZhciBlbmQ9YXJvdW5kO3N3aXRjaCh0aGlzLnR5cGUpe2Nhc2UnbW9udGgnOmNvbXBvbmVudD1fVkNhbGVuZGFyTW9udGhseV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il07c3RhcnQ9T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJnZXRTdGFydE9mTW9udGgiXSkoYXJvdW5kKTtlbmQ9T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJnZXRFbmRPZk1vbnRoIl0pKGFyb3VuZCk7YnJlYWs7Y2FzZSd3ZWVrJzpjb21wb25lbnQ9X1ZDYWxlbmRhckRhaWx5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXTtzdGFydD10aGlzLmdldFN0YXJ0T2ZXZWVrKGFyb3VuZCk7ZW5kPXRoaXMuZ2V0RW5kT2ZXZWVrKGFyb3VuZCk7bWF4RGF5cz03O2JyZWFrO2Nhc2UnZGF5Jzpjb21wb25lbnQ9X1ZDYWxlbmRhckRhaWx5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXTttYXhEYXlzPTE7YnJlYWs7Y2FzZSc0ZGF5Jzpjb21wb25lbnQ9X1ZDYWxlbmRhckRhaWx5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXTtlbmQ9T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJyZWxhdGl2ZURheXMiXSkoT2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJjb3B5VGltZXN0YW1wIl0pKGVuZCksX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bIm5leHREYXkiXSw0KTtPYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bInVwZGF0ZUZvcm1hdHRlZCJdKShlbmQpO21heERheXM9NDticmVhaztjYXNlJ2N1c3RvbS13ZWVrbHknOmNvbXBvbmVudD1fVkNhbGVuZGFyV2Vla2x5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXTtzdGFydD10aGlzLnBhcnNlZFN0YXJ0fHxhcm91bmQ7ZW5kPXRoaXMucGFyc2VkRW5kO2JyZWFrO2Nhc2UnY3VzdG9tLWRhaWx5Jzpjb21wb25lbnQ9X1ZDYWxlbmRhckRhaWx5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXTtzdGFydD10aGlzLnBhcnNlZFN0YXJ0fHxhcm91bmQ7ZW5kPXRoaXMucGFyc2VkRW5kO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKHRoaXMudHlwZSsnIGlzIG5vdCBhIHZhbGlkIENhbGVuZGFyIHR5cGUnKTt9cmV0dXJue2NvbXBvbmVudDpjb21wb25lbnQsc3RhcnQ6c3RhcnQsZW5kOmVuZCxtYXhEYXlzOm1heERheXN9O319LHdhdGNoOntyZW5kZXJQcm9wczonY2hlY2tDaGFuZ2UnfSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLnVwZGF0ZUV2ZW50VmlzaWJpbGl0eSgpO30sdXBkYXRlZDpmdW5jdGlvbiB1cGRhdGVkKCl7dGhpcy51cGRhdGVFdmVudFZpc2liaWxpdHkoKTt9LG1ldGhvZHM6e2NoZWNrQ2hhbmdlOmZ1bmN0aW9uIGNoZWNrQ2hhbmdlKCl7dmFyIF9hPXRoaXMucmVuZGVyUHJvcHMsc3RhcnQ9X2Euc3RhcnQsZW5kPV9hLmVuZDtpZihzdGFydCE9PXRoaXMubGFzdFN0YXJ0fHxlbmQhPT10aGlzLmxhc3RFbmQpe3RoaXMubGFzdFN0YXJ0PXN0YXJ0O3RoaXMubGFzdEVuZD1lbmQ7dGhpcy4kZW1pdCgnY2hhbmdlJyx7c3RhcnQ6c3RhcnQsZW5kOmVuZH0pO319LG1vdmU6ZnVuY3Rpb24gbW92ZShhbW91bnQpe2lmKGFtb3VudD09PXZvaWQgMCl7YW1vdW50PTE7fXZhciBtb3ZlZD1PYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImNvcHlUaW1lc3RhbXAiXSkodGhpcy5wYXJzZWRWYWx1ZSk7dmFyIGZvcndhcmQ9YW1vdW50PjA7dmFyIG1vdmVyPWZvcndhcmQ/X3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bIm5leHREYXkiXTpfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sicHJldkRheSJdO3ZhciBsaW1pdD1mb3J3YXJkP191dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJEQVlTX0lOX01PTlRIX01BWCJdOl91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJEQVlfTUlOIl07dmFyIHRpbWVzPWZvcndhcmQ/YW1vdW50Oi1hbW91bnQ7d2hpbGUoLS10aW1lcz49MCl7c3dpdGNoKHRoaXMudHlwZSl7Y2FzZSdtb250aCc6bW92ZWQuZGF5PWxpbWl0O21vdmVyKG1vdmVkKTticmVhaztjYXNlJ3dlZWsnOk9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sicmVsYXRpdmVEYXlzIl0pKG1vdmVkLG1vdmVyLF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJEQVlTX0lOX1dFRUsiXSk7YnJlYWs7Y2FzZSdkYXknOnZhciBpbmRleD1tb3ZlZC53ZWVrZGF5O3ZhciBkYXlzPWZvcndhcmQ/dGhpcy53ZWVrZGF5U2tpcHNbaW5kZXhdOnRoaXMud2Vla2RheVNraXBzUmV2ZXJzZVtpbmRleF07T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJyZWxhdGl2ZURheXMiXSkobW92ZWQsbW92ZXIsZGF5cyk7YnJlYWs7Y2FzZSc0ZGF5JzpPYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bInJlbGF0aXZlRGF5cyJdKShtb3ZlZCxtb3Zlciw0KTticmVhazt9fU9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sidXBkYXRlV2Vla2RheSJdKShtb3ZlZCk7T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJ1cGRhdGVGb3JtYXR0ZWQiXSkobW92ZWQpO09iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sidXBkYXRlUmVsYXRpdmUiXSkobW92ZWQsdGhpcy50aW1lcy5ub3cpO3RoaXMuJGVtaXQoJ2lucHV0Jyxtb3ZlZC5kYXRlKTt0aGlzLiRlbWl0KCdtb3ZlZCcsbW92ZWQpO30sbmV4dDpmdW5jdGlvbiBuZXh0KGFtb3VudCl7aWYoYW1vdW50PT09dm9pZCAwKXthbW91bnQ9MTt9dGhpcy5tb3ZlKGFtb3VudCk7fSxwcmV2OmZ1bmN0aW9uIHByZXYoYW1vdW50KXtpZihhbW91bnQ9PT12b2lkIDApe2Ftb3VudD0xO310aGlzLm1vdmUoLWFtb3VudCk7fSx0aW1lVG9ZOmZ1bmN0aW9uIHRpbWVUb1kodGltZSxjbGFtcCl7aWYoY2xhbXA9PT12b2lkIDApe2NsYW1wPXRydWU7fXZhciBjPXRoaXMuJGNoaWxkcmVuWzBdO2lmKGMmJmMudGltZVRvWSl7cmV0dXJuIGMudGltZVRvWSh0aW1lLGNsYW1wKTt9ZWxzZXtyZXR1cm4gZmFsc2U7fX0sbWludXRlc1RvUGl4ZWxzOmZ1bmN0aW9uIG1pbnV0ZXNUb1BpeGVscyhtaW51dGVzKXt2YXIgYz10aGlzLiRjaGlsZHJlblswXTtpZihjJiZjLm1pbnV0ZXNUb1BpeGVscyl7cmV0dXJuIGMubWludXRlc1RvUGl4ZWxzKG1pbnV0ZXMpO31lbHNle3JldHVybi0xO319LHNjcm9sbFRvVGltZTpmdW5jdGlvbiBzY3JvbGxUb1RpbWUodGltZSl7dmFyIGM9dGhpcy4kY2hpbGRyZW5bMF07aWYoYyYmYy5zY3JvbGxUb1RpbWUpe3JldHVybiBjLnNjcm9sbFRvVGltZSh0aW1lKTt9ZWxzZXtyZXR1cm4gZmFsc2U7fX19LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIF90aGlzPXRoaXM7dmFyIF9hPXRoaXMucmVuZGVyUHJvcHMsc3RhcnQ9X2Euc3RhcnQsZW5kPV9hLmVuZCxtYXhEYXlzPV9hLm1heERheXMsY29tcG9uZW50PV9hLmNvbXBvbmVudDtyZXR1cm4gaChjb21wb25lbnQse3N0YXRpY0NsYXNzOid2LWNhbGVuZGFyJyxjbGFzczp7J3YtY2FsZW5kYXItZXZlbnRzJzohdGhpcy5ub0V2ZW50c30scHJvcHM6X19hc3NpZ24oe30sdGhpcy4kcHJvcHMse3N0YXJ0OnN0YXJ0LmRhdGUsZW5kOmVuZC5kYXRlLG1heERheXM6bWF4RGF5c30pLGRpcmVjdGl2ZXM6W3ttb2RpZmllcnM6e3F1aWV0OnRydWV9LG5hbWU6J3Jlc2l6ZScsdmFsdWU6dGhpcy51cGRhdGVFdmVudFZpc2liaWxpdHl9XSxvbjpfX2Fzc2lnbih7fSx0aGlzLiRsaXN0ZW5lcnMseydjbGljazpkYXRlJzpmdW5jdGlvbiBjbGlja0RhdGUoZGF5KXtpZihfdGhpcy4kbGlzdGVuZXJzWydpbnB1dCddKXtfdGhpcy4kZW1pdCgnaW5wdXQnLGRheS5kYXRlKTt9aWYoX3RoaXMuJGxpc3RlbmVyc1snY2xpY2s6ZGF0ZSddKXtfdGhpcy4kZW1pdCgnY2xpY2s6ZGF0ZScsZGF5KTt9fX0pLHNjb3BlZFNsb3RzOnRoaXMuZ2V0U2NvcGVkU2xvdHMoKX0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvVkNhbGVuZGFyRGFpbHkuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9WQ2FsZW5kYXJEYWlseS5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNhbGVuZGFyVkNhbGVuZGFyRGFpbHlTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvVkNhbGVuZGFyRGFpbHkudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL1ZDYWxlbmRhckRhaWx5LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNhbGVuZGFyVkNhbGVuZGFyRGFpbHlUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2FsZW5kYXJEYWlseV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ2FsZW5kYXJEYWlseS5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL1ZDYWxlbmRhckRhaWx5LnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNhbGVuZGFyRGFpbHlfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkNhbGVuZGFyRGFpbHlfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZGlyZWN0aXZlc19yZXNpemVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9kaXJlY3RpdmVzL3Jlc2l6ZSAqLyIuL3NyYy9kaXJlY3RpdmVzL3Jlc2l6ZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQnRuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkJ0biAqLyIuL3NyYy9jb21wb25lbnRzL1ZCdG4vaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2NhbGVuZGFyX3dpdGhfaW50ZXJ2YWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9taXhpbnMvY2FsZW5kYXItd2l0aC1pbnRlcnZhbHMgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvbWl4aW5zL2NhbGVuZGFyLXdpdGgtaW50ZXJ2YWxzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9O3ZhciBfX3JlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19yZWFkfHxmdW5jdGlvbihvLG4pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl07aWYoIW0pcmV0dXJuIG87dmFyIGk9bS5jYWxsKG8pLHIsYXI9W10sZTt0cnl7d2hpbGUoKG49PT12b2lkIDB8fG4tLT4wKSYmIShyPWkubmV4dCgpKS5kb25lKXthci5wdXNoKHIudmFsdWUpO319Y2F0Y2goZXJyb3Ipe2U9e2Vycm9yOmVycm9yfTt9ZmluYWxseXt0cnl7aWYociYmIXIuZG9uZSYmKG09aVsicmV0dXJuIl0pKW0uY2FsbChpKTt9ZmluYWxseXtpZihlKXRocm93IGUuZXJyb3I7fX1yZXR1cm4gYXI7fTt2YXIgX19zcHJlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19zcHJlYWR8fGZ1bmN0aW9uKCl7Zm9yKHZhciBhcj1bXSxpPTA7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7YXI9YXIuY29uY2F0KF9fcmVhZChhcmd1bWVudHNbaV0pKTt9cmV0dXJuIGFyO307Ly8gU3R5bGVzCi8vIERpcmVjdGl2ZXMKLy8gQ29tcG9uZW50cwovLyBNaXhpbnMKLy8gVXRpbAovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9taXhpbnNfY2FsZW5kYXJfd2l0aF9pbnRlcnZhbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLmV4dGVuZCh7bmFtZTondi1jYWxlbmRhci1kYWlseScsZGlyZWN0aXZlczp7UmVzaXplOl9kaXJlY3RpdmVzX3Jlc2l6ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntzY3JvbGxQdXNoOjB9O30sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7J3YtY2FsZW5kYXItZGFpbHknOnRydWV9LHRoaXMudGhlbWVDbGFzc2VzKTt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLmluaXQoKTt9LG1ldGhvZHM6e2luaXQ6ZnVuY3Rpb24gaW5pdCgpe3RoaXMuJG5leHRUaWNrKHRoaXMub25SZXNpemUpO30sb25SZXNpemU6ZnVuY3Rpb24gb25SZXNpemUoKXt0aGlzLnNjcm9sbFB1c2g9dGhpcy5nZXRTY3JvbGxQdXNoKCk7fSxnZXRTY3JvbGxQdXNoOmZ1bmN0aW9uIGdldFNjcm9sbFB1c2goKXt2YXIgYXJlYT10aGlzLiRyZWZzLnNjcm9sbEFyZWE7dmFyIHBhbmU9dGhpcy4kcmVmcy5wYW5lO3JldHVybiBhcmVhJiZwYW5lP2FyZWEub2Zmc2V0V2lkdGgtcGFuZS5vZmZzZXRXaWR0aDowO30sZ2VuSGVhZDpmdW5jdGlvbiBnZW5IZWFkKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWNhbGVuZGFyLWRhaWx5X19oZWFkJyxzdHlsZTp7bWFyZ2luUmlnaHQ6dGhpcy5zY3JvbGxQdXNoKydweCd9fSxfX3NwcmVhZChbdGhpcy5nZW5IZWFkSW50ZXJ2YWxzKCldLHRoaXMuZ2VuSGVhZERheXMoKSkpO30sZ2VuSGVhZEludGVydmFsczpmdW5jdGlvbiBnZW5IZWFkSW50ZXJ2YWxzKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWNhbGVuZGFyLWRhaWx5X19pbnRlcnZhbHMtaGVhZCd9KTt9LGdlbkhlYWREYXlzOmZ1bmN0aW9uIGdlbkhlYWREYXlzKCl7cmV0dXJuIHRoaXMuZGF5cy5tYXAodGhpcy5nZW5IZWFkRGF5KTt9LGdlbkhlYWREYXk6ZnVuY3Rpb24gZ2VuSGVhZERheShkYXksaW5kZXgpe3ZhciBfdGhpcz10aGlzO3ZhciBzbG90PXRoaXMuJHNjb3BlZFNsb3RzWydkYXktaGVhZGVyJ107cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse2tleTpkYXkuZGF0ZSxzdGF0aWNDbGFzczondi1jYWxlbmRhci1kYWlseV9oZWFkLWRheScsY2xhc3M6dGhpcy5nZXRSZWxhdGl2ZUNsYXNzZXMoZGF5KSxvbjp0aGlzLmdldERlZmF1bHRNb3VzZUV2ZW50SGFuZGxlcnMoJzpkYXknLGZ1bmN0aW9uKF9lKXtyZXR1cm4gX3RoaXMuZ2V0U2xvdFNjb3BlKGRheSk7fSl9LFt0aGlzLmdlbkhlYWRXZWVrZGF5KGRheSksdGhpcy5nZW5IZWFkRGF5TGFiZWwoZGF5KSxzbG90P3Nsb3QoX19hc3NpZ24oe30sZGF5LHtpbmRleDppbmRleH0pKTonJ10pO30sZ2VuSGVhZFdlZWtkYXk6ZnVuY3Rpb24gZ2VuSGVhZFdlZWtkYXkoZGF5KXt2YXIgY29sb3I9ZGF5LnByZXNlbnQ/dGhpcy5jb2xvcjp1bmRlZmluZWQ7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsdGhpcy5zZXRUZXh0Q29sb3IoY29sb3Ise3N0YXRpY0NsYXNzOid2LWNhbGVuZGFyLWRhaWx5X2hlYWQtd2Vla2RheSd9KSx0aGlzLndlZWtkYXlGb3JtYXR0ZXIoZGF5LHRoaXMuc2hvcnRXZWVrZGF5cykpO30sZ2VuSGVhZERheUxhYmVsOmZ1bmN0aW9uIGdlbkhlYWREYXlMYWJlbChkYXkpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1jYWxlbmRhci1kYWlseV9oZWFkLWRheS1sYWJlbCd9LFt0aGlzLmdlbkhlYWREYXlCdXR0b24oZGF5KV0pO30sZ2VuSGVhZERheUJ1dHRvbjpmdW5jdGlvbiBnZW5IZWFkRGF5QnV0dG9uKGRheSl7dmFyIGNvbG9yPWRheS5wcmVzZW50P3RoaXMuY29sb3I6J3RyYW5zcGFyZW50JztyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkJ0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0se3Byb3BzOntjb2xvcjpjb2xvcixmYWI6dHJ1ZSxkZXByZXNzZWQ6dHJ1ZX0sb246dGhpcy5nZXRNb3VzZUV2ZW50SGFuZGxlcnMoeydjbGljazpkYXRlJzp7ZXZlbnQ6J2NsaWNrJyxzdG9wOnRydWV9LCdjb250ZXh0bWVudTpkYXRlJzp7ZXZlbnQ6J2NvbnRleHRtZW51JyxzdG9wOnRydWUscHJldmVudDp0cnVlLHJlc3VsdDpmYWxzZX19LGZ1bmN0aW9uKF9lKXtyZXR1cm4gZGF5O30pfSx0aGlzLmRheUZvcm1hdHRlcihkYXksZmFsc2UpKTt9LGdlbkJvZHk6ZnVuY3Rpb24gZ2VuQm9keSgpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1jYWxlbmRhci1kYWlseV9fYm9keSd9LFt0aGlzLmdlblNjcm9sbEFyZWEoKV0pO30sZ2VuU2Nyb2xsQXJlYTpmdW5jdGlvbiBnZW5TY3JvbGxBcmVhKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3JlZjonc2Nyb2xsQXJlYScsc3RhdGljQ2xhc3M6J3YtY2FsZW5kYXItZGFpbHlfX3Njcm9sbC1hcmVhJ30sW3RoaXMuZ2VuUGFuZSgpXSk7fSxnZW5QYW5lOmZ1bmN0aW9uIGdlblBhbmUoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7cmVmOidwYW5lJyxzdGF0aWNDbGFzczondi1jYWxlbmRhci1kYWlseV9fcGFuZScsc3R5bGU6e2hlaWdodDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuYm9keUhlaWdodCl9fSxbdGhpcy5nZW5EYXlDb250YWluZXIoKV0pO30sZ2VuRGF5Q29udGFpbmVyOmZ1bmN0aW9uIGdlbkRheUNvbnRhaW5lcigpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1jYWxlbmRhci1kYWlseV9fZGF5LWNvbnRhaW5lcid9LF9fc3ByZWFkKFt0aGlzLmdlbkJvZHlJbnRlcnZhbHMoKV0sdGhpcy5nZW5EYXlzKCkpKTt9LGdlbkRheXM6ZnVuY3Rpb24gZ2VuRGF5cygpe3JldHVybiB0aGlzLmRheXMubWFwKHRoaXMuZ2VuRGF5KTt9LGdlbkRheTpmdW5jdGlvbiBnZW5EYXkoZGF5LGluZGV4KXt2YXIgX3RoaXM9dGhpczt2YXIgc2xvdD10aGlzLiRzY29wZWRTbG90c1snZGF5LWJvZHknXTt2YXIgc2NvcGU9dGhpcy5nZXRTbG90U2NvcGUoZGF5KTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7a2V5OmRheS5kYXRlLHN0YXRpY0NsYXNzOid2LWNhbGVuZGFyLWRhaWx5X19kYXknLGNsYXNzOnRoaXMuZ2V0UmVsYXRpdmVDbGFzc2VzKGRheSksb246dGhpcy5nZXREZWZhdWx0TW91c2VFdmVudEhhbmRsZXJzKCc6dGltZScsZnVuY3Rpb24oZSl7cmV0dXJuIF90aGlzLmdldFNsb3RTY29wZShfdGhpcy5nZXRUaW1lc3RhbXBBdEV2ZW50KGUsZGF5KSk7fSl9LF9fc3ByZWFkKHRoaXMuZ2VuRGF5SW50ZXJ2YWxzKGluZGV4KSxbc2xvdD9zbG90KHNjb3BlKTonJ10pKTt9LGdlbkRheUludGVydmFsczpmdW5jdGlvbiBnZW5EYXlJbnRlcnZhbHMoaW5kZXgpe3JldHVybiB0aGlzLmludGVydmFsc1tpbmRleF0ubWFwKHRoaXMuZ2VuRGF5SW50ZXJ2YWwpO30sZ2VuRGF5SW50ZXJ2YWw6ZnVuY3Rpb24gZ2VuRGF5SW50ZXJ2YWwoaW50ZXJ2YWwpe3ZhciBoZWlnaHQ9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmludGVydmFsSGVpZ2h0KTt2YXIgc3R5bGVyPXRoaXMuaW50ZXJ2YWxTdHlsZXx8dGhpcy5pbnRlcnZhbFN0eWxlRGVmYXVsdDt2YXIgc2xvdD10aGlzLiRzY29wZWRTbG90cy5pbnRlcnZhbDt2YXIgc2NvcGU9dGhpcy5nZXRTbG90U2NvcGUoaW50ZXJ2YWwpO3ZhciBkYXRhPXtrZXk6aW50ZXJ2YWwudGltZSxzdGF0aWNDbGFzczondi1jYWxlbmRhci1kYWlseV9fZGF5LWludGVydmFsJyxzdHlsZTpfX2Fzc2lnbih7aGVpZ2h0OmhlaWdodH0sc3R5bGVyKGludGVydmFsKSl9O3ZhciBjaGlsZHJlbj1zbG90P3Nsb3Qoc2NvcGUpOnVuZGVmaW5lZDtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2JyxkYXRhLGNoaWxkcmVuKTt9LGdlbkJvZHlJbnRlcnZhbHM6ZnVuY3Rpb24gZ2VuQm9keUludGVydmFscygpe3ZhciBfdGhpcz10aGlzO3ZhciBkYXRhPXtzdGF0aWNDbGFzczondi1jYWxlbmRhci1kYWlseV9faW50ZXJ2YWxzLWJvZHknLG9uOnRoaXMuZ2V0RGVmYXVsdE1vdXNlRXZlbnRIYW5kbGVycygnOmludGVydmFsJyxmdW5jdGlvbihlKXtyZXR1cm4gX3RoaXMuZ2V0VGltZXN0YW1wQXRFdmVudChlLF90aGlzLnBhcnNlZFN0YXJ0KTt9KX07cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsZGF0YSx0aGlzLmdlbkludGVydmFsTGFiZWxzKCkpO30sZ2VuSW50ZXJ2YWxMYWJlbHM6ZnVuY3Rpb24gZ2VuSW50ZXJ2YWxMYWJlbHMoKXtpZighdGhpcy5pbnRlcnZhbHMubGVuZ3RoKXJldHVybiBudWxsO3JldHVybiB0aGlzLmludGVydmFsc1swXS5tYXAodGhpcy5nZW5JbnRlcnZhbExhYmVsKTt9LGdlbkludGVydmFsTGFiZWw6ZnVuY3Rpb24gZ2VuSW50ZXJ2YWxMYWJlbChpbnRlcnZhbCl7dmFyIGhlaWdodD1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuaW50ZXJ2YWxIZWlnaHQpO3ZhciBzaG9ydD10aGlzLnNob3J0SW50ZXJ2YWxzO3ZhciBzaG93ZXI9dGhpcy5zaG93SW50ZXJ2YWxMYWJlbHx8dGhpcy5zaG93SW50ZXJ2YWxMYWJlbERlZmF1bHQ7dmFyIHNob3c9c2hvd2VyKGludGVydmFsKTt2YXIgbGFiZWw9c2hvdz90aGlzLmludGVydmFsRm9ybWF0dGVyKGludGVydmFsLHNob3J0KTp1bmRlZmluZWQ7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse2tleTppbnRlcnZhbC50aW1lLHN0YXRpY0NsYXNzOid2LWNhbGVuZGFyLWRhaWx5X19pbnRlcnZhbCcsc3R5bGU6e2hlaWdodDpoZWlnaHR9fSxbdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtY2FsZW5kYXItZGFpbHlfX2ludGVydmFsLXRleHQnfSxsYWJlbCldKTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3JldHVybiBoKCdkaXYnLHtjbGFzczp0aGlzLmNsYXNzZXMsbmF0aXZlT246e2RyYWdzdGFydDpmdW5jdGlvbiBkcmFnc3RhcnQoZSl7ZS5wcmV2ZW50RGVmYXVsdCgpO319LGRpcmVjdGl2ZXM6W3ttb2RpZmllcnM6e3F1aWV0OnRydWV9LG5hbWU6J3Jlc2l6ZScsdmFsdWU6dGhpcy5vblJlc2l6ZX1dfSxbIXRoaXMuaGlkZUhlYWRlcj90aGlzLmdlbkhlYWQoKTonJyx0aGlzLmdlbkJvZHkoKV0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvVkNhbGVuZGFyTW9udGhseS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9WQ2FsZW5kYXJNb250aGx5LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ2FsZW5kYXJWQ2FsZW5kYXJNb250aGx5VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNhbGVuZGFyV2Vla2x5X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDYWxlbmRhcldlZWtseS5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL1ZDYWxlbmRhcldlZWtseS5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDYWxlbmRhcldlZWtseV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WQ2FsZW5kYXJXZWVrbHlfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNhbGVuZGFyV2Vla2x5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ2FsZW5kYXJXZWVrbHkgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvVkNhbGVuZGFyV2Vla2x5LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsL3RpbWVzdGFtcCAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci91dGlsL3RpbWVzdGFtcC50cyIpOy8vIFN0eWxlcwovLyBNaXhpbnMKLy8gVXRpbAovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WQ2FsZW5kYXJXZWVrbHlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLmV4dGVuZCh7bmFtZTondi1jYWxlbmRhci1tb250aGx5Jyxjb21wdXRlZDp7c3RhdGljQ2xhc3M6ZnVuY3Rpb24gc3RhdGljQ2xhc3MoKXtyZXR1cm4ndi1jYWxlbmRhci1tb250aGx5IHYtY2FsZW5kYXItd2Vla2x5Jzt9LHBhcnNlZFN0YXJ0OmZ1bmN0aW9uIHBhcnNlZFN0YXJ0KCl7cmV0dXJuIE9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZ2V0U3RhcnRPZk1vbnRoIl0pKE9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sicGFyc2VUaW1lc3RhbXAiXSkodGhpcy5zdGFydCkpO30scGFyc2VkRW5kOmZ1bmN0aW9uIHBhcnNlZEVuZCgpe3JldHVybiBPYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImdldEVuZE9mTW9udGgiXSkoT2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJwYXJzZVRpbWVzdGFtcCJdKSh0aGlzLmVuZCkpO319fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL1ZDYWxlbmRhcldlZWtseS5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9WQ2FsZW5kYXJXZWVrbHkuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ2FsZW5kYXJWQ2FsZW5kYXJXZWVrbHlTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvVkNhbGVuZGFyV2Vla2x5LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvVkNhbGVuZGFyV2Vla2x5LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDYWxlbmRhclZDYWxlbmRhcldlZWtseVRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDYWxlbmRhcldlZWtseV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ2FsZW5kYXJXZWVrbHkuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9WQ2FsZW5kYXJXZWVrbHkuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2FsZW5kYXJXZWVrbHlfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkNhbGVuZGFyV2Vla2x5X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WQnRuICovIi4vc3JjL2NvbXBvbmVudHMvVkJ0bi9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY2FsZW5kYXJfYmFzZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vbWl4aW5zL2NhbGVuZGFyLWJhc2UgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvbWl4aW5zL2NhbGVuZGFyLWJhc2UudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9wcm9wc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbC9wcm9wcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci91dGlsL3Byb3BzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsL3RpbWVzdGFtcCAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci91dGlsL3RpbWVzdGFtcC50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9O3ZhciBfX3NwcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3NwcmVhZHx8ZnVuY3Rpb24oKXtmb3IodmFyIGFyPVtdLGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXthcj1hci5jb25jYXQoX19yZWFkKGFyZ3VtZW50c1tpXSkpO31yZXR1cm4gYXI7fTsvLyBTdHlsZXMKLy8gQ29tcG9uZW50cwovLyBNaXhpbnMKLy8gVXRpbAovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9taXhpbnNfY2FsZW5kYXJfYmFzZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0uZXh0ZW5kKHtuYW1lOid2LWNhbGVuZGFyLXdlZWtseScscHJvcHM6X3V0aWxfcHJvcHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLndlZWtzLGNvbXB1dGVkOntzdGF0aWNDbGFzczpmdW5jdGlvbiBzdGF0aWNDbGFzcygpe3JldHVybid2LWNhbGVuZGFyLXdlZWtseSc7fSxjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gdGhpcy50aGVtZUNsYXNzZXM7fSxwYXJzZWRNaW5XZWVrczpmdW5jdGlvbiBwYXJzZWRNaW5XZWVrcygpe3JldHVybiBwYXJzZUludCh0aGlzLm1pbldlZWtzKTt9LGRheXM6ZnVuY3Rpb24gZGF5cygpe3ZhciBtaW5EYXlzPXRoaXMucGFyc2VkTWluV2Vla3MqdGhpcy53ZWVrZGF5cy5sZW5ndGg7dmFyIHN0YXJ0PXRoaXMuZ2V0U3RhcnRPZldlZWsodGhpcy5wYXJzZWRTdGFydCk7dmFyIGVuZD10aGlzLmdldEVuZE9mV2Vlayh0aGlzLnBhcnNlZEVuZCk7cmV0dXJuIE9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siY3JlYXRlRGF5TGlzdCJdKShzdGFydCxlbmQsdGhpcy50aW1lcy50b2RheSx0aGlzLndlZWtkYXlTa2lwcyxOdW1iZXIuTUFYX1NBRkVfSU5URUdFUixtaW5EYXlzKTt9LHRvZGF5V2VlazpmdW5jdGlvbiB0b2RheVdlZWsoKXt2YXIgdG9kYXk9dGhpcy50aW1lcy50b2RheTt2YXIgc3RhcnQ9dGhpcy5nZXRTdGFydE9mV2Vlayh0b2RheSk7dmFyIGVuZD10aGlzLmdldEVuZE9mV2Vlayh0b2RheSk7cmV0dXJuIE9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siY3JlYXRlRGF5TGlzdCJdKShzdGFydCxlbmQsdG9kYXksdGhpcy53ZWVrZGF5U2tpcHMsdGhpcy53ZWVrZGF5cy5sZW5ndGgsdGhpcy53ZWVrZGF5cy5sZW5ndGgpO30sbW9udGhGb3JtYXR0ZXI6ZnVuY3Rpb24gbW9udGhGb3JtYXR0ZXIoKXtpZih0aGlzLm1vbnRoRm9ybWF0KXtyZXR1cm4gdGhpcy5tb250aEZvcm1hdDt9dmFyIGxvbmdPcHRpb25zPXt0aW1lWm9uZTonVVRDJyxtb250aDonbG9uZyd9O3ZhciBzaG9ydE9wdGlvbnM9e3RpbWVab25lOidVVEMnLG1vbnRoOidzaG9ydCd9O3JldHVybiBPYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlciJdKSh0aGlzLmN1cnJlbnRMb2NhbGUsZnVuY3Rpb24oX3RtcyxzaG9ydCl7cmV0dXJuIHNob3J0P3Nob3J0T3B0aW9uczpsb25nT3B0aW9uczt9KTt9fSxtZXRob2RzOntpc091dHNpZGU6ZnVuY3Rpb24gaXNPdXRzaWRlKGRheSl7dmFyIGRheUlkZW50aWZpZXI9T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJnZXREYXlJZGVudGlmaWVyIl0pKGRheSk7cmV0dXJuIGRheUlkZW50aWZpZXI8T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJnZXREYXlJZGVudGlmaWVyIl0pKHRoaXMucGFyc2VkU3RhcnQpfHxkYXlJZGVudGlmaWVyPk9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZ2V0RGF5SWRlbnRpZmllciJdKSh0aGlzLnBhcnNlZEVuZCk7fSxnZW5IZWFkOmZ1bmN0aW9uIGdlbkhlYWQoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtY2FsZW5kYXItd2Vla2x5X19oZWFkJ30sdGhpcy5nZW5IZWFkRGF5cygpKTt9LGdlbkhlYWREYXlzOmZ1bmN0aW9uIGdlbkhlYWREYXlzKCl7cmV0dXJuIHRoaXMudG9kYXlXZWVrLm1hcCh0aGlzLmdlbkhlYWREYXkpO30sZ2VuSGVhZERheTpmdW5jdGlvbiBnZW5IZWFkRGF5KGRheSxpbmRleCl7dmFyIG91dHNpZGU9dGhpcy5pc091dHNpZGUodGhpcy5kYXlzW2luZGV4XSk7dmFyIGNvbG9yPWRheS5wcmVzZW50P3RoaXMuY29sb3I6dW5kZWZpbmVkO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHRoaXMuc2V0VGV4dENvbG9yKGNvbG9yLHtrZXk6ZGF5LmRhdGUsc3RhdGljQ2xhc3M6J3YtY2FsZW5kYXItd2Vla2x5X19oZWFkLXdlZWtkYXknLGNsYXNzOnRoaXMuZ2V0UmVsYXRpdmVDbGFzc2VzKGRheSxvdXRzaWRlKX0pLHRoaXMud2Vla2RheUZvcm1hdHRlcihkYXksdGhpcy5zaG9ydFdlZWtkYXlzKSk7fSxnZW5XZWVrczpmdW5jdGlvbiBnZW5XZWVrcygpe3ZhciBkYXlzPXRoaXMuZGF5czt2YXIgd2Vla0RheXM9dGhpcy53ZWVrZGF5cy5sZW5ndGg7dmFyIHdlZWtzPVtdO2Zvcih2YXIgaT0wO2k8ZGF5cy5sZW5ndGg7aSs9d2Vla0RheXMpe3dlZWtzLnB1c2godGhpcy5nZW5XZWVrKGRheXMuc2xpY2UoaSxpK3dlZWtEYXlzKSkpO31yZXR1cm4gd2Vla3M7fSxnZW5XZWVrOmZ1bmN0aW9uIGdlbldlZWsod2Vlayl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse2tleTp3ZWVrWzBdLmRhdGUsc3RhdGljQ2xhc3M6J3YtY2FsZW5kYXItd2Vla2x5X193ZWVrJ30sd2Vlay5tYXAodGhpcy5nZW5EYXkpKTt9LGdlbkRheTpmdW5jdGlvbiBnZW5EYXkoZGF5LGluZGV4KXt2YXIgb3V0c2lkZT10aGlzLmlzT3V0c2lkZShkYXkpO3ZhciBzbG90PXRoaXMuJHNjb3BlZFNsb3RzLmRheTt2YXIgc2NvcGU9X19hc3NpZ24oe291dHNpZGU6b3V0c2lkZSxpbmRleDppbmRleH0sZGF5KTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7a2V5OmRheS5kYXRlLHN0YXRpY0NsYXNzOid2LWNhbGVuZGFyLXdlZWtseV9fZGF5JyxjbGFzczp0aGlzLmdldFJlbGF0aXZlQ2xhc3NlcyhkYXksb3V0c2lkZSksb246dGhpcy5nZXREZWZhdWx0TW91c2VFdmVudEhhbmRsZXJzKCc6ZGF5JyxmdW5jdGlvbihfZSl7cmV0dXJuIGRheTt9KX0sW3RoaXMuZ2VuRGF5TGFiZWwoZGF5KSxzbG90P3Nsb3Qoc2NvcGUpOicnXSk7fSxnZW5EYXlMYWJlbDpmdW5jdGlvbiBnZW5EYXlMYWJlbChkYXkpe3ZhciBzbG90PXRoaXMuJHNjb3BlZFNsb3RzWydkYXktbGFiZWwnXTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtY2FsZW5kYXItd2Vla2x5X19kYXktbGFiZWwnfSxbc2xvdD9zbG90KGRheSk6dGhpcy5nZW5EYXlMYWJlbEJ1dHRvbihkYXkpXSk7fSxnZW5EYXlMYWJlbEJ1dHRvbjpmdW5jdGlvbiBnZW5EYXlMYWJlbEJ1dHRvbihkYXkpe3ZhciBjb2xvcj1kYXkucHJlc2VudD90aGlzLmNvbG9yOid0cmFuc3BhcmVudCc7dmFyIGhhc01vbnRoPWRheS5kYXk9PT0xJiZ0aGlzLnNob3dNb250aE9uRmlyc3Q7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLHtwcm9wczp7Y29sb3I6Y29sb3IsZmFiOnRydWUsZGVwcmVzc2VkOnRydWUsc21hbGw6dHJ1ZX0sb246dGhpcy5nZXRNb3VzZUV2ZW50SGFuZGxlcnMoeydjbGljazpkYXRlJzp7ZXZlbnQ6J2NsaWNrJyxzdG9wOnRydWV9LCdjb250ZXh0bWVudTpkYXRlJzp7ZXZlbnQ6J2NvbnRleHRtZW51JyxzdG9wOnRydWUscHJldmVudDp0cnVlLHJlc3VsdDpmYWxzZX19LGZ1bmN0aW9uKF9lKXtyZXR1cm4gZGF5O30pfSxoYXNNb250aD90aGlzLm1vbnRoRm9ybWF0dGVyKGRheSx0aGlzLnNob3J0TW9udGhzKSsnICcrdGhpcy5kYXlGb3JtYXR0ZXIoZGF5LGZhbHNlKTp0aGlzLmRheUZvcm1hdHRlcihkYXksZmFsc2UpKTt9LGdlbkRheU1vbnRoOmZ1bmN0aW9uIGdlbkRheU1vbnRoKGRheSl7dmFyIGNvbG9yPWRheS5wcmVzZW50P3RoaXMuY29sb3I6dW5kZWZpbmVkO3ZhciBzbG90PXRoaXMuJHNjb3BlZFNsb3RzWydkYXktbW9udGgnXTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx0aGlzLnNldFRleHRDb2xvcihjb2xvcix7c3RhdGljQ2xhc3M6J3YtY2FsZW5kYXItd2Vla2x5X19kYXktbW9udGgnfSksc2xvdD9zbG90KGRheSk6dGhpcy5tb250aEZvcm1hdHRlcihkYXksdGhpcy5zaG9ydE1vbnRocykpO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOnRoaXMuc3RhdGljQ2xhc3MsY2xhc3M6dGhpcy5jbGFzc2VzLG5hdGl2ZU9uOntkcmFnc3RhcnQ6ZnVuY3Rpb24gZHJhZ3N0YXJ0KGUpe2UucHJldmVudERlZmF1bHQoKTt9fX0sX19zcHJlYWQoWyF0aGlzLmhpZGVIZWFkZXI/dGhpcy5nZW5IZWFkKCk6JyddLHRoaXMuZ2VuV2Vla3MoKSkpO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZDYWxlbmRhciwgVkNhbGVuZGFyRGFpbHksIFZDYWxlbmRhcldlZWtseSwgVkNhbGVuZGFyTW9udGhseSwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ2FsZW5kYXJJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDYWxlbmRhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNhbGVuZGFyICovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL1ZDYWxlbmRhci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDYWxlbmRhciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDYWxlbmRhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDYWxlbmRhckRhaWx5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ2FsZW5kYXJEYWlseSAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9WQ2FsZW5kYXJEYWlseS50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDYWxlbmRhckRhaWx5IixmdW5jdGlvbigpe3JldHVybiBfVkNhbGVuZGFyRGFpbHlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2FsZW5kYXJXZWVrbHlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDYWxlbmRhcldlZWtseSAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9WQ2FsZW5kYXJXZWVrbHkudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ2FsZW5kYXJXZWVrbHkiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQ2FsZW5kYXJXZWVrbHlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2FsZW5kYXJNb250aGx5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ2FsZW5kYXJNb250aGx5ICovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL1ZDYWxlbmRhck1vbnRobHkudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ2FsZW5kYXJNb250aGx5IixmdW5jdGlvbigpe3JldHVybiBfVkNhbGVuZGFyTW9udGhseV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT17JF92dWV0aWZ5X3N1YmNvbXBvbmVudHM6e1ZDYWxlbmRhcjpfVkNhbGVuZGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSxWQ2FsZW5kYXJEYWlseTpfVkNhbGVuZGFyRGFpbHlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLFZDYWxlbmRhcldlZWtseTpfVkNhbGVuZGFyV2Vla2x5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxWQ2FsZW5kYXJNb250aGx5Ol9WQ2FsZW5kYXJNb250aGx5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXX19Oy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9taXhpbnMvY2FsZW5kYXItYmFzZS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvbWl4aW5zL2NhbGVuZGFyLWJhc2UudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ2FsZW5kYXJNaXhpbnNDYWxlbmRhckJhc2VUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2xvY2FsYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uLy4uL21peGlucy9sb2NhbGFibGUgKi8iLi9zcmMvbWl4aW5zL2xvY2FsYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9tb3VzZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vbW91c2UgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvbWl4aW5zL21vdXNlLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdGltZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3RpbWVzICovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL21peGlucy90aW1lcy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX3Jlc2l6ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uLy4uL2RpcmVjdGl2ZXMvcmVzaXplICovIi4vc3JjL2RpcmVjdGl2ZXMvcmVzaXplL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfcHJvcHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlsL3Byb3BzICovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL3V0aWwvcHJvcHMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlsL3RpbWVzdGFtcCAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci91dGlsL3RpbWVzdGFtcC50cyIpOy8vIE1peGlucwovLyBEaXJlY3RpdmVzCi8vIFV0aWwKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkoX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLF9taXhpbnNfbG9jYWxhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxfbW91c2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSxfdGltZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdLyogQHZ1ZS9jb21wb25lbnQgKi8pLmV4dGVuZCh7bmFtZTonY2FsZW5kYXItYmFzZScsZGlyZWN0aXZlczp7UmVzaXplOl9kaXJlY3RpdmVzX3Jlc2l6ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJkZWZhdWx0Il19LHByb3BzOl91dGlsX3Byb3BzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImRlZmF1bHQiXS5iYXNlLGNvbXB1dGVkOnt3ZWVrZGF5U2tpcHM6ZnVuY3Rpb24gd2Vla2RheVNraXBzKCl7cmV0dXJuIE9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZ2V0V2Vla2RheVNraXBzIl0pKHRoaXMud2Vla2RheXMpO30sd2Vla2RheVNraXBzUmV2ZXJzZTpmdW5jdGlvbiB3ZWVrZGF5U2tpcHNSZXZlcnNlKCl7dmFyIHJldmVyc2VkPXRoaXMud2Vla2RheVNraXBzLnNsaWNlKCk7cmV2ZXJzZWQucmV2ZXJzZSgpO3JldHVybiByZXZlcnNlZDt9LHBhcnNlZFN0YXJ0OmZ1bmN0aW9uIHBhcnNlZFN0YXJ0KCl7cmV0dXJuIE9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1sicGFyc2VUaW1lc3RhbXAiXSkodGhpcy5zdGFydCk7fSxwYXJzZWRFbmQ6ZnVuY3Rpb24gcGFyc2VkRW5kKCl7cmV0dXJuIHRoaXMuZW5kP09iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1sicGFyc2VUaW1lc3RhbXAiXSkodGhpcy5lbmQpOnRoaXMucGFyc2VkU3RhcnQ7fSxkYXlzOmZ1bmN0aW9uIGRheXMoKXtyZXR1cm4gT2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJjcmVhdGVEYXlMaXN0Il0pKHRoaXMucGFyc2VkU3RhcnQsdGhpcy5wYXJzZWRFbmQsdGhpcy50aW1lcy50b2RheSx0aGlzLndlZWtkYXlTa2lwcyk7fSxkYXlGb3JtYXR0ZXI6ZnVuY3Rpb24gZGF5Rm9ybWF0dGVyKCl7aWYodGhpcy5kYXlGb3JtYXQpe3JldHVybiB0aGlzLmRheUZvcm1hdDt9dmFyIG9wdGlvbnM9e3RpbWVab25lOidVVEMnLGRheTonbnVtZXJpYyd9O3JldHVybiBPYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlciJdKSh0aGlzLmN1cnJlbnRMb2NhbGUsZnVuY3Rpb24oX3Rtcyxfc2hvcnQpe3JldHVybiBvcHRpb25zO30pO30sd2Vla2RheUZvcm1hdHRlcjpmdW5jdGlvbiB3ZWVrZGF5Rm9ybWF0dGVyKCl7aWYodGhpcy53ZWVrZGF5Rm9ybWF0KXtyZXR1cm4gdGhpcy53ZWVrZGF5Rm9ybWF0O312YXIgbG9uZ09wdGlvbnM9e3RpbWVab25lOidVVEMnLHdlZWtkYXk6J2xvbmcnfTt2YXIgc2hvcnRPcHRpb25zPXt0aW1lWm9uZTonVVRDJyx3ZWVrZGF5OidzaG9ydCd9O3JldHVybiBPYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlciJdKSh0aGlzLmN1cnJlbnRMb2NhbGUsZnVuY3Rpb24oX3RtcyxzaG9ydCl7cmV0dXJuIHNob3J0P3Nob3J0T3B0aW9uczpsb25nT3B0aW9uczt9KTt9fSxtZXRob2RzOntnZXRSZWxhdGl2ZUNsYXNzZXM6ZnVuY3Rpb24gZ2V0UmVsYXRpdmVDbGFzc2VzKHRpbWVzdGFtcCxvdXRzaWRlKXtpZihvdXRzaWRlPT09dm9pZCAwKXtvdXRzaWRlPWZhbHNlO31yZXR1cm57J3YtcHJlc2VudCc6dGltZXN0YW1wLnByZXNlbnQsJ3YtcGFzdCc6dGltZXN0YW1wLnBhc3QsJ3YtZnV0dXJlJzp0aW1lc3RhbXAuZnV0dXJlLCd2LW91dHNpZGUnOm91dHNpZGV9O30sZ2V0U3RhcnRPZldlZWs6ZnVuY3Rpb24gZ2V0U3RhcnRPZldlZWsodGltZXN0YW1wKXtyZXR1cm4gT2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJnZXRTdGFydE9mV2VlayJdKSh0aW1lc3RhbXAsdGhpcy53ZWVrZGF5cyx0aGlzLnRpbWVzLnRvZGF5KTt9LGdldEVuZE9mV2VlazpmdW5jdGlvbiBnZXRFbmRPZldlZWsodGltZXN0YW1wKXtyZXR1cm4gT2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJnZXRFbmRPZldlZWsiXSkodGltZXN0YW1wLHRoaXMud2Vla2RheXMsdGhpcy50aW1lcy50b2RheSk7fSxnZXRGb3JtYXR0ZXI6ZnVuY3Rpb24gZ2V0Rm9ybWF0dGVyKG9wdGlvbnMpe3JldHVybiBPYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlciJdKSh0aGlzLmxvY2FsZSxmdW5jdGlvbihfdG1zLF9zaG9ydCl7cmV0dXJuIG9wdGlvbnM7fSk7fX19KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvbWl4aW5zL2NhbGVuZGFyLXdpdGgtZXZlbnRzLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL21peGlucy9jYWxlbmRhci13aXRoLWV2ZW50cy5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDYWxlbmRhck1peGluc0NhbGVuZGFyV2l0aEV2ZW50c1Nhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9taXhpbnMvY2FsZW5kYXItd2l0aC1ldmVudHMudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9taXhpbnMvY2FsZW5kYXItd2l0aC1ldmVudHMudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNhbGVuZGFyTWl4aW5zQ2FsZW5kYXJXaXRoRXZlbnRzVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfY2FsZW5kYXJfd2l0aF9ldmVudHNfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY2FsZW5kYXItd2l0aC1ldmVudHMuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9taXhpbnMvY2FsZW5kYXItd2l0aC1ldmVudHMuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9jYWxlbmRhcl93aXRoX2V2ZW50c19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9jYWxlbmRhcl93aXRoX2V2ZW50c19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX3JpcHBsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uLy4uL2RpcmVjdGl2ZXMvcmlwcGxlICovIi4vc3JjL2RpcmVjdGl2ZXMvcmlwcGxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2NhbGVuZGFyX2Jhc2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2NhbGVuZGFyLWJhc2UgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvbWl4aW5zL2NhbGVuZGFyLWJhc2UudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX3Byb3BzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbC9wcm9wcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci91dGlsL3Byb3BzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbC90aW1lc3RhbXAgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvdXRpbC90aW1lc3RhbXAudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9ldmVudHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlsL2V2ZW50cyAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci91dGlsL2V2ZW50cy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gU3R5bGVzCi8vIERpcmVjdGl2ZXMKLy8gTWl4aW5zCi8vIEhlbHBlcnMKLy8gVXRpbAovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9jYWxlbmRhcl9iYXNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5leHRlbmQoe25hbWU6J2NhbGVuZGFyLXdpdGgtZXZlbnRzJyxkaXJlY3RpdmVzOntyaXBwbGU6X2RpcmVjdGl2ZXNfcmlwcGxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXX0scHJvcHM6X3V0aWxfcHJvcHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLmV2ZW50cyxjb21wdXRlZDp7bm9FdmVudHM6ZnVuY3Rpb24gbm9FdmVudHMoKXtyZXR1cm4gdGhpcy5ldmVudHMubGVuZ3RoPT09MDt9LHBhcnNlZEV2ZW50czpmdW5jdGlvbiBwYXJzZWRFdmVudHMoKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gdGhpcy5ldmVudHMubWFwKGZ1bmN0aW9uKGlucHV0LGluZGV4KXtyZXR1cm4gT2JqZWN0KF91dGlsX2V2ZW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJwYXJzZUV2ZW50Il0pKGlucHV0LGluZGV4LF90aGlzLmV2ZW50U3RhcnQsX3RoaXMuZXZlbnRFbmQpO30pO30sZXZlbnRDb2xvckZ1bmN0aW9uOmZ1bmN0aW9uIGV2ZW50Q29sb3JGdW5jdGlvbigpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0eXBlb2YgdGhpcy5ldmVudENvbG9yPT09J2Z1bmN0aW9uJz90aGlzLmV2ZW50Q29sb3I6ZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuZXZlbnRDb2xvcjt9O30sZXZlbnRUZXh0Q29sb3JGdW5jdGlvbjpmdW5jdGlvbiBldmVudFRleHRDb2xvckZ1bmN0aW9uKCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHR5cGVvZiB0aGlzLmV2ZW50VGV4dENvbG9yPT09J2Z1bmN0aW9uJz90aGlzLmV2ZW50VGV4dENvbG9yOmZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLmV2ZW50VGV4dENvbG9yO307fSxldmVudE5hbWVGdW5jdGlvbjpmdW5jdGlvbiBldmVudE5hbWVGdW5jdGlvbigpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0eXBlb2YgdGhpcy5ldmVudE5hbWU9PT0nZnVuY3Rpb24nP3RoaXMuZXZlbnROYW1lOmZ1bmN0aW9uKGV2ZW50LHRpbWVkRXZlbnQpe3ZhciBuYW1lPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImVzY2FwZUhUTUwiXSkoZXZlbnQuaW5wdXRbX3RoaXMuZXZlbnROYW1lXSk7aWYoZXZlbnQuc3RhcnQuaGFzVGltZSl7aWYodGltZWRFdmVudCl7dmFyIHNob3dTdGFydD1ldmVudC5zdGFydC5ob3VyPDEyJiZldmVudC5lbmQuaG91cj49MTI7dmFyIHN0YXJ0PV90aGlzLmZvcm1hdFRpbWUoZXZlbnQuc3RhcnQsc2hvd1N0YXJ0KTt2YXIgZW5kPV90aGlzLmZvcm1hdFRpbWUoZXZlbnQuZW5kLHRydWUpO3JldHVybiI8c3Ryb25nPiIrbmFtZSsiPC9zdHJvbmc+PGJyPiIrc3RhcnQrIiAtICIrZW5kO31lbHNle3ZhciB0aW1lPV90aGlzLmZvcm1hdFRpbWUoZXZlbnQuc3RhcnQsdHJ1ZSk7cmV0dXJuIjxzdHJvbmc+Iit0aW1lKyI8L3N0cm9uZz4gIituYW1lO319cmV0dXJuIG5hbWU7fTt9fSxtZXRob2RzOntmb3JtYXRUaW1lOmZ1bmN0aW9uIGZvcm1hdFRpbWUod2l0aFRpbWUsYW1wbSl7dmFyIHN1ZmZpeD1hbXBtP3dpdGhUaW1lLmhvdXI8MTI/J2EnOidwJzonJzt2YXIgaG91cj13aXRoVGltZS5ob3VyJTEyfHwxMjt2YXIgbWludXRlPXdpdGhUaW1lLm1pbnV0ZTtyZXR1cm4gbWludXRlPjA/bWludXRlPDEwP2hvdXIrIjowIittaW51dGUrc3VmZml4OmhvdXIrIjoiK21pbnV0ZStzdWZmaXg6IiIraG91citzdWZmaXg7fSx1cGRhdGVFdmVudFZpc2liaWxpdHk6ZnVuY3Rpb24gdXBkYXRlRXZlbnRWaXNpYmlsaXR5KCl7aWYodGhpcy5ub0V2ZW50c3x8IXRoaXMuZXZlbnRNb3JlKXtyZXR1cm47fXZhciBldmVudEhlaWdodD10aGlzLmV2ZW50SGVpZ2h0O3ZhciBldmVudHNNYXA9dGhpcy5nZXRFdmVudHNNYXAoKTtmb3IodmFyIGRhdGUgaW4gZXZlbnRzTWFwKXt2YXIgX2E9ZXZlbnRzTWFwW2RhdGVdLHBhcmVudD1fYS5wYXJlbnQsZXZlbnRzPV9hLmV2ZW50cyxtb3JlPV9hLm1vcmU7aWYoIW1vcmUpe2JyZWFrO312YXIgcGFyZW50Qm91bmRzPXBhcmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTt2YXIgbGFzdD1ldmVudHMubGVuZ3RoLTE7dmFyIGhpZGU9ZmFsc2U7dmFyIGhpZGRlbj0wO2Zvcih2YXIgaT0wO2k8PWxhc3Q7aSsrKXtpZighaGlkZSl7dmFyIGV2ZW50Qm91bmRzPWV2ZW50c1tpXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtoaWRlPWV2ZW50Qm91bmRzLmJvdHRvbStldmVudEhlaWdodD5wYXJlbnRCb3VuZHMuYm90dG9tJiZpIT09bGFzdHx8ZXZlbnRzW2ldLnN0eWxlLmRpc3BsYXk9PT0nbm9uZSc7fWlmKGhpZGUpe3ZhciBpZD1ldmVudHNbaV0uZ2V0QXR0cmlidXRlKCdkYXRhLWV2ZW50Jyk7dGhpcy5oaWRlRXZlbnRzKGlkKTtoaWRkZW4rKzt9fWlmKGhpZGUpe21vcmUuc3R5bGUuZGlzcGxheT0nJzttb3JlLmlubmVySFRNTD10aGlzLiR2dWV0aWZ5LmxhbmcudCh0aGlzLmV2ZW50TW9yZVRleHQsaGlkZGVuKTt9ZWxzZXttb3JlLnN0eWxlLmRpc3BsYXk9J25vbmUnO319fSxoaWRlRXZlbnRzOmZ1bmN0aW9uIGhpZGVFdmVudHMoaWQpe3ZhciBlbGVtZW50cz10aGlzLiRyZWZzLmV2ZW50cztlbGVtZW50cy5mb3JFYWNoKGZ1bmN0aW9uKGVsKXtpZihlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZXZlbnQnKT09PWlkKXtlbC5zdHlsZS5kaXNwbGF5PSdub25lJzt9fSk7fSxnZXRFdmVudHNNYXA6ZnVuY3Rpb24gZ2V0RXZlbnRzTWFwKCl7dmFyIGV2ZW50c01hcD17fTt2YXIgZWxlbWVudHM9dGhpcy4kcmVmcy5ldmVudHM7aWYoIWVsZW1lbnRzfHwhZWxlbWVudHMuZm9yRWFjaCl7cmV0dXJuIGV2ZW50c01hcDt9ZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbCl7dmFyIGRhdGU9ZWwuZ2V0QXR0cmlidXRlKCdkYXRhLWRhdGUnKTtpZihlbC5wYXJlbnRFbGVtZW50JiZkYXRlKXtpZighKGRhdGUgaW4gZXZlbnRzTWFwKSl7ZXZlbnRzTWFwW2RhdGVdPXtwYXJlbnQ6ZWwucGFyZW50RWxlbWVudCxtb3JlOm51bGwsZXZlbnRzOltdfTt9aWYoZWwuZ2V0QXR0cmlidXRlKCdkYXRhLW1vcmUnKSl7ZXZlbnRzTWFwW2RhdGVdLm1vcmU9ZWw7fWVsc2V7ZXZlbnRzTWFwW2RhdGVdLmV2ZW50cy5wdXNoKGVsKTtlbC5zdHlsZS5kaXNwbGF5PScnO319fSk7cmV0dXJuIGV2ZW50c01hcDt9LGdlbkRheUV2ZW50OmZ1bmN0aW9uIGdlbkRheUV2ZW50KF9hLGluZGV4LGRheSl7dmFyIG9mZnNldD1fYS5vZmZzZXQsZXZlbnQ9X2EuZXZlbnQ7dmFyIGV2ZW50SGVpZ2h0PXRoaXMuZXZlbnRIZWlnaHQ7dmFyIGV2ZW50TWFyZ2luQm90dG9tPXRoaXMuZXZlbnRNYXJnaW5Cb3R0b207dmFyIHJlbGF0aXZlT2Zmc2V0PShvZmZzZXQtaW5kZXgpKihldmVudEhlaWdodCtldmVudE1hcmdpbkJvdHRvbSk7Ly8gMSA9IG1hcmdpbiBib3R0b20KdmFyIGRheUlkZW50aWZpZXI9T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJnZXREYXlJZGVudGlmaWVyIl0pKGRheSk7dmFyIHN0YXJ0PWRheUlkZW50aWZpZXI9PT1ldmVudC5zdGFydElkZW50aWZpZXI7dmFyIGVuZD1kYXlJZGVudGlmaWVyPT09ZXZlbnQuZW5kSWRlbnRpZmllcjt2YXIgc2NvcGU9e2V2ZW50OmV2ZW50LmlucHV0LGRheTpkYXksb3V0c2lkZTpkYXkub3V0c2lkZSxzdGFydDpzdGFydCxlbmQ6ZW5kLHRpbWVkOmZhbHNlfTtyZXR1cm4gdGhpcy5nZW5FdmVudChldmVudCxzY29wZSxzdGFydHx8ZGF5LmluZGV4PT09MCxmYWxzZSx7c3RhdGljQ2xhc3M6J3YtZXZlbnQnLGNsYXNzOnsndi1ldmVudC1zdGFydCc6c3RhcnQsJ3YtZXZlbnQtZW5kJzplbmR9LHN0eWxlOntoZWlnaHQ6ZXZlbnRIZWlnaHQrInB4Iix0b3A6cmVsYXRpdmVPZmZzZXQrInB4IiwnbWFyZ2luLWJvdHRvbSc6ZXZlbnRNYXJnaW5Cb3R0b20rInB4In0sYXR0cnM6eydkYXRhLWRhdGUnOmRheS5kYXRlLCdkYXRhLWV2ZW50JzpldmVudC5pbmRleH0sa2V5OmV2ZW50LmluZGV4LHJlZjonZXZlbnRzJyxyZWZJbkZvcjp0cnVlfSk7fSxnZW5UaW1lZEV2ZW50OmZ1bmN0aW9uIGdlblRpbWVkRXZlbnQoX2EsaW5kZXgsZGF5KXt2YXIgb2Zmc2V0PV9hLm9mZnNldCxldmVudD1fYS5ldmVudCxjb2x1bW5Db3VudD1fYS5jb2x1bW5Db3VudCxjb2x1bW49X2EuY29sdW1uO3ZhciBkYXlJZGVudGlmaWVyPU9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZ2V0RGF5SWRlbnRpZmllciJdKShkYXkpO3ZhciBzdGFydD1ldmVudC5zdGFydElkZW50aWZpZXI+PWRheUlkZW50aWZpZXI7dmFyIGVuZD1ldmVudC5lbmRJZGVudGlmaWVyPmRheUlkZW50aWZpZXI7dmFyIHRvcD1zdGFydD9kYXkudGltZVRvWShldmVudC5zdGFydCk6MDt2YXIgYm90dG9tPWVuZD9kYXkudGltZVRvWSgxNDQwKTpkYXkudGltZVRvWShldmVudC5lbmQpO3ZhciBoZWlnaHQ9TWF0aC5tYXgodGhpcy5ldmVudEhlaWdodCxib3R0b20tdG9wKTt2YXIgbGVmdD1jb2x1bW5Db3VudD09PS0xP29mZnNldCo1OmNvbHVtbioxMDAvY29sdW1uQ291bnQ7dmFyIHJpZ2h0PWNvbHVtbkNvdW50PT09LTE/MDpNYXRoLm1heCgwLChjb2x1bW5Db3VudC1jb2x1bW4tMikqMTAwL2NvbHVtbkNvdW50KzEwKTt2YXIgc2NvcGU9e2V2ZW50OmV2ZW50LmlucHV0LGRheTpkYXksb3V0c2lkZTpkYXkub3V0c2lkZSxzdGFydDpzdGFydCxlbmQ6ZW5kLHRpbWVkOnRydWV9O3JldHVybiB0aGlzLmdlbkV2ZW50KGV2ZW50LHNjb3BlLHRydWUsdHJ1ZSx7c3RhdGljQ2xhc3M6J3YtZXZlbnQtdGltZWQnLHN0eWxlOnt0b3A6dG9wKyJweCIsaGVpZ2h0OmhlaWdodCsicHgiLGxlZnQ6bGVmdCsiJSIscmlnaHQ6cmlnaHQrIiUifX0pO30sZ2VuRXZlbnQ6ZnVuY3Rpb24gZ2VuRXZlbnQoZXZlbnQsc2NvcGUsc2hvd05hbWUsdGltZWRFdmVudCxkYXRhKXt2YXIgc2xvdD10aGlzLiRzY29wZWRTbG90cy5ldmVudDt2YXIgdGV4dD10aGlzLmV2ZW50VGV4dENvbG9yRnVuY3Rpb24oZXZlbnQuaW5wdXQpO3ZhciBiYWNrZ3JvdW5kPXRoaXMuZXZlbnRDb2xvckZ1bmN0aW9uKGV2ZW50LmlucHV0KTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx0aGlzLnNldFRleHRDb2xvcih0ZXh0LHRoaXMuc2V0QmFja2dyb3VuZENvbG9yKGJhY2tncm91bmQsX19hc3NpZ24oe29uOnRoaXMuZ2V0RGVmYXVsdE1vdXNlRXZlbnRIYW5kbGVycygnOmV2ZW50JyxmdW5jdGlvbihuYXRpdmVFdmVudCl7cmV0dXJuIF9fYXNzaWduKHt9LHNjb3BlLHtuYXRpdmVFdmVudDpuYXRpdmVFdmVudH0pO30pLGRpcmVjdGl2ZXM6W3tuYW1lOidyaXBwbGUnLHZhbHVlOnRoaXMuZXZlbnRSaXBwbGUhPW51bGw/dGhpcy5ldmVudFJpcHBsZTp0cnVlfV19LGRhdGEpKSksc2xvdD9zbG90KHNjb3BlKTpzaG93TmFtZT9bdGhpcy5nZW5OYW1lKGV2ZW50LHRpbWVkRXZlbnQpXTp1bmRlZmluZWQpO30sZ2VuTmFtZTpmdW5jdGlvbiBnZW5OYW1lKGV2ZW50LHRpbWVkRXZlbnQpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczoncGwtMScsZG9tUHJvcHM6e2lubmVySFRNTDp0aGlzLmV2ZW50TmFtZUZ1bmN0aW9uKGV2ZW50LHRpbWVkRXZlbnQpfX0pO30sZ2VuTW9yZTpmdW5jdGlvbiBnZW5Nb3JlKGRheSl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWV2ZW50LW1vcmUgcGwtMScsYXR0cnM6eydkYXRhLWRhdGUnOmRheS5kYXRlLCdkYXRhLW1vcmUnOjF9LGRpcmVjdGl2ZXM6W3tuYW1lOidyaXBwbGUnLHZhbHVlOnRoaXMuZXZlbnRSaXBwbGUhPW51bGw/dGhpcy5ldmVudFJpcHBsZTp0cnVlfV0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCl7cmV0dXJuIF90aGlzLiRlbWl0KCdjbGljazptb3JlJyxkYXkpO319LHN0eWxlOntkaXNwbGF5Oidub25lJ30scmVmOidldmVudHMnLHJlZkluRm9yOnRydWV9KTt9LGdldEV2ZW50c0ZvckRheTpmdW5jdGlvbiBnZXRFdmVudHNGb3JEYXkoZGF5KXt2YXIgaWRlbnRpZmllcj1PYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImdldERheUlkZW50aWZpZXIiXSkoZGF5KTtyZXR1cm4gdGhpcy5wYXJzZWRFdmVudHMuZmlsdGVyKGZ1bmN0aW9uKGV2ZW50KXtyZXR1cm4gT2JqZWN0KF91dGlsX2V2ZW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJpc0V2ZW50T24iXSkoZXZlbnQsaWRlbnRpZmllcik7fSk7fSxnZXRFdmVudHNGb3JEYXlBbGw6ZnVuY3Rpb24gZ2V0RXZlbnRzRm9yRGF5QWxsKGRheSl7dmFyIGlkZW50aWZpZXI9T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJnZXREYXlJZGVudGlmaWVyIl0pKGRheSk7cmV0dXJuIHRoaXMucGFyc2VkRXZlbnRzLmZpbHRlcihmdW5jdGlvbihldmVudCl7cmV0dXJuIGV2ZW50LmFsbERheSYmT2JqZWN0KF91dGlsX2V2ZW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJpc0V2ZW50T24iXSkoZXZlbnQsaWRlbnRpZmllcik7fSk7fSxnZXRFdmVudHNGb3JEYXlUaW1lZDpmdW5jdGlvbiBnZXRFdmVudHNGb3JEYXlUaW1lZChkYXkpe3ZhciBpZGVudGlmaWVyPU9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZ2V0RGF5SWRlbnRpZmllciJdKShkYXkpO3JldHVybiB0aGlzLnBhcnNlZEV2ZW50cy5maWx0ZXIoZnVuY3Rpb24oZXZlbnQpe3JldHVybiFldmVudC5hbGxEYXkmJk9iamVjdChfdXRpbF9ldmVudHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siaXNFdmVudE9uIl0pKGV2ZW50LGlkZW50aWZpZXIpO30pO30saXNTYW1lQ29sdW1uOmZ1bmN0aW9uIGlzU2FtZUNvbHVtbihhLGIpe3ZhciBhc3RhcnQ9T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJwYXJzZVRpbWUiXSkoYS5ldmVudC5zdGFydCk7dmFyIGJzdGFydD1PYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bInBhcnNlVGltZSJdKShiLmV2ZW50LnN0YXJ0KTt2YXIgZGlmZj1hc3RhcnQtYnN0YXJ0O3ZhciBhYnM9ZGlmZjwwPy1kaWZmOmRpZmY7cmV0dXJuIGFiczx0aGlzLmV2ZW50T3ZlcmxhcFRocmVzaG9sZDt9LGlzT3ZlcmxhcHBpbmc6ZnVuY3Rpb24gaXNPdmVybGFwcGluZyhhLGIpe3ZhciBhc3RhcnQ9T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJwYXJzZVRpbWUiXSkoYS5ldmVudC5zdGFydCk7dmFyIGJzdGFydD1PYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bInBhcnNlVGltZSJdKShiLmV2ZW50LnN0YXJ0KTtpZihhLm9mZnNldDxiLm9mZnNldCYmYnN0YXJ0PGFzdGFydCl7dmFyIGFlbmQ9YXN0YXJ0K3RoaXMuZXZlbnRPdmVybGFwVGhyZXNob2xkO3ZhciBiZW5kPU9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1sicGFyc2VUaW1lIl0pKGIuZXZlbnQuZW5kKTtyZXR1cm4hKGFzdGFydD49YmVuZHx8YWVuZDw9YnN0YXJ0KTt9cmV0dXJuIGZhbHNlO30sZ2V0U2NvcGVkU2xvdHM6ZnVuY3Rpb24gZ2V0U2NvcGVkU2xvdHMoKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLm5vRXZlbnRzKXtyZXR1cm4gdGhpcy4kc2NvcGVkU2xvdHM7fS8qKgogICAgICAgKiBPdmVyIHRoZSBzcGFuIG9mIGEgd2VlayAoZm9yIGV4YW1wbGUpIHdlIHdhbnQgdG8gbWFpbnRhaW4gYW4gZXZlbnQgaW4gdGhlIHNhbWUgcm93IChmb3Igd2Vla2x5IGFuZCBtb250aGx5IHZpZXdzKS4KICAgICAgICogV2Uga2VlcCB0cmFjayBvZiB0aG9zZSByb3dzIGJ5IGluZGV4VG9PZmZzZXQuIElmIHRoZSB2YWx1ZSBpbiB0aGF0IGFycmF5IGlzIC0xLCB0aGVuIHdlIGNhbiBwbGFjZSBhbiBldmVudCBhdCB0aGF0IHNwb3QuCiAgICAgICAqIEZvciBhIGRhaWx5IHZpZXcgd2l0aCB0aW1lZCBldmVudHMgd2UgYXJyYW5nZSB0aGVtIGJhc2VkIG9uIGNvbHVtbnMgYW5kIG9mZnNldHMuIElmIHR3byBvciBtb3JlIGV2ZW50cyBzdGFydCBhdCBhcm91bmQgdGhlCiAgICAgICAqIHNhbWUgdGltZSAoZXZlbnRPdmVybGFwVGhyZXNob2xkKSB0aGV5IGdvIGludG8gY29sdW1ucy4gSWYgb25lIGV2ZW50IHN0YXJ0cyBpbnNpZGUgYW5vdGhlciBpdCBpcyBpbmRlbnRlZCB0aGUgYXBwcm9wcmlhdGUgYW1vdW50LgogICAgICAgKiBJZiBvbmUgZXZlbnQgb3ZlcmxhcHMgYW5vdGhlciBhZnRlciB0aG9zZSBhZGp1c3RtZW50cyBhcmUgbWFkZSB0aG9zZSBldmVudHMgYXJlIHBsYWNlZCBpbiBjb2x1bW5zIHRvZ2V0aGVyIGluc3RlYWQgb2YgYW55IGRlZmluZWQKICAgICAgICogaW5kZW50cy4KICAgICAgICovdmFyIHBhcnNlZEV2ZW50cz10aGlzLnBhcnNlZEV2ZW50czt2YXIgaW5kZXhUb09mZnNldD1wYXJzZWRFdmVudHMubWFwKGZ1bmN0aW9uKGV2ZW50KXtyZXR1cm4tMTt9KTt2YXIgcmVzZXRPbldlZWtkYXk9dGhpcy53ZWVrZGF5c1swXTt2YXIgY2hlY2tSZXNldD1mdW5jdGlvbiBjaGVja1Jlc2V0KGRheSl7aWYoZGF5LndlZWtkYXk9PT1yZXNldE9uV2Vla2RheSl7Zm9yKHZhciBpPTA7aTxpbmRleFRvT2Zmc2V0Lmxlbmd0aDtpKyspe2luZGV4VG9PZmZzZXRbaV09LTE7fX19O3ZhciBnZXRPZmZzZXQ9ZnVuY3Rpb24gZ2V0T2Zmc2V0KHZpc3VhbCx2aXN1YWxzKXt2YXIgb2Zmc2V0PWluZGV4VG9PZmZzZXRbdmlzdWFsLmV2ZW50LmluZGV4XTtpZihvZmZzZXQ9PT0tMSl7dmFyIG1pbl8xPU51bWJlci5NQVhfU0FGRV9JTlRFR0VSO3ZhciBtYXhfMT0tMTt2aXN1YWxzLmZvckVhY2goZnVuY3Rpb24ob3RoZXIpe3ZhciBvdGhlck9mZnNldD1pbmRleFRvT2Zmc2V0W290aGVyLmV2ZW50LmluZGV4XTtpZihvdGhlck9mZnNldCE9PS0xKXttaW5fMT1NYXRoLm1pbihtaW5fMSxvdGhlck9mZnNldCk7bWF4XzE9TWF0aC5tYXgobWF4XzEsb3RoZXJPZmZzZXQpO319KTtvZmZzZXQ9bWluXzE+MCYmbWF4XzEhPT0tMT9taW5fMS0xOm1heF8xKzE7aW5kZXhUb09mZnNldFt2aXN1YWwuZXZlbnQuaW5kZXhdPW9mZnNldDt9cmV0dXJuIG9mZnNldDt9O3ZhciBnZXRWaXN1YWxzPWZ1bmN0aW9uIGdldFZpc3VhbHMoZXZlbnRzLHRpbWVkKXt2YXIgdmlzdWFscz1ldmVudHMubWFwKGZ1bmN0aW9uKGV2ZW50KXtyZXR1cm57ZXZlbnQ6ZXZlbnQsb2Zmc2V0OjAsY29sdW1uQ291bnQ6LTEsY29sdW1uOi0xfTt9KTsvLyBzb3J0IGV2ZW50cyBieSBzdGFydCBkYXRlL3RpbWUKdmlzdWFscy5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIGEuZXZlbnQuc3RhcnRUaW1lc3RhbXBJZGVudGlmaWVyLWIuZXZlbnQuc3RhcnRUaW1lc3RhbXBJZGVudGlmaWVyO30pO2lmKHRpbWVkKXsvLyB0aW1lZCBldmVudHMgY2FuIGJlIG9yZ2FuaXplZCBpbnRvIGNvbHVtbnMKdmlzdWFscy5mb3JFYWNoKGZ1bmN0aW9uKHZpc3VhbCl7aWYodmlzdWFsLmNvbHVtbkNvdW50IT09LTEpe3JldHVybjt9dmFyIGNvbHVtbnM9W107dmlzdWFscy5mb3JFYWNoKGZ1bmN0aW9uKG90aGVyKXtpZihvdGhlci5jb2x1bW5Db3VudD09PS0xJiZfdGhpcy5pc1NhbWVDb2x1bW4odmlzdWFsLG90aGVyKSl7Y29sdW1ucy5wdXNoKG90aGVyKTt9fSk7aWYoY29sdW1ucy5sZW5ndGg+MSl7Y29sdW1ucy5mb3JFYWNoKGZ1bmN0aW9uKHZpc3VhbCx2aXN1YWxJbmRleCl7dmlzdWFsLmNvbHVtbj12aXN1YWxJbmRleDt2aXN1YWwuY29sdW1uQ291bnQ9Y29sdW1ucy5sZW5ndGg7fSk7fX0pOy8vIGZvciBhbnkgbm90IG9yZ2FuaXplZCBpbnRvIGNvbHVtbnMsIGlmIHRoZXkgb3ZlcmxhcCBhbm90aGVyIGV2ZW50Ci8vIG5vdCBpbiBhIGNvbHVtbiB0aGV5IGFyZSBvZmZzZXQKdmlzdWFscy5mb3JFYWNoKGZ1bmN0aW9uKHZpc3VhbCl7aWYodmlzdWFsLmNvbHVtbkNvdW50PT09LTEpe3Zpc3VhbHMuZm9yRWFjaChmdW5jdGlvbihvdGhlcil7dmFyIG90aGVyT2Zmc2V0PWluZGV4VG9PZmZzZXRbb3RoZXIuZXZlbnQuaW5kZXhdO2lmKG90aGVyT2Zmc2V0IT09LTEmJm90aGVyLmV2ZW50LmVuZFRpbWVzdGFtcElkZW50aWZpZXI8PXZpc3VhbC5ldmVudC5zdGFydFRpbWVzdGFtcElkZW50aWZpZXIpe2luZGV4VG9PZmZzZXRbb3RoZXIuZXZlbnQuaW5kZXhdPS0xO319KTt2aXN1YWwub2Zmc2V0PWdldE9mZnNldCh2aXN1YWwsdmlzdWFscyk7fX0pOy8vIGZvciBhbnkgbm90IG9yZ2FuaXplZCBpbnRvIGNvbHVtbnMsIGlmIGEgcHJldmlvdXMgZXZlbnQgb3ZlcmxhcHMgdGhpcyBldmVudAovLyBqb2luIHRoZW0gaW50byB0aGUgY29sdW1ucwp2aXN1YWxzLmZvckVhY2goZnVuY3Rpb24odmlzdWFsKXtpZih2aXN1YWwuY29sdW1uQ291bnQ9PT0tMSl7dmFyIGNvbHVtbnNfMT1bdmlzdWFsXTt2aXN1YWxzLmZvckVhY2goZnVuY3Rpb24ob3RoZXIpe2lmKG90aGVyIT09dmlzdWFsJiZvdGhlci5jb2x1bW5Db3VudD09PS0xJiZfdGhpcy5pc092ZXJsYXBwaW5nKHZpc3VhbCxvdGhlcikpe2NvbHVtbnNfMS5wdXNoKG90aGVyKTt9fSk7aWYoY29sdW1uc18xLmxlbmd0aD4xKXtjb2x1bW5zXzEuZm9yRWFjaChmdW5jdGlvbih2aXN1YWwsdmlzdWFsSW5kZXgpe3Zpc3VhbC5jb2x1bW49dmlzdWFsSW5kZXg7dmlzdWFsLmNvbHVtbkNvdW50PWNvbHVtbnNfMS5sZW5ndGg7fSk7fX19KTt9ZWxzZXt2aXN1YWxzLmZvckVhY2goZnVuY3Rpb24odmlzdWFsKXt2aXN1YWwub2Zmc2V0PWdldE9mZnNldCh2aXN1YWwsdmlzdWFscyk7fSk7fXZpc3VhbHMuc29ydChmdW5jdGlvbihhLGIpe3JldHVybiBhLm9mZnNldC1iLm9mZnNldHx8YS5jb2x1bW4tYi5jb2x1bW47fSk7cmV0dXJuIHZpc3VhbHM7fTt2YXIgZ2V0U2xvdENoaWxkcmVuPWZ1bmN0aW9uIGdldFNsb3RDaGlsZHJlbihkYXksZ2V0dGVyLG1hcHBlcix0aW1lZCl7Y2hlY2tSZXNldChkYXkpO3ZhciBldmVudHM9Z2V0dGVyKGRheSk7cmV0dXJuIGV2ZW50cy5sZW5ndGg9PT0wP3VuZGVmaW5lZDpnZXRWaXN1YWxzKGV2ZW50cyx0aW1lZCkubWFwKGZ1bmN0aW9uKHZpc3VhbCxpbmRleCl7cmV0dXJuIG1hcHBlcih2aXN1YWwsaW5kZXgsZGF5KTt9KTt9O3JldHVybiBfX2Fzc2lnbih7fSx0aGlzLiRzY29wZWRTbG90cyx7ZGF5OmZ1bmN0aW9uIGRheShfZGF5KXt2YXIgY2hpbGRyZW49Z2V0U2xvdENoaWxkcmVuKF9kYXksX3RoaXMuZ2V0RXZlbnRzRm9yRGF5LF90aGlzLmdlbkRheUV2ZW50LGZhbHNlKTtpZihjaGlsZHJlbiYmY2hpbGRyZW4ubGVuZ3RoPjAmJl90aGlzLmV2ZW50TW9yZSl7Y2hpbGRyZW4ucHVzaChfdGhpcy5nZW5Nb3JlKF9kYXkpKTt9cmV0dXJuIGNoaWxkcmVuO30sJ2RheS1oZWFkZXInOmZ1bmN0aW9uIGRheUhlYWRlcihkYXkpe3JldHVybiBnZXRTbG90Q2hpbGRyZW4oZGF5LF90aGlzLmdldEV2ZW50c0ZvckRheUFsbCxfdGhpcy5nZW5EYXlFdmVudCxmYWxzZSk7fSwnZGF5LWJvZHknOmZ1bmN0aW9uIGRheUJvZHkoZGF5KXtyZXR1cm5bX3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWV2ZW50LXRpbWVkLWNvbnRhaW5lcid9LGdldFNsb3RDaGlsZHJlbihkYXksX3RoaXMuZ2V0RXZlbnRzRm9yRGF5VGltZWQsX3RoaXMuZ2VuVGltZWRFdmVudCx0cnVlKSldO319KTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9taXhpbnMvY2FsZW5kYXItd2l0aC1pbnRlcnZhbHMudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9taXhpbnMvY2FsZW5kYXItd2l0aC1pbnRlcnZhbHMudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNhbGVuZGFyTWl4aW5zQ2FsZW5kYXJXaXRoSW50ZXJ2YWxzVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfY2FsZW5kYXJfYmFzZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY2FsZW5kYXItYmFzZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci9taXhpbnMvY2FsZW5kYXItYmFzZS50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX3Byb3BzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbC9wcm9wcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci91dGlsL3Byb3BzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbC90aW1lc3RhbXAgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvdXRpbC90aW1lc3RhbXAudHMiKTsvLyBNaXhpbnMKLy8gVXRpbAovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9jYWxlbmRhcl9iYXNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXS5leHRlbmQoe25hbWU6J2NhbGVuZGFyLXdpdGgtaW50ZXJ2YWxzJyxwcm9wczpfdXRpbF9wcm9wc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0uaW50ZXJ2YWxzLGNvbXB1dGVkOntwYXJzZWRGaXJzdEludGVydmFsOmZ1bmN0aW9uIHBhcnNlZEZpcnN0SW50ZXJ2YWwoKXtyZXR1cm4gcGFyc2VJbnQodGhpcy5maXJzdEludGVydmFsKTt9LHBhcnNlZEludGVydmFsTWludXRlczpmdW5jdGlvbiBwYXJzZWRJbnRlcnZhbE1pbnV0ZXMoKXtyZXR1cm4gcGFyc2VJbnQodGhpcy5pbnRlcnZhbE1pbnV0ZXMpO30scGFyc2VkSW50ZXJ2YWxDb3VudDpmdW5jdGlvbiBwYXJzZWRJbnRlcnZhbENvdW50KCl7cmV0dXJuIHBhcnNlSW50KHRoaXMuaW50ZXJ2YWxDb3VudCk7fSxwYXJzZWRJbnRlcnZhbEhlaWdodDpmdW5jdGlvbiBwYXJzZWRJbnRlcnZhbEhlaWdodCgpe3JldHVybiBwYXJzZUZsb2F0KHRoaXMuaW50ZXJ2YWxIZWlnaHQpO30sZmlyc3RNaW51dGU6ZnVuY3Rpb24gZmlyc3RNaW51dGUoKXtyZXR1cm4gdGhpcy5wYXJzZWRGaXJzdEludGVydmFsKnRoaXMucGFyc2VkSW50ZXJ2YWxNaW51dGVzO30sYm9keUhlaWdodDpmdW5jdGlvbiBib2R5SGVpZ2h0KCl7cmV0dXJuIHRoaXMucGFyc2VkSW50ZXJ2YWxDb3VudCp0aGlzLnBhcnNlZEludGVydmFsSGVpZ2h0O30sZGF5czpmdW5jdGlvbiBkYXlzKCl7cmV0dXJuIE9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siY3JlYXRlRGF5TGlzdCJdKSh0aGlzLnBhcnNlZFN0YXJ0LHRoaXMucGFyc2VkRW5kLHRoaXMudGltZXMudG9kYXksdGhpcy53ZWVrZGF5U2tpcHMsdGhpcy5tYXhEYXlzKTt9LGludGVydmFsczpmdW5jdGlvbiBpbnRlcnZhbHMoKXt2YXIgZGF5cz10aGlzLmRheXM7dmFyIGZpcnN0PXRoaXMucGFyc2VkRmlyc3RJbnRlcnZhbDt2YXIgbWludXRlcz10aGlzLnBhcnNlZEludGVydmFsTWludXRlczt2YXIgY291bnQ9dGhpcy5wYXJzZWRJbnRlcnZhbENvdW50O3ZhciBub3c9dGhpcy50aW1lcy5ub3c7cmV0dXJuIGRheXMubWFwKGZ1bmN0aW9uKGQpe3JldHVybiBPYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImNyZWF0ZUludGVydmFsTGlzdCJdKShkLGZpcnN0LG1pbnV0ZXMsY291bnQsbm93KTt9KTt9LGludGVydmFsRm9ybWF0dGVyOmZ1bmN0aW9uIGludGVydmFsRm9ybWF0dGVyKCl7aWYodGhpcy5pbnRlcnZhbEZvcm1hdCl7cmV0dXJuIHRoaXMuaW50ZXJ2YWxGb3JtYXQ7fXZhciBsb25nT3B0aW9ucz17dGltZVpvbmU6J1VUQycsaG91cjEyOnRydWUsaG91cjonMi1kaWdpdCcsbWludXRlOicyLWRpZ2l0J307dmFyIHNob3J0T3B0aW9ucz17dGltZVpvbmU6J1VUQycsaG91cjEyOnRydWUsaG91cjonbnVtZXJpYycsbWludXRlOicyLWRpZ2l0J307dmFyIHNob3J0SG91ck9wdGlvbnM9e3RpbWVab25lOidVVEMnLGhvdXIxMjp0cnVlLGhvdXI6J251bWVyaWMnfTtyZXR1cm4gT2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJjcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXIiXSkodGhpcy5jdXJyZW50TG9jYWxlLGZ1bmN0aW9uKHRtcyxzaG9ydCl7cmV0dXJuIHNob3J0P3Rtcy5taW51dGU9PT0wP3Nob3J0SG91ck9wdGlvbnM6c2hvcnRPcHRpb25zOmxvbmdPcHRpb25zO30pO319LG1ldGhvZHM6e3Nob3dJbnRlcnZhbExhYmVsRGVmYXVsdDpmdW5jdGlvbiBzaG93SW50ZXJ2YWxMYWJlbERlZmF1bHQoaW50ZXJ2YWwpe3ZhciBmaXJzdD10aGlzLmludGVydmFsc1swXVswXTt2YXIgaXNGaXJzdD1maXJzdC5ob3VyPT09aW50ZXJ2YWwuaG91ciYmZmlyc3QubWludXRlPT09aW50ZXJ2YWwubWludXRlO3JldHVybiFpc0ZpcnN0JiZpbnRlcnZhbC5taW51dGU9PT0wO30saW50ZXJ2YWxTdHlsZURlZmF1bHQ6ZnVuY3Rpb24gaW50ZXJ2YWxTdHlsZURlZmF1bHQoX2ludGVydmFsKXtyZXR1cm4gdW5kZWZpbmVkO30sZ2V0VGltZXN0YW1wQXRFdmVudDpmdW5jdGlvbiBnZXRUaW1lc3RhbXBBdEV2ZW50KGUsZGF5KXt2YXIgdGltZXN0YW1wPU9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siY29weVRpbWVzdGFtcCJdKShkYXkpO3ZhciBib3VuZHM9ZS5jdXJyZW50VGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3ZhciBiYXNlTWludXRlcz10aGlzLmZpcnN0TWludXRlO3ZhciB0b3VjaEV2ZW50PWU7dmFyIG1vdXNlRXZlbnQ9ZTt2YXIgdG91Y2hlcz10b3VjaEV2ZW50LmNoYW5nZWRUb3VjaGVzfHx0b3VjaEV2ZW50LnRvdWNoZXM7dmFyIGNsaWVudFk9dG91Y2hlcyYmdG91Y2hlc1swXT90b3VjaGVzWzBdLmNsaWVudFk6bW91c2VFdmVudC5jbGllbnRZO3ZhciBhZGRJbnRlcnZhbHM9KGNsaWVudFktYm91bmRzLnRvcCkvdGhpcy5wYXJzZWRJbnRlcnZhbEhlaWdodDt2YXIgYWRkTWludXRlcz1NYXRoLmZsb29yKGFkZEludGVydmFscyp0aGlzLnBhcnNlZEludGVydmFsTWludXRlcyk7dmFyIG1pbnV0ZXM9YmFzZU1pbnV0ZXMrYWRkTWludXRlcztyZXR1cm4gT2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJ1cGRhdGVNaW51dGVzIl0pKHRpbWVzdGFtcCxtaW51dGVzLHRoaXMudGltZXMubm93KTt9LGdldFNsb3RTY29wZTpmdW5jdGlvbiBnZXRTbG90U2NvcGUodGltZXN0YW1wKXt2YXIgc2NvcGU9T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJjb3B5VGltZXN0YW1wIl0pKHRpbWVzdGFtcCk7c2NvcGUudGltZVRvWT10aGlzLnRpbWVUb1k7c2NvcGUubWludXRlc1RvUGl4ZWxzPXRoaXMubWludXRlc1RvUGl4ZWxzO3JldHVybiBzY29wZTt9LHNjcm9sbFRvVGltZTpmdW5jdGlvbiBzY3JvbGxUb1RpbWUodGltZSl7dmFyIHk9dGhpcy50aW1lVG9ZKHRpbWUpO3ZhciBwYW5lPXRoaXMuJHJlZnMuc2Nyb2xsQXJlYTtpZih5PT09ZmFsc2V8fCFwYW5lKXtyZXR1cm4gZmFsc2U7fXBhbmUuc2Nyb2xsVG9wPXk7cmV0dXJuIHRydWU7fSxtaW51dGVzVG9QaXhlbHM6ZnVuY3Rpb24gbWludXRlc1RvUGl4ZWxzKG1pbnV0ZXMpe3JldHVybiBtaW51dGVzL3RoaXMucGFyc2VkSW50ZXJ2YWxNaW51dGVzKnRoaXMucGFyc2VkSW50ZXJ2YWxIZWlnaHQ7fSx0aW1lVG9ZOmZ1bmN0aW9uIHRpbWVUb1kodGltZSxjbGFtcCl7aWYoY2xhbXA9PT12b2lkIDApe2NsYW1wPXRydWU7fXZhciBtaW51dGVzPU9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sicGFyc2VUaW1lIl0pKHRpbWUpO2lmKG1pbnV0ZXM9PT1mYWxzZSl7cmV0dXJuIGZhbHNlO312YXIgbWluPXRoaXMuZmlyc3RNaW51dGU7dmFyIGdhcD10aGlzLnBhcnNlZEludGVydmFsQ291bnQqdGhpcy5wYXJzZWRJbnRlcnZhbE1pbnV0ZXM7dmFyIGRlbHRhPShtaW51dGVzLW1pbikvZ2FwO3ZhciB5PWRlbHRhKnRoaXMuYm9keUhlaWdodDtpZihjbGFtcCl7aWYoeTwwKXt5PTA7fWlmKHk+dGhpcy5ib2R5SGVpZ2h0KXt5PXRoaXMuYm9keUhlaWdodDt9fXJldHVybiB5O319fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL21peGlucy9tb3VzZS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL21peGlucy9tb3VzZS50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ2FsZW5kYXJNaXhpbnNNb3VzZVRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOidtb3VzZScsbWV0aG9kczp7Z2V0RGVmYXVsdE1vdXNlRXZlbnRIYW5kbGVyczpmdW5jdGlvbiBnZXREZWZhdWx0TW91c2VFdmVudEhhbmRsZXJzKHN1ZmZpeCxnZXRFdmVudCl7dmFyIF9hO3JldHVybiB0aGlzLmdldE1vdXNlRXZlbnRIYW5kbGVycygoX2E9e30sX2FbJ2NsaWNrJytzdWZmaXhdPXtldmVudDonY2xpY2snfSxfYVsnY29udGV4dG1lbnUnK3N1ZmZpeF09e2V2ZW50Oidjb250ZXh0bWVudScscHJldmVudDp0cnVlLHJlc3VsdDpmYWxzZX0sX2FbJ21vdXNlZG93bicrc3VmZml4XT17ZXZlbnQ6J21vdXNlZG93bid9LF9hWydtb3VzZW1vdmUnK3N1ZmZpeF09e2V2ZW50Oidtb3VzZW1vdmUnfSxfYVsnbW91c2V1cCcrc3VmZml4XT17ZXZlbnQ6J21vdXNldXAnfSxfYVsnbW91c2VlbnRlcicrc3VmZml4XT17ZXZlbnQ6J21vdXNlZW50ZXInfSxfYVsnbW91c2VsZWF2ZScrc3VmZml4XT17ZXZlbnQ6J21vdXNlbGVhdmUnfSxfYVsndG91Y2hzdGFydCcrc3VmZml4XT17ZXZlbnQ6J3RvdWNoc3RhcnQnfSxfYVsndG91Y2htb3ZlJytzdWZmaXhdPXtldmVudDondG91Y2htb3ZlJ30sX2FbJ3RvdWNoZW5kJytzdWZmaXhdPXtldmVudDondG91Y2hlbmQnfSxfYSksZ2V0RXZlbnQpO30sZ2V0TW91c2VFdmVudEhhbmRsZXJzOmZ1bmN0aW9uIGdldE1vdXNlRXZlbnRIYW5kbGVycyhldmVudHMsZ2V0RXZlbnQpe3ZhciBfdGhpcz10aGlzO3ZhciBvbj17fTt2YXIgX2xvb3BfMT1mdW5jdGlvbiBfbG9vcF8xKGV2ZW50KXt2YXIgZXZlbnRPcHRpb25zPWV2ZW50c1tldmVudF07aWYoIXRoaXNfMS4kbGlzdGVuZXJzW2V2ZW50XSlyZXR1cm4iY29udGludWUiOy8vIFRPRE8gc29tZWhvdyBwdWxsIGluIG1vZGlmaWVycwp2YXIgcHJlZml4PWV2ZW50T3B0aW9ucy5wYXNzaXZlPycmJzooZXZlbnRPcHRpb25zLm9uY2U/J34nOicnKSsoZXZlbnRPcHRpb25zLmNhcHR1cmU/JyEnOicnKTt2YXIga2V5PXByZWZpeCtldmVudE9wdGlvbnMuZXZlbnQ7dmFyIGhhbmRsZXI9ZnVuY3Rpb24gaGFuZGxlcihlKXt2YXIgbW91c2VFdmVudD1lO2lmKGV2ZW50T3B0aW9ucy5idXR0b249PT11bmRlZmluZWR8fG1vdXNlRXZlbnQuYnV0dG9ucz4wJiZtb3VzZUV2ZW50LmJ1dHRvbj09PWV2ZW50T3B0aW9ucy5idXR0b24pe2lmKGV2ZW50T3B0aW9ucy5wcmV2ZW50KXtlLnByZXZlbnREZWZhdWx0KCk7fWlmKGV2ZW50T3B0aW9ucy5zdG9wKXtlLnN0b3BQcm9wYWdhdGlvbigpO31fdGhpcy4kZW1pdChldmVudCxnZXRFdmVudChlKSk7fXJldHVybiBldmVudE9wdGlvbnMucmVzdWx0O307aWYoa2V5IGluIG9uKXsvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2lmKEFycmF5LmlzQXJyYXkob25ba2V5XSkpe29uW2tleV0ucHVzaChoYW5kbGVyKTt9ZWxzZXtvbltrZXldPVtvbltrZXldLGhhbmRsZXJdO319ZWxzZXtvbltrZXldPWhhbmRsZXI7fX07dmFyIHRoaXNfMT10aGlzO2Zvcih2YXIgZXZlbnQgaW4gZXZlbnRzKXtfbG9vcF8xKGV2ZW50KTt9cmV0dXJuIG9uO319fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL21peGlucy90aW1lcy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL21peGlucy90aW1lcy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ2FsZW5kYXJNaXhpbnNUaW1lc1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbC90aW1lc3RhbXAgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvdXRpbC90aW1lc3RhbXAudHMiKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQuYS5leHRlbmQoe25hbWU6J3RpbWVzJyxwcm9wczp7bm93Ont0eXBlOlN0cmluZyx2YWxpZGF0b3I6X3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bInZhbGlkYXRlVGltZXN0YW1wIl19fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57dGltZXM6e25vdzpPYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bInBhcnNlVGltZXN0YW1wIl0pKCcwMDAwLTAwLTAwIDAwOjAwJyksdG9kYXk6T2JqZWN0KF91dGlsX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJwYXJzZVRpbWVzdGFtcCJdKSgnMDAwMC0wMC0wMCcpfX07fSxjb21wdXRlZDp7cGFyc2VkTm93OmZ1bmN0aW9uIHBhcnNlZE5vdygpe3JldHVybiB0aGlzLm5vdz9PYmplY3QoX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bInBhcnNlVGltZXN0YW1wIl0pKHRoaXMubm93KTpudWxsO319LHdhdGNoOntwYXJzZWROb3c6J3VwZGF0ZVRpbWVzJ30sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy51cGRhdGVUaW1lcygpO3RoaXMuc2V0UHJlc2VudCgpO30sbWV0aG9kczp7c2V0UHJlc2VudDpmdW5jdGlvbiBzZXRQcmVzZW50KCl7dGhpcy50aW1lcy5ub3cucHJlc2VudD10aGlzLnRpbWVzLnRvZGF5LnByZXNlbnQ9dHJ1ZTt0aGlzLnRpbWVzLm5vdy5wYXN0PXRoaXMudGltZXMudG9kYXkucGFzdD1mYWxzZTt0aGlzLnRpbWVzLm5vdy5mdXR1cmU9dGhpcy50aW1lcy50b2RheS5mdXR1cmU9ZmFsc2U7fSx1cGRhdGVUaW1lczpmdW5jdGlvbiB1cGRhdGVUaW1lcygpe3ZhciBub3c9dGhpcy5wYXJzZWROb3d8fHRoaXMuZ2V0Tm93KCk7dGhpcy51cGRhdGVEYXkobm93LHRoaXMudGltZXMubm93KTt0aGlzLnVwZGF0ZVRpbWUobm93LHRoaXMudGltZXMubm93KTt0aGlzLnVwZGF0ZURheShub3csdGhpcy50aW1lcy50b2RheSk7fSxnZXROb3c6ZnVuY3Rpb24gZ2V0Tm93KCl7cmV0dXJuIE9iamVjdChfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1sicGFyc2VEYXRlIl0pKG5ldyBEYXRlKCkpO30sdXBkYXRlRGF5OmZ1bmN0aW9uIHVwZGF0ZURheShub3csdGFyZ2V0KXtpZihub3cuZGF0ZSE9PXRhcmdldC5kYXRlKXt0YXJnZXQueWVhcj1ub3cueWVhcjt0YXJnZXQubW9udGg9bm93Lm1vbnRoO3RhcmdldC5kYXk9bm93LmRheTt0YXJnZXQud2Vla2RheT1ub3cud2Vla2RheTt0YXJnZXQuZGF0ZT1ub3cuZGF0ZTt9fSx1cGRhdGVUaW1lOmZ1bmN0aW9uIHVwZGF0ZVRpbWUobm93LHRhcmdldCl7aWYobm93LnRpbWUhPT10YXJnZXQudGltZSl7dGFyZ2V0LmhvdXI9bm93LmhvdXI7dGFyZ2V0Lm1pbnV0ZT1ub3cubWludXRlO3RhcmdldC50aW1lPW5vdy50aW1lO319fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci91dGlsL2V2ZW50cy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvdXRpbC9ldmVudHMudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogcGFyc2VFdmVudCwgaXNFdmVudE9uLCBpc0V2ZW50T3ZlcmxhcHBpbmcgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNhbGVuZGFyVXRpbEV2ZW50c1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sInBhcnNlRXZlbnQiLGZ1bmN0aW9uKCl7cmV0dXJuIHBhcnNlRXZlbnQ7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImlzRXZlbnRPbiIsZnVuY3Rpb24oKXtyZXR1cm4gaXNFdmVudE9uO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJpc0V2ZW50T3ZlcmxhcHBpbmciLGZ1bmN0aW9uKCl7cmV0dXJuIGlzRXZlbnRPdmVybGFwcGluZzt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi90aW1lc3RhbXAgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvdXRpbC90aW1lc3RhbXAudHMiKTtmdW5jdGlvbiBwYXJzZUV2ZW50KGlucHV0LGluZGV4LHN0YXJ0UHJvcGVydHksZW5kUHJvcGVydHkpe2lmKCEoc3RhcnRQcm9wZXJ0eSBpbiBpbnB1dCkpe3Rocm93IG5ldyBFcnJvcignVGhlICcrc3RhcnRQcm9wZXJ0eSsnIHByb3BlcnR5IGlzIHJlcXVpcmVkIG9uIGFsbCBldmVudHMgdG8gYmUgYSB2YWxpZCB0aW1lc3RhbXAgaW4gdGhlIGZvcm1hdCBZWVlZLU1NLUREIG9yIFlZWVktTU0tREQgaGg6bW0nKTt9dmFyIHN0YXJ0PU9iamVjdChfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bInBhcnNlVGltZXN0YW1wIl0pKGlucHV0W3N0YXJ0UHJvcGVydHldKTt2YXIgZW5kPWlucHV0W2VuZFByb3BlcnR5XT9PYmplY3QoX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJwYXJzZVRpbWVzdGFtcCJdKShpbnB1dFtlbmRQcm9wZXJ0eV0pOnN0YXJ0O3ZhciBzdGFydElkZW50aWZpZXI9T2JqZWN0KF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZ2V0RGF5SWRlbnRpZmllciJdKShzdGFydCk7dmFyIHN0YXJ0VGltZXN0YW1wSWRlbnRpZmllcj1PYmplY3QoX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJnZXRUaW1lc3RhbXBJZGVudGlmaWVyIl0pKHN0YXJ0KTt2YXIgZW5kSWRlbnRpZmllcj1PYmplY3QoX3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJnZXREYXlJZGVudGlmaWVyIl0pKGVuZCk7dmFyIGVuZFRpbWVzdGFtcElkZW50aWZpZXI9T2JqZWN0KF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZ2V0VGltZXN0YW1wSWRlbnRpZmllciJdKShlbmQpO3ZhciBhbGxEYXk9IXN0YXJ0Lmhhc1RpbWU7cmV0dXJue2lucHV0OmlucHV0LHN0YXJ0OnN0YXJ0LHN0YXJ0SWRlbnRpZmllcjpzdGFydElkZW50aWZpZXIsc3RhcnRUaW1lc3RhbXBJZGVudGlmaWVyOnN0YXJ0VGltZXN0YW1wSWRlbnRpZmllcixlbmQ6ZW5kLGVuZElkZW50aWZpZXI6ZW5kSWRlbnRpZmllcixlbmRUaW1lc3RhbXBJZGVudGlmaWVyOmVuZFRpbWVzdGFtcElkZW50aWZpZXIsYWxsRGF5OmFsbERheSxpbmRleDppbmRleH07fWZ1bmN0aW9uIGlzRXZlbnRPbihldmVudCxkYXlJZGVudGlmaWVyKXtyZXR1cm4gZGF5SWRlbnRpZmllcj49ZXZlbnQuc3RhcnRJZGVudGlmaWVyJiZkYXlJZGVudGlmaWVyPD1ldmVudC5lbmRJZGVudGlmaWVyO31mdW5jdGlvbiBpc0V2ZW50T3ZlcmxhcHBpbmcoZXZlbnQsc3RhcnRJZGVudGlmaWVyLGVuZElkZW50aWZpZXIpe3JldHVybiBzdGFydElkZW50aWZpZXI8PWV2ZW50LmVuZElkZW50aWZpZXImJmVuZElkZW50aWZpZXI+PWV2ZW50LnN0YXJ0SWRlbnRpZmllcjt9LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNhbGVuZGFyL3V0aWwvcHJvcHMudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvdXRpbC9wcm9wcy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQsIHZhbGlkYXRlTnVtYmVyICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDYWxlbmRhclV0aWxQcm9wc1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sInZhbGlkYXRlTnVtYmVyIixmdW5jdGlvbigpe3JldHVybiB2YWxpZGF0ZU51bWJlcjt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi90aW1lc3RhbXAgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvdXRpbC90aW1lc3RhbXAudHMiKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXtiYXNlOntzdGFydDp7dHlwZTpTdHJpbmcsdmFsaWRhdGU6X3RpbWVzdGFtcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJ2YWxpZGF0ZVRpbWVzdGFtcCJdLGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm4gT2JqZWN0KF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1sicGFyc2VEYXRlIl0pKG5ldyBEYXRlKCkpLmRhdGU7fX0sZW5kOnt0eXBlOlN0cmluZyx2YWxpZGF0ZTpfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bInZhbGlkYXRlVGltZXN0YW1wIl19LHdlZWtkYXlzOnt0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bMCwxLDIsMyw0LDUsNl07fX0saGlkZUhlYWRlcjp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LHNob3J0V2Vla2RheXM6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LHdlZWtkYXlGb3JtYXQ6e3R5cGU6RnVuY3Rpb24sZGVmYXVsdDpudWxsfSxkYXlGb3JtYXQ6e3R5cGU6RnVuY3Rpb24sZGVmYXVsdDpudWxsfX0saW50ZXJ2YWxzOnttYXhEYXlzOnt0eXBlOk51bWJlcixkZWZhdWx0Ojd9LHNob3J0SW50ZXJ2YWxzOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxpbnRlcnZhbEhlaWdodDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDo0MCx2YWxpZGF0ZTp2YWxpZGF0ZU51bWJlcn0saW50ZXJ2YWxNaW51dGVzOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjYwLHZhbGlkYXRlOnZhbGlkYXRlTnVtYmVyfSxmaXJzdEludGVydmFsOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjAsdmFsaWRhdGU6dmFsaWRhdGVOdW1iZXJ9LGludGVydmFsQ291bnQ6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MjQsdmFsaWRhdGU6dmFsaWRhdGVOdW1iZXJ9LGludGVydmFsRm9ybWF0Ont0eXBlOkZ1bmN0aW9uLGRlZmF1bHQ6bnVsbH0saW50ZXJ2YWxTdHlsZTp7dHlwZTpGdW5jdGlvbixkZWZhdWx0Om51bGx9LHNob3dJbnRlcnZhbExhYmVsOnt0eXBlOkZ1bmN0aW9uLGRlZmF1bHQ6bnVsbH19LHdlZWtzOnttaW5XZWVrczp7dmFsaWRhdGU6dmFsaWRhdGVOdW1iZXIsZGVmYXVsdDoxfSxzaG9ydE1vbnRoczp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sc2hvd01vbnRoT25GaXJzdDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sbW9udGhGb3JtYXQ6e3R5cGU6RnVuY3Rpb24sZGVmYXVsdDpudWxsfX0sY2FsZW5kYXI6e3R5cGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J21vbnRoJ30sdmFsdWU6e3R5cGU6U3RyaW5nLHZhbGlkYXRlOl90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1sidmFsaWRhdGVUaW1lc3RhbXAiXX19LGV2ZW50czp7ZXZlbnRzOnt0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bXTt9fSxldmVudFN0YXJ0Ont0eXBlOlN0cmluZyxkZWZhdWx0OidzdGFydCd9LGV2ZW50RW5kOnt0eXBlOlN0cmluZyxkZWZhdWx0OidlbmQnfSxldmVudEhlaWdodDp7dHlwZTpOdW1iZXIsZGVmYXVsdDoyMH0sZXZlbnRDb2xvcjp7dHlwZTpbU3RyaW5nLEZ1bmN0aW9uXSxkZWZhdWx0OidzZWNvbmRhcnknfSxldmVudFRleHRDb2xvcjp7dHlwZTpbU3RyaW5nLEZ1bmN0aW9uXSxkZWZhdWx0Oid3aGl0ZSd9LGV2ZW50TmFtZTp7dHlwZTpbU3RyaW5nLEZ1bmN0aW9uXSxkZWZhdWx0OiduYW1lJ30sZXZlbnRPdmVybGFwVGhyZXNob2xkOnt0eXBlOk51bWJlcixkZWZhdWx0OjYwfSxldmVudE1vcmU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGV2ZW50TW9yZVRleHQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyR2dWV0aWZ5LmNhbGVuZGFyLm1vcmVFdmVudHMnfSxldmVudFJpcHBsZTp7dHlwZTpbQm9vbGVhbixPYmplY3RdLGRlZmF1bHQ6bnVsbH0sZXZlbnRNYXJnaW5Cb3R0b206e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MX19fTtmdW5jdGlvbiB2YWxpZGF0ZU51bWJlcihpbnB1dCl7cmV0dXJuIGlzRmluaXRlKHBhcnNlSW50KGlucHV0KSk7fS8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci91dGlsL3RpbWVzdGFtcC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvdXRpbC90aW1lc3RhbXAudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogUEFSU0VfUkVHRVgsIFBBUlNFX1RJTUUsIERBWVNfSU5fTU9OVEgsIERBWVNfSU5fTU9OVEhfTEVBUCwgREFZU19JTl9NT05USF9NSU4sIERBWVNfSU5fTU9OVEhfTUFYLCBNT05USF9NQVgsIE1PTlRIX01JTiwgREFZX01JTiwgREFZU19JTl9XRUVLLCBNSU5VVEVTX0lOX0hPVVIsIEhPVVJTX0lOX0RBWSwgRklSU1RfSE9VUiwgZ2V0U3RhcnRPZldlZWssIGdldEVuZE9mV2VlaywgZ2V0U3RhcnRPZk1vbnRoLCBnZXRFbmRPZk1vbnRoLCBwYXJzZVRpbWUsIHZhbGlkYXRlVGltZXN0YW1wLCBwYXJzZVRpbWVzdGFtcCwgcGFyc2VEYXRlLCBnZXREYXlJZGVudGlmaWVyLCBnZXRUaW1lSWRlbnRpZmllciwgZ2V0VGltZXN0YW1wSWRlbnRpZmllciwgdXBkYXRlUmVsYXRpdmUsIHVwZGF0ZU1pbnV0ZXMsIHVwZGF0ZVdlZWtkYXksIHVwZGF0ZUZvcm1hdHRlZCwgZ2V0V2Vla2RheSwgaXNMZWFwWWVhciwgZGF5c0luTW9udGgsIGNvcHlUaW1lc3RhbXAsIHBhZE51bWJlciwgZ2V0RGF0ZSwgZ2V0VGltZSwgbmV4dE1pbnV0ZXMsIG5leHREYXksIHByZXZEYXksIHJlbGF0aXZlRGF5cywgZmluZFdlZWtkYXksIGdldFdlZWtkYXlTa2lwcywgY3JlYXRlRGF5TGlzdCwgY3JlYXRlSW50ZXJ2YWxMaXN0LCBjcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXIgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNhbGVuZGFyVXRpbFRpbWVzdGFtcFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlBBUlNFX1JFR0VYIixmdW5jdGlvbigpe3JldHVybiBQQVJTRV9SRUdFWDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiUEFSU0VfVElNRSIsZnVuY3Rpb24oKXtyZXR1cm4gUEFSU0VfVElNRTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiREFZU19JTl9NT05USCIsZnVuY3Rpb24oKXtyZXR1cm4gREFZU19JTl9NT05USDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiREFZU19JTl9NT05USF9MRUFQIixmdW5jdGlvbigpe3JldHVybiBEQVlTX0lOX01PTlRIX0xFQVA7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIkRBWVNfSU5fTU9OVEhfTUlOIixmdW5jdGlvbigpe3JldHVybiBEQVlTX0lOX01PTlRIX01JTjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiREFZU19JTl9NT05USF9NQVgiLGZ1bmN0aW9uKCl7cmV0dXJuIERBWVNfSU5fTU9OVEhfTUFYO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJNT05USF9NQVgiLGZ1bmN0aW9uKCl7cmV0dXJuIE1PTlRIX01BWDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiTU9OVEhfTUlOIixmdW5jdGlvbigpe3JldHVybiBNT05USF9NSU47fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIkRBWV9NSU4iLGZ1bmN0aW9uKCl7cmV0dXJuIERBWV9NSU47fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIkRBWVNfSU5fV0VFSyIsZnVuY3Rpb24oKXtyZXR1cm4gREFZU19JTl9XRUVLO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJNSU5VVEVTX0lOX0hPVVIiLGZ1bmN0aW9uKCl7cmV0dXJuIE1JTlVURVNfSU5fSE9VUjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiSE9VUlNfSU5fREFZIixmdW5jdGlvbigpe3JldHVybiBIT1VSU19JTl9EQVk7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIkZJUlNUX0hPVVIiLGZ1bmN0aW9uKCl7cmV0dXJuIEZJUlNUX0hPVVI7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdldFN0YXJ0T2ZXZWVrIixmdW5jdGlvbigpe3JldHVybiBnZXRTdGFydE9mV2Vlazt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZ2V0RW5kT2ZXZWVrIixmdW5jdGlvbigpe3JldHVybiBnZXRFbmRPZldlZWs7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdldFN0YXJ0T2ZNb250aCIsZnVuY3Rpb24oKXtyZXR1cm4gZ2V0U3RhcnRPZk1vbnRoO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJnZXRFbmRPZk1vbnRoIixmdW5jdGlvbigpe3JldHVybiBnZXRFbmRPZk1vbnRoO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJwYXJzZVRpbWUiLGZ1bmN0aW9uKCl7cmV0dXJuIHBhcnNlVGltZTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywidmFsaWRhdGVUaW1lc3RhbXAiLGZ1bmN0aW9uKCl7cmV0dXJuIHZhbGlkYXRlVGltZXN0YW1wO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJwYXJzZVRpbWVzdGFtcCIsZnVuY3Rpb24oKXtyZXR1cm4gcGFyc2VUaW1lc3RhbXA7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sInBhcnNlRGF0ZSIsZnVuY3Rpb24oKXtyZXR1cm4gcGFyc2VEYXRlO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJnZXREYXlJZGVudGlmaWVyIixmdW5jdGlvbigpe3JldHVybiBnZXREYXlJZGVudGlmaWVyO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJnZXRUaW1lSWRlbnRpZmllciIsZnVuY3Rpb24oKXtyZXR1cm4gZ2V0VGltZUlkZW50aWZpZXI7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdldFRpbWVzdGFtcElkZW50aWZpZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIGdldFRpbWVzdGFtcElkZW50aWZpZXI7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sInVwZGF0ZVJlbGF0aXZlIixmdW5jdGlvbigpe3JldHVybiB1cGRhdGVSZWxhdGl2ZTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywidXBkYXRlTWludXRlcyIsZnVuY3Rpb24oKXtyZXR1cm4gdXBkYXRlTWludXRlczt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywidXBkYXRlV2Vla2RheSIsZnVuY3Rpb24oKXtyZXR1cm4gdXBkYXRlV2Vla2RheTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywidXBkYXRlRm9ybWF0dGVkIixmdW5jdGlvbigpe3JldHVybiB1cGRhdGVGb3JtYXR0ZWQ7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdldFdlZWtkYXkiLGZ1bmN0aW9uKCl7cmV0dXJuIGdldFdlZWtkYXk7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImlzTGVhcFllYXIiLGZ1bmN0aW9uKCl7cmV0dXJuIGlzTGVhcFllYXI7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImRheXNJbk1vbnRoIixmdW5jdGlvbigpe3JldHVybiBkYXlzSW5Nb250aDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiY29weVRpbWVzdGFtcCIsZnVuY3Rpb24oKXtyZXR1cm4gY29weVRpbWVzdGFtcDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywicGFkTnVtYmVyIixmdW5jdGlvbigpe3JldHVybiBwYWROdW1iZXI7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdldERhdGUiLGZ1bmN0aW9uKCl7cmV0dXJuIGdldERhdGU7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdldFRpbWUiLGZ1bmN0aW9uKCl7cmV0dXJuIGdldFRpbWU7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIm5leHRNaW51dGVzIixmdW5jdGlvbigpe3JldHVybiBuZXh0TWludXRlczt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywibmV4dERheSIsZnVuY3Rpb24oKXtyZXR1cm4gbmV4dERheTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywicHJldkRheSIsZnVuY3Rpb24oKXtyZXR1cm4gcHJldkRheTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywicmVsYXRpdmVEYXlzIixmdW5jdGlvbigpe3JldHVybiByZWxhdGl2ZURheXM7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImZpbmRXZWVrZGF5IixmdW5jdGlvbigpe3JldHVybiBmaW5kV2Vla2RheTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZ2V0V2Vla2RheVNraXBzIixmdW5jdGlvbigpe3JldHVybiBnZXRXZWVrZGF5U2tpcHM7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImNyZWF0ZURheUxpc3QiLGZ1bmN0aW9uKCl7cmV0dXJuIGNyZWF0ZURheUxpc3Q7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImNyZWF0ZUludGVydmFsTGlzdCIsZnVuY3Rpb24oKXtyZXR1cm4gY3JlYXRlSW50ZXJ2YWxMaXN0O30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJjcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIGNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlcjt9KTtmdW5jdGlvbiBfdHlwZW9mKG9iail7aWYodHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJl90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcik9PT0ic3ltYm9sIil7X3R5cGVvZj1mdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIF90eXBlb2YyKG9iaik7fTt9ZWxzZXtfdHlwZW9mPWZ1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gb2JqJiZ0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb2JqLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZvYmohPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOl90eXBlb2YyKG9iaik7fTt9cmV0dXJuIF90eXBlb2Yob2JqKTt9dmFyIFBBUlNFX1JFR0VYPS9eKFxkezR9KS0oXGR7MSwyfSkoLShcZHsxLDJ9KSk/KFteXGRdKyhcZHsxLDJ9KSk/KDooXGR7MSwyfSkpPyg6KFxkezEsMn0pKT8kLzt2YXIgUEFSU0VfVElNRT0vKFxkXGQ/KSg6KFxkXGQ/KXwpKDooXGRcZD8pfCkvO3ZhciBEQVlTX0lOX01PTlRIPVswLDMxLDI4LDMxLDMwLDMxLDMwLDMxLDMxLDMwLDMxLDMwLDMxXTt2YXIgREFZU19JTl9NT05USF9MRUFQPVswLDMxLDI5LDMxLDMwLDMxLDMwLDMxLDMxLDMwLDMxLDMwLDMxXTt2YXIgREFZU19JTl9NT05USF9NSU49Mjg7dmFyIERBWVNfSU5fTU9OVEhfTUFYPTMxO3ZhciBNT05USF9NQVg9MTI7dmFyIE1PTlRIX01JTj0xO3ZhciBEQVlfTUlOPTE7dmFyIERBWVNfSU5fV0VFSz03O3ZhciBNSU5VVEVTX0lOX0hPVVI9NjA7dmFyIEhPVVJTX0lOX0RBWT0yNDt2YXIgRklSU1RfSE9VUj0wO2Z1bmN0aW9uIGdldFN0YXJ0T2ZXZWVrKHRpbWVzdGFtcCx3ZWVrZGF5cyx0b2RheSl7dmFyIHN0YXJ0PWNvcHlUaW1lc3RhbXAodGltZXN0YW1wKTtmaW5kV2Vla2RheShzdGFydCx3ZWVrZGF5c1swXSxwcmV2RGF5KTt1cGRhdGVGb3JtYXR0ZWQoc3RhcnQpO2lmKHRvZGF5KXt1cGRhdGVSZWxhdGl2ZShzdGFydCx0b2RheSxzdGFydC5oYXNUaW1lKTt9cmV0dXJuIHN0YXJ0O31mdW5jdGlvbiBnZXRFbmRPZldlZWsodGltZXN0YW1wLHdlZWtkYXlzLHRvZGF5KXt2YXIgZW5kPWNvcHlUaW1lc3RhbXAodGltZXN0YW1wKTtmaW5kV2Vla2RheShlbmQsd2Vla2RheXNbd2Vla2RheXMubGVuZ3RoLTFdKTt1cGRhdGVGb3JtYXR0ZWQoZW5kKTtpZih0b2RheSl7dXBkYXRlUmVsYXRpdmUoZW5kLHRvZGF5LGVuZC5oYXNUaW1lKTt9cmV0dXJuIGVuZDt9ZnVuY3Rpb24gZ2V0U3RhcnRPZk1vbnRoKHRpbWVzdGFtcCl7dmFyIHN0YXJ0PWNvcHlUaW1lc3RhbXAodGltZXN0YW1wKTtzdGFydC5kYXk9REFZX01JTjt1cGRhdGVXZWVrZGF5KHN0YXJ0KTt1cGRhdGVGb3JtYXR0ZWQoc3RhcnQpO3JldHVybiBzdGFydDt9ZnVuY3Rpb24gZ2V0RW5kT2ZNb250aCh0aW1lc3RhbXApe3ZhciBlbmQ9Y29weVRpbWVzdGFtcCh0aW1lc3RhbXApO2VuZC5kYXk9ZGF5c0luTW9udGgoZW5kLnllYXIsZW5kLm1vbnRoKTt1cGRhdGVXZWVrZGF5KGVuZCk7dXBkYXRlRm9ybWF0dGVkKGVuZCk7cmV0dXJuIGVuZDt9ZnVuY3Rpb24gcGFyc2VUaW1lKGlucHV0KXtpZih0eXBlb2YgaW5wdXQ9PT0nbnVtYmVyJyl7Ly8gd2hlbiBhIG51bWJlciBpcyBnaXZlbiwgaXQncyBtaW51dGVzIHNpbmNlIDEyOjAwYW0KcmV0dXJuIGlucHV0O31lbHNlIGlmKHR5cGVvZiBpbnB1dD09PSdzdHJpbmcnKXsvLyB3aGVuIGEgc3RyaW5nIGlzIGdpdmVuLCBpdCdzIGEgaGg6bW06c3MgZm9ybWF0IHdoZXJlIHNlY29uZHMgYXJlIG9wdGlvbmFsCnZhciBwYXJ0cz1QQVJTRV9USU1FLmV4ZWMoaW5wdXQpO2lmKCFwYXJ0cyl7cmV0dXJuIGZhbHNlO31yZXR1cm4gcGFyc2VJbnQocGFydHNbMV0pKjYwK3BhcnNlSW50KHBhcnRzWzNdfHwwKTt9ZWxzZSBpZihfdHlwZW9mKGlucHV0KT09PSdvYmplY3QnKXsvLyB3aGVuIGFuIG9iamVjdCBpcyBnaXZlbiwgaXQgbXVzdCBoYXZlIGhvdXIgYW5kIG1pbnV0ZQppZih0eXBlb2YgaW5wdXQuaG91ciE9PSdudW1iZXInfHx0eXBlb2YgaW5wdXQubWludXRlIT09J251bWJlcicpe3JldHVybiBmYWxzZTt9cmV0dXJuIGlucHV0LmhvdXIqNjAraW5wdXQubWludXRlO31lbHNley8vIHVuc3VwcG9ydGVkIHR5cGUKcmV0dXJuIGZhbHNlO319ZnVuY3Rpb24gdmFsaWRhdGVUaW1lc3RhbXAoaW5wdXQpe3JldHVybiEhUEFSU0VfUkVHRVguZXhlYyhpbnB1dCk7fWZ1bmN0aW9uIHBhcnNlVGltZXN0YW1wKGlucHV0LG5vdyl7Ly8gWVlZWS1NTS1ERCBoaDptbTpzcwp2YXIgcGFydHM9UEFSU0VfUkVHRVguZXhlYyhpbnB1dCk7aWYoIXBhcnRzKXJldHVybiBudWxsO3ZhciB0aW1lc3RhbXA9e2RhdGU6aW5wdXQsdGltZTonJyx5ZWFyOnBhcnNlSW50KHBhcnRzWzFdKSxtb250aDpwYXJzZUludChwYXJ0c1syXSksZGF5OnBhcnNlSW50KHBhcnRzWzRdKXx8MSxob3VyOnBhcnNlSW50KHBhcnRzWzZdKXx8MCxtaW51dGU6cGFyc2VJbnQocGFydHNbOF0pfHwwLHdlZWtkYXk6MCxoYXNEYXk6ISFwYXJ0c1s0XSxoYXNUaW1lOiEhKHBhcnRzWzZdJiZwYXJ0c1s4XSkscGFzdDpmYWxzZSxwcmVzZW50OmZhbHNlLGZ1dHVyZTpmYWxzZX07dXBkYXRlV2Vla2RheSh0aW1lc3RhbXApO3VwZGF0ZUZvcm1hdHRlZCh0aW1lc3RhbXApO2lmKG5vdyl7dXBkYXRlUmVsYXRpdmUodGltZXN0YW1wLG5vdyx0aW1lc3RhbXAuaGFzVGltZSk7fXJldHVybiB0aW1lc3RhbXA7fWZ1bmN0aW9uIHBhcnNlRGF0ZShkYXRlKXtyZXR1cm4gdXBkYXRlRm9ybWF0dGVkKHtkYXRlOicnLHRpbWU6JycseWVhcjpkYXRlLmdldEZ1bGxZZWFyKCksbW9udGg6ZGF0ZS5nZXRNb250aCgpKzEsZGF5OmRhdGUuZ2V0RGF0ZSgpLHdlZWtkYXk6ZGF0ZS5nZXREYXkoKSxob3VyOmRhdGUuZ2V0SG91cnMoKSxtaW51dGU6ZGF0ZS5nZXRNaW51dGVzKCksaGFzRGF5OnRydWUsaGFzVGltZTp0cnVlLHBhc3Q6ZmFsc2UscHJlc2VudDp0cnVlLGZ1dHVyZTpmYWxzZX0pO31mdW5jdGlvbiBnZXREYXlJZGVudGlmaWVyKHRpbWVzdGFtcCl7cmV0dXJuIHRpbWVzdGFtcC55ZWFyKjEwMDAwK3RpbWVzdGFtcC5tb250aCoxMDArdGltZXN0YW1wLmRheTt9ZnVuY3Rpb24gZ2V0VGltZUlkZW50aWZpZXIodGltZXN0YW1wKXtyZXR1cm4gdGltZXN0YW1wLmhvdXIqMTAwK3RpbWVzdGFtcC5taW51dGU7fWZ1bmN0aW9uIGdldFRpbWVzdGFtcElkZW50aWZpZXIodGltZXN0YW1wKXtyZXR1cm4gZ2V0RGF5SWRlbnRpZmllcih0aW1lc3RhbXApKjEwMDAwK2dldFRpbWVJZGVudGlmaWVyKHRpbWVzdGFtcCk7fWZ1bmN0aW9uIHVwZGF0ZVJlbGF0aXZlKHRpbWVzdGFtcCxub3csdGltZSl7aWYodGltZT09PXZvaWQgMCl7dGltZT1mYWxzZTt9dmFyIGE9Z2V0RGF5SWRlbnRpZmllcihub3cpO3ZhciBiPWdldERheUlkZW50aWZpZXIodGltZXN0YW1wKTt2YXIgcHJlc2VudD1hPT09YjtpZih0aW1lc3RhbXAuaGFzVGltZSYmdGltZSYmcHJlc2VudCl7YT1nZXRUaW1lSWRlbnRpZmllcihub3cpO2I9Z2V0VGltZUlkZW50aWZpZXIodGltZXN0YW1wKTtwcmVzZW50PWE9PT1iO310aW1lc3RhbXAucGFzdD1iPGE7dGltZXN0YW1wLnByZXNlbnQ9cHJlc2VudDt0aW1lc3RhbXAuZnV0dXJlPWI+YTtyZXR1cm4gdGltZXN0YW1wO31mdW5jdGlvbiB1cGRhdGVNaW51dGVzKHRpbWVzdGFtcCxtaW51dGVzLG5vdyl7dGltZXN0YW1wLmhhc1RpbWU9dHJ1ZTt0aW1lc3RhbXAuaG91cj1NYXRoLmZsb29yKG1pbnV0ZXMvTUlOVVRFU19JTl9IT1VSKTt0aW1lc3RhbXAubWludXRlPW1pbnV0ZXMlTUlOVVRFU19JTl9IT1VSO3RpbWVzdGFtcC50aW1lPWdldFRpbWUodGltZXN0YW1wKTtpZihub3cpe3VwZGF0ZVJlbGF0aXZlKHRpbWVzdGFtcCxub3csdHJ1ZSk7fXJldHVybiB0aW1lc3RhbXA7fWZ1bmN0aW9uIHVwZGF0ZVdlZWtkYXkodGltZXN0YW1wKXt0aW1lc3RhbXAud2Vla2RheT1nZXRXZWVrZGF5KHRpbWVzdGFtcCk7cmV0dXJuIHRpbWVzdGFtcDt9ZnVuY3Rpb24gdXBkYXRlRm9ybWF0dGVkKHRpbWVzdGFtcCl7dGltZXN0YW1wLnRpbWU9Z2V0VGltZSh0aW1lc3RhbXApO3RpbWVzdGFtcC5kYXRlPWdldERhdGUodGltZXN0YW1wKTtyZXR1cm4gdGltZXN0YW1wO31mdW5jdGlvbiBnZXRXZWVrZGF5KHRpbWVzdGFtcCl7aWYodGltZXN0YW1wLmhhc0RheSl7dmFyIF89TWF0aC5mbG9vcjt2YXIgaz10aW1lc3RhbXAuZGF5O3ZhciBtPSh0aW1lc3RhbXAubW9udGgrOSklTU9OVEhfTUFYKzE7dmFyIEM9Xyh0aW1lc3RhbXAueWVhci8xMDApO3ZhciBZPXRpbWVzdGFtcC55ZWFyJTEwMC0odGltZXN0YW1wLm1vbnRoPD0yPzE6MCk7cmV0dXJuKChrK18oMi42Km0tMC4yKS0yKkMrWStfKFkvNCkrXyhDLzQpKSU3KzcpJTc7fXJldHVybiB0aW1lc3RhbXAud2Vla2RheTt9ZnVuY3Rpb24gaXNMZWFwWWVhcih5ZWFyKXtyZXR1cm4geWVhciU0PT09MCYmeWVhciUxMDAhPT0wfHx5ZWFyJTQwMD09PTA7fWZ1bmN0aW9uIGRheXNJbk1vbnRoKHllYXIsbW9udGgpe3JldHVybiBpc0xlYXBZZWFyKHllYXIpP0RBWVNfSU5fTU9OVEhfTEVBUFttb250aF06REFZU19JTl9NT05USFttb250aF07fWZ1bmN0aW9uIGNvcHlUaW1lc3RhbXAodGltZXN0YW1wKXt2YXIgZGF0ZT10aW1lc3RhbXAuZGF0ZSx0aW1lPXRpbWVzdGFtcC50aW1lLHllYXI9dGltZXN0YW1wLnllYXIsbW9udGg9dGltZXN0YW1wLm1vbnRoLGRheT10aW1lc3RhbXAuZGF5LHdlZWtkYXk9dGltZXN0YW1wLndlZWtkYXksaG91cj10aW1lc3RhbXAuaG91cixtaW51dGU9dGltZXN0YW1wLm1pbnV0ZSxoYXNEYXk9dGltZXN0YW1wLmhhc0RheSxoYXNUaW1lPXRpbWVzdGFtcC5oYXNUaW1lLHBhc3Q9dGltZXN0YW1wLnBhc3QscHJlc2VudD10aW1lc3RhbXAucHJlc2VudCxmdXR1cmU9dGltZXN0YW1wLmZ1dHVyZTtyZXR1cm57ZGF0ZTpkYXRlLHRpbWU6dGltZSx5ZWFyOnllYXIsbW9udGg6bW9udGgsZGF5OmRheSx3ZWVrZGF5OndlZWtkYXksaG91cjpob3VyLG1pbnV0ZTptaW51dGUsaGFzRGF5Omhhc0RheSxoYXNUaW1lOmhhc1RpbWUscGFzdDpwYXN0LHByZXNlbnQ6cHJlc2VudCxmdXR1cmU6ZnV0dXJlfTt9ZnVuY3Rpb24gcGFkTnVtYmVyKHgsbGVuZ3RoKXt2YXIgcGFkZGVkPVN0cmluZyh4KTt3aGlsZShwYWRkZWQubGVuZ3RoPGxlbmd0aCl7cGFkZGVkPScwJytwYWRkZWQ7fXJldHVybiBwYWRkZWQ7fWZ1bmN0aW9uIGdldERhdGUodGltZXN0YW1wKXt2YXIgc3RyPXBhZE51bWJlcih0aW1lc3RhbXAueWVhciw0KSsiLSIrcGFkTnVtYmVyKHRpbWVzdGFtcC5tb250aCwyKTtpZih0aW1lc3RhbXAuaGFzRGF5KXN0cis9Ii0iK3BhZE51bWJlcih0aW1lc3RhbXAuZGF5LDIpO3JldHVybiBzdHI7fWZ1bmN0aW9uIGdldFRpbWUodGltZXN0YW1wKXtpZighdGltZXN0YW1wLmhhc1RpbWUpe3JldHVybicnO31yZXR1cm4gcGFkTnVtYmVyKHRpbWVzdGFtcC5ob3VyLDIpKyI6IitwYWROdW1iZXIodGltZXN0YW1wLm1pbnV0ZSwyKTt9ZnVuY3Rpb24gbmV4dE1pbnV0ZXModGltZXN0YW1wLG1pbnV0ZXMpe3RpbWVzdGFtcC5taW51dGUrPW1pbnV0ZXM7d2hpbGUodGltZXN0YW1wLm1pbnV0ZT5NSU5VVEVTX0lOX0hPVVIpe3RpbWVzdGFtcC5taW51dGUtPU1JTlVURVNfSU5fSE9VUjt0aW1lc3RhbXAuaG91cisrO2lmKHRpbWVzdGFtcC5ob3VyPj1IT1VSU19JTl9EQVkpe25leHREYXkodGltZXN0YW1wKTt0aW1lc3RhbXAuaG91cj1GSVJTVF9IT1VSO319cmV0dXJuIHRpbWVzdGFtcDt9ZnVuY3Rpb24gbmV4dERheSh0aW1lc3RhbXApe3RpbWVzdGFtcC5kYXkrKzt0aW1lc3RhbXAud2Vla2RheT0odGltZXN0YW1wLndlZWtkYXkrMSklREFZU19JTl9XRUVLO2lmKHRpbWVzdGFtcC5kYXk+REFZU19JTl9NT05USF9NSU4mJnRpbWVzdGFtcC5kYXk+ZGF5c0luTW9udGgodGltZXN0YW1wLnllYXIsdGltZXN0YW1wLm1vbnRoKSl7dGltZXN0YW1wLmRheT1EQVlfTUlOO3RpbWVzdGFtcC5tb250aCsrO2lmKHRpbWVzdGFtcC5tb250aD5NT05USF9NQVgpe3RpbWVzdGFtcC5tb250aD1NT05USF9NSU47dGltZXN0YW1wLnllYXIrKzt9fXJldHVybiB0aW1lc3RhbXA7fWZ1bmN0aW9uIHByZXZEYXkodGltZXN0YW1wKXt0aW1lc3RhbXAuZGF5LS07dGltZXN0YW1wLndlZWtkYXk9KHRpbWVzdGFtcC53ZWVrZGF5KzYpJURBWVNfSU5fV0VFSztpZih0aW1lc3RhbXAuZGF5PERBWV9NSU4pe3RpbWVzdGFtcC5tb250aC0tO2lmKHRpbWVzdGFtcC5tb250aDxNT05USF9NSU4pe3RpbWVzdGFtcC55ZWFyLS07dGltZXN0YW1wLm1vbnRoPU1PTlRIX01BWDt9dGltZXN0YW1wLmRheT1kYXlzSW5Nb250aCh0aW1lc3RhbXAueWVhcix0aW1lc3RhbXAubW9udGgpO31yZXR1cm4gdGltZXN0YW1wO31mdW5jdGlvbiByZWxhdGl2ZURheXModGltZXN0YW1wLG1vdmVyLGRheXMpe2lmKG1vdmVyPT09dm9pZCAwKXttb3Zlcj1uZXh0RGF5O31pZihkYXlzPT09dm9pZCAwKXtkYXlzPTE7fXdoaWxlKC0tZGF5cz49MCl7bW92ZXIodGltZXN0YW1wKTt9cmV0dXJuIHRpbWVzdGFtcDt9ZnVuY3Rpb24gZmluZFdlZWtkYXkodGltZXN0YW1wLHdlZWtkYXksbW92ZXIsbWF4RGF5cyl7aWYobW92ZXI9PT12b2lkIDApe21vdmVyPW5leHREYXk7fWlmKG1heERheXM9PT12b2lkIDApe21heERheXM9Njt9d2hpbGUodGltZXN0YW1wLndlZWtkYXkhPT13ZWVrZGF5JiYtLW1heERheXM+PTApe21vdmVyKHRpbWVzdGFtcCk7fXJldHVybiB0aW1lc3RhbXA7fWZ1bmN0aW9uIGdldFdlZWtkYXlTa2lwcyh3ZWVrZGF5cyl7dmFyIHNraXBzPVsxLDEsMSwxLDEsMSwxXTt2YXIgZmlsbGVkPVswLDAsMCwwLDAsMCwwXTtmb3IodmFyIGk9MDtpPHdlZWtkYXlzLmxlbmd0aDtpKyspe2ZpbGxlZFt3ZWVrZGF5c1tpXV09MTt9Zm9yKHZhciBrPTA7azxEQVlTX0lOX1dFRUs7aysrKXt2YXIgc2tpcD0xO2Zvcih2YXIgaj0xO2o8REFZU19JTl9XRUVLO2orKyl7dmFyIG5leHQ9KGsraiklREFZU19JTl9XRUVLO2lmKGZpbGxlZFtuZXh0XSl7YnJlYWs7fXNraXArKzt9c2tpcHNba109ZmlsbGVkW2tdKnNraXA7fXJldHVybiBza2lwczt9ZnVuY3Rpb24gY3JlYXRlRGF5TGlzdChzdGFydCxlbmQsbm93LHdlZWtkYXlTa2lwcyxtYXgsbWluKXtpZihtYXg9PT12b2lkIDApe21heD00Mjt9aWYobWluPT09dm9pZCAwKXttaW49MDt9dmFyIHN0b3A9Z2V0RGF5SWRlbnRpZmllcihlbmQpO3ZhciBkYXlzPVtdO3ZhciBjdXJyZW50PWNvcHlUaW1lc3RhbXAoc3RhcnQpO3ZhciBjdXJyZW50SWRlbnRpZmllcj0wO3ZhciBzdG9wcGVkPWN1cnJlbnRJZGVudGlmaWVyPT09c3RvcDtpZihzdG9wPGdldERheUlkZW50aWZpZXIoc3RhcnQpKXt0aHJvdyBuZXcgRXJyb3IoJ0VuZCBkYXRlIGlzIGVhcmxpZXIgdGhhbiBzdGFydCBkYXRlLicpO313aGlsZSgoIXN0b3BwZWR8fGRheXMubGVuZ3RoPG1pbikmJmRheXMubGVuZ3RoPG1heCl7Y3VycmVudElkZW50aWZpZXI9Z2V0RGF5SWRlbnRpZmllcihjdXJyZW50KTtzdG9wcGVkPXN0b3BwZWR8fGN1cnJlbnRJZGVudGlmaWVyPT09c3RvcDtpZih3ZWVrZGF5U2tpcHNbY3VycmVudC53ZWVrZGF5XT09PTApe2N1cnJlbnQ9bmV4dERheShjdXJyZW50KTtjb250aW51ZTt9dmFyIGRheT1jb3B5VGltZXN0YW1wKGN1cnJlbnQpO3VwZGF0ZUZvcm1hdHRlZChkYXkpO3VwZGF0ZVJlbGF0aXZlKGRheSxub3cpO2RheXMucHVzaChkYXkpO2N1cnJlbnQ9cmVsYXRpdmVEYXlzKGN1cnJlbnQsbmV4dERheSx3ZWVrZGF5U2tpcHNbY3VycmVudC53ZWVrZGF5XSk7fWlmKCFkYXlzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoJ05vIGRhdGVzIGZvdW5kIHVzaW5nIHNwZWNpZmllZCBzdGFydCBkYXRlLCBlbmQgZGF0ZSwgYW5kIHdlZWtkYXlzLicpO3JldHVybiBkYXlzO31mdW5jdGlvbiBjcmVhdGVJbnRlcnZhbExpc3QodGltZXN0YW1wLGZpcnN0LG1pbnV0ZXMsY291bnQsbm93KXt2YXIgaW50ZXJ2YWxzPVtdO2Zvcih2YXIgaT0wO2k8Y291bnQ7aSsrKXt2YXIgbWlucz0oZmlyc3QraSkqbWludXRlczt2YXIgaW50PWNvcHlUaW1lc3RhbXAodGltZXN0YW1wKTtpbnRlcnZhbHMucHVzaCh1cGRhdGVNaW51dGVzKGludCxtaW5zLG5vdykpO31yZXR1cm4gaW50ZXJ2YWxzO31mdW5jdGlvbiBjcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXIobG9jYWxlLGdldE9wdGlvbnMpe3ZhciBlbXB0eUZvcm1hdHRlcj1mdW5jdGlvbiBlbXB0eUZvcm1hdHRlcihfdCxfcyl7cmV0dXJuJyc7fTtpZih0eXBlb2YgSW50bD09PSd1bmRlZmluZWQnfHx0eXBlb2YgSW50bC5EYXRlVGltZUZvcm1hdD09PSd1bmRlZmluZWQnKXtyZXR1cm4gZW1wdHlGb3JtYXR0ZXI7fXJldHVybiBmdW5jdGlvbih0aW1lc3RhbXAsc2hvcnQpe3RyeXt2YXIgaW50bEZvcm1hdHRlcj1uZXcgSW50bC5EYXRlVGltZUZvcm1hdChsb2NhbGV8fHVuZGVmaW5lZCxnZXRPcHRpb25zKHRpbWVzdGFtcCxzaG9ydCkpO3ZhciB0aW1lPXBhZE51bWJlcih0aW1lc3RhbXAuaG91ciwyKSsiOiIrcGFkTnVtYmVyKHRpbWVzdGFtcC5taW51dGUsMik7dmFyIGRhdGU9dGltZXN0YW1wLmRhdGU7cmV0dXJuIGludGxGb3JtYXR0ZXIuZm9ybWF0KG5ldyBEYXRlKGRhdGUrIlQiK3RpbWUrIjowMCswMDowMCIpKTt9Y2F0Y2goZSl7cmV0dXJuJyc7fX07fS8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDYXJkL1ZDYXJkLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDYXJkL1ZDYXJkLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDYXJkVkNhcmRTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FyZC9WQ2FyZC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDYXJkL1ZDYXJkLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ2FyZFZDYXJkVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNhcmRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNhcmQuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYXJkL1ZDYXJkLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNhcmRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkNhcmRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVlNoZWV0ICovIi4vc3JjL2NvbXBvbmVudHMvVlNoZWV0L2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19sb2FkYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9sb2FkYWJsZSAqLyIuL3NyYy9taXhpbnMvbG9hZGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3JvdXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3JvdXRhYmxlICovIi4vc3JjL21peGlucy9yb3V0YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gRXh0ZW5zaW9ucwovLyBNaXhpbnMKLy8gSGVscGVycwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdKShfbWl4aW5zX2xvYWRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxfbWl4aW5zX3JvdXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSxfVlNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOid2LWNhcmQnLHByb3BzOntmbGF0OkJvb2xlYW4saG92ZXI6Qm9vbGVhbixpbWc6U3RyaW5nLGxpbms6Qm9vbGVhbixsb2FkZXJIZWlnaHQ6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6NH0sb3V0bGluZWQ6Qm9vbGVhbixyYWlzZWQ6Qm9vbGVhbixzaGFwZWQ6Qm9vbGVhbn0sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7J3YtY2FyZCc6dHJ1ZX0sX21peGluc19yb3V0YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LWNhcmQtLWZsYXQnOnRoaXMuZmxhdCwndi1jYXJkLS1ob3Zlcic6dGhpcy5ob3Zlciwndi1jYXJkLS1saW5rJzp0aGlzLmlzQ2xpY2thYmxlLCd2LWNhcmQtLWxvYWRpbmcnOnRoaXMubG9hZGluZywndi1jYXJkLS1kaXNhYmxlZCc6dGhpcy5sb2FkaW5nfHx0aGlzLmRpc2FibGVkLCd2LWNhcmQtLW91dGxpbmVkJzp0aGlzLm91dGxpbmVkLCd2LWNhcmQtLXJhaXNlZCc6dGhpcy5yYWlzZWQsJ3YtY2FyZC0tc2hhcGVkJzp0aGlzLnNoYXBlZH0sX1ZTaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykpO30sc3R5bGVzOmZ1bmN0aW9uIHN0eWxlcygpe3ZhciBzdHlsZT1fX2Fzc2lnbih7fSxfVlNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLnN0eWxlcy5jYWxsKHRoaXMpKTtpZih0aGlzLmltZyl7c3R5bGUuYmFja2dyb3VuZD0idXJsKFwiIit0aGlzLmltZysiXCIpIGNlbnRlciBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQiO31yZXR1cm4gc3R5bGU7fX0sbWV0aG9kczp7Z2VuUHJvZ3Jlc3M6ZnVuY3Rpb24gZ2VuUHJvZ3Jlc3MoKXt2YXIgcmVuZGVyPV9taXhpbnNfbG9hZGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5nZW5Qcm9ncmVzcy5jYWxsKHRoaXMpO2lmKCFyZW5kZXIpcmV0dXJuIG51bGw7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWNhcmRfX3Byb2dyZXNzJ30sW3JlbmRlcl0pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIF9hPXRoaXMuZ2VuZXJhdGVSb3V0ZUxpbmsoKSx0YWc9X2EudGFnLGRhdGE9X2EuZGF0YTtkYXRhLnN0eWxlPXRoaXMuc3R5bGVzO2lmKHRoaXMuaXNDbGlja2FibGUpe2RhdGEuYXR0cnM9ZGF0YS5hdHRyc3x8e307ZGF0YS5hdHRycy50YWJpbmRleD0wO31yZXR1cm4gaCh0YWcsdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IodGhpcy5jb2xvcixkYXRhKSxbdGhpcy5nZW5Qcm9ncmVzcygpLHRoaXMuJHNsb3RzLmRlZmF1bHRdKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNhcmQvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ2FyZC9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZDYXJkLCBWQ2FyZEFjdGlvbnMsIFZDYXJkU3VidGl0bGUsIFZDYXJkVGV4dCwgVkNhcmRUaXRsZSwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ2FyZEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNhcmRBY3Rpb25zIixmdW5jdGlvbigpe3JldHVybiBWQ2FyZEFjdGlvbnM7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDYXJkU3VidGl0bGUiLGZ1bmN0aW9uKCl7cmV0dXJuIFZDYXJkU3VidGl0bGU7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDYXJkVGV4dCIsZnVuY3Rpb24oKXtyZXR1cm4gVkNhcmRUZXh0O30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ2FyZFRpdGxlIixmdW5jdGlvbigpe3JldHVybiBWQ2FyZFRpdGxlO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2FyZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNhcmQgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FyZC9WQ2FyZC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDYXJkIixmdW5jdGlvbigpe3JldHVybiBfVkNhcmRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7dmFyIFZDYXJkQWN0aW9ucz1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJjcmVhdGVTaW1wbGVGdW5jdGlvbmFsIl0pKCd2LWNhcmRfX2FjdGlvbnMnKTt2YXIgVkNhcmRTdWJ0aXRsZT1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJjcmVhdGVTaW1wbGVGdW5jdGlvbmFsIl0pKCd2LWNhcmRfX3N1YnRpdGxlJyk7dmFyIFZDYXJkVGV4dD1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJjcmVhdGVTaW1wbGVGdW5jdGlvbmFsIl0pKCd2LWNhcmRfX3RleHQnKTt2YXIgVkNhcmRUaXRsZT1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJjcmVhdGVTaW1wbGVGdW5jdGlvbmFsIl0pKCd2LWNhcmRfX3RpdGxlJyk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT17JF92dWV0aWZ5X3N1YmNvbXBvbmVudHM6e1ZDYXJkOl9WQ2FyZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0sVkNhcmRBY3Rpb25zOlZDYXJkQWN0aW9ucyxWQ2FyZFN1YnRpdGxlOlZDYXJkU3VidGl0bGUsVkNhcmRUZXh0OlZDYXJkVGV4dCxWQ2FyZFRpdGxlOlZDYXJkVGl0bGV9fTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ2Fyb3VzZWwvVkNhcm91c2VsLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNhcm91c2VsL1ZDYXJvdXNlbC5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDYXJvdXNlbFZDYXJvdXNlbFNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDYXJvdXNlbC9WQ2Fyb3VzZWwudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDYXJvdXNlbC9WQ2Fyb3VzZWwudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNhcm91c2VsVkNhcm91c2VsVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNhcm91c2VsX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDYXJvdXNlbC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkNhcm91c2VsL1ZDYXJvdXNlbC5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDYXJvdXNlbF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WQ2Fyb3VzZWxfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVldpbmRvd19WV2luZG93X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVldpbmRvdy9WV2luZG93ICovIi4vc3JjL2NvbXBvbmVudHMvVldpbmRvdy9WV2luZG93LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WQnRuICovIi4vc3JjL2NvbXBvbmVudHMvVkJ0bi9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJY29uICovIi4vc3JjL2NvbXBvbmVudHMvVkljb24vaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlByb2dyZXNzTGluZWFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVlByb2dyZXNzTGluZWFyICovIi4vc3JjL2NvbXBvbmVudHMvVlByb2dyZXNzTGluZWFyL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19idXR0b25fZ3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvYnV0dG9uLWdyb3VwICovIi4vc3JjL21peGlucy9idXR0b24tZ3JvdXAvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gRXh0ZW5zaW9ucwovLyBDb21wb25lbnRzCi8vIE1peGlucwovLyBUT0RPOiBNb3ZlIHRoaXMgaW50byBjb3JlIGNvbXBvbmVudHMgdjIuMAovLyBVdGlsaXRpZXMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVldpbmRvd19WV2luZG93X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5leHRlbmQoe25hbWU6J3YtY2Fyb3VzZWwnLHByb3BzOntjb250aW51b3VzOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxjeWNsZTpCb29sZWFuLGRlbGltaXRlckljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRkZWxpbWl0ZXInfSxoZWlnaHQ6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6NTAwfSxoaWRlRGVsaW1pdGVyczpCb29sZWFuLGhpZGVEZWxpbWl0ZXJCYWNrZ3JvdW5kOkJvb2xlYW4saW50ZXJ2YWw6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6NjAwMCx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbHVlKXtyZXR1cm4gdmFsdWU+MDt9fSxtYW5kYXRvcnk6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LHByb2dyZXNzOkJvb2xlYW4scHJvZ3Jlc3NDb2xvcjpTdHJpbmcsc2hvd0Fycm93czp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sdmVydGljYWxEZWxpbWl0ZXJzOnt0eXBlOlN0cmluZyxkZWZhdWx0OnVuZGVmaW5lZH19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntpbnRlcm5hbEhlaWdodDp0aGlzLmhlaWdodCxzbGlkZVRpbWVvdXQ6dW5kZWZpbmVkfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oe30sX1ZXaW5kb3dfVldpbmRvd19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LWNhcm91c2VsJzp0cnVlLCd2LWNhcm91c2VsLS1oaWRlLWRlbGltaXRlci1iYWNrZ3JvdW5kJzp0aGlzLmhpZGVEZWxpbWl0ZXJCYWNrZ3JvdW5kLCd2LWNhcm91c2VsLS12ZXJ0aWNhbC1kZWxpbWl0ZXJzJzp0aGlzLmlzVmVydGljYWx9KTt9LGlzRGFyazpmdW5jdGlvbiBpc0RhcmsoKXtyZXR1cm4gdGhpcy5kYXJrfHwhdGhpcy5saWdodDt9LGlzVmVydGljYWw6ZnVuY3Rpb24gaXNWZXJ0aWNhbCgpe3JldHVybiB0aGlzLnZlcnRpY2FsRGVsaW1pdGVycyE9bnVsbDt9fSx3YXRjaDp7aW50ZXJuYWxWYWx1ZToncmVzdGFydFRpbWVvdXQnLGludGVydmFsOidyZXN0YXJ0VGltZW91dCcsaGVpZ2h0OmZ1bmN0aW9uIGhlaWdodCh2YWwsb2xkVmFsKXtpZih2YWw9PT1vbGRWYWx8fCF2YWwpcmV0dXJuO3RoaXMuaW50ZXJuYWxIZWlnaHQ9dmFsO30sY3ljbGU6ZnVuY3Rpb24gY3ljbGUodmFsKXtpZih2YWwpe3RoaXMucmVzdGFydFRpbWVvdXQoKTt9ZWxzZXtjbGVhclRpbWVvdXQodGhpcy5zbGlkZVRpbWVvdXQpO3RoaXMuc2xpZGVUaW1lb3V0PXVuZGVmaW5lZDt9fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9pZih0aGlzLiRhdHRycy5oYXNPd25Qcm9wZXJ0eSgnaGlkZS1jb250cm9scycpKXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJicmVha2luZyJdKSgnaGlkZS1jb250cm9scycsJzpzaG93LWFycm93cz0iZmFsc2UiJyx0aGlzKTt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLnN0YXJ0VGltZW91dCgpO30sbWV0aG9kczp7Z2VuQ29udHJvbEljb25zOmZ1bmN0aW9uIGdlbkNvbnRyb2xJY29ucygpe2lmKHRoaXMuaXNWZXJ0aWNhbClyZXR1cm4gbnVsbDtyZXR1cm4gX1ZXaW5kb3dfVldpbmRvd19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlbkNvbnRyb2xJY29ucy5jYWxsKHRoaXMpO30sZ2VuRGVsaW1pdGVyczpmdW5jdGlvbiBnZW5EZWxpbWl0ZXJzKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWNhcm91c2VsX19jb250cm9scycsc3R5bGU6e2xlZnQ6dGhpcy52ZXJ0aWNhbERlbGltaXRlcnM9PT0nbGVmdCcmJnRoaXMuaXNWZXJ0aWNhbD8wOidhdXRvJyxyaWdodDp0aGlzLnZlcnRpY2FsRGVsaW1pdGVycz09PSdyaWdodCc/MDonYXV0byd9fSxbdGhpcy5nZW5JdGVtcygpXSk7fSxnZW5JdGVtczpmdW5jdGlvbiBnZW5JdGVtcygpe3ZhciBfdGhpcz10aGlzO3ZhciBsZW5ndGg9dGhpcy5pdGVtcy5sZW5ndGg7dmFyIGNoaWxkcmVuPVtdO2Zvcih2YXIgaT0wO2k8bGVuZ3RoO2krKyl7dmFyIGNoaWxkPXRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLHtzdGF0aWNDbGFzczondi1jYXJvdXNlbF9fY29udHJvbHNfX2l0ZW0nLGF0dHJzOnsnYXJpYS1sYWJlbCc6dGhpcy4kdnVldGlmeS5sYW5nLnQoJyR2dWV0aWZ5LmNhcm91c2VsLmFyaWFMYWJlbC5kZWxpbWl0ZXInLGkrMSxsZW5ndGgpfSxwcm9wczp7aWNvbjp0cnVlLHNtYWxsOnRydWUsdmFsdWU6dGhpcy5nZXRWYWx1ZSh0aGlzLml0ZW1zW2ldLGkpfX0sW3RoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSx7cHJvcHM6e3NpemU6MTh9fSx0aGlzLmRlbGltaXRlckljb24pXSk7Y2hpbGRyZW4ucHVzaChjaGlsZCk7fXJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9taXhpbnNfYnV0dG9uX2dyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSx7cHJvcHM6e3ZhbHVlOnRoaXMuaW50ZXJuYWxWYWx1ZSxtYW5kYXRvcnk6dGhpcy5tYW5kYXRvcnl9LG9uOntjaGFuZ2U6ZnVuY3Rpb24gY2hhbmdlKHZhbCl7X3RoaXMuaW50ZXJuYWxWYWx1ZT12YWw7fX19LGNoaWxkcmVuKTt9LGdlblByb2dyZXNzOmZ1bmN0aW9uIGdlblByb2dyZXNzKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZQcm9ncmVzc0xpbmVhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0se3N0YXRpY0NsYXNzOid2LWNhcm91c2VsX19wcm9ncmVzcycscHJvcHM6e2NvbG9yOnRoaXMucHJvZ3Jlc3NDb2xvcix2YWx1ZToodGhpcy5pbnRlcm5hbEluZGV4KzEpL3RoaXMuaXRlbXMubGVuZ3RoKjEwMH19KTt9LHJlc3RhcnRUaW1lb3V0OmZ1bmN0aW9uIHJlc3RhcnRUaW1lb3V0KCl7dGhpcy5zbGlkZVRpbWVvdXQmJmNsZWFyVGltZW91dCh0aGlzLnNsaWRlVGltZW91dCk7dGhpcy5zbGlkZVRpbWVvdXQ9dW5kZWZpbmVkO3dpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5zdGFydFRpbWVvdXQpO30sc3RhcnRUaW1lb3V0OmZ1bmN0aW9uIHN0YXJ0VGltZW91dCgpe2lmKCF0aGlzLmN5Y2xlKXJldHVybjt0aGlzLnNsaWRlVGltZW91dD13aW5kb3cuc2V0VGltZW91dCh0aGlzLm5leHQsK3RoaXMuaW50ZXJ2YWw+MD8rdGhpcy5pbnRlcnZhbDo2MDAwKTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciByZW5kZXI9X1ZXaW5kb3dfVldpbmRvd19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5yZW5kZXIuY2FsbCh0aGlzLGgpO3JlbmRlci5kYXRhLnN0eWxlPSJoZWlnaHQ6ICIrT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmhlaWdodCkrIjsiOy8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovaWYoIXRoaXMuaGlkZURlbGltaXRlcnMpe3JlbmRlci5jaGlsZHJlbi5wdXNoKHRoaXMuZ2VuRGVsaW1pdGVycygpKTt9LyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9pZih0aGlzLnByb2dyZXNzfHx0aGlzLnByb2dyZXNzQ29sb3Ipe3JlbmRlci5jaGlsZHJlbi5wdXNoKHRoaXMuZ2VuUHJvZ3Jlc3MoKSk7fXJldHVybiByZW5kZXI7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDYXJvdXNlbC9WQ2Fyb3VzZWxJdGVtLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNhcm91c2VsL1ZDYXJvdXNlbEl0ZW0udHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDYXJvdXNlbFZDYXJvdXNlbEl0ZW1Ucyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WV2luZG93X1ZXaW5kb3dJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVldpbmRvdy9WV2luZG93SXRlbSAqLyIuL3NyYy9jb21wb25lbnRzL1ZXaW5kb3cvVldpbmRvd0l0ZW0udHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkltZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJbWcgKi8iLi9zcmMvY29tcG9uZW50cy9WSW1nL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3JvdXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3JvdXRhYmxlICovIi4vc3JjL21peGlucy9yb3V0YWJsZS9pbmRleC50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gRXh0ZW5zaW9ucwovLyBDb21wb25lbnRzCi8vIFV0aWxpdGllcwovLyBUeXBlcwp2YXIgYmFzZU1peGlucz1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoX1ZXaW5kb3dfVldpbmRvd0l0ZW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLF9taXhpbnNfcm91dGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKTsvKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPWJhc2VNaXhpbnMuZXh0ZW5kKHtuYW1lOid2LWNhcm91c2VsLWl0ZW0nLGluaGVyaXRBdHRyczpmYWxzZSxtZXRob2RzOntnZW5EZWZhdWx0U2xvdDpmdW5jdGlvbiBnZW5EZWZhdWx0U2xvdCgpe3JldHVyblt0aGlzLiRjcmVhdGVFbGVtZW50KF9WSW1nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bIlZJbWciXSx7c3RhdGljQ2xhc3M6J3YtY2Fyb3VzZWxfX2l0ZW0nLHByb3BzOl9fYXNzaWduKHt9LHRoaXMuJGF0dHJzLHtoZWlnaHQ6dGhpcy53aW5kb3dHcm91cC5pbnRlcm5hbEhlaWdodH0pLG9uOnRoaXMuJGxpc3RlbmVyc30sW3RoaXMuJHNsb3RzLmRlZmF1bHQsdGhpcy4kY3JlYXRlRWxlbWVudCgndGVtcGxhdGUnLHtzbG90OidwbGFjZWhvbGRlcid9LHRoaXMuJHNsb3RzLnBsYWNlaG9sZGVyKV0pXTt9LGdlbldpbmRvd0l0ZW06ZnVuY3Rpb24gZ2VuV2luZG93SXRlbSgpe3ZhciBfYT10aGlzLmdlbmVyYXRlUm91dGVMaW5rKCksdGFnPV9hLnRhZyxkYXRhPV9hLmRhdGE7ZGF0YS5zdGF0aWNDbGFzcz0ndi13aW5kb3ctaXRlbSc7ZGF0YS5kaXJlY3RpdmVzLnB1c2goe25hbWU6J3Nob3cnLHZhbHVlOnRoaXMuaXNBY3RpdmV9KTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCh0YWcsZGF0YSx0aGlzLnNob3dMYXp5Q29udGVudCh0aGlzLmdlbkRlZmF1bHRTbG90KCkpKTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDYXJvdXNlbC9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ2Fyb3VzZWwvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVkNhcm91c2VsLCBWQ2Fyb3VzZWxJdGVtLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDYXJvdXNlbEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNhcm91c2VsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ2Fyb3VzZWwgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2Fyb3VzZWwvVkNhcm91c2VsLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNhcm91c2VsIixmdW5jdGlvbigpe3JldHVybiBfVkNhcm91c2VsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNhcm91c2VsSXRlbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNhcm91c2VsSXRlbSAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYXJvdXNlbC9WQ2Fyb3VzZWxJdGVtLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNhcm91c2VsSXRlbSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDYXJvdXNlbEl0ZW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09eyRfdnVldGlmeV9zdWJjb21wb25lbnRzOntWQ2Fyb3VzZWw6X1ZDYXJvdXNlbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0sVkNhcm91c2VsSXRlbTpfVkNhcm91c2VsSXRlbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il19fTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ2hlY2tib3gvVkNoZWNrYm94LnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNoZWNrYm94L1ZDaGVja2JveC5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDaGVja2JveFZDaGVja2JveFNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDaGVja2JveC9WQ2hlY2tib3gudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDaGVja2JveC9WQ2hlY2tib3gudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNoZWNrYm94VkNoZWNrYm94VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNoZWNrYm94X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDaGVja2JveC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkNoZWNrYm94L1ZDaGVja2JveC5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDaGVja2JveF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WQ2hlY2tib3hfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfc3R5bGVzX2NvbXBvbmVudHNfc2VsZWN0aW9uX2NvbnRyb2xzX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9zdHlsZXMvY29tcG9uZW50cy9fc2VsZWN0aW9uLWNvbnRyb2xzLnNhc3MgKi8iLi9zcmMvc3R5bGVzL2NvbXBvbmVudHMvX3NlbGVjdGlvbi1jb250cm9scy5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3N0eWxlc19jb21wb25lbnRzX3NlbGVjdGlvbl9jb250cm9sc19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9zdHlsZXNfY29tcG9uZW50c19zZWxlY3Rpb25fY29udHJvbHNfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJbnB1dCAqLyIuL3NyYy9jb21wb25lbnRzL1ZJbnB1dC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfc2VsZWN0YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9zZWxlY3RhYmxlICovIi4vc3JjL21peGlucy9zZWxlY3RhYmxlL2luZGV4LnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gQ29tcG9uZW50cwovLyBNaXhpbnMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fbWl4aW5zX3NlbGVjdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLmV4dGVuZCh7bmFtZTondi1jaGVja2JveCcscHJvcHM6e2luZGV0ZXJtaW5hdGU6Qm9vbGVhbixpbmRldGVybWluYXRlSWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJGNoZWNrYm94SW5kZXRlcm1pbmF0ZSd9LG9mZkljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRjaGVja2JveE9mZid9LG9uSWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJGNoZWNrYm94T24nfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2lucHV0SW5kZXRlcm1pbmF0ZTp0aGlzLmluZGV0ZXJtaW5hdGV9O30sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7fSxfVklucHV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSx7J3YtaW5wdXQtLXNlbGVjdGlvbi1jb250cm9scyc6dHJ1ZSwndi1pbnB1dC0tY2hlY2tib3gnOnRydWUsJ3YtaW5wdXQtLWluZGV0ZXJtaW5hdGUnOnRoaXMuaW5wdXRJbmRldGVybWluYXRlfSk7fSxjb21wdXRlZEljb246ZnVuY3Rpb24gY29tcHV0ZWRJY29uKCl7aWYodGhpcy5pbnB1dEluZGV0ZXJtaW5hdGUpe3JldHVybiB0aGlzLmluZGV0ZXJtaW5hdGVJY29uO31lbHNlIGlmKHRoaXMuaXNBY3RpdmUpe3JldHVybiB0aGlzLm9uSWNvbjt9ZWxzZXtyZXR1cm4gdGhpcy5vZmZJY29uO319LC8vIERvIG5vdCByZXR1cm4gdW5kZWZpbmVkIGlmIGRpc2FibGVkLAovLyBhY2NvcmRpbmcgdG8gc3BlYywgc2hvdWxkIHN0aWxsIHNob3cKLy8gYSBjb2xvciB3aGVuIGRpc2FibGVkIGFuZCBhY3RpdmUKdmFsaWRhdGlvblN0YXRlOmZ1bmN0aW9uIHZhbGlkYXRpb25TdGF0ZSgpe2lmKHRoaXMuZGlzYWJsZWQmJiF0aGlzLmlucHV0SW5kZXRlcm1pbmF0ZSlyZXR1cm4gdW5kZWZpbmVkO2lmKHRoaXMuaGFzRXJyb3ImJnRoaXMuc2hvdWxkVmFsaWRhdGUpcmV0dXJuJ2Vycm9yJztpZih0aGlzLmhhc1N1Y2Nlc3MpcmV0dXJuJ3N1Y2Nlc3MnO2lmKHRoaXMuaGFzQ29sb3IhPT1udWxsKXJldHVybiB0aGlzLmNvbXB1dGVkQ29sb3I7cmV0dXJuIHVuZGVmaW5lZDt9fSx3YXRjaDp7aW5kZXRlcm1pbmF0ZTpmdW5jdGlvbiBpbmRldGVybWluYXRlKHZhbCl7dmFyIF90aGlzPXRoaXM7Ly8gaHR0cHM6Ly9naXRodWIuY29tL3Z1ZXRpZnlqcy92dWV0aWZ5L2lzc3Vlcy84MjcwCnRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLmlucHV0SW5kZXRlcm1pbmF0ZT12YWw7fSk7fSxpbnB1dEluZGV0ZXJtaW5hdGU6ZnVuY3Rpb24gaW5wdXRJbmRldGVybWluYXRlKHZhbCl7dGhpcy4kZW1pdCgndXBkYXRlOmluZGV0ZXJtaW5hdGUnLHZhbCk7fSxpc0FjdGl2ZTpmdW5jdGlvbiBpc0FjdGl2ZSgpe2lmKCF0aGlzLmluZGV0ZXJtaW5hdGUpcmV0dXJuO3RoaXMuaW5wdXRJbmRldGVybWluYXRlPWZhbHNlO319LG1ldGhvZHM6e2dlbkNoZWNrYm94OmZ1bmN0aW9uIGdlbkNoZWNrYm94KCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWlucHV0LS1zZWxlY3Rpb24tY29udHJvbHNfX2lucHV0J30sW3RoaXMuZ2VuSW5wdXQoJ2NoZWNrYm94JyxfX2Fzc2lnbih7fSx0aGlzLmF0dHJzJCx7J2FyaWEtY2hlY2tlZCc6dGhpcy5pbnB1dEluZGV0ZXJtaW5hdGU/J21peGVkJzp0aGlzLmlzQWN0aXZlLnRvU3RyaW5nKCl9KSksdGhpcy5nZW5SaXBwbGUodGhpcy5zZXRUZXh0Q29sb3IodGhpcy52YWxpZGF0aW9uU3RhdGUpKSx0aGlzLiRjcmVhdGVFbGVtZW50KF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sdGhpcy5zZXRUZXh0Q29sb3IodGhpcy52YWxpZGF0aW9uU3RhdGUse3Byb3BzOntkZW5zZTp0aGlzLmRlbnNlLGRhcms6dGhpcy5kYXJrLGxpZ2h0OnRoaXMubGlnaHR9fSksdGhpcy5jb21wdXRlZEljb24pXSk7fSxnZW5EZWZhdWx0U2xvdDpmdW5jdGlvbiBnZW5EZWZhdWx0U2xvdCgpe3JldHVyblt0aGlzLmdlbkNoZWNrYm94KCksdGhpcy5nZW5MYWJlbCgpXTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDaGVja2JveC9WU2ltcGxlQ2hlY2tib3guc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ2hlY2tib3gvVlNpbXBsZUNoZWNrYm94LnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNoZWNrYm94VlNpbXBsZUNoZWNrYm94U2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNoZWNrYm94L1ZTaW1wbGVDaGVja2JveC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNoZWNrYm94L1ZTaW1wbGVDaGVja2JveC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ2hlY2tib3hWU2ltcGxlQ2hlY2tib3hUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2ltcGxlQ2hlY2tib3hfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlNpbXBsZUNoZWNrYm94LnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2hlY2tib3gvVlNpbXBsZUNoZWNrYm94LnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNpbXBsZUNoZWNrYm94X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZTaW1wbGVDaGVja2JveF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX3JpcHBsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL2RpcmVjdGl2ZXMvcmlwcGxlICovIi4vc3JjL2RpcmVjdGl2ZXMvcmlwcGxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkljb24gKi8iLi9zcmMvY29tcG9uZW50cy9WSWNvbi9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOid2LXNpbXBsZS1jaGVja2JveCcsZnVuY3Rpb25hbDp0cnVlLGRpcmVjdGl2ZXM6e3JpcHBsZTpfZGlyZWN0aXZlc19yaXBwbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdfSxwcm9wczpfX2Fzc2lnbih7fSxfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0ub3B0aW9ucy5wcm9wcyxfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5wcm9wcyx7ZGlzYWJsZWQ6Qm9vbGVhbixyaXBwbGU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LHZhbHVlOkJvb2xlYW4saW5kZXRlcm1pbmF0ZTpCb29sZWFuLGluZGV0ZXJtaW5hdGVJY29uOnt0eXBlOlN0cmluZyxkZWZhdWx0OickY2hlY2tib3hJbmRldGVybWluYXRlJ30sb25JY29uOnt0eXBlOlN0cmluZyxkZWZhdWx0OickY2hlY2tib3hPbid9LG9mZkljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRjaGVja2JveE9mZid9fSkscmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoLF9hKXt2YXIgcHJvcHM9X2EucHJvcHMsZGF0YT1fYS5kYXRhO3ZhciBjaGlsZHJlbj1bXTtpZihwcm9wcy5yaXBwbGUmJiFwcm9wcy5kaXNhYmxlZCl7dmFyIHJpcHBsZV8xPWgoJ2RpdicsX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5zZXRUZXh0Q29sb3IocHJvcHMuY29sb3Ise3N0YXRpY0NsYXNzOid2LWlucHV0LS1zZWxlY3Rpb24tY29udHJvbHNfX3JpcHBsZScsZGlyZWN0aXZlczpbe25hbWU6J3JpcHBsZScsdmFsdWU6e2NlbnRlcjp0cnVlfX1dfSkpO2NoaWxkcmVuLnB1c2gocmlwcGxlXzEpO312YXIgaWNvbj1wcm9wcy5vZmZJY29uO2lmKHByb3BzLmluZGV0ZXJtaW5hdGUpaWNvbj1wcm9wcy5pbmRldGVybWluYXRlSWNvbjtlbHNlIGlmKHByb3BzLnZhbHVlKWljb249cHJvcHMub25JY29uO2NoaWxkcmVuLnB1c2goaChfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siVkljb24iXSxfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLnNldFRleHRDb2xvcihwcm9wcy52YWx1ZSYmcHJvcHMuY29sb3Ise3Byb3BzOntkaXNhYmxlZDpwcm9wcy5kaXNhYmxlZCxkYXJrOnByb3BzLmRhcmssbGlnaHQ6cHJvcHMubGlnaHR9fSksaWNvbikpO3ZhciBjbGFzc2VzPXsndi1zaW1wbGUtY2hlY2tib3gnOnRydWUsJ3Ytc2ltcGxlLWNoZWNrYm94LS1kaXNhYmxlZCc6cHJvcHMuZGlzYWJsZWR9O3JldHVybiBoKCdkaXYnLF9fYXNzaWduKHt9LGRhdGEse2NsYXNzOmNsYXNzZXMsb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKGUpe2Uuc3RvcFByb3BhZ2F0aW9uKCk7aWYoZGF0YS5vbiYmZGF0YS5vbi5pbnB1dCYmIXByb3BzLmRpc2FibGVkKXtPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJ3cmFwSW5BcnJheSJdKShkYXRhLm9uLmlucHV0KS5mb3JFYWNoKGZ1bmN0aW9uKGYpe3JldHVybiBmKCFwcm9wcy52YWx1ZSk7fSk7fX19fSksY2hpbGRyZW4pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ2hlY2tib3gvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNoZWNrYm94L2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZDaGVja2JveCwgVlNpbXBsZUNoZWNrYm94LCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDaGVja2JveEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNoZWNrYm94X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ2hlY2tib3ggKi8iLi9zcmMvY29tcG9uZW50cy9WQ2hlY2tib3gvVkNoZWNrYm94LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNoZWNrYm94IixmdW5jdGlvbigpe3JldHVybiBfVkNoZWNrYm94X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNpbXBsZUNoZWNrYm94X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU2ltcGxlQ2hlY2tib3ggKi8iLi9zcmMvY29tcG9uZW50cy9WQ2hlY2tib3gvVlNpbXBsZUNoZWNrYm94LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNpbXBsZUNoZWNrYm94IixmdW5jdGlvbigpe3JldHVybiBfVlNpbXBsZUNoZWNrYm94X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXskX3Z1ZXRpZnlfc3ViY29tcG9uZW50czp7VkNoZWNrYm94Ol9WQ2hlY2tib3hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLFZTaW1wbGVDaGVja2JveDpfVlNpbXBsZUNoZWNrYm94X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXX19Oy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDaGlwL1ZDaGlwLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDaGlwL1ZDaGlwLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDaGlwVkNoaXBTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ2hpcC9WQ2hpcC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDaGlwL1ZDaGlwLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ2hpcFZDaGlwVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNoaXBfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNoaXAuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZDaGlwL1ZDaGlwLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNoaXBfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkNoaXBfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF90cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3RyYW5zaXRpb25zICovIi4vc3JjL2NvbXBvbmVudHMvdHJhbnNpdGlvbnMvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2dyb3VwYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9ncm91cGFibGUgKi8iLi9zcmMvbWl4aW5zL2dyb3VwYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190b2dnbGVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RvZ2dsZWFibGUgKi8iLi9zcmMvbWl4aW5zL3RvZ2dsZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3JvdXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3JvdXRhYmxlICovIi4vc3JjL21peGlucy9yb3V0YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfc2l6ZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvc2l6ZWFibGUgKi8iLi9zcmMvbWl4aW5zL3NpemVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTt2YXIgX19yZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fcmVhZHx8ZnVuY3Rpb24obyxuKXt2YXIgbT10eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb1tTeW1ib2wuaXRlcmF0b3JdO2lmKCFtKXJldHVybiBvO3ZhciBpPW0uY2FsbChvKSxyLGFyPVtdLGU7dHJ5e3doaWxlKChuPT09dm9pZCAwfHxuLS0+MCkmJiEocj1pLm5leHQoKSkuZG9uZSl7YXIucHVzaChyLnZhbHVlKTt9fWNhdGNoKGVycm9yKXtlPXtlcnJvcjplcnJvcn07fWZpbmFsbHl7dHJ5e2lmKHImJiFyLmRvbmUmJihtPWlbInJldHVybiJdKSltLmNhbGwoaSk7fWZpbmFsbHl7aWYoZSl0aHJvdyBlLmVycm9yO319cmV0dXJuIGFyO307Ly8gU3R5bGVzCi8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8vIFV0aWxpdGllcwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKShfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sX21peGluc19zaXplYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fWyJkZWZhdWx0Il0sX21peGluc19yb3V0YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJkZWZhdWx0Il0sX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdLE9iamVjdChfbWl4aW5zX2dyb3VwYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJmYWN0b3J5Il0pKCdjaGlwR3JvdXAnKSxPYmplY3QoX21peGluc190b2dnbGVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImZhY3RvcnkiXSkoJ2lucHV0VmFsdWUnKSkuZXh0ZW5kKHtuYW1lOid2LWNoaXAnLHByb3BzOnthY3RpdmU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGFjdGl2ZUNsYXNzOnt0eXBlOlN0cmluZyxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7aWYoIXRoaXMuY2hpcEdyb3VwKXJldHVybicnO3JldHVybiB0aGlzLmNoaXBHcm91cC5hY3RpdmVDbGFzczt9fSxjbG9zZTpCb29sZWFuLGNsb3NlSWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJGRlbGV0ZSd9LGRpc2FibGVkOkJvb2xlYW4sZHJhZ2dhYmxlOkJvb2xlYW4sZmlsdGVyOkJvb2xlYW4sZmlsdGVySWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJGNvbXBsZXRlJ30sbGFiZWw6Qm9vbGVhbixsaW5rOkJvb2xlYW4sb3V0bGluZWQ6Qm9vbGVhbixwaWxsOkJvb2xlYW4sdGFnOnt0eXBlOlN0cmluZyxkZWZhdWx0OidzcGFuJ30sdGV4dENvbG9yOlN0cmluZyx2YWx1ZTpudWxsfSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57cHJveHlDbGFzczondi1jaGlwLS1hY3RpdmUnfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LWNoaXAnOnRydWV9LF9taXhpbnNfcm91dGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuY2xhc3Nlcy5jYWxsKHRoaXMpLHsndi1jaGlwLS1jbGlja2FibGUnOnRoaXMuaXNDbGlja2FibGUsJ3YtY2hpcC0tZGlzYWJsZWQnOnRoaXMuZGlzYWJsZWQsJ3YtY2hpcC0tZHJhZ2dhYmxlJzp0aGlzLmRyYWdnYWJsZSwndi1jaGlwLS1sYWJlbCc6dGhpcy5sYWJlbCwndi1jaGlwLS1saW5rJzp0aGlzLmlzTGluaywndi1jaGlwLS1uby1jb2xvcic6IXRoaXMuY29sb3IsJ3YtY2hpcC0tb3V0bGluZWQnOnRoaXMub3V0bGluZWQsJ3YtY2hpcC0tcGlsbCc6dGhpcy5waWxsLCd2LWNoaXAtLXJlbW92YWJsZSc6dGhpcy5oYXNDbG9zZX0sdGhpcy50aGVtZUNsYXNzZXMsdGhpcy5zaXplYWJsZUNsYXNzZXMsdGhpcy5ncm91cENsYXNzZXMpO30saGFzQ2xvc2U6ZnVuY3Rpb24gaGFzQ2xvc2UoKXtyZXR1cm4gQm9vbGVhbih0aGlzLmNsb3NlKTt9LGlzQ2xpY2thYmxlOmZ1bmN0aW9uIGlzQ2xpY2thYmxlKCl7cmV0dXJuIEJvb2xlYW4oX21peGluc19yb3V0YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5pc0NsaWNrYWJsZS5jYWxsKHRoaXMpfHx0aGlzLmNoaXBHcm91cCk7fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dmFyIF90aGlzPXRoaXM7dmFyIGJyZWFraW5nUHJvcHM9W1snb3V0bGluZScsJ291dGxpbmVkJ10sWydzZWxlY3RlZCcsJ2lucHV0LXZhbHVlJ10sWyd2YWx1ZScsJ2FjdGl2ZSddLFsnQGlucHV0JywnQGFjdGl2ZS5zeW5jJ11dOy8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovYnJlYWtpbmdQcm9wcy5mb3JFYWNoKGZ1bmN0aW9uKF9hKXt2YXIgX2I9X19yZWFkKF9hLDIpLG9yaWdpbmFsPV9iWzBdLHJlcGxhY2VtZW50PV9iWzFdO2lmKF90aGlzLiRhdHRycy5oYXNPd25Qcm9wZXJ0eShvcmlnaW5hbCkpT2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEwX19bImJyZWFraW5nIl0pKG9yaWdpbmFsLHJlcGxhY2VtZW50LF90aGlzKTt9KTt9LG1ldGhvZHM6e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKGUpe3RoaXMuJGVtaXQoJ2NsaWNrJyxlKTt0aGlzLmNoaXBHcm91cCYmdGhpcy50b2dnbGUoKTt9LGdlbkZpbHRlcjpmdW5jdGlvbiBnZW5GaWx0ZXIoKXt2YXIgY2hpbGRyZW49W107aWYodGhpcy5pc0FjdGl2ZSl7Y2hpbGRyZW4ucHVzaCh0aGlzLiRjcmVhdGVFbGVtZW50KF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0se3N0YXRpY0NsYXNzOid2LWNoaXBfX2ZpbHRlcicscHJvcHM6e2xlZnQ6dHJ1ZX19LHRoaXMuZmlsdGVySWNvbikpO31yZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siVkV4cGFuZFhUcmFuc2l0aW9uIl0sY2hpbGRyZW4pO30sZ2VuQ2xvc2U6ZnVuY3Rpb24gZ2VuQ2xvc2UoKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLHtzdGF0aWNDbGFzczondi1jaGlwX19jbG9zZScscHJvcHM6e3JpZ2h0OnRydWV9LG9uOntjbGljazpmdW5jdGlvbiBjbGljayhlKXtlLnN0b3BQcm9wYWdhdGlvbigpO190aGlzLiRlbWl0KCdjbGljazpjbG9zZScpO190aGlzLiRlbWl0KCd1cGRhdGU6YWN0aXZlJyxmYWxzZSk7fX19LHRoaXMuY2xvc2VJY29uKTt9LGdlbkNvbnRlbnQ6ZnVuY3Rpb24gZ2VuQ29udGVudCgpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdzcGFuJyx7c3RhdGljQ2xhc3M6J3YtY2hpcF9fY29udGVudCd9LFt0aGlzLmZpbHRlciYmdGhpcy5nZW5GaWx0ZXIoKSx0aGlzLiRzbG90cy5kZWZhdWx0LHRoaXMuaGFzQ2xvc2UmJnRoaXMuZ2VuQ2xvc2UoKV0pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGNoaWxkcmVuPVt0aGlzLmdlbkNvbnRlbnQoKV07dmFyIF9hPXRoaXMuZ2VuZXJhdGVSb3V0ZUxpbmsoKSx0YWc9X2EudGFnLGRhdGE9X2EuZGF0YTtkYXRhLmF0dHJzPV9fYXNzaWduKHt9LGRhdGEuYXR0cnMse2RyYWdnYWJsZTp0aGlzLmRyYWdnYWJsZT8ndHJ1ZSc6dW5kZWZpbmVkLHRhYmluZGV4OnRoaXMuY2hpcEdyb3VwJiYhdGhpcy5kaXNhYmxlZD8wOmRhdGEuYXR0cnMudGFiaW5kZXh9KTtkYXRhLmRpcmVjdGl2ZXMucHVzaCh7bmFtZTonc2hvdycsdmFsdWU6dGhpcy5hY3RpdmV9KTtkYXRhPXRoaXMuc2V0QmFja2dyb3VuZENvbG9yKHRoaXMuY29sb3IsZGF0YSk7dmFyIGNvbG9yPXRoaXMudGV4dENvbG9yfHx0aGlzLm91dGxpbmVkJiZ0aGlzLmNvbG9yO3JldHVybiBoKHRhZyx0aGlzLnNldFRleHRDb2xvcihjb2xvcixkYXRhKSxjaGlsZHJlbik7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDaGlwL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNoaXAvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWQ2hpcCwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ2hpcEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNoaXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDaGlwICovIi4vc3JjL2NvbXBvbmVudHMvVkNoaXAvVkNoaXAudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ2hpcCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDaGlwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WQ2hpcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNoaXBHcm91cC9WQ2hpcEdyb3VwLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ2hpcEdyb3VwL1ZDaGlwR3JvdXAuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDaGlwR3JvdXBWQ2hpcEdyb3VwU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNoaXBHcm91cC9WQ2hpcEdyb3VwLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDaGlwR3JvdXAvVkNoaXBHcm91cC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDaGlwR3JvdXBWQ2hpcEdyb3VwVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNoaXBHcm91cF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ2hpcEdyb3VwLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2hpcEdyb3VwL1ZDaGlwR3JvdXAuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2hpcEdyb3VwX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZDaGlwR3JvdXBfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNsaWRlR3JvdXBfVlNsaWRlR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WU2xpZGVHcm91cC9WU2xpZGVHcm91cCAqLyIuL3NyYy9jb21wb25lbnRzL1ZTbGlkZUdyb3VwL1ZTbGlkZUdyb3VwLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gU3R5bGVzCi8vIEV4dGVuc2lvbnMKLy8gTWl4aW5zCi8vIFV0aWxpdGllcwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKShfVlNsaWRlR3JvdXBfVlNsaWRlR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siQmFzZVNsaWRlR3JvdXAiXSxfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pLmV4dGVuZCh7bmFtZTondi1jaGlwLWdyb3VwJyxwcm92aWRlOmZ1bmN0aW9uIHByb3ZpZGUoKXtyZXR1cm57Y2hpcEdyb3VwOnRoaXN9O30scHJvcHM6e2NvbHVtbjpCb29sZWFufSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJuIF9fYXNzaWduKHt9LF9WU2xpZGVHcm91cF9WU2xpZGVHcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJCYXNlU2xpZGVHcm91cCJdLm9wdGlvbnMuY29tcHV0ZWQuY2xhc3Nlcy5jYWxsKHRoaXMpLHsndi1jaGlwLWdyb3VwJzp0cnVlLCd2LWNoaXAtZ3JvdXAtLWNvbHVtbic6dGhpcy5jb2x1bW59KTt9fSx3YXRjaDp7Y29sdW1uOmZ1bmN0aW9uIGNvbHVtbih2YWwpe2lmKHZhbCl0aGlzLnNjcm9sbE9mZnNldD0wO3RoaXMuJG5leHRUaWNrKHRoaXMub25SZXNpemUpO319LG1ldGhvZHM6e2dlbkRhdGE6ZnVuY3Rpb24gZ2VuRGF0YSgpe3JldHVybiB0aGlzLnNldFRleHRDb2xvcih0aGlzLmNvbG9yLF9fYXNzaWduKHt9LF9WU2xpZGVHcm91cF9WU2xpZGVHcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJCYXNlU2xpZGVHcm91cCJdLm9wdGlvbnMubWV0aG9kcy5nZW5EYXRhLmNhbGwodGhpcykpKTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDaGlwR3JvdXAvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDaGlwR3JvdXAvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZDaGlwR3JvdXAsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNoaXBHcm91cEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNoaXBHcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNoaXBHcm91cCAqLyIuL3NyYy9jb21wb25lbnRzL1ZDaGlwR3JvdXAvVkNoaXBHcm91cC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDaGlwR3JvdXAiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQ2hpcEdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WQ2hpcEdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNvbG9yUGlja2VyL1ZDb2xvclBpY2tlci5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDb2xvclBpY2tlclZDb2xvclBpY2tlclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNvbG9yUGlja2VyVkNvbG9yUGlja2VyVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNvbG9yUGlja2VyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDb2xvclBpY2tlci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkNvbG9yUGlja2VyL1ZDb2xvclBpY2tlci5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDb2xvclBpY2tlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WQ29sb3JQaWNrZXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNoZWV0X1ZTaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZTaGVldC9WU2hlZXQgKi8iLi9zcmMvY29tcG9uZW50cy9WU2hlZXQvVlNoZWV0LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDb2xvclBpY2tlclByZXZpZXdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDb2xvclBpY2tlclByZXZpZXcgKi8iLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyUHJldmlldy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ29sb3JQaWNrZXJDYW52YXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDb2xvclBpY2tlckNhbnZhcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXJDYW52YXMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNvbG9yUGlja2VyRWRpdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNvbG9yUGlja2VyRWRpdCAqLyIuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXJFZGl0LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDb2xvclBpY2tlclN3YXRjaGVzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ29sb3JQaWNrZXJTd2F0Y2hlcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXJTd2F0Y2hlcy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsICovIi4vc3JjL2NvbXBvbmVudHMvVkNvbG9yUGlja2VyL3V0aWwvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gQ29tcG9uZW50cwovLyBIZWxwZXJzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJkZWZhdWx0Il0pKF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOid2LWNvbG9yLXBpY2tlcicscHJvcHM6e2NhbnZhc0hlaWdodDp7dHlwZTpbU3RyaW5nLE51bWJlcl0sZGVmYXVsdDoxNTB9LGRpc2FibGVkOkJvb2xlYW4sZG90U2l6ZTp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDoxMH0sZmxhdDpCb29sZWFuLGhpZGVDYW52YXM6Qm9vbGVhbixoaWRlSW5wdXRzOkJvb2xlYW4saGlkZU1vZGVTd2l0Y2g6Qm9vbGVhbixtb2RlOnt0eXBlOlN0cmluZyxkZWZhdWx0OidyZ2JhJyx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHYpe3JldHVybiBPYmplY3Qua2V5cyhfVkNvbG9yUGlja2VyRWRpdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJtb2RlcyJdKS5pbmNsdWRlcyh2KTt9fSxzaG93U3dhdGNoZXM6Qm9vbGVhbixzd2F0Y2hlczpBcnJheSxzd2F0Y2hlc01heEhlaWdodDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDoxNTB9LHZhbHVlOnt0eXBlOltPYmplY3QsU3RyaW5nXX0sd2lkdGg6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MzAwfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2ludGVybmFsVmFsdWU6T2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImZyb21SR0JBIl0pKHtyOjI1NSxnOjAsYjowLGE6MX0pfTt9LGNvbXB1dGVkOntoaWRlQWxwaGE6ZnVuY3Rpb24gaGlkZUFscGhhKCl7cmV0dXJuIHRoaXMudmFsdWUmJiFPYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siaGFzQWxwaGEiXSkodGhpcy52YWx1ZSk7fX0sd2F0Y2g6e3ZhbHVlOntoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIoY29sb3Ipe3RoaXMudXBkYXRlQ29sb3IoT2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bInBhcnNlQ29sb3IiXSkoY29sb3IsdGhpcy5pbnRlcm5hbFZhbHVlKSk7fSxpbW1lZGlhdGU6dHJ1ZX19LG1ldGhvZHM6e3VwZGF0ZUNvbG9yOmZ1bmN0aW9uIHVwZGF0ZUNvbG9yKGNvbG9yKXt0aGlzLmludGVybmFsVmFsdWU9Y29sb3I7dmFyIHZhbHVlPU9iamVjdChfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJleHRyYWN0Q29sb3IiXSkodGhpcy5pbnRlcm5hbFZhbHVlLHRoaXMudmFsdWUpO2lmKHZhbHVlIT09dGhpcy52YWx1ZSl7dGhpcy4kZW1pdCgnaW5wdXQnLHZhbHVlKTt0aGlzLiRlbWl0KCd1cGRhdGU6Y29sb3InLHRoaXMuaW50ZXJuYWxWYWx1ZSk7fX0sZ2VuQ2FudmFzOmZ1bmN0aW9uIGdlbkNhbnZhcygpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WQ29sb3JQaWNrZXJDYW52YXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLHtwcm9wczp7Y29sb3I6dGhpcy5pbnRlcm5hbFZhbHVlLGRpc2FibGVkOnRoaXMuZGlzYWJsZWQsZG90U2l6ZTp0aGlzLmRvdFNpemUsd2lkdGg6dGhpcy53aWR0aCxoZWlnaHQ6dGhpcy5jYW52YXNIZWlnaHR9LG9uOnsndXBkYXRlOmNvbG9yJzp0aGlzLnVwZGF0ZUNvbG9yfX0pO30sZ2VuQ29udHJvbHM6ZnVuY3Rpb24gZ2VuQ29udHJvbHMoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtY29sb3ItcGlja2VyX19jb250cm9scyd9LFt0aGlzLmdlblByZXZpZXcoKSwhdGhpcy5oaWRlSW5wdXRzJiZ0aGlzLmdlbkVkaXQoKV0pO30sZ2VuRWRpdDpmdW5jdGlvbiBnZW5FZGl0KCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZDb2xvclBpY2tlckVkaXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLHtwcm9wczp7Y29sb3I6dGhpcy5pbnRlcm5hbFZhbHVlLGRpc2FibGVkOnRoaXMuZGlzYWJsZWQsaGlkZUFscGhhOnRoaXMuaGlkZUFscGhhLGhpZGVNb2RlU3dpdGNoOnRoaXMuaGlkZU1vZGVTd2l0Y2gsbW9kZTp0aGlzLm1vZGV9LG9uOnsndXBkYXRlOmNvbG9yJzp0aGlzLnVwZGF0ZUNvbG9yLCd1cGRhdGU6bW9kZSc6ZnVuY3Rpb24gdXBkYXRlTW9kZSh2KXtyZXR1cm4gX3RoaXMuJGVtaXQoJ3VwZGF0ZTptb2RlJyx2KTt9fX0pO30sZ2VuUHJldmlldzpmdW5jdGlvbiBnZW5QcmV2aWV3KCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZDb2xvclBpY2tlclByZXZpZXdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLHtwcm9wczp7Y29sb3I6dGhpcy5pbnRlcm5hbFZhbHVlLGRpc2FibGVkOnRoaXMuZGlzYWJsZWQsaGlkZUFscGhhOnRoaXMuaGlkZUFscGhhfSxvbjp7J3VwZGF0ZTpjb2xvcic6dGhpcy51cGRhdGVDb2xvcn19KTt9LGdlblN3YXRjaGVzOmZ1bmN0aW9uIGdlblN3YXRjaGVzKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZDb2xvclBpY2tlclN3YXRjaGVzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSx7cHJvcHM6e2Rhcms6dGhpcy5kYXJrLGxpZ2h0OnRoaXMubGlnaHQsc3dhdGNoZXM6dGhpcy5zd2F0Y2hlcyxjb2xvcjp0aGlzLmludGVybmFsVmFsdWUsbWF4SGVpZ2h0OnRoaXMuc3dhdGNoZXNNYXhIZWlnaHR9LG9uOnsndXBkYXRlOmNvbG9yJzp0aGlzLnVwZGF0ZUNvbG9yfX0pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoX1ZTaGVldF9WU2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLHtzdGF0aWNDbGFzczondi1jb2xvci1waWNrZXInLGNsYXNzOl9fYXNzaWduKHsndi1jb2xvci1waWNrZXItLWZsYXQnOnRoaXMuZmxhdH0sdGhpcy50aGVtZUNsYXNzZXMpLHByb3BzOnttYXhXaWR0aDp0aGlzLndpZHRofX0sWyF0aGlzLmhpZGVDYW52YXMmJnRoaXMuZ2VuQ2FudmFzKCksdGhpcy5nZW5Db250cm9scygpLHRoaXMuc2hvd1N3YXRjaGVzJiZ0aGlzLmdlblN3YXRjaGVzKCldKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNvbG9yUGlja2VyL1ZDb2xvclBpY2tlckNhbnZhcy5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXJDYW52YXMuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ29sb3JQaWNrZXJWQ29sb3JQaWNrZXJDYW52YXNTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyQ2FudmFzLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyQ2FudmFzLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDb2xvclBpY2tlclZDb2xvclBpY2tlckNhbnZhc1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDb2xvclBpY2tlckNhbnZhc19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ29sb3JQaWNrZXJDYW52YXMuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXJDYW52YXMuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ29sb3JQaWNrZXJDYW52YXNfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkNvbG9yUGlja2VyQ2FudmFzX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbCAqLyIuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci91dGlsL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyk7Ly8gU3R5bGVzCi8vIEhlbHBlcnMKLy8gVHlwZXMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOid2LWNvbG9yLXBpY2tlci1jYW52YXMnLHByb3BzOntjb2xvcjp7dHlwZTpPYmplY3QsZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybiBPYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZnJvbVJHQkEiXSkoe3I6MjU1LGc6MCxiOjAsYToxfSk7fX0sZGlzYWJsZWQ6Qm9vbGVhbixkb3RTaXplOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjEwfSxoZWlnaHQ6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MTUwfSx3aWR0aDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDozMDB9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57Ym91bmRpbmdSZWN0Ont3aWR0aDowLGhlaWdodDowLGxlZnQ6MCx0b3A6MH19O30sY29tcHV0ZWQ6e2RvdDpmdW5jdGlvbiBkb3QoKXtpZighdGhpcy5jb2xvcilyZXR1cm57eDowLHk6MH07cmV0dXJue3g6dGhpcy5jb2xvci5oc3ZhLnMqcGFyc2VJbnQodGhpcy53aWR0aCwxMCkseTooMS10aGlzLmNvbG9yLmhzdmEudikqcGFyc2VJbnQodGhpcy5oZWlnaHQsMTApfTt9fSx3YXRjaDp7J2NvbG9yLmh1ZSc6J3VwZGF0ZUNhbnZhcyd9LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3RoaXMudXBkYXRlQ2FudmFzKCk7fSxtZXRob2RzOntlbWl0Q29sb3I6ZnVuY3Rpb24gZW1pdENvbG9yKHgseSl7dmFyIF9hPXRoaXMuYm91bmRpbmdSZWN0LGxlZnQ9X2EubGVmdCx0b3A9X2EudG9wLHdpZHRoPV9hLndpZHRoLGhlaWdodD1fYS5oZWlnaHQ7dGhpcy4kZW1pdCgndXBkYXRlOmNvbG9yJyxPYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZnJvbUhTVkEiXSkoe2g6dGhpcy5jb2xvci5odWUsczpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJjbGFtcCJdKSh4LWxlZnQsMCx3aWR0aCkvd2lkdGgsdjoxLU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImNsYW1wIl0pKHktdG9wLDAsaGVpZ2h0KS9oZWlnaHQsYTp0aGlzLmNvbG9yLmFscGhhfSkpO30sdXBkYXRlQ2FudmFzOmZ1bmN0aW9uIHVwZGF0ZUNhbnZhcygpe2lmKCF0aGlzLmNvbG9yKXJldHVybjt2YXIgY2FudmFzPXRoaXMuJHJlZnMuY2FudmFzO3ZhciBjdHg9Y2FudmFzLmdldENvbnRleHQoJzJkJyk7aWYoIWN0eClyZXR1cm47dmFyIHNhdHVyYXRpb25HcmFkaWVudD1jdHguY3JlYXRlTGluZWFyR3JhZGllbnQoMCwwLGNhbnZhcy53aWR0aCwwKTtzYXR1cmF0aW9uR3JhZGllbnQuYWRkQ29sb3JTdG9wKDAsJ2hzbGEoMCwgMCUsIDEwMCUsIDEpJyk7Ly8gd2hpdGUKc2F0dXJhdGlvbkdyYWRpZW50LmFkZENvbG9yU3RvcCgxLCJoc2xhKCIrdGhpcy5jb2xvci5odWUrIiwgMTAwJSwgNTAlLCAxKSIpO2N0eC5maWxsU3R5bGU9c2F0dXJhdGlvbkdyYWRpZW50O2N0eC5maWxsUmVjdCgwLDAsY2FudmFzLndpZHRoLGNhbnZhcy5oZWlnaHQpO3ZhciB2YWx1ZUdyYWRpZW50PWN0eC5jcmVhdGVMaW5lYXJHcmFkaWVudCgwLDAsMCxjYW52YXMuaGVpZ2h0KTt2YWx1ZUdyYWRpZW50LmFkZENvbG9yU3RvcCgwLCdoc2xhKDAsIDAlLCAxMDAlLCAwKScpOy8vIHRyYW5zcGFyZW50CnZhbHVlR3JhZGllbnQuYWRkQ29sb3JTdG9wKDEsJ2hzbGEoMCwgMCUsIDAlLCAxKScpOy8vIGJsYWNrCmN0eC5maWxsU3R5bGU9dmFsdWVHcmFkaWVudDtjdHguZmlsbFJlY3QoMCwwLGNhbnZhcy53aWR0aCxjYW52YXMuaGVpZ2h0KTt9LGhhbmRsZUNsaWNrOmZ1bmN0aW9uIGhhbmRsZUNsaWNrKGUpe2lmKHRoaXMuZGlzYWJsZWQpcmV0dXJuO3RoaXMuYm91bmRpbmdSZWN0PXRoaXMuJGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3RoaXMuZW1pdENvbG9yKGUuY2xpZW50WCxlLmNsaWVudFkpO30saGFuZGxlTW91c2VEb3duOmZ1bmN0aW9uIGhhbmRsZU1vdXNlRG93bihlKXsvLyBUbyBwcmV2ZW50IHNlbGVjdGlvbiB3aGlsZSBtb3ZpbmcgY3Vyc29yCmUucHJldmVudERlZmF1bHQoKTtpZih0aGlzLmRpc2FibGVkKXJldHVybjt0aGlzLmJvdW5kaW5nUmVjdD10aGlzLiRlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJyx0aGlzLmhhbmRsZU1vdXNlTW92ZSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLHRoaXMuaGFuZGxlTW91c2VVcCk7fSxoYW5kbGVNb3VzZU1vdmU6ZnVuY3Rpb24gaGFuZGxlTW91c2VNb3ZlKGUpe2lmKHRoaXMuZGlzYWJsZWQpcmV0dXJuO3RoaXMuZW1pdENvbG9yKGUuY2xpZW50WCxlLmNsaWVudFkpO30saGFuZGxlTW91c2VVcDpmdW5jdGlvbiBoYW5kbGVNb3VzZVVwKCl7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsdGhpcy5oYW5kbGVNb3VzZU1vdmUpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJyx0aGlzLmhhbmRsZU1vdXNlVXApO30sZ2VuQ2FudmFzOmZ1bmN0aW9uIGdlbkNhbnZhcygpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdjYW52YXMnLHtyZWY6J2NhbnZhcycsYXR0cnM6e3dpZHRoOnRoaXMud2lkdGgsaGVpZ2h0OnRoaXMuaGVpZ2h0fX0pO30sZ2VuRG90OmZ1bmN0aW9uIGdlbkRvdCgpe3ZhciByYWRpdXM9cGFyc2VJbnQodGhpcy5kb3RTaXplLDEwKS8yO3ZhciB4PU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5kb3QueC1yYWRpdXMpO3ZhciB5PU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5kb3QueS1yYWRpdXMpO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1jb2xvci1waWNrZXJfX2NhbnZhcy1kb3QnLGNsYXNzOnsndi1jb2xvci1waWNrZXJfX2NhbnZhcy1kb3QtLWRpc2FibGVkJzp0aGlzLmRpc2FibGVkfSxzdHlsZTp7d2lkdGg6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmRvdFNpemUpLGhlaWdodDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuZG90U2l6ZSksdHJhbnNmb3JtOiJ0cmFuc2xhdGUoIit4KyIsICIreSsiKSJ9fSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXtyZXR1cm4gaCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtY29sb3ItcGlja2VyX19jYW52YXMnLHN0eWxlOnt3aWR0aDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMud2lkdGgpLGhlaWdodDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuaGVpZ2h0KX0sb246e2NsaWNrOnRoaXMuaGFuZGxlQ2xpY2ssbW91c2Vkb3duOnRoaXMuaGFuZGxlTW91c2VEb3dufX0sW3RoaXMuZ2VuQ2FudmFzKCksdGhpcy5nZW5Eb3QoKV0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyRWRpdC5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyRWRpdC5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ29sb3JQaWNrZXJWQ29sb3JQaWNrZXJFZGl0U2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNvbG9yUGlja2VyL1ZDb2xvclBpY2tlckVkaXQudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyRWRpdC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IG1vZGVzLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDb2xvclBpY2tlclZDb2xvclBpY2tlckVkaXRUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJtb2RlcyIsZnVuY3Rpb24oKXtyZXR1cm4gbW9kZXM7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDb2xvclBpY2tlckVkaXRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNvbG9yUGlja2VyRWRpdC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkNvbG9yUGlja2VyL1ZDb2xvclBpY2tlckVkaXQuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ29sb3JQaWNrZXJFZGl0X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZDb2xvclBpY2tlckVkaXRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJ0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZCdG4gKi8iLi9zcmMvY29tcG9uZW50cy9WQnRuL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkljb24gKi8iLi9zcmMvY29tcG9uZW50cy9WSWNvbi9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2NvbG9yVXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbG9yVXRpbHMgKi8iLi9zcmMvdXRpbC9jb2xvclV0aWxzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwgKi8iLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvdXRpbC9pbmRleC50cyIpO3ZhciBfX3JlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19yZWFkfHxmdW5jdGlvbihvLG4pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl07aWYoIW0pcmV0dXJuIG87dmFyIGk9bS5jYWxsKG8pLHIsYXI9W10sZTt0cnl7d2hpbGUoKG49PT12b2lkIDB8fG4tLT4wKSYmIShyPWkubmV4dCgpKS5kb25lKXthci5wdXNoKHIudmFsdWUpO319Y2F0Y2goZXJyb3Ipe2U9e2Vycm9yOmVycm9yfTt9ZmluYWxseXt0cnl7aWYociYmIXIuZG9uZSYmKG09aVsicmV0dXJuIl0pKW0uY2FsbChpKTt9ZmluYWxseXtpZihlKXRocm93IGUuZXJyb3I7fX1yZXR1cm4gYXI7fTsvLyBTdHlsZXMKLy8gQ29tcG9uZW50cwovLyBIZWxwZXJzCi8vIFR5cGVzCnZhciBtb2Rlcz17cmdiYTp7aW5wdXRzOltbJ3InLDI1NSwnaW50J10sWydnJywyNTUsJ2ludCddLFsnYicsMjU1LCdpbnQnXSxbJ2EnLDEsJ2Zsb2F0J11dLGZyb206X3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZnJvbVJHQkEiXX0saHNsYTp7aW5wdXRzOltbJ2gnLDM2MCwnaW50J10sWydzJywxLCdmbG9hdCddLFsnbCcsMSwnZmxvYXQnXSxbJ2EnLDEsJ2Zsb2F0J11dLGZyb206X3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZnJvbUhTTEEiXX0saGV4YTp7ZnJvbTpfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJmcm9tSGV4YSJdfX07LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOid2LWNvbG9yLXBpY2tlci1lZGl0Jyxwcm9wczp7Y29sb3I6T2JqZWN0LGRpc2FibGVkOkJvb2xlYW4saGlkZUFscGhhOkJvb2xlYW4saGlkZU1vZGVTd2l0Y2g6Qm9vbGVhbixtb2RlOnt0eXBlOlN0cmluZyxkZWZhdWx0OidyZ2JhJyx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHYpe3JldHVybiBPYmplY3Qua2V5cyhtb2RlcykuaW5jbHVkZXModik7fX19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnttb2Rlczptb2RlcyxpbnRlcm5hbE1vZGU6dGhpcy5tb2RlfTt9LGNvbXB1dGVkOntjdXJyZW50TW9kZTpmdW5jdGlvbiBjdXJyZW50TW9kZSgpe3JldHVybiB0aGlzLm1vZGVzW3RoaXMuaW50ZXJuYWxNb2RlXTt9fSx3YXRjaDp7bW9kZTpmdW5jdGlvbiBtb2RlKF9tb2RlKXt0aGlzLmludGVybmFsTW9kZT1fbW9kZTt9fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXt0aGlzLmludGVybmFsTW9kZT10aGlzLm1vZGU7fSxtZXRob2RzOntnZXRWYWx1ZTpmdW5jdGlvbiBnZXRWYWx1ZSh2LHR5cGUpe2lmKHR5cGU9PT0nZmxvYXQnKXJldHVybiBNYXRoLnJvdW5kKHYqMTAwKS8xMDA7ZWxzZSBpZih0eXBlPT09J2ludCcpcmV0dXJuIE1hdGgucm91bmQodik7ZWxzZSByZXR1cm4gMDt9LHBhcnNlVmFsdWU6ZnVuY3Rpb24gcGFyc2VWYWx1ZSh2LHR5cGUpe2lmKHR5cGU9PT0nZmxvYXQnKXJldHVybiBwYXJzZUZsb2F0KHYpO2Vsc2UgaWYodHlwZT09PSdpbnQnKXJldHVybiBwYXJzZUludCh2LDEwKXx8MDtlbHNlIHJldHVybiAwO30sY2hhbmdlTW9kZTpmdW5jdGlvbiBjaGFuZ2VNb2RlKCl7dmFyIG1vZGVzPU9iamVjdC5rZXlzKHRoaXMubW9kZXMpO3ZhciBpbmRleD1tb2Rlcy5pbmRleE9mKHRoaXMuaW50ZXJuYWxNb2RlKTt2YXIgbmV3TW9kZT1tb2Rlc1soaW5kZXgrMSklbW9kZXMubGVuZ3RoXTt0aGlzLmludGVybmFsTW9kZT1uZXdNb2RlO3RoaXMuJGVtaXQoJ3VwZGF0ZTptb2RlJyxuZXdNb2RlKTt9LGdlbklucHV0OmZ1bmN0aW9uIGdlbklucHV0KHRhcmdldCxhdHRycyx2YWx1ZSxvbil7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWNvbG9yLXBpY2tlcl9faW5wdXQnfSxbdGhpcy4kY3JlYXRlRWxlbWVudCgnaW5wdXQnLHtrZXk6dGFyZ2V0LGF0dHJzOmF0dHJzLGRvbVByb3BzOnt2YWx1ZTp2YWx1ZX0sb246b259KSx0aGlzLiRjcmVhdGVFbGVtZW50KCdzcGFuJyx0YXJnZXQudG9VcHBlckNhc2UoKSldKTt9LGdlbklucHV0czpmdW5jdGlvbiBnZW5JbnB1dHMoKXt2YXIgX3RoaXM9dGhpcztzd2l0Y2godGhpcy5pbnRlcm5hbE1vZGUpe2Nhc2UnaGV4YSc6e3ZhciBoZXg9dGhpcy5jb2xvci5oZXhhO3ZhciB2YWx1ZT10aGlzLmhpZGVBbHBoYSYmaGV4LmVuZHNXaXRoKCdGRicpP2hleC5zdWJzdHIoMCw3KTpoZXg7cmV0dXJuIHRoaXMuZ2VuSW5wdXQoJ2hleCcse21heGxlbmd0aDp0aGlzLmhpZGVBbHBoYT83OjksZGlzYWJsZWQ6dGhpcy5kaXNhYmxlZH0sdmFsdWUse2NoYW5nZTpmdW5jdGlvbiBjaGFuZ2UoZSl7dmFyIGVsPWUudGFyZ2V0O190aGlzLiRlbWl0KCd1cGRhdGU6Y29sb3InLF90aGlzLmN1cnJlbnRNb2RlLmZyb20oT2JqZWN0KF91dGlsX2NvbG9yVXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1sicGFyc2VIZXgiXSkoZWwudmFsdWUpKSk7fX0pO31kZWZhdWx0Ont2YXIgaW5wdXRzPXRoaXMuaGlkZUFscGhhP3RoaXMuY3VycmVudE1vZGUuaW5wdXRzLnNsaWNlKDAsLTEpOnRoaXMuY3VycmVudE1vZGUuaW5wdXRzO3JldHVybiBpbnB1dHMubWFwKGZ1bmN0aW9uKF9hKXt2YXIgX2I9X19yZWFkKF9hLDMpLHRhcmdldD1fYlswXSxtYXg9X2JbMV0sdHlwZT1fYlsyXTt2YXIgdmFsdWU9X3RoaXMuY29sb3JbX3RoaXMuaW50ZXJuYWxNb2RlXTtyZXR1cm4gX3RoaXMuZ2VuSW5wdXQodGFyZ2V0LHt0eXBlOidudW1iZXInLG1pbjowLG1heDptYXgsc3RlcDp0eXBlPT09J2Zsb2F0Jz8nMC4wMSc6dHlwZT09PSdpbnQnPycxJzp1bmRlZmluZWQsZGlzYWJsZWQ6X3RoaXMuZGlzYWJsZWR9LF90aGlzLmdldFZhbHVlKHZhbHVlW3RhcmdldF0sdHlwZSkse2lucHV0OmZ1bmN0aW9uIGlucHV0KGUpe3ZhciBfYTt2YXIgZWw9ZS50YXJnZXQ7dmFyIG5ld1ZhbD1fdGhpcy5wYXJzZVZhbHVlKGVsLnZhbHVlfHwnMCcsdHlwZSk7X3RoaXMuJGVtaXQoJ3VwZGF0ZTpjb2xvcicsX3RoaXMuY3VycmVudE1vZGUuZnJvbShPYmplY3QuYXNzaWduKHt9LHZhbHVlLChfYT17fSxfYVt0YXJnZXRdPW5ld1ZhbCxfYSkpLF90aGlzLmNvbG9yLmFscGhhKSk7fX0pO30pO319fSxnZW5Td2l0Y2g6ZnVuY3Rpb24gZ2VuU3dpdGNoKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLHtwcm9wczp7c21hbGw6dHJ1ZSxpY29uOnRydWUsZGlzYWJsZWQ6dGhpcy5kaXNhYmxlZH0sb246e2NsaWNrOnRoaXMuY2hhbmdlTW9kZX19LFt0aGlzLiRjcmVhdGVFbGVtZW50KF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sJyR1bmZvbGQnKV0pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWNvbG9yLXBpY2tlcl9fZWRpdCd9LFt0aGlzLmdlbklucHV0cygpLCF0aGlzLmhpZGVNb2RlU3dpdGNoJiZ0aGlzLmdlblN3aXRjaCgpXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXJQcmV2aWV3LnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXJQcmV2aWV3LnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDb2xvclBpY2tlclZDb2xvclBpY2tlclByZXZpZXdTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyUHJldmlldy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXJQcmV2aWV3LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ29sb3JQaWNrZXJWQ29sb3JQaWNrZXJQcmV2aWV3VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNvbG9yUGlja2VyUHJldmlld19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ29sb3JQaWNrZXJQcmV2aWV3LnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyUHJldmlldy5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDb2xvclBpY2tlclByZXZpZXdfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkNvbG9yUGlja2VyUHJldmlld19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2xpZGVyX1ZTbGlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WU2xpZGVyL1ZTbGlkZXIgKi8iLi9zcmMvY29tcG9uZW50cy9WU2xpZGVyL1ZTbGlkZXIudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb2xvclV0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb2xvclV0aWxzICovIi4vc3JjL3V0aWwvY29sb3JVdGlscy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsICovIi4vc3JjL2NvbXBvbmVudHMvVkNvbG9yUGlja2VyL3V0aWwvaW5kZXgudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBDb21wb25lbnRzCi8vIFV0aWxpdGllcwovLyBUeXBlcwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fX2RlZmF1bHQuYS5leHRlbmQoe25hbWU6J3YtY29sb3ItcGlja2VyLXByZXZpZXcnLHByb3BzOntjb2xvcjpPYmplY3QsZGlzYWJsZWQ6Qm9vbGVhbixoaWRlQWxwaGE6Qm9vbGVhbn0sbWV0aG9kczp7Z2VuQWxwaGE6ZnVuY3Rpb24gZ2VuQWxwaGEoKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gdGhpcy5nZW5UcmFjayh7c3RhdGljQ2xhc3M6J3YtY29sb3ItcGlja2VyX19hbHBoYScscHJvcHM6e3RodW1iQ29sb3I6J2dyZXkgbGlnaHRlbi0yJyxoaWRlRGV0YWlsczp0cnVlLHZhbHVlOnRoaXMuY29sb3IuYWxwaGEsc3RlcDowLG1pbjowLG1heDoxfSxzdHlsZTp7YmFja2dyb3VuZEltYWdlOiF0aGlzLmRpc2FibGVkPyJsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHRyYW5zcGFyZW50LCAiK09iamVjdChfdXRpbF9jb2xvclV0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bIlJHQnRvQ1NTIl0pKHRoaXMuY29sb3IucmdiYSkrIikiOnVuZGVmaW5lZH0sb246e2lucHV0OmZ1bmN0aW9uIGlucHV0KHZhbCl7cmV0dXJuIF90aGlzLmNvbG9yLmFscGhhIT09dmFsJiZfdGhpcy4kZW1pdCgndXBkYXRlOmNvbG9yJyxPYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZnJvbUhTVkEiXSkoX19hc3NpZ24oe30sX3RoaXMuY29sb3IuaHN2YSx7YTp2YWx9KSkpO319fSk7fSxnZW5TbGlkZXJzOmZ1bmN0aW9uIGdlblNsaWRlcnMoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtY29sb3ItcGlja2VyX19zbGlkZXJzJ30sW3RoaXMuZ2VuSHVlKCksIXRoaXMuaGlkZUFscGhhJiZ0aGlzLmdlbkFscGhhKCldKTt9LGdlbkRvdDpmdW5jdGlvbiBnZW5Eb3QoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtY29sb3ItcGlja2VyX19kb3QnfSxbdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3R5bGU6e2JhY2tncm91bmQ6T2JqZWN0KF91dGlsX2NvbG9yVXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siUkdCQXRvQ1NTIl0pKHRoaXMuY29sb3IucmdiYSl9fSldKTt9LGdlbkh1ZTpmdW5jdGlvbiBnZW5IdWUoKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gdGhpcy5nZW5UcmFjayh7c3RhdGljQ2xhc3M6J3YtY29sb3ItcGlja2VyX19odWUnLHByb3BzOnt0aHVtYkNvbG9yOidncmV5IGxpZ2h0ZW4tMicsaGlkZURldGFpbHM6dHJ1ZSx2YWx1ZTp0aGlzLmNvbG9yLmh1ZSxzdGVwOjAsbWluOjAsbWF4OjM2MH0sb246e2lucHV0OmZ1bmN0aW9uIGlucHV0KHZhbCl7cmV0dXJuIF90aGlzLmNvbG9yLmh1ZSE9PXZhbCYmX3RoaXMuJGVtaXQoJ3VwZGF0ZTpjb2xvcicsT2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImZyb21IU1ZBIl0pKF9fYXNzaWduKHt9LF90aGlzLmNvbG9yLmhzdmEse2g6dmFsfSkpKTt9fX0pO30sZ2VuVHJhY2s6ZnVuY3Rpb24gZ2VuVHJhY2sob3B0aW9ucyl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZTbGlkZXJfVlNsaWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sX19hc3NpZ24oe2NsYXNzOid2LWNvbG9yLXBpY2tlcl9fdHJhY2snfSxvcHRpb25zLHtwcm9wczpfX2Fzc2lnbih7ZGlzYWJsZWQ6dGhpcy5kaXNhYmxlZH0sb3B0aW9ucy5wcm9wcyl9KSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXtyZXR1cm4gaCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtY29sb3ItcGlja2VyX19wcmV2aWV3JyxjbGFzczp7J3YtY29sb3ItcGlja2VyX19wcmV2aWV3LS1oaWRlLWFscGhhJzp0aGlzLmhpZGVBbHBoYX19LFt0aGlzLmdlbkRvdCgpLHRoaXMuZ2VuU2xpZGVycygpXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXJTd2F0Y2hlcy5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNvbG9yUGlja2VyL1ZDb2xvclBpY2tlclN3YXRjaGVzLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ29sb3JQaWNrZXJWQ29sb3JQaWNrZXJTd2F0Y2hlc1Nhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXJTd2F0Y2hlcy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyU3dhdGNoZXMudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ29sb3JQaWNrZXJWQ29sb3JQaWNrZXJTd2F0Y2hlc1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDb2xvclBpY2tlclN3YXRjaGVzX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDb2xvclBpY2tlclN3YXRjaGVzLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyU3dhdGNoZXMuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ29sb3JQaWNrZXJTd2F0Y2hlc19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WQ29sb3JQaWNrZXJTd2F0Y2hlc19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJY29uICovIi4vc3JjL2NvbXBvbmVudHMvVkljb24vaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb2xvcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbG9ycyAqLyIuL3NyYy91dGlsL2NvbG9ycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsICovIi4vc3JjL2NvbXBvbmVudHMvVkNvbG9yUGlja2VyL3V0aWwvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb2xvclV0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb2xvclV0aWxzICovIi4vc3JjL3V0aWwvY29sb3JVdGlscy50cyIpOy8vIFN0eWxlcwovLyBDb21wb25lbnRzCi8vIEhlbHBlcnMKZnVuY3Rpb24gcGFyc2VEZWZhdWx0Q29sb3JzKGNvbG9ycyl7cmV0dXJuIE9iamVjdC5rZXlzKGNvbG9ycykubWFwKGZ1bmN0aW9uKGtleSl7dmFyIGNvbG9yPWNvbG9yc1trZXldO3JldHVybiBjb2xvci5iYXNlP1tjb2xvci5iYXNlLGNvbG9yLmRhcmtlbjQsY29sb3IuZGFya2VuMyxjb2xvci5kYXJrZW4yLGNvbG9yLmRhcmtlbjEsY29sb3IubGlnaHRlbjEsY29sb3IubGlnaHRlbjIsY29sb3IubGlnaHRlbjMsY29sb3IubGlnaHRlbjQsY29sb3IubGlnaHRlbjVdOltjb2xvci5ibGFjayxjb2xvci53aGl0ZSxjb2xvci50cmFuc3BhcmVudF07fSk7fXZhciB3aGl0ZT1PYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZnJvbUhleCJdKSgnI0ZGRkZGRicpLnJnYmE7dmFyIGJsYWNrPU9iamVjdChfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJmcm9tSGV4Il0pKCcjMDAwMDAwJykucmdiYTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdKShfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJkZWZhdWx0Il0pLmV4dGVuZCh7bmFtZTondi1jb2xvci1waWNrZXItc3dhdGNoZXMnLHByb3BzOntzd2F0Y2hlczp7dHlwZTpBcnJheSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuIHBhcnNlRGVmYXVsdENvbG9ycyhfdXRpbF9jb2xvcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKTt9fSxjb2xvcjpPYmplY3QsbWF4V2lkdGg6W051bWJlcixTdHJpbmddLG1heEhlaWdodDpbTnVtYmVyLFN0cmluZ119LG1ldGhvZHM6e2dlbkNvbG9yOmZ1bmN0aW9uIGdlbkNvbG9yKGNvbG9yKXt2YXIgX3RoaXM9dGhpczt2YXIgY29udGVudD10aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdHlsZTp7YmFja2dyb3VuZDpjb2xvcn19LFtPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWVwRXF1YWwiXSkodGhpcy5jb2xvcixPYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1sicGFyc2VDb2xvciJdKShjb2xvcixudWxsKSkmJnRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSx7cHJvcHM6e3NtYWxsOnRydWUsZGFyazpPYmplY3QoX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJjb250cmFzdFJhdGlvIl0pKHRoaXMuY29sb3IucmdiYSx3aGl0ZSk+MiYmdGhpcy5jb2xvci5hbHBoYT4wLjUsbGlnaHQ6T2JqZWN0KF91dGlsX2NvbG9yVXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siY29udHJhc3RSYXRpbyJdKSh0aGlzLmNvbG9yLnJnYmEsYmxhY2spPjImJnRoaXMuY29sb3IuYWxwaGE+MC41fX0sJyRzdWNjZXNzJyldKTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtY29sb3ItcGlja2VyX19jb2xvcicsb246ey8vIFRPRE86IExlc3MgaGFja3kgd2F5IG9mIGNhdGNoaW5nIHRyYW5zcGFyZW50CmNsaWNrOmZ1bmN0aW9uIGNsaWNrKCl7cmV0dXJuIF90aGlzLiRlbWl0KCd1cGRhdGU6Y29sb3InLE9iamVjdChfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJmcm9tSGV4Il0pKGNvbG9yPT09J3RyYW5zcGFyZW50Jz8nIzAwMDAwMDAwJzpjb2xvcikpO319fSxbY29udGVudF0pO30sZ2VuU3dhdGNoZXM6ZnVuY3Rpb24gZ2VuU3dhdGNoZXMoKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gdGhpcy5zd2F0Y2hlcy5tYXAoZnVuY3Rpb24oc3dhdGNoKXt2YXIgY29sb3JzPXN3YXRjaC5tYXAoX3RoaXMuZ2VuQ29sb3IpO3JldHVybiBfdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtY29sb3ItcGlja2VyX19zd2F0Y2gnfSxjb2xvcnMpO30pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWNvbG9yLXBpY2tlcl9fc3dhdGNoZXMnLHN0eWxlOnttYXhXaWR0aDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMubWF4V2lkdGgpLG1heEhlaWdodDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMubWF4SGVpZ2h0KX19LFt0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHRoaXMuZ2VuU3dhdGNoZXMoKSldKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNvbG9yUGlja2VyL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWQ29sb3JQaWNrZXIsIFZDb2xvclBpY2tlclN3YXRjaGVzLCBWQ29sb3JQaWNrZXJDYW52YXMsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNvbG9yUGlja2VySW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ29sb3JQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDb2xvclBpY2tlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9WQ29sb3JQaWNrZXIudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ29sb3JQaWNrZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQ29sb3JQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ29sb3JQaWNrZXJTd2F0Y2hlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNvbG9yUGlja2VyU3dhdGNoZXMgKi8iLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyU3dhdGNoZXMudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ29sb3JQaWNrZXJTd2F0Y2hlcyIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDb2xvclBpY2tlclN3YXRjaGVzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNvbG9yUGlja2VyQ2FudmFzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ29sb3JQaWNrZXJDYW52YXMgKi8iLi9zcmMvY29tcG9uZW50cy9WQ29sb3JQaWNrZXIvVkNvbG9yUGlja2VyQ2FudmFzLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNvbG9yUGlja2VyQ2FudmFzIixmdW5jdGlvbigpe3JldHVybiBfVkNvbG9yUGlja2VyQ2FudmFzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WQ29sb3JQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci91dGlsL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNvbG9yUGlja2VyL3V0aWwvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBmcm9tSFNWQSwgZnJvbUhTTEEsIGZyb21SR0JBLCBmcm9tSGV4YSwgZnJvbUhleCwgcGFyc2VDb2xvciwgZXh0cmFjdENvbG9yLCBoYXNBbHBoYSAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ29sb3JQaWNrZXJVdGlsSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJmcm9tSFNWQSIsZnVuY3Rpb24oKXtyZXR1cm4gZnJvbUhTVkE7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImZyb21IU0xBIixmdW5jdGlvbigpe3JldHVybiBmcm9tSFNMQTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZnJvbVJHQkEiLGZ1bmN0aW9uKCl7cmV0dXJuIGZyb21SR0JBO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJmcm9tSGV4YSIsZnVuY3Rpb24oKXtyZXR1cm4gZnJvbUhleGE7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImZyb21IZXgiLGZ1bmN0aW9uKCl7cmV0dXJuIGZyb21IZXg7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sInBhcnNlQ29sb3IiLGZ1bmN0aW9uKCl7cmV0dXJuIHBhcnNlQ29sb3I7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImV4dHJhY3RDb2xvciIsZnVuY3Rpb24oKXtyZXR1cm4gZXh0cmFjdENvbG9yO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJoYXNBbHBoYSIsZnVuY3Rpb24oKXtyZXR1cm4gaGFzQWxwaGE7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uLy4uL3V0aWwvY29sb3JVdGlscyAqLyIuL3NyYy91dGlsL2NvbG9yVXRpbHMudHMiKTtmdW5jdGlvbiBfdHlwZW9mKG9iail7aWYodHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJl90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcik9PT0ic3ltYm9sIil7X3R5cGVvZj1mdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIF90eXBlb2YyKG9iaik7fTt9ZWxzZXtfdHlwZW9mPWZ1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gb2JqJiZ0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb2JqLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZvYmohPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOl90eXBlb2YyKG9iaik7fTt9cmV0dXJuIF90eXBlb2Yob2JqKTt9dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBVdGlsaXRpZXMKZnVuY3Rpb24gZnJvbUhTVkEoaHN2YSl7aHN2YT1fX2Fzc2lnbih7fSxoc3ZhKTt2YXIgaGV4YT1PYmplY3QoX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJIU1ZBdG9IZXgiXSkoaHN2YSk7dmFyIGhzbGE9T2JqZWN0KF91dGlsX2NvbG9yVXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siSFNWQXRvSFNMQSJdKShoc3ZhKTt2YXIgcmdiYT1PYmplY3QoX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJIU1ZBdG9SR0JBIl0pKGhzdmEpO3JldHVybnthbHBoYTpoc3ZhLmEsaGV4OmhleGEuc3Vic3RyKDAsNyksaGV4YTpoZXhhLGhzbGE6aHNsYSxoc3ZhOmhzdmEsaHVlOmhzdmEuaCxyZ2JhOnJnYmF9O31mdW5jdGlvbiBmcm9tSFNMQShoc2xhKXt2YXIgaHN2YT1PYmplY3QoX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJIU0xBdG9IU1ZBIl0pKGhzbGEpO3ZhciBoZXhhPU9iamVjdChfdXRpbF9jb2xvclV0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIkhTVkF0b0hleCJdKShoc3ZhKTt2YXIgcmdiYT1PYmplY3QoX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJIU1ZBdG9SR0JBIl0pKGhzdmEpO3JldHVybnthbHBoYTpoc3ZhLmEsaGV4OmhleGEuc3Vic3RyKDAsNyksaGV4YTpoZXhhLGhzbGE6aHNsYSxoc3ZhOmhzdmEsaHVlOmhzdmEuaCxyZ2JhOnJnYmF9O31mdW5jdGlvbiBmcm9tUkdCQShyZ2JhKXt2YXIgaHN2YT1PYmplY3QoX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJSR0JBdG9IU1ZBIl0pKHJnYmEpO3ZhciBoZXhhPU9iamVjdChfdXRpbF9jb2xvclV0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIlJHQkF0b0hleCJdKShyZ2JhKTt2YXIgaHNsYT1PYmplY3QoX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJIU1ZBdG9IU0xBIl0pKGhzdmEpO3JldHVybnthbHBoYTpoc3ZhLmEsaGV4OmhleGEuc3Vic3RyKDAsNyksaGV4YTpoZXhhLGhzbGE6aHNsYSxoc3ZhOmhzdmEsaHVlOmhzdmEuaCxyZ2JhOnJnYmF9O31mdW5jdGlvbiBmcm9tSGV4YShoZXhhKXt2YXIgaHN2YT1PYmplY3QoX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJIZXhUb0hTVkEiXSkoaGV4YSk7dmFyIGhzbGE9T2JqZWN0KF91dGlsX2NvbG9yVXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siSFNWQXRvSFNMQSJdKShoc3ZhKTt2YXIgcmdiYT1PYmplY3QoX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJIU1ZBdG9SR0JBIl0pKGhzdmEpO3JldHVybnthbHBoYTpoc3ZhLmEsaGV4OmhleGEuc3Vic3RyKDAsNyksaGV4YTpoZXhhLGhzbGE6aHNsYSxoc3ZhOmhzdmEsaHVlOmhzdmEuaCxyZ2JhOnJnYmF9O31mdW5jdGlvbiBmcm9tSGV4KGhleCl7cmV0dXJuIGZyb21IZXhhKE9iamVjdChfdXRpbF9jb2xvclV0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bInBhcnNlSGV4Il0pKGhleCkpO31mdW5jdGlvbiBoYXMob2JqLGtleSl7cmV0dXJuIGtleS5ldmVyeShmdW5jdGlvbihrKXtyZXR1cm4gb2JqLmhhc093blByb3BlcnR5KGspO30pO31mdW5jdGlvbiBwYXJzZUNvbG9yKGNvbG9yLG9sZENvbG9yKXtpZighY29sb3IpcmV0dXJuIGZyb21SR0JBKHtyOjI1NSxnOjAsYjowLGE6MX0pO2lmKHR5cGVvZiBjb2xvcj09PSdzdHJpbmcnKXtpZihjb2xvcj09PSd0cmFuc3BhcmVudCcpcmV0dXJuIGZyb21IZXhhKCcjMDAwMDAwMDAnKTt2YXIgaGV4PU9iamVjdChfdXRpbF9jb2xvclV0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bInBhcnNlSGV4Il0pKGNvbG9yKTtpZihvbGRDb2xvciYmaGV4PT09b2xkQ29sb3IuaGV4YSlyZXR1cm4gb2xkQ29sb3I7ZWxzZSByZXR1cm4gZnJvbUhleGEoaGV4KTt9aWYoX3R5cGVvZihjb2xvcik9PT0nb2JqZWN0Jyl7aWYoY29sb3IuaGFzT3duUHJvcGVydHkoJ2FscGhhJykpcmV0dXJuIGNvbG9yO3ZhciBhPWNvbG9yLmhhc093blByb3BlcnR5KCdhJyk/cGFyc2VGbG9hdChjb2xvci5hKToxO2lmKGhhcyhjb2xvcixbJ3InLCdnJywnYiddKSl7aWYob2xkQ29sb3ImJmNvbG9yPT09b2xkQ29sb3IucmdiYSlyZXR1cm4gb2xkQ29sb3I7ZWxzZSByZXR1cm4gZnJvbVJHQkEoX19hc3NpZ24oe30sY29sb3Ise2E6YX0pKTt9ZWxzZSBpZihoYXMoY29sb3IsWydoJywncycsJ2wnXSkpe2lmKG9sZENvbG9yJiZjb2xvcj09PW9sZENvbG9yLmhzbGEpcmV0dXJuIG9sZENvbG9yO2Vsc2UgcmV0dXJuIGZyb21IU0xBKF9fYXNzaWduKHt9LGNvbG9yLHthOmF9KSk7fWVsc2UgaWYoaGFzKGNvbG9yLFsnaCcsJ3MnLCd2J10pKXtpZihvbGRDb2xvciYmY29sb3I9PT1vbGRDb2xvci5oc3ZhKXJldHVybiBvbGRDb2xvcjtlbHNlIHJldHVybiBmcm9tSFNWQShfX2Fzc2lnbih7fSxjb2xvcix7YTphfSkpO319cmV0dXJuIGZyb21SR0JBKHtyOjI1NSxnOjAsYjowLGE6MX0pO31mdW5jdGlvbiBleHRyYWN0Q29sb3IoY29sb3IsaW5wdXQpe2lmKGlucHV0PT1udWxsKXJldHVybiBjb2xvcjtpZih0eXBlb2YgaW5wdXQ9PT0nc3RyaW5nJyl7cmV0dXJuIGlucHV0Lmxlbmd0aD09PTc/Y29sb3IuaGV4OmNvbG9yLmhleGE7fWlmKF90eXBlb2YoaW5wdXQpPT09J29iamVjdCcpe2lmKGhhcyhpbnB1dCxbJ3InLCdnJywnYiddKSlyZXR1cm4gY29sb3IucmdiYTtlbHNlIGlmKGhhcyhpbnB1dCxbJ2gnLCdzJywnbCddKSlyZXR1cm4gY29sb3IuaHNsYTtlbHNlIGlmKGhhcyhpbnB1dCxbJ2gnLCdzJywndiddKSlyZXR1cm4gY29sb3IuaHN2YTt9cmV0dXJuIGNvbG9yO31mdW5jdGlvbiBoYXNBbHBoYShjb2xvcil7aWYoIWNvbG9yKXJldHVybiBmYWxzZTtpZih0eXBlb2YgY29sb3I9PT0nc3RyaW5nJyl7cmV0dXJuIGNvbG9yLmxlbmd0aD43O31pZihfdHlwZW9mKGNvbG9yKT09PSdvYmplY3QnKXtyZXR1cm4gaGFzKGNvbG9yLFsnYSddKTt9cmV0dXJuIGZhbHNlO30vKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ29tYm9ib3gvVkNvbWJvYm94LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ29tYm9ib3gvVkNvbWJvYm94LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDb21ib2JveFZDb21ib2JveFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZBdXRvY29tcGxldGVfVkF1dG9jb21wbGV0ZV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkF1dG9jb21wbGV0ZS9WQXV0b2NvbXBsZXRlLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WQXV0b2NvbXBsZXRlL1ZBdXRvY29tcGxldGUuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXV0b2NvbXBsZXRlX1ZBdXRvY29tcGxldGVfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkF1dG9jb21wbGV0ZV9WQXV0b2NvbXBsZXRlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTZWxlY3RfVlNlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZTZWxlY3QvVlNlbGVjdCAqLyIuL3NyYy9jb21wb25lbnRzL1ZTZWxlY3QvVlNlbGVjdC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXV0b2NvbXBsZXRlX1ZBdXRvY29tcGxldGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WQXV0b2NvbXBsZXRlL1ZBdXRvY29tcGxldGUgKi8iLi9zcmMvY29tcG9uZW50cy9WQXV0b2NvbXBsZXRlL1ZBdXRvY29tcGxldGUudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gU3R5bGVzCi8vIEV4dGVuc2lvbnMKLy8gVXRpbHMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVkF1dG9jb21wbGV0ZV9WQXV0b2NvbXBsZXRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5leHRlbmQoe25hbWU6J3YtY29tYm9ib3gnLHByb3BzOntkZWxpbWl0ZXJzOnt0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bXTt9fSxyZXR1cm5PYmplY3Q6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57ZWRpdGluZ0luZGV4Oi0xfTt9LGNvbXB1dGVkOntjb3VudGVyVmFsdWU6ZnVuY3Rpb24gY291bnRlclZhbHVlKCl7cmV0dXJuIHRoaXMubXVsdGlwbGU/dGhpcy5zZWxlY3RlZEl0ZW1zLmxlbmd0aDoodGhpcy5pbnRlcm5hbFNlYXJjaHx8JycpLnRvU3RyaW5nKCkubGVuZ3RoO30saGFzU2xvdDpmdW5jdGlvbiBoYXNTbG90KCl7cmV0dXJuIF9WU2VsZWN0X1ZTZWxlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuaGFzU2xvdC5jYWxsKHRoaXMpfHx0aGlzLm11bHRpcGxlO30saXNBbnlWYWx1ZUFsbG93ZWQ6ZnVuY3Rpb24gaXNBbnlWYWx1ZUFsbG93ZWQoKXtyZXR1cm4gdHJ1ZTt9LG1lbnVDYW5TaG93OmZ1bmN0aW9uIG1lbnVDYW5TaG93KCl7aWYoIXRoaXMuaXNGb2N1c2VkKXJldHVybiBmYWxzZTtyZXR1cm4gdGhpcy5oYXNEaXNwbGF5ZWRJdGVtc3x8ISF0aGlzLiRzbG90c1snbm8tZGF0YSddJiYhdGhpcy5oaWRlTm9EYXRhO319LG1ldGhvZHM6e29uSW50ZXJuYWxTZWFyY2hDaGFuZ2VkOmZ1bmN0aW9uIG9uSW50ZXJuYWxTZWFyY2hDaGFuZ2VkKHZhbCl7aWYodmFsJiZ0aGlzLm11bHRpcGxlJiZ0aGlzLmRlbGltaXRlcnMubGVuZ3RoKXt2YXIgZGVsaW1pdGVyPXRoaXMuZGVsaW1pdGVycy5maW5kKGZ1bmN0aW9uKGQpe3JldHVybiB2YWwuZW5kc1dpdGgoZCk7fSk7aWYoZGVsaW1pdGVyIT1udWxsKXt0aGlzLmludGVybmFsU2VhcmNoPXZhbC5zbGljZSgwLHZhbC5sZW5ndGgtZGVsaW1pdGVyLmxlbmd0aCk7dGhpcy51cGRhdGVUYWdzKCk7fX10aGlzLnVwZGF0ZU1lbnVEaW1lbnNpb25zKCk7fSxnZW5JbnB1dDpmdW5jdGlvbiBnZW5JbnB1dCgpe3ZhciBpbnB1dD1fVkF1dG9jb21wbGV0ZV9WQXV0b2NvbXBsZXRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuZ2VuSW5wdXQuY2FsbCh0aGlzKTtpbnB1dC5kYXRhLm9uLnBhc3RlPXRoaXMub25QYXN0ZTtyZXR1cm4gaW5wdXQ7fSxnZW5DaGlwU2VsZWN0aW9uOmZ1bmN0aW9uIGdlbkNoaXBTZWxlY3Rpb24oaXRlbSxpbmRleCl7dmFyIF90aGlzPXRoaXM7dmFyIGNoaXA9X1ZTZWxlY3RfVlNlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlbkNoaXBTZWxlY3Rpb24uY2FsbCh0aGlzLGl0ZW0saW5kZXgpOy8vIEFsbG93IHVzZXIgdG8gdXBkYXRlIGFuIGV4aXN0aW5nIHZhbHVlCmlmKHRoaXMubXVsdGlwbGUpe2NoaXAuY29tcG9uZW50T3B0aW9ucy5saXN0ZW5lcnM9X19hc3NpZ24oe30sY2hpcC5jb21wb25lbnRPcHRpb25zLmxpc3RlbmVycyx7ZGJsY2xpY2s6ZnVuY3Rpb24gZGJsY2xpY2soKXtfdGhpcy5lZGl0aW5nSW5kZXg9aW5kZXg7X3RoaXMuaW50ZXJuYWxTZWFyY2g9X3RoaXMuZ2V0VGV4dChpdGVtKTtfdGhpcy5zZWxlY3RlZEluZGV4PS0xO319KTt9cmV0dXJuIGNoaXA7fSxvbkNoaXBJbnB1dDpmdW5jdGlvbiBvbkNoaXBJbnB1dChpdGVtKXtfVlNlbGVjdF9WU2VsZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMub25DaGlwSW5wdXQuY2FsbCh0aGlzLGl0ZW0pO3RoaXMuZWRpdGluZ0luZGV4PS0xO30sLy8gUmVxdWlyZXMgYSBtYW51YWwgZGVmaW5pdGlvbgovLyB0byBvdmVyd3JpdGUgcmVtb3ZhbCBpbiB2LWF1dG9jb21wbGV0ZQpvbkVudGVyRG93bjpmdW5jdGlvbiBvbkVudGVyRG93bihlKXt2YXIgX3RoaXM9dGhpcztlLnByZXZlbnREZWZhdWx0KCk7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXsvLyBJZiBoYXMgbWVudSBpbmRleCwgbGV0IHYtc2VsZWN0LWxpc3QgaGFuZGxlCmlmKF90aGlzLmdldE1lbnVJbmRleCgpPi0xKXJldHVybjtfdGhpcy51cGRhdGVTZWxmKCk7fSk7fSxvbkZpbHRlcmVkSXRlbXNDaGFuZ2VkOmZ1bmN0aW9uIG9uRmlsdGVyZWRJdGVtc0NoYW5nZWQodmFsLG9sZFZhbCl7aWYoIXRoaXMuYXV0b1NlbGVjdEZpcnN0KXJldHVybjtfVkF1dG9jb21wbGV0ZV9WQXV0b2NvbXBsZXRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMub25GaWx0ZXJlZEl0ZW1zQ2hhbmdlZC5jYWxsKHRoaXMsdmFsLG9sZFZhbCk7fSxvbktleURvd246ZnVuY3Rpb24gb25LZXlEb3duKGUpe3ZhciBrZXlDb2RlPWUua2V5Q29kZTtfVlNlbGVjdF9WU2VsZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMub25LZXlEb3duLmNhbGwodGhpcyxlKTsvLyBJZiB1c2VyIGlzIGF0IHNlbGVjdGlvbiBpbmRleCBvZiAwCi8vIGNyZWF0ZSBhIG5ldyB0YWcKaWYodGhpcy5tdWx0aXBsZSYma2V5Q29kZT09PV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1sia2V5Q29kZXMiXS5sZWZ0JiZ0aGlzLiRyZWZzLmlucHV0LnNlbGVjdGlvblN0YXJ0PT09MCl7dGhpcy51cGRhdGVTZWxmKCk7fWVsc2UgaWYoa2V5Q29kZT09PV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1sia2V5Q29kZXMiXS5lbnRlcil7dGhpcy5vbkVudGVyRG93bihlKTt9Ly8gVGhlIG9yZGVyaW5nIGlzIGltcG9ydGFudCBoZXJlCi8vIGFsbG93cyBuZXcgdmFsdWUgdG8gYmUgdXBkYXRlZAovLyBhbmQgdGhlbiBtb3ZlcyB0aGUgaW5kZXggdG8gdGhlCi8vIHByb3BlciBsb2NhdGlvbgp0aGlzLmNoYW5nZVNlbGVjdGVkSW5kZXgoa2V5Q29kZSk7fSxvblRhYkRvd246ZnVuY3Rpb24gb25UYWJEb3duKGUpey8vIFdoZW4gYWRkaW5nIHRhZ3MsIGlmIHNlYXJjaGluZyBhbmQKLy8gdGhlcmUgaXMgbm90IGEgZmlsdGVyZWQgb3B0aW9ucywKLy8gYWRkIHRoZSB2YWx1ZSB0byB0aGUgdGFncyBsaXN0CmlmKHRoaXMubXVsdGlwbGUmJnRoaXMuaW50ZXJuYWxTZWFyY2gmJnRoaXMuZ2V0TWVudUluZGV4KCk9PT0tMSl7ZS5wcmV2ZW50RGVmYXVsdCgpO2Uuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIHRoaXMudXBkYXRlVGFncygpO31fVkF1dG9jb21wbGV0ZV9WQXV0b2NvbXBsZXRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMub25UYWJEb3duLmNhbGwodGhpcyxlKTt9LHNlbGVjdEl0ZW06ZnVuY3Rpb24gc2VsZWN0SXRlbShpdGVtKXsvLyBDdXJyZW50bHkgb25seSBzdXBwb3J0cyBpdGVtczo8c3RyaW5nW10+CmlmKHRoaXMuZWRpdGluZ0luZGV4Pi0xKXt0aGlzLnVwZGF0ZUVkaXRpbmcoKTt9ZWxzZXtfVkF1dG9jb21wbGV0ZV9WQXV0b2NvbXBsZXRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuc2VsZWN0SXRlbS5jYWxsKHRoaXMsaXRlbSk7fX0sc2V0U2VsZWN0ZWRJdGVtczpmdW5jdGlvbiBzZXRTZWxlY3RlZEl0ZW1zKCl7aWYodGhpcy5pbnRlcm5hbFZhbHVlPT1udWxsfHx0aGlzLmludGVybmFsVmFsdWU9PT0nJyl7dGhpcy5zZWxlY3RlZEl0ZW1zPVtdO31lbHNle3RoaXMuc2VsZWN0ZWRJdGVtcz10aGlzLm11bHRpcGxlP3RoaXMuaW50ZXJuYWxWYWx1ZTpbdGhpcy5pbnRlcm5hbFZhbHVlXTt9fSxzZXRWYWx1ZTpmdW5jdGlvbiBzZXRWYWx1ZSh2YWx1ZSl7X1ZTZWxlY3RfVlNlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLnNldFZhbHVlLmNhbGwodGhpcyx2YWx1ZSE9bnVsbD92YWx1ZTp0aGlzLmludGVybmFsU2VhcmNoKTt9LHVwZGF0ZUVkaXRpbmc6ZnVuY3Rpb24gdXBkYXRlRWRpdGluZygpe3ZhciB2YWx1ZT10aGlzLmludGVybmFsVmFsdWUuc2xpY2UoKTt2YWx1ZVt0aGlzLmVkaXRpbmdJbmRleF09dGhpcy5pbnRlcm5hbFNlYXJjaDt0aGlzLnNldFZhbHVlKHZhbHVlKTt0aGlzLmVkaXRpbmdJbmRleD0tMTt9LHVwZGF0ZUNvbWJvYm94OmZ1bmN0aW9uIHVwZGF0ZUNvbWJvYm94KCl7dmFyIGlzVXNpbmdTbG90PUJvb2xlYW4odGhpcy4kc2NvcGVkU2xvdHMuc2VsZWN0aW9uKXx8dGhpcy5oYXNDaGlwczsvLyBJZiBzZWFyY2ggaXMgbm90IGRpcnR5IGFuZCBpcwovLyB1c2luZyBzbG90LCBkbyBub3RoaW5nCmlmKGlzVXNpbmdTbG90JiYhdGhpcy5zZWFyY2hJc0RpcnR5KXJldHVybjsvLyBUaGUgaW50ZXJuYWwgc2VhcmNoIGlzIG5vdCBtYXRjaGluZwovLyB0aGUgaW50ZXJuYWwgdmFsdWUsIHVwZGF0ZSB0aGUgaW5wdXQKaWYodGhpcy5pbnRlcm5hbFNlYXJjaCE9PXRoaXMuZ2V0VGV4dCh0aGlzLmludGVybmFsVmFsdWUpKXRoaXMuc2V0VmFsdWUoKTsvLyBSZXNldCBzZWFyY2ggaWYgdXNpbmcgc2xvdAovLyB0byBhdm9pZCBhIGRvdWJsZSBpbnB1dAppZihpc1VzaW5nU2xvdCl0aGlzLmludGVybmFsU2VhcmNoPXVuZGVmaW5lZDt9LHVwZGF0ZVNlbGY6ZnVuY3Rpb24gdXBkYXRlU2VsZigpe3RoaXMubXVsdGlwbGU/dGhpcy51cGRhdGVUYWdzKCk6dGhpcy51cGRhdGVDb21ib2JveCgpO30sdXBkYXRlVGFnczpmdW5jdGlvbiB1cGRhdGVUYWdzKCl7dmFyIG1lbnVJbmRleD10aGlzLmdldE1lbnVJbmRleCgpOy8vIElmIHRoZSB1c2VyIGlzIG5vdCBzZWFyY2hpbmcKLy8gYW5kIG5vIG1lbnUgaXRlbSBpcyBzZWxlY3RlZAovLyBkbyBub3RoaW5nCmlmKG1lbnVJbmRleDwwJiYhdGhpcy5zZWFyY2hJc0RpcnR5KXJldHVybjtpZih0aGlzLmVkaXRpbmdJbmRleD4tMSl7cmV0dXJuIHRoaXMudXBkYXRlRWRpdGluZygpO312YXIgaW5kZXg9dGhpcy5zZWxlY3RlZEl0ZW1zLmluZGV4T2YodGhpcy5pbnRlcm5hbFNlYXJjaCk7Ly8gSWYgaXQgYWxyZWFkeSBleGlzdHMsIGRvIG5vdGhpbmcKLy8gdGhpcyBtaWdodCBuZWVkIHRvIGNoYW5nZSB0byBicmluZwovLyB0aGUgZHVwbGljYXRlZCBpdGVtIHRvIHRoZSBsYXN0IGVudGVyZWQKaWYoaW5kZXg+LTEpe3ZhciBpbnRlcm5hbFZhbHVlPXRoaXMuaW50ZXJuYWxWYWx1ZS5zbGljZSgpO2ludGVybmFsVmFsdWUuc3BsaWNlKGluZGV4LDEpO3RoaXMuc2V0VmFsdWUoaW50ZXJuYWxWYWx1ZSk7fS8vIElmIG1lbnUgaW5kZXggaXMgZ3JlYXRlciB0aGFuIDEKLy8gdGhlIHNlbGVjdGlvbiBpcyBoYW5kbGVkIGVsc2V3aGVyZQovLyBUT0RPOiBmaW5kIG91dCB3aGVyZQppZihtZW51SW5kZXg+LTEpcmV0dXJuIHRoaXMuaW50ZXJuYWxTZWFyY2g9bnVsbDt0aGlzLnNlbGVjdEl0ZW0odGhpcy5pbnRlcm5hbFNlYXJjaCk7dGhpcy5pbnRlcm5hbFNlYXJjaD1udWxsO30sb25QYXN0ZTpmdW5jdGlvbiBvblBhc3RlKGV2ZW50KXtpZighdGhpcy5tdWx0aXBsZXx8dGhpcy5zZWFyY2hJc0RpcnR5KXJldHVybjt2YXIgcGFzdGVkSXRlbVRleHQ9ZXZlbnQuY2xpcGJvYXJkRGF0YS5nZXREYXRhKCd0ZXh0L3ZuZC52dWV0aWZ5LmF1dG9jb21wbGV0ZS5pdGVtK3BsYWluJyk7aWYocGFzdGVkSXRlbVRleHQmJnRoaXMuZmluZEV4aXN0aW5nSW5kZXgocGFzdGVkSXRlbVRleHQpPT09LTEpe2V2ZW50LnByZXZlbnREZWZhdWx0KCk7X1ZTZWxlY3RfVlNlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLnNlbGVjdEl0ZW0uY2FsbCh0aGlzLHBhc3RlZEl0ZW1UZXh0KTt9fX19KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ29tYm9ib3gvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNvbWJvYm94L2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZDb21ib2JveCwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ29tYm9ib3hJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDb21ib2JveF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNvbWJvYm94ICovIi4vc3JjL2NvbXBvbmVudHMvVkNvbWJvYm94L1ZDb21ib2JveC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDb21ib2JveCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDb21ib2JveF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVkNvbWJvYm94X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WQ29udGVudC9WQ29udGVudC5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ29udGVudC9WQ29udGVudC5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ29udGVudFZDb250ZW50U2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNvbnRlbnQvVkNvbnRlbnQudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WQ29udGVudC9WQ29udGVudC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNvbnRlbnRWQ29udGVudFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDb250ZW50X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDb250ZW50LnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WQ29udGVudC9WQ29udGVudC5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDb250ZW50X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZDb250ZW50X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19zc3JfYm9vdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvc3NyLWJvb3RhYmxlICovIi4vc3JjL21peGlucy9zc3ItYm9vdGFibGUvaW5kZXgudHMiKTsvLyBTdHlsZXMKLy8gTWl4aW5zCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X21peGluc19zc3JfYm9vdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLmV4dGVuZCh7bmFtZTondi1jb250ZW50Jyxwcm9wczp7dGFnOnt0eXBlOlN0cmluZyxkZWZhdWx0OidtYWluJ319LGNvbXB1dGVkOntzdHlsZXM6ZnVuY3Rpb24gc3R5bGVzKCl7dmFyIF9hPXRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24sYmFyPV9hLmJhcix0b3A9X2EudG9wLHJpZ2h0PV9hLnJpZ2h0LGZvb3Rlcj1fYS5mb290ZXIsaW5zZXRGb290ZXI9X2EuaW5zZXRGb290ZXIsYm90dG9tPV9hLmJvdHRvbSxsZWZ0PV9hLmxlZnQ7cmV0dXJue3BhZGRpbmdUb3A6dG9wK2JhcisicHgiLHBhZGRpbmdSaWdodDpyaWdodCsicHgiLHBhZGRpbmdCb3R0b206Zm9vdGVyK2luc2V0Rm9vdGVyK2JvdHRvbSsicHgiLHBhZGRpbmdMZWZ0OmxlZnQrInB4In07fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgZGF0YT17c3RhdGljQ2xhc3M6J3YtY29udGVudCcsc3R5bGU6dGhpcy5zdHlsZXMscmVmOidjb250ZW50J307cmV0dXJuIGgodGhpcy50YWcsZGF0YSxbaCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtY29udGVudF9fd3JhcCd9LHRoaXMuJHNsb3RzLmRlZmF1bHQpXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDb250ZW50L2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNvbnRlbnQvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWQ29udGVudCwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ29udGVudEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNvbnRlbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDb250ZW50ICovIi4vc3JjL2NvbXBvbmVudHMvVkNvbnRlbnQvVkNvbnRlbnQudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ29udGVudCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDb250ZW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WQ29udGVudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkNvdW50ZXIvVkNvdW50ZXIuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNvdW50ZXIvVkNvdW50ZXIuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkNvdW50ZXJWQ291bnRlclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDb3VudGVyL1ZDb3VudGVyLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNvdW50ZXIvVkNvdW50ZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZDb3VudGVyVkNvdW50ZXJUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ291bnRlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ291bnRlci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkNvdW50ZXIvVkNvdW50ZXIuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ291bnRlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WQ291bnRlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBNaXhpbnMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3YtY291bnRlcicsZnVuY3Rpb25hbDp0cnVlLHByb3BzOnt2YWx1ZTp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDonJ30sbWF4OltOdW1iZXIsU3RyaW5nXX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoLGN0eCl7dmFyIHByb3BzPWN0eC5wcm9wczt2YXIgbWF4PXBhcnNlSW50KHByb3BzLm1heCwxMCk7dmFyIHZhbHVlPXBhcnNlSW50KHByb3BzLnZhbHVlLDEwKTt2YXIgY29udGVudD1tYXg/dmFsdWUrIiAvICIrbWF4OlN0cmluZyhwcm9wcy52YWx1ZSk7dmFyIGlzR3JlYXRlcj1tYXgmJnZhbHVlPm1heDtyZXR1cm4gaCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtY291bnRlcicsY2xhc3M6X19hc3NpZ24oeydlcnJvci0tdGV4dCc6aXNHcmVhdGVyfSxPYmplY3QoX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZnVuY3Rpb25hbFRoZW1lQ2xhc3NlcyJdKShjdHgpKX0sY29udGVudCk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZDb3VudGVyL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkNvdW50ZXIvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWQ291bnRlciwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWQ291bnRlckluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNvdW50ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDb3VudGVyICovIi4vc3JjL2NvbXBvbmVudHMvVkNvdW50ZXIvVkNvdW50ZXIudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ291bnRlciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDb3VudGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WQ291bnRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGEvVkRhdGEudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0YS9WRGF0YS50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGFWRGF0YVRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISB2dWUgKi8idnVlIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIEhlbHBlcnMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOid2LWRhdGEnLGluaGVyaXRBdHRyczpmYWxzZSxwcm9wczp7aXRlbXM6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LG9wdGlvbnM6e3R5cGU6T2JqZWN0LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm57fTt9fSxzb3J0Qnk6e3R5cGU6W1N0cmluZyxBcnJheV0sZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LHNvcnREZXNjOnt0eXBlOltCb29sZWFuLEFycmF5XSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuW107fX0sY3VzdG9tU29ydDp7dHlwZTpGdW5jdGlvbixkZWZhdWx0Ol91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1sic29ydEl0ZW1zIl19LG11c3RTb3J0OkJvb2xlYW4sbXVsdGlTb3J0OkJvb2xlYW4scGFnZTp7dHlwZTpOdW1iZXIsZGVmYXVsdDoxfSxpdGVtc1BlclBhZ2U6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MTB9LGdyb3VwQnk6e3R5cGU6W1N0cmluZyxBcnJheV0sZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LGdyb3VwRGVzYzp7dHlwZTpbQm9vbGVhbixBcnJheV0sZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LGxvY2FsZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonZW4tVVMnfSxkaXNhYmxlU29ydDpCb29sZWFuLGRpc2FibGVQYWdpbmF0aW9uOkJvb2xlYW4sZGlzYWJsZUZpbHRlcmluZzpCb29sZWFuLHNlYXJjaDpTdHJpbmcsY3VzdG9tRmlsdGVyOnt0eXBlOkZ1bmN0aW9uLGRlZmF1bHQ6X3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJzZWFyY2hJdGVtcyJdfSxzZXJ2ZXJJdGVtc0xlbmd0aDp7dHlwZTpOdW1iZXIsZGVmYXVsdDotMX19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3ZhciBpbnRlcm5hbE9wdGlvbnM9e3BhZ2U6dGhpcy5wYWdlLGl0ZW1zUGVyUGFnZTp0aGlzLml0ZW1zUGVyUGFnZSxzb3J0Qnk6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1sid3JhcEluQXJyYXkiXSkodGhpcy5zb3J0QnkpLHNvcnREZXNjOk9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIndyYXBJbkFycmF5Il0pKHRoaXMuc29ydERlc2MpLGdyb3VwQnk6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1sid3JhcEluQXJyYXkiXSkodGhpcy5ncm91cEJ5KSxncm91cERlc2M6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1sid3JhcEluQXJyYXkiXSkodGhpcy5ncm91cERlc2MpLG11c3RTb3J0OnRoaXMubXVzdFNvcnQsbXVsdGlTb3J0OnRoaXMubXVsdGlTb3J0fTtpZih0aGlzLm9wdGlvbnMpe2ludGVybmFsT3B0aW9ucz1PYmplY3QuYXNzaWduKGludGVybmFsT3B0aW9ucyx0aGlzLm9wdGlvbnMpO31yZXR1cm57aW50ZXJuYWxPcHRpb25zOmludGVybmFsT3B0aW9uc307fSxjb21wdXRlZDp7aXRlbXNMZW5ndGg6ZnVuY3Rpb24gaXRlbXNMZW5ndGgoKXtyZXR1cm4gdGhpcy5zZXJ2ZXJJdGVtc0xlbmd0aD49MD90aGlzLnNlcnZlckl0ZW1zTGVuZ3RoOnRoaXMuZmlsdGVyZWRJdGVtcy5sZW5ndGg7fSxwYWdlQ291bnQ6ZnVuY3Rpb24gcGFnZUNvdW50KCl7cmV0dXJuIHRoaXMuaW50ZXJuYWxPcHRpb25zLml0ZW1zUGVyUGFnZT09PS0xPzE6TWF0aC5jZWlsKHRoaXMuaXRlbXNMZW5ndGgvdGhpcy5pbnRlcm5hbE9wdGlvbnMuaXRlbXNQZXJQYWdlKTsvLyBUT0RPOiBjYW4ndCB1c2UgaXRlbXMubGVuZ3RoIGhlcmUKfSxwYWdlU3RhcnQ6ZnVuY3Rpb24gcGFnZVN0YXJ0KCl7aWYodGhpcy5pbnRlcm5hbE9wdGlvbnMuaXRlbXNQZXJQYWdlPT09LTF8fCF0aGlzLml0ZW1zLmxlbmd0aClyZXR1cm4gMDtyZXR1cm4odGhpcy5pbnRlcm5hbE9wdGlvbnMucGFnZS0xKSp0aGlzLmludGVybmFsT3B0aW9ucy5pdGVtc1BlclBhZ2U7fSxwYWdlU3RvcDpmdW5jdGlvbiBwYWdlU3RvcCgpe2lmKHRoaXMuaW50ZXJuYWxPcHRpb25zLml0ZW1zUGVyUGFnZT09PS0xKXJldHVybiB0aGlzLml0ZW1zTGVuZ3RoO2lmKCF0aGlzLml0ZW1zLmxlbmd0aClyZXR1cm4gMDtyZXR1cm4gTWF0aC5taW4odGhpcy5pdGVtc0xlbmd0aCx0aGlzLmludGVybmFsT3B0aW9ucy5wYWdlKnRoaXMuaW50ZXJuYWxPcHRpb25zLml0ZW1zUGVyUGFnZSk7fSxpc0dyb3VwZWQ6ZnVuY3Rpb24gaXNHcm91cGVkKCl7cmV0dXJuISF0aGlzLmludGVybmFsT3B0aW9ucy5ncm91cEJ5Lmxlbmd0aDt9LHBhZ2luYXRpb246ZnVuY3Rpb24gcGFnaW5hdGlvbigpe3JldHVybntwYWdlOnRoaXMuaW50ZXJuYWxPcHRpb25zLnBhZ2UsaXRlbXNQZXJQYWdlOnRoaXMuaW50ZXJuYWxPcHRpb25zLml0ZW1zUGVyUGFnZSxwYWdlU3RhcnQ6dGhpcy5wYWdlU3RhcnQscGFnZVN0b3A6dGhpcy5wYWdlU3RvcCxwYWdlQ291bnQ6dGhpcy5wYWdlQ291bnQsaXRlbXNMZW5ndGg6dGhpcy5pdGVtc0xlbmd0aH07fSxmaWx0ZXJlZEl0ZW1zOmZ1bmN0aW9uIGZpbHRlcmVkSXRlbXMoKXt2YXIgaXRlbXM9dGhpcy5pdGVtcy5zbGljZSgpO2lmKCF0aGlzLmRpc2FibGVGaWx0ZXJpbmcmJnRoaXMuc2VydmVySXRlbXNMZW5ndGg8PTApe2l0ZW1zPXRoaXMuY3VzdG9tRmlsdGVyKGl0ZW1zLHRoaXMuc2VhcmNoKTt9cmV0dXJuIGl0ZW1zO30sY29tcHV0ZWRJdGVtczpmdW5jdGlvbiBjb21wdXRlZEl0ZW1zKCl7dmFyIGl0ZW1zPXRoaXMuZmlsdGVyZWRJdGVtcy5zbGljZSgpO2lmKCF0aGlzLmRpc2FibGVTb3J0JiZ0aGlzLnNlcnZlckl0ZW1zTGVuZ3RoPD0wKXtpdGVtcz10aGlzLnNvcnRJdGVtcyhpdGVtcyk7fWlmKCF0aGlzLmRpc2FibGVQYWdpbmF0aW9uJiZ0aGlzLnNlcnZlckl0ZW1zTGVuZ3RoPD0wKXtpdGVtcz10aGlzLnBhZ2luYXRlSXRlbXMoaXRlbXMpO31yZXR1cm4gaXRlbXM7fSxncm91cGVkSXRlbXM6ZnVuY3Rpb24gZ3JvdXBlZEl0ZW1zKCl7cmV0dXJuIHRoaXMuaXNHcm91cGVkP09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImdyb3VwQnlQcm9wZXJ0eSJdKSh0aGlzLmNvbXB1dGVkSXRlbXMsdGhpcy5pbnRlcm5hbE9wdGlvbnMuZ3JvdXBCeVswXSk6bnVsbDt9LHNjb3BlZFByb3BzOmZ1bmN0aW9uIHNjb3BlZFByb3BzKCl7dmFyIHByb3BzPXtzb3J0OnRoaXMuc29ydCxzb3J0QXJyYXk6dGhpcy5zb3J0QXJyYXksZ3JvdXA6dGhpcy5ncm91cCxpdGVtczp0aGlzLmNvbXB1dGVkSXRlbXMsb3B0aW9uczp0aGlzLmludGVybmFsT3B0aW9ucyx1cGRhdGVPcHRpb25zOnRoaXMudXBkYXRlT3B0aW9ucyxwYWdpbmF0aW9uOnRoaXMucGFnaW5hdGlvbixncm91cGVkSXRlbXM6dGhpcy5ncm91cGVkSXRlbXMsb3JpZ2luYWxJdGVtc0xlbmd0aDp0aGlzLml0ZW1zLmxlbmd0aH07cmV0dXJuIHByb3BzO30sY29tcHV0ZWRPcHRpb25zOmZ1bmN0aW9uIGNvbXB1dGVkT3B0aW9ucygpe3JldHVybiBfX2Fzc2lnbih7fSx0aGlzLm9wdGlvbnMpO319LHdhdGNoOntjb21wdXRlZE9wdGlvbnM6e2hhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcihvcHRpb25zLG9sZCl7aWYoT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVlcEVxdWFsIl0pKG9wdGlvbnMsb2xkKSlyZXR1cm47dGhpcy51cGRhdGVPcHRpb25zKG9wdGlvbnMpO30sZGVlcDp0cnVlLGltbWVkaWF0ZTp0cnVlfSxpbnRlcm5hbE9wdGlvbnM6e2hhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcihvcHRpb25zLG9sZCl7aWYoT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVlcEVxdWFsIl0pKG9wdGlvbnMsb2xkKSlyZXR1cm47dGhpcy4kZW1pdCgndXBkYXRlOm9wdGlvbnMnLG9wdGlvbnMpO3RoaXMuJGVtaXQoJ3BhZ2luYXRpb24nLHRoaXMucGFnaW5hdGlvbik7fSxkZWVwOnRydWUsaW1tZWRpYXRlOnRydWV9LHBhZ2U6ZnVuY3Rpb24gcGFnZShfcGFnZSl7dGhpcy51cGRhdGVPcHRpb25zKHtwYWdlOl9wYWdlfSk7fSwnaW50ZXJuYWxPcHRpb25zLnBhZ2UnOmZ1bmN0aW9uIGludGVybmFsT3B0aW9uc1BhZ2UocGFnZSl7dGhpcy4kZW1pdCgndXBkYXRlOnBhZ2UnLHBhZ2UpO30saXRlbXNQZXJQYWdlOmZ1bmN0aW9uIGl0ZW1zUGVyUGFnZShfaXRlbXNQZXJQYWdlKXt0aGlzLnVwZGF0ZU9wdGlvbnMoe2l0ZW1zUGVyUGFnZTpfaXRlbXNQZXJQYWdlfSk7fSwnaW50ZXJuYWxPcHRpb25zLml0ZW1zUGVyUGFnZSc6e2hhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcihpdGVtc1BlclBhZ2Upe3RoaXMuJGVtaXQoJ3VwZGF0ZTppdGVtcy1wZXItcGFnZScsaXRlbXNQZXJQYWdlKTt9LGltbWVkaWF0ZTp0cnVlfSxzb3J0Qnk6ZnVuY3Rpb24gc29ydEJ5KF9zb3J0Qnkpe3RoaXMudXBkYXRlT3B0aW9ucyh7c29ydEJ5Ok9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIndyYXBJbkFycmF5Il0pKF9zb3J0QnkpfSk7fSwnaW50ZXJuYWxPcHRpb25zLnNvcnRCeSc6ZnVuY3Rpb24gaW50ZXJuYWxPcHRpb25zU29ydEJ5KHNvcnRCeSxvbGQpeyFPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWVwRXF1YWwiXSkoc29ydEJ5LG9sZCkmJnRoaXMuJGVtaXQoJ3VwZGF0ZTpzb3J0LWJ5JyxBcnJheS5pc0FycmF5KHRoaXMuc29ydEJ5KT9zb3J0Qnk6c29ydEJ5WzBdKTt9LHNvcnREZXNjOmZ1bmN0aW9uIHNvcnREZXNjKF9zb3J0RGVzYyl7dGhpcy51cGRhdGVPcHRpb25zKHtzb3J0RGVzYzpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJ3cmFwSW5BcnJheSJdKShfc29ydERlc2MpfSk7fSwnaW50ZXJuYWxPcHRpb25zLnNvcnREZXNjJzpmdW5jdGlvbiBpbnRlcm5hbE9wdGlvbnNTb3J0RGVzYyhzb3J0RGVzYyxvbGQpeyFPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWVwRXF1YWwiXSkoc29ydERlc2Msb2xkKSYmdGhpcy4kZW1pdCgndXBkYXRlOnNvcnQtZGVzYycsQXJyYXkuaXNBcnJheSh0aGlzLnNvcnREZXNjKT9zb3J0RGVzYzpzb3J0RGVzY1swXSk7fSxncm91cEJ5OmZ1bmN0aW9uIGdyb3VwQnkoX2dyb3VwQnkpe3RoaXMudXBkYXRlT3B0aW9ucyh7Z3JvdXBCeTpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJ3cmFwSW5BcnJheSJdKShfZ3JvdXBCeSl9KTt9LCdpbnRlcm5hbE9wdGlvbnMuZ3JvdXBCeSc6ZnVuY3Rpb24gaW50ZXJuYWxPcHRpb25zR3JvdXBCeShncm91cEJ5LG9sZCl7IU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZXBFcXVhbCJdKShncm91cEJ5LG9sZCkmJnRoaXMuJGVtaXQoJ3VwZGF0ZTpncm91cC1ieScsQXJyYXkuaXNBcnJheSh0aGlzLmdyb3VwQnkpP2dyb3VwQnk6Z3JvdXBCeVswXSk7fSxncm91cERlc2M6ZnVuY3Rpb24gZ3JvdXBEZXNjKF9ncm91cERlc2Mpe3RoaXMudXBkYXRlT3B0aW9ucyh7Z3JvdXBEZXNjOk9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIndyYXBJbkFycmF5Il0pKF9ncm91cERlc2MpfSk7fSwnaW50ZXJuYWxPcHRpb25zLmdyb3VwRGVzYyc6ZnVuY3Rpb24gaW50ZXJuYWxPcHRpb25zR3JvdXBEZXNjKGdyb3VwRGVzYyxvbGQpeyFPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWVwRXF1YWwiXSkoZ3JvdXBEZXNjLG9sZCkmJnRoaXMuJGVtaXQoJ3VwZGF0ZTpncm91cC1kZXNjJyxBcnJheS5pc0FycmF5KHRoaXMuZ3JvdXBEZXNjKT9ncm91cERlc2M6Z3JvdXBEZXNjWzBdKTt9LG11bHRpU29ydDpmdW5jdGlvbiBtdWx0aVNvcnQoX211bHRpU29ydCl7dGhpcy51cGRhdGVPcHRpb25zKHttdWx0aVNvcnQ6X211bHRpU29ydH0pO30sJ2ludGVybmFsT3B0aW9ucy5tdWx0aVNvcnQnOmZ1bmN0aW9uIGludGVybmFsT3B0aW9uc011bHRpU29ydChtdWx0aVNvcnQpe3RoaXMuJGVtaXQoJ3VwZGF0ZTptdWx0aS1zb3J0JyxtdWx0aVNvcnQpO30sbXVzdFNvcnQ6ZnVuY3Rpb24gbXVzdFNvcnQoX211c3RTb3J0KXt0aGlzLnVwZGF0ZU9wdGlvbnMoe211c3RTb3J0Ol9tdXN0U29ydH0pO30sJ2ludGVybmFsT3B0aW9ucy5tdXN0U29ydCc6ZnVuY3Rpb24gaW50ZXJuYWxPcHRpb25zTXVzdFNvcnQobXVzdFNvcnQpe3RoaXMuJGVtaXQoJ3VwZGF0ZTptdXN0LXNvcnQnLG11c3RTb3J0KTt9LHBhZ2VDb3VudDp7aGFuZGxlcjpmdW5jdGlvbiBoYW5kbGVyKHBhZ2VDb3VudCl7dGhpcy4kZW1pdCgncGFnZS1jb3VudCcscGFnZUNvdW50KTt9LGltbWVkaWF0ZTp0cnVlfSxjb21wdXRlZEl0ZW1zOntoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIoY29tcHV0ZWRJdGVtcyl7dGhpcy4kZW1pdCgnY3VycmVudC1pdGVtcycsY29tcHV0ZWRJdGVtcyk7fSxpbW1lZGlhdGU6dHJ1ZX19LG1ldGhvZHM6e3RvZ2dsZTpmdW5jdGlvbiB0b2dnbGUoa2V5LG9sZEJ5LG9sZERlc2MscGFnZSxtdXN0U29ydCxtdWx0aVNvcnQpe3ZhciBieT1vbGRCeS5zbGljZSgpO3ZhciBkZXNjPW9sZERlc2Muc2xpY2UoKTt2YXIgYnlJbmRleD1ieS5maW5kSW5kZXgoZnVuY3Rpb24oayl7cmV0dXJuIGs9PT1rZXk7fSk7aWYoYnlJbmRleDwwKXtpZighbXVsdGlTb3J0KXtieT1bXTtkZXNjPVtdO31ieS5wdXNoKGtleSk7ZGVzYy5wdXNoKGZhbHNlKTt9ZWxzZSBpZihieUluZGV4Pj0wJiYhZGVzY1tieUluZGV4XSl7ZGVzY1tieUluZGV4XT10cnVlO31lbHNlIGlmKCFtdXN0U29ydCl7Ynkuc3BsaWNlKGJ5SW5kZXgsMSk7ZGVzYy5zcGxpY2UoYnlJbmRleCwxKTt9ZWxzZXtkZXNjW2J5SW5kZXhdPWZhbHNlO30vLyBSZXNldCBwYWdlIHRvIDEgaWYgc29ydEJ5IG9yIHNvcnREZXNjIGhhdmUgY2hhbmdlZAppZighT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVlcEVxdWFsIl0pKGJ5LG9sZEJ5KXx8IU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZXBFcXVhbCJdKShkZXNjLG9sZERlc2MpKXtwYWdlPTE7fXJldHVybntieTpieSxkZXNjOmRlc2MscGFnZTpwYWdlfTt9LGdyb3VwOmZ1bmN0aW9uIGdyb3VwKGtleSl7dmFyIF9hPXRoaXMudG9nZ2xlKGtleSx0aGlzLmludGVybmFsT3B0aW9ucy5ncm91cEJ5LHRoaXMuaW50ZXJuYWxPcHRpb25zLmdyb3VwRGVzYyx0aGlzLmludGVybmFsT3B0aW9ucy5wYWdlLHRydWUsZmFsc2UpLGdyb3VwQnk9X2EuYnksZ3JvdXBEZXNjPV9hLmRlc2MscGFnZT1fYS5wYWdlO3RoaXMudXBkYXRlT3B0aW9ucyh7Z3JvdXBCeTpncm91cEJ5LGdyb3VwRGVzYzpncm91cERlc2MscGFnZTpwYWdlfSk7fSxzb3J0OmZ1bmN0aW9uIHNvcnQoa2V5KXtpZihBcnJheS5pc0FycmF5KGtleSkpcmV0dXJuIHRoaXMuc29ydEFycmF5KGtleSk7dmFyIF9hPXRoaXMudG9nZ2xlKGtleSx0aGlzLmludGVybmFsT3B0aW9ucy5zb3J0QnksdGhpcy5pbnRlcm5hbE9wdGlvbnMuc29ydERlc2MsdGhpcy5pbnRlcm5hbE9wdGlvbnMucGFnZSx0aGlzLm11c3RTb3J0LHRoaXMubXVsdGlTb3J0KSxzb3J0Qnk9X2EuYnksc29ydERlc2M9X2EuZGVzYyxwYWdlPV9hLnBhZ2U7dGhpcy51cGRhdGVPcHRpb25zKHtzb3J0Qnk6c29ydEJ5LHNvcnREZXNjOnNvcnREZXNjLHBhZ2U6cGFnZX0pO30sc29ydEFycmF5OmZ1bmN0aW9uIHNvcnRBcnJheShzb3J0Qnkpe3ZhciBfdGhpcz10aGlzO3ZhciBzb3J0RGVzYz1zb3J0QnkubWFwKGZ1bmN0aW9uKHMpe3ZhciBpPV90aGlzLmludGVybmFsT3B0aW9ucy5zb3J0QnkuZmluZEluZGV4KGZ1bmN0aW9uKGspe3JldHVybiBrPT09czt9KTtyZXR1cm4gaT4tMT9fdGhpcy5pbnRlcm5hbE9wdGlvbnMuc29ydERlc2NbaV06ZmFsc2U7fSk7dGhpcy51cGRhdGVPcHRpb25zKHtzb3J0Qnk6c29ydEJ5LHNvcnREZXNjOnNvcnREZXNjfSk7fSx1cGRhdGVPcHRpb25zOmZ1bmN0aW9uIHVwZGF0ZU9wdGlvbnMob3B0aW9ucyl7dGhpcy5pbnRlcm5hbE9wdGlvbnM9X19hc3NpZ24oe30sdGhpcy5pbnRlcm5hbE9wdGlvbnMsb3B0aW9ucyx7cGFnZTp0aGlzLnNlcnZlckl0ZW1zTGVuZ3RoPDA/TWF0aC5tYXgoMSxNYXRoLm1pbihvcHRpb25zLnBhZ2V8fHRoaXMuaW50ZXJuYWxPcHRpb25zLnBhZ2UsdGhpcy5wYWdlQ291bnQpKTpvcHRpb25zLnBhZ2V8fHRoaXMuaW50ZXJuYWxPcHRpb25zLnBhZ2V9KTt9LHNvcnRJdGVtczpmdW5jdGlvbiBzb3J0SXRlbXMoaXRlbXMpe3ZhciBzb3J0Qnk9dGhpcy5pbnRlcm5hbE9wdGlvbnMuZ3JvdXBCeS5jb25jYXQodGhpcy5pbnRlcm5hbE9wdGlvbnMuc29ydEJ5KTt2YXIgc29ydERlc2M9dGhpcy5pbnRlcm5hbE9wdGlvbnMuZ3JvdXBEZXNjLmNvbmNhdCh0aGlzLmludGVybmFsT3B0aW9ucy5zb3J0RGVzYyk7cmV0dXJuIHRoaXMuY3VzdG9tU29ydChpdGVtcyxzb3J0Qnksc29ydERlc2MsdGhpcy5sb2NhbGUpO30scGFnaW5hdGVJdGVtczpmdW5jdGlvbiBwYWdpbmF0ZUl0ZW1zKGl0ZW1zKXsvLyBNYWtlIHN1cmUgd2UgZG9uJ3QgdHJ5IHRvIGRpc3BsYXkgbm9uLWV4aXN0YW50IHBhZ2UgaWYgaXRlbXMgc3VkZGVubHkgY2hhbmdlCi8vIFRPRE86IENvdWxkIHBvc3NpYmx5IG1vdmUgdGhpcyB0byBwYWdlU3RhcnQvcGFnZVN0b3A/CmlmKGl0ZW1zLmxlbmd0aDx0aGlzLnBhZ2VTdGFydCl0aGlzLmludGVybmFsT3B0aW9ucy5wYWdlPTE7cmV0dXJuIGl0ZW1zLnNsaWNlKHRoaXMucGFnZVN0YXJ0LHRoaXMucGFnZVN0b3ApO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoKXtyZXR1cm4gdGhpcy4kc2NvcGVkU2xvdHMuZGVmYXVsdCYmdGhpcy4kc2NvcGVkU2xvdHMuZGVmYXVsdCh0aGlzLnNjb3BlZFByb3BzKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGEvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0YS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZEYXRhLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEYXRhSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGF0YV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkRhdGEgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YS9WRGF0YS50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZEYXRhIixmdW5jdGlvbigpe3JldHVybiBfVkRhdGFfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZEYXRhX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YUl0ZXJhdG9yL1ZEYXRhRm9vdGVyLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRhdGFJdGVyYXRvci9WRGF0YUZvb3Rlci5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEYXRhSXRlcmF0b3JWRGF0YUZvb3RlclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhSXRlcmF0b3IvVkRhdGFGb290ZXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZEYXRhSXRlcmF0b3IvVkRhdGFGb290ZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGFJdGVyYXRvclZEYXRhRm9vdGVyVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGFGb290ZXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkRhdGFGb290ZXIuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhSXRlcmF0b3IvVkRhdGFGb290ZXIuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGF0YUZvb3Rlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WRGF0YUZvb3Rlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2VsZWN0X1ZTZWxlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WU2VsZWN0L1ZTZWxlY3QgKi8iLi9zcmMvY29tcG9uZW50cy9WU2VsZWN0L1ZTZWxlY3QudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WQnRuICovIi4vc3JjL2NvbXBvbmVudHMvVkJ0bi9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18pO2Z1bmN0aW9uIF90eXBlb2Yob2JqKXtpZih0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmX3R5cGVvZjIoU3ltYm9sLml0ZXJhdG9yKT09PSJzeW1ib2wiKXtfdHlwZW9mPWZ1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gX3R5cGVvZjIob2JqKTt9O31lbHNle190eXBlb2Y9ZnVuY3Rpb24gX3R5cGVvZihvYmope3JldHVybiBvYmomJnR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvYmouY29uc3RydWN0b3I9PT1TeW1ib2wmJm9iaiE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6X3R5cGVvZjIob2JqKTt9O31yZXR1cm4gX3R5cGVvZihvYmopO30vLyBDb21wb25lbnRzCi8vIFR5cGVzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09dnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19fZGVmYXVsdC5hLmV4dGVuZCh7bmFtZTondi1kYXRhLWZvb3RlcicscHJvcHM6e29wdGlvbnM6e3R5cGU6T2JqZWN0LHJlcXVpcmVkOnRydWV9LHBhZ2luYXRpb246e3R5cGU6T2JqZWN0LHJlcXVpcmVkOnRydWV9LGl0ZW1zUGVyUGFnZU9wdGlvbnM6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybls1LDEwLDE1LC0xXTt9fSxwcmV2SWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJHByZXYnfSxuZXh0SWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJG5leHQnfSxmaXJzdEljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRmaXJzdCd9LGxhc3RJY29uOnt0eXBlOlN0cmluZyxkZWZhdWx0OickbGFzdCd9LGl0ZW1zUGVyUGFnZVRleHQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyR2dWV0aWZ5LmRhdGFGb290ZXIuaXRlbXNQZXJQYWdlVGV4dCd9LGl0ZW1zUGVyUGFnZUFsbFRleHQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyR2dWV0aWZ5LmRhdGFGb290ZXIuaXRlbXNQZXJQYWdlQWxsJ30sc2hvd0ZpcnN0TGFzdFBhZ2U6Qm9vbGVhbixzaG93Q3VycmVudFBhZ2U6Qm9vbGVhbixkaXNhYmxlUGFnaW5hdGlvbjpCb29sZWFuLGRpc2FibGVJdGVtc1BlclBhZ2U6Qm9vbGVhbixwYWdlVGV4dDp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJHZ1ZXRpZnkuZGF0YUZvb3Rlci5wYWdlVGV4dCd9fSxjb21wdXRlZDp7ZGlzYWJsZU5leHRQYWdlSWNvbjpmdW5jdGlvbiBkaXNhYmxlTmV4dFBhZ2VJY29uKCl7cmV0dXJuIHRoaXMub3B0aW9ucy5pdGVtc1BlclBhZ2U8MHx8dGhpcy5vcHRpb25zLnBhZ2UqdGhpcy5vcHRpb25zLml0ZW1zUGVyUGFnZT49dGhpcy5wYWdpbmF0aW9uLml0ZW1zTGVuZ3RofHx0aGlzLnBhZ2luYXRpb24ucGFnZVN0b3A8MDt9LGNvbXB1dGVkSXRlbXNQZXJQYWdlT3B0aW9uczpmdW5jdGlvbiBjb21wdXRlZEl0ZW1zUGVyUGFnZU9wdGlvbnMoKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gdGhpcy5pdGVtc1BlclBhZ2VPcHRpb25zLm1hcChmdW5jdGlvbihvcHRpb24pe2lmKF90eXBlb2Yob3B0aW9uKT09PSdvYmplY3QnKXJldHVybiBvcHRpb247ZWxzZSByZXR1cm4gX3RoaXMuZ2VuSXRlbXNQZXJQYWdlT3B0aW9uKG9wdGlvbik7fSk7fX0sbWV0aG9kczp7dXBkYXRlT3B0aW9uczpmdW5jdGlvbiB1cGRhdGVPcHRpb25zKG9iail7dGhpcy4kZW1pdCgndXBkYXRlOm9wdGlvbnMnLE9iamVjdC5hc3NpZ24oe30sdGhpcy5vcHRpb25zLG9iaikpO30sb25GaXJzdFBhZ2U6ZnVuY3Rpb24gb25GaXJzdFBhZ2UoKXt0aGlzLnVwZGF0ZU9wdGlvbnMoe3BhZ2U6MX0pO30sb25QcmV2aW91c1BhZ2U6ZnVuY3Rpb24gb25QcmV2aW91c1BhZ2UoKXt0aGlzLnVwZGF0ZU9wdGlvbnMoe3BhZ2U6dGhpcy5vcHRpb25zLnBhZ2UtMX0pO30sb25OZXh0UGFnZTpmdW5jdGlvbiBvbk5leHRQYWdlKCl7dGhpcy51cGRhdGVPcHRpb25zKHtwYWdlOnRoaXMub3B0aW9ucy5wYWdlKzF9KTt9LG9uTGFzdFBhZ2U6ZnVuY3Rpb24gb25MYXN0UGFnZSgpe3RoaXMudXBkYXRlT3B0aW9ucyh7cGFnZTp0aGlzLnBhZ2luYXRpb24ucGFnZUNvdW50fSk7fSxvbkNoYW5nZUl0ZW1zUGVyUGFnZTpmdW5jdGlvbiBvbkNoYW5nZUl0ZW1zUGVyUGFnZShpdGVtc1BlclBhZ2Upe3RoaXMudXBkYXRlT3B0aW9ucyh7aXRlbXNQZXJQYWdlOml0ZW1zUGVyUGFnZSxwYWdlOjF9KTt9LGdlbkl0ZW1zUGVyUGFnZU9wdGlvbjpmdW5jdGlvbiBnZW5JdGVtc1BlclBhZ2VPcHRpb24ob3B0aW9uKXtyZXR1cm57dGV4dDpvcHRpb249PT0tMT90aGlzLiR2dWV0aWZ5LmxhbmcudCh0aGlzLml0ZW1zUGVyUGFnZUFsbFRleHQpOlN0cmluZyhvcHRpb24pLHZhbHVlOm9wdGlvbn07fSxnZW5JdGVtc1BlclBhZ2VTZWxlY3Q6ZnVuY3Rpb24gZ2VuSXRlbXNQZXJQYWdlU2VsZWN0KCl7dmFyIHZhbHVlPXRoaXMub3B0aW9ucy5pdGVtc1BlclBhZ2U7dmFyIGNvbXB1dGVkSVBQTz10aGlzLmNvbXB1dGVkSXRlbXNQZXJQYWdlT3B0aW9ucztpZihjb21wdXRlZElQUE8ubGVuZ3RoPD0xKXJldHVybiBudWxsO2lmKCFjb21wdXRlZElQUE8uZmluZChmdW5jdGlvbihpcHBvKXtyZXR1cm4gaXBwby52YWx1ZT09PXZhbHVlO30pKXZhbHVlPWNvbXB1dGVkSVBQT1swXTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtZGF0YS1mb290ZXJfX3NlbGVjdCd9LFt0aGlzLiR2dWV0aWZ5LmxhbmcudCh0aGlzLml0ZW1zUGVyUGFnZVRleHQpLHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZTZWxlY3RfVlNlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0se2F0dHJzOnsnYXJpYS1sYWJlbCc6dGhpcy5pdGVtc1BlclBhZ2VUZXh0fSxwcm9wczp7ZGlzYWJsZWQ6dGhpcy5kaXNhYmxlSXRlbXNQZXJQYWdlLGl0ZW1zOmNvbXB1dGVkSVBQTyx2YWx1ZTp2YWx1ZSxoaWRlRGV0YWlsczp0cnVlLGF1dG86dHJ1ZSxtaW5XaWR0aDonNzVweCd9LG9uOntpbnB1dDp0aGlzLm9uQ2hhbmdlSXRlbXNQZXJQYWdlfX0pXSk7fSxnZW5QYWdpbmF0aW9uSW5mbzpmdW5jdGlvbiBnZW5QYWdpbmF0aW9uSW5mbygpe3ZhciBjaGlsZHJlbj1bJ+KAkyddO2lmKHRoaXMucGFnaW5hdGlvbi5pdGVtc0xlbmd0aCl7dmFyIGl0ZW1zTGVuZ3RoPXRoaXMucGFnaW5hdGlvbi5pdGVtc0xlbmd0aDt2YXIgcGFnZVN0YXJ0PXRoaXMucGFnaW5hdGlvbi5wYWdlU3RhcnQrMTt2YXIgcGFnZVN0b3A9aXRlbXNMZW5ndGg8dGhpcy5wYWdpbmF0aW9uLnBhZ2VTdG9wfHx0aGlzLnBhZ2luYXRpb24ucGFnZVN0b3A8MD9pdGVtc0xlbmd0aDp0aGlzLnBhZ2luYXRpb24ucGFnZVN0b3A7Y2hpbGRyZW49dGhpcy4kc2NvcGVkU2xvdHNbJ3BhZ2UtdGV4dCddP1t0aGlzLiRzY29wZWRTbG90c1sncGFnZS10ZXh0J10oe3BhZ2VTdGFydDpwYWdlU3RhcnQscGFnZVN0b3A6cGFnZVN0b3AsaXRlbXNMZW5ndGg6aXRlbXNMZW5ndGh9KV06W3RoaXMuJHZ1ZXRpZnkubGFuZy50KHRoaXMucGFnZVRleHQscGFnZVN0YXJ0LHBhZ2VTdG9wLGl0ZW1zTGVuZ3RoKV07fXJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtjbGFzczondi1kYXRhLWZvb3Rlcl9fcGFnaW5hdGlvbid9LGNoaWxkcmVuKTt9LGdlbkljb246ZnVuY3Rpb24gZ2VuSWNvbihjbGljayxkaXNhYmxlZCxsYWJlbCxpY29uKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkJ0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0se3Byb3BzOntkaXNhYmxlZDpkaXNhYmxlZHx8dGhpcy5kaXNhYmxlUGFnaW5hdGlvbixpY29uOnRydWUsdGV4dDp0cnVlfSxvbjp7Y2xpY2s6Y2xpY2t9LGF0dHJzOnsnYXJpYS1sYWJlbCc6bGFiZWx9fSxbdGhpcy4kY3JlYXRlRWxlbWVudChfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLGljb24pXSk7fSxnZW5JY29uczpmdW5jdGlvbiBnZW5JY29ucygpe3ZhciBiZWZvcmU9W107dmFyIGFmdGVyPVtdO2JlZm9yZS5wdXNoKHRoaXMuZ2VuSWNvbih0aGlzLm9uUHJldmlvdXNQYWdlLHRoaXMub3B0aW9ucy5wYWdlPT09MSx0aGlzLiR2dWV0aWZ5LmxhbmcudCgnJHZ1ZXRpZnkuZGF0YUZvb3Rlci5wcmV2UGFnZScpLHRoaXMuJHZ1ZXRpZnkucnRsP3RoaXMubmV4dEljb246dGhpcy5wcmV2SWNvbikpO2FmdGVyLnB1c2godGhpcy5nZW5JY29uKHRoaXMub25OZXh0UGFnZSx0aGlzLmRpc2FibGVOZXh0UGFnZUljb24sdGhpcy4kdnVldGlmeS5sYW5nLnQoJyR2dWV0aWZ5LmRhdGFGb290ZXIubmV4dFBhZ2UnKSx0aGlzLiR2dWV0aWZ5LnJ0bD90aGlzLnByZXZJY29uOnRoaXMubmV4dEljb24pKTtpZih0aGlzLnNob3dGaXJzdExhc3RQYWdlKXtiZWZvcmUudW5zaGlmdCh0aGlzLmdlbkljb24odGhpcy5vbkZpcnN0UGFnZSx0aGlzLm9wdGlvbnMucGFnZT09PTEsdGhpcy4kdnVldGlmeS5sYW5nLnQoJyR2dWV0aWZ5LmRhdGFGb290ZXIuZmlyc3RQYWdlJyksdGhpcy4kdnVldGlmeS5ydGw/dGhpcy5sYXN0SWNvbjp0aGlzLmZpcnN0SWNvbikpO2FmdGVyLnB1c2godGhpcy5nZW5JY29uKHRoaXMub25MYXN0UGFnZSx0aGlzLm9wdGlvbnMucGFnZT49dGhpcy5wYWdpbmF0aW9uLnBhZ2VDb3VudHx8dGhpcy5vcHRpb25zLml0ZW1zUGVyUGFnZT09PS0xLHRoaXMuJHZ1ZXRpZnkubGFuZy50KCckdnVldGlmeS5kYXRhRm9vdGVyLmxhc3RQYWdlJyksdGhpcy4kdnVldGlmeS5ydGw/dGhpcy5maXJzdEljb246dGhpcy5sYXN0SWNvbikpO31yZXR1cm5bdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtZGF0YS1mb290ZXJfX2ljb25zLWJlZm9yZSd9LGJlZm9yZSksdGhpcy5zaG93Q3VycmVudFBhZ2UmJnRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLFt0aGlzLm9wdGlvbnMucGFnZS50b1N0cmluZygpXSksdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtZGF0YS1mb290ZXJfX2ljb25zLWFmdGVyJ30sYWZ0ZXIpXTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWRhdGEtZm9vdGVyJ30sW3RoaXMuZ2VuSXRlbXNQZXJQYWdlU2VsZWN0KCksdGhpcy5nZW5QYWdpbmF0aW9uSW5mbygpLHRoaXMuZ2VuSWNvbnMoKV0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YUl0ZXJhdG9yL1ZEYXRhSXRlcmF0b3IudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRhdGFJdGVyYXRvci9WRGF0YUl0ZXJhdG9yLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGFJdGVyYXRvclZEYXRhSXRlcmF0b3JUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGF0YV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZEYXRhICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGEvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGFGb290ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEYXRhRm9vdGVyICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFJdGVyYXRvci9WRGF0YUZvb3Rlci50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9Oy8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8vIEhlbHBlcnMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0uZXh0ZW5kKHtuYW1lOid2LWRhdGEtaXRlcmF0b3InLHByb3BzOl9fYXNzaWduKHt9LF9WRGF0YV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJWRGF0YSJdLm9wdGlvbnMucHJvcHMse2l0ZW1LZXk6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2lkJ30sdmFsdWU6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LHNpbmdsZVNlbGVjdDpCb29sZWFuLGV4cGFuZGVkOnt0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bXTt9fSxzaW5nbGVFeHBhbmQ6Qm9vbGVhbixsb2FkaW5nOltCb29sZWFuLFN0cmluZ10sbm9SZXN1bHRzVGV4dDp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJHZ1ZXRpZnkuZGF0YUl0ZXJhdG9yLm5vUmVzdWx0c1RleHQnfSxub0RhdGFUZXh0Ont0eXBlOlN0cmluZyxkZWZhdWx0OickdnVldGlmeS5ub0RhdGFUZXh0J30sbG9hZGluZ1RleHQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyR2dWV0aWZ5LmRhdGFJdGVyYXRvci5sb2FkaW5nVGV4dCd9LGhpZGVEZWZhdWx0Rm9vdGVyOkJvb2xlYW4sZm9vdGVyUHJvcHM6T2JqZWN0fSksZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3NlbGVjdGlvbjp7fSxleHBhbnNpb246e30saW50ZXJuYWxDdXJyZW50SXRlbXM6W119O30sY29tcHV0ZWQ6e2V2ZXJ5SXRlbTpmdW5jdGlvbiBldmVyeUl0ZW0oKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4hIXRoaXMuaW50ZXJuYWxDdXJyZW50SXRlbXMubGVuZ3RoJiZ0aGlzLmludGVybmFsQ3VycmVudEl0ZW1zLmV2ZXJ5KGZ1bmN0aW9uKGkpe3JldHVybiBfdGhpcy5pc1NlbGVjdGVkKGkpO30pO30sc29tZUl0ZW1zOmZ1bmN0aW9uIHNvbWVJdGVtcygpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0aGlzLmludGVybmFsQ3VycmVudEl0ZW1zLnNvbWUoZnVuY3Rpb24oaSl7cmV0dXJuIF90aGlzLmlzU2VsZWN0ZWQoaSk7fSk7fSxzYW5pdGl6ZWRGb290ZXJQcm9wczpmdW5jdGlvbiBzYW5pdGl6ZWRGb290ZXJQcm9wcygpe3JldHVybiBPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJjYW1lbGl6ZU9iamVjdEtleXMiXSkodGhpcy5mb290ZXJQcm9wcyk7fX0sd2F0Y2g6e3ZhbHVlOntoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIodmFsdWUpe3ZhciBfdGhpcz10aGlzO3RoaXMuc2VsZWN0aW9uPXZhbHVlLnJlZHVjZShmdW5jdGlvbihzZWxlY3Rpb24saXRlbSl7c2VsZWN0aW9uW09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKGl0ZW0sX3RoaXMuaXRlbUtleSldPWl0ZW07cmV0dXJuIHNlbGVjdGlvbjt9LHt9KTt9LGltbWVkaWF0ZTp0cnVlfSxzZWxlY3Rpb246ZnVuY3Rpb24gc2VsZWN0aW9uKHZhbHVlLG9sZCl7aWYoT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVlcEVxdWFsIl0pKE9iamVjdC5rZXlzKHZhbHVlKSxPYmplY3Qua2V5cyhvbGQpKSlyZXR1cm47dGhpcy4kZW1pdCgnaW5wdXQnLE9iamVjdC52YWx1ZXModmFsdWUpKTt9LGV4cGFuZGVkOntoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIodmFsdWUpe3ZhciBfdGhpcz10aGlzO3RoaXMuZXhwYW5zaW9uPXZhbHVlLnJlZHVjZShmdW5jdGlvbihleHBhbnNpb24saXRlbSl7ZXhwYW5zaW9uW09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKGl0ZW0sX3RoaXMuaXRlbUtleSldPXRydWU7cmV0dXJuIGV4cGFuc2lvbjt9LHt9KTt9LGltbWVkaWF0ZTp0cnVlfSxleHBhbnNpb246ZnVuY3Rpb24gZXhwYW5zaW9uKHZhbHVlLG9sZCl7dmFyIF90aGlzPXRoaXM7aWYoT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVlcEVxdWFsIl0pKHZhbHVlLG9sZCkpcmV0dXJuO3ZhciBrZXlzPU9iamVjdC5rZXlzKHZhbHVlKS5maWx0ZXIoZnVuY3Rpb24oayl7cmV0dXJuIHZhbHVlW2tdO30pO3ZhciBleHBhbmRlZD0ha2V5cy5sZW5ndGg/W106dGhpcy5pdGVtcy5maWx0ZXIoZnVuY3Rpb24oaSl7cmV0dXJuIGtleXMuaW5jbHVkZXMoU3RyaW5nKE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKGksX3RoaXMuaXRlbUtleSkpKTt9KTt0aGlzLiRlbWl0KCd1cGRhdGU6ZXhwYW5kZWQnLGV4cGFuZGVkKTt9fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXt2YXIgX3RoaXM9dGhpczt2YXIgYnJlYWtpbmdQcm9wcz1bWydkaXNhYmxlLWluaXRpYWwtc29ydCcsJ3NvcnQtYnknXSxbJ2ZpbHRlcicsJ2N1c3RvbS1maWx0ZXInXSxbJ3BhZ2luYXRpb24nLCdvcHRpb25zJ10sWyd0b3RhbC1pdGVtcycsJ3NlcnZlci1pdGVtcy1sZW5ndGgnXSxbJ2hpZGUtYWN0aW9ucycsJ2hpZGUtZGVmYXVsdC1mb290ZXInXSxbJ3Jvd3MtcGVyLXBhZ2UtaXRlbXMnLCdmb290ZXItcHJvcHMuaXRlbXMtcGVyLXBhZ2Utb3B0aW9ucyddLFsncm93cy1wZXItcGFnZS10ZXh0JywnZm9vdGVyLXByb3BzLml0ZW1zLXBlci1wYWdlLXRleHQnXSxbJ3ByZXYtaWNvbicsJ2Zvb3Rlci1wcm9wcy5wcmV2LWljb24nXSxbJ25leHQtaWNvbicsJ2Zvb3Rlci1wcm9wcy5uZXh0LWljb24nXV07LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9icmVha2luZ1Byb3BzLmZvckVhY2goZnVuY3Rpb24oX2Epe3ZhciBfYj1fX3JlYWQoX2EsMiksb3JpZ2luYWw9X2JbMF0scmVwbGFjZW1lbnQ9X2JbMV07aWYoX3RoaXMuJGF0dHJzLmhhc093blByb3BlcnR5KG9yaWdpbmFsKSlPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJicmVha2luZyJdKShvcmlnaW5hbCxyZXBsYWNlbWVudCxfdGhpcyk7fSk7dmFyIHJlbW92ZWRQcm9wcz1bJ2V4cGFuZCcsJ2NvbnRlbnQtY2xhc3MnLCdjb250ZW50LXByb3BzJywnY29udGVudC10YWcnXTsvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3JlbW92ZWRQcm9wcy5mb3JFYWNoKGZ1bmN0aW9uKHByb3Ape2lmKF90aGlzLiRhdHRycy5oYXNPd25Qcm9wZXJ0eShwcm9wKSlPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJyZW1vdmVkIl0pKHByb3ApO30pO30sbWV0aG9kczp7dG9nZ2xlU2VsZWN0QWxsOmZ1bmN0aW9uIHRvZ2dsZVNlbGVjdEFsbCh2YWx1ZSl7dmFyIF90aGlzPXRoaXM7dmFyIHNlbGVjdGlvbj1PYmplY3QuYXNzaWduKHt9LHRoaXMuc2VsZWN0aW9uKTt0aGlzLmludGVybmFsQ3VycmVudEl0ZW1zLmZvckVhY2goZnVuY3Rpb24oaXRlbSl7dmFyIGtleT1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJnZXRPYmplY3RWYWx1ZUJ5UGF0aCJdKShpdGVtLF90aGlzLml0ZW1LZXkpO2lmKHZhbHVlKXNlbGVjdGlvbltrZXldPWl0ZW07ZWxzZSBkZWxldGUgc2VsZWN0aW9uW2tleV07fSk7dGhpcy5zZWxlY3Rpb249c2VsZWN0aW9uO3RoaXMuJGVtaXQoJ3RvZ2dsZS1zZWxlY3QtYWxsJyx7dmFsdWU6dmFsdWV9KTt9LGlzU2VsZWN0ZWQ6ZnVuY3Rpb24gaXNTZWxlY3RlZChpdGVtKXtyZXR1cm4hIXRoaXMuc2VsZWN0aW9uW09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKGl0ZW0sdGhpcy5pdGVtS2V5KV18fGZhbHNlO30sc2VsZWN0OmZ1bmN0aW9uIHNlbGVjdChpdGVtLHZhbHVlLGVtaXQpe2lmKHZhbHVlPT09dm9pZCAwKXt2YWx1ZT10cnVlO31pZihlbWl0PT09dm9pZCAwKXtlbWl0PXRydWU7fXZhciBzZWxlY3Rpb249dGhpcy5zaW5nbGVTZWxlY3Q/e306T2JqZWN0LmFzc2lnbih7fSx0aGlzLnNlbGVjdGlvbik7dmFyIGtleT1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJnZXRPYmplY3RWYWx1ZUJ5UGF0aCJdKShpdGVtLHRoaXMuaXRlbUtleSk7aWYodmFsdWUpc2VsZWN0aW9uW2tleV09aXRlbTtlbHNlIGRlbGV0ZSBzZWxlY3Rpb25ba2V5XTt0aGlzLnNlbGVjdGlvbj1zZWxlY3Rpb247ZW1pdCYmdGhpcy4kZW1pdCgnaXRlbS1zZWxlY3RlZCcse2l0ZW06aXRlbSx2YWx1ZTp2YWx1ZX0pO30saXNFeHBhbmRlZDpmdW5jdGlvbiBpc0V4cGFuZGVkKGl0ZW0pe3JldHVybiB0aGlzLmV4cGFuc2lvbltPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJnZXRPYmplY3RWYWx1ZUJ5UGF0aCJdKShpdGVtLHRoaXMuaXRlbUtleSldfHxmYWxzZTt9LGV4cGFuZDpmdW5jdGlvbiBleHBhbmQoaXRlbSx2YWx1ZSl7aWYodmFsdWU9PT12b2lkIDApe3ZhbHVlPXRydWU7fXZhciBleHBhbnNpb249dGhpcy5zaW5nbGVFeHBhbmQ/e306T2JqZWN0LmFzc2lnbih7fSx0aGlzLmV4cGFuc2lvbik7dmFyIGtleT1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJnZXRPYmplY3RWYWx1ZUJ5UGF0aCJdKShpdGVtLHRoaXMuaXRlbUtleSk7aWYodmFsdWUpZXhwYW5zaW9uW2tleV09dHJ1ZTtlbHNlIGRlbGV0ZSBleHBhbnNpb25ba2V5XTt0aGlzLmV4cGFuc2lvbj1leHBhbnNpb247dGhpcy4kZW1pdCgnaXRlbS1leHBhbmRlZCcse2l0ZW06aXRlbSx2YWx1ZTp2YWx1ZX0pO30sY3JlYXRlSXRlbVByb3BzOmZ1bmN0aW9uIGNyZWF0ZUl0ZW1Qcm9wcyhpdGVtKXt2YXIgX3RoaXM9dGhpczt2YXIgcHJvcHM9e2l0ZW06aXRlbSxzZWxlY3Q6ZnVuY3Rpb24gc2VsZWN0KHYpe3JldHVybiBfdGhpcy5zZWxlY3QoaXRlbSx2KTt9LGlzU2VsZWN0ZWQ6dGhpcy5pc1NlbGVjdGVkKGl0ZW0pLGV4cGFuZDpmdW5jdGlvbiBleHBhbmQodil7cmV0dXJuIF90aGlzLmV4cGFuZChpdGVtLHYpO30saXNFeHBhbmRlZDp0aGlzLmlzRXhwYW5kZWQoaXRlbSl9O3JldHVybiBwcm9wczt9LGdlbkVtcHR5V3JhcHBlcjpmdW5jdGlvbiBnZW5FbXB0eVdyYXBwZXIoY29udGVudCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsY29udGVudCk7fSxnZW5FbXB0eTpmdW5jdGlvbiBnZW5FbXB0eShvcmlnaW5hbEl0ZW1zTGVuZ3RoLGZpbHRlcmVkSXRlbXNMZW5ndGgpe2lmKG9yaWdpbmFsSXRlbXNMZW5ndGg9PT0wJiZ0aGlzLmxvYWRpbmcpe3ZhciBsb2FkaW5nPXRoaXMuJHNsb3RzWydsb2FkaW5nJ118fHRoaXMuJHZ1ZXRpZnkubGFuZy50KHRoaXMubG9hZGluZ1RleHQpO3JldHVybiB0aGlzLmdlbkVtcHR5V3JhcHBlcihsb2FkaW5nKTt9ZWxzZSBpZihvcmlnaW5hbEl0ZW1zTGVuZ3RoPT09MCl7dmFyIG5vRGF0YT10aGlzLiRzbG90c1snbm8tZGF0YSddfHx0aGlzLiR2dWV0aWZ5LmxhbmcudCh0aGlzLm5vRGF0YVRleHQpO3JldHVybiB0aGlzLmdlbkVtcHR5V3JhcHBlcihub0RhdGEpO31lbHNlIGlmKGZpbHRlcmVkSXRlbXNMZW5ndGg9PT0wKXt2YXIgbm9SZXN1bHRzPXRoaXMuJHNsb3RzWyduby1yZXN1bHRzJ118fHRoaXMuJHZ1ZXRpZnkubGFuZy50KHRoaXMubm9SZXN1bHRzVGV4dCk7cmV0dXJuIHRoaXMuZ2VuRW1wdHlXcmFwcGVyKG5vUmVzdWx0cyk7fXJldHVybiBudWxsO30sZ2VuSXRlbXM6ZnVuY3Rpb24gZ2VuSXRlbXMocHJvcHMpe3ZhciBfdGhpcz10aGlzO3ZhciBlbXB0eT10aGlzLmdlbkVtcHR5KHByb3BzLm9yaWdpbmFsSXRlbXNMZW5ndGgscHJvcHMucGFnaW5hdGlvbi5pdGVtc0xlbmd0aCk7aWYoZW1wdHkpcmV0dXJuW2VtcHR5XTtpZih0aGlzLiRzY29wZWRTbG90cy5kZWZhdWx0KXtyZXR1cm4gdGhpcy4kc2NvcGVkU2xvdHMuZGVmYXVsdChfX2Fzc2lnbih7fSxwcm9wcyx7aXNTZWxlY3RlZDp0aGlzLmlzU2VsZWN0ZWQsc2VsZWN0OnRoaXMuc2VsZWN0LGlzRXhwYW5kZWQ6dGhpcy5pc0V4cGFuZGVkLGV4cGFuZDp0aGlzLmV4cGFuZH0pKTt9aWYodGhpcy4kc2NvcGVkU2xvdHMuaXRlbSl7cmV0dXJuIHByb3BzLml0ZW1zLm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gX3RoaXMuJHNjb3BlZFNsb3RzLml0ZW0oX3RoaXMuY3JlYXRlSXRlbVByb3BzKGl0ZW0pKTt9KTt9cmV0dXJuW107fSxnZW5Gb290ZXI6ZnVuY3Rpb24gZ2VuRm9vdGVyKHByb3BzKXtpZih0aGlzLmhpZGVEZWZhdWx0Rm9vdGVyKXJldHVybiBudWxsO3ZhciBkYXRhPXtwcm9wczpfX2Fzc2lnbih7fSx0aGlzLnNhbml0aXplZEZvb3RlclByb3BzLHtvcHRpb25zOnByb3BzLm9wdGlvbnMscGFnaW5hdGlvbjpwcm9wcy5wYWdpbmF0aW9ufSksb246eyd1cGRhdGU6b3B0aW9ucyc6ZnVuY3Rpb24gdXBkYXRlT3B0aW9ucyh2YWx1ZSl7cmV0dXJuIHByb3BzLnVwZGF0ZU9wdGlvbnModmFsdWUpO319fTt2YXIgc2NvcGVkU2xvdHM9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZ2V0UHJlZml4ZWRTY29wZWRTbG90cyJdKSgnZm9vdGVyLicsdGhpcy4kc2NvcGVkU2xvdHMpO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WRGF0YUZvb3Rlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sX19hc3NpZ24oe3Njb3BlZFNsb3RzOnNjb3BlZFNsb3RzfSxkYXRhKSk7fSxnZW5EZWZhdWx0U2NvcGVkU2xvdDpmdW5jdGlvbiBnZW5EZWZhdWx0U2NvcGVkU2xvdChwcm9wcyl7dmFyIG91dGVyUHJvcHM9X19hc3NpZ24oe30scHJvcHMse3NvbWVJdGVtczp0aGlzLnNvbWVJdGVtcyxldmVyeUl0ZW06dGhpcy5ldmVyeUl0ZW0sdG9nZ2xlU2VsZWN0QWxsOnRoaXMudG9nZ2xlU2VsZWN0QWxsfSk7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWRhdGEtaXRlcmF0b3InfSxbT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZ2V0U2xvdCJdKSh0aGlzLCdoZWFkZXInLG91dGVyUHJvcHMsdHJ1ZSksdGhpcy5nZW5JdGVtcyhwcm9wcyksdGhpcy5nZW5Gb290ZXIocHJvcHMpLE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImdldFNsb3QiXSkodGhpcywnZm9vdGVyJyxvdXRlclByb3BzLHRydWUpXSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcigpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WRGF0YV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJWRGF0YSJdLHtwcm9wczp0aGlzLiRwcm9wcyxvbjp7J3VwZGF0ZTpvcHRpb25zJzpmdW5jdGlvbiB1cGRhdGVPcHRpb25zKHYsb2xkKXtyZXR1cm4hT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVlcEVxdWFsIl0pKHYsb2xkKSYmX3RoaXMuJGVtaXQoJ3VwZGF0ZTpvcHRpb25zJyx2KTt9LCd1cGRhdGU6cGFnZSc6ZnVuY3Rpb24gdXBkYXRlUGFnZSh2KXtyZXR1cm4gX3RoaXMuJGVtaXQoJ3VwZGF0ZTpwYWdlJyx2KTt9LCd1cGRhdGU6aXRlbXMtcGVyLXBhZ2UnOmZ1bmN0aW9uIHVwZGF0ZUl0ZW1zUGVyUGFnZSh2KXtyZXR1cm4gX3RoaXMuJGVtaXQoJ3VwZGF0ZTppdGVtcy1wZXItcGFnZScsdik7fSwndXBkYXRlOnNvcnQtYnknOmZ1bmN0aW9uIHVwZGF0ZVNvcnRCeSh2KXtyZXR1cm4gX3RoaXMuJGVtaXQoJ3VwZGF0ZTpzb3J0LWJ5Jyx2KTt9LCd1cGRhdGU6c29ydC1kZXNjJzpmdW5jdGlvbiB1cGRhdGVTb3J0RGVzYyh2KXtyZXR1cm4gX3RoaXMuJGVtaXQoJ3VwZGF0ZTpzb3J0LWRlc2MnLHYpO30sJ3VwZGF0ZTpncm91cC1ieSc6ZnVuY3Rpb24gdXBkYXRlR3JvdXBCeSh2KXtyZXR1cm4gX3RoaXMuJGVtaXQoJ3VwZGF0ZTpncm91cC1ieScsdik7fSwndXBkYXRlOmdyb3VwLWRlc2MnOmZ1bmN0aW9uIHVwZGF0ZUdyb3VwRGVzYyh2KXtyZXR1cm4gX3RoaXMuJGVtaXQoJ3VwZGF0ZTpncm91cC1kZXNjJyx2KTt9LHBhZ2luYXRpb246ZnVuY3Rpb24gcGFnaW5hdGlvbih2LG9sZCl7cmV0dXJuIU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZXBFcXVhbCJdKSh2LG9sZCkmJl90aGlzLiRlbWl0KCdwYWdpbmF0aW9uJyx2KTt9LCdjdXJyZW50LWl0ZW1zJzpmdW5jdGlvbiBjdXJyZW50SXRlbXModil7X3RoaXMuaW50ZXJuYWxDdXJyZW50SXRlbXM9djtfdGhpcy4kZW1pdCgnY3VycmVudC1pdGVtcycsdik7fX0sc2NvcGVkU2xvdHM6e2RlZmF1bHQ6dGhpcy5nZW5EZWZhdWx0U2NvcGVkU2xvdH19KTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFJdGVyYXRvci9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRhdGFJdGVyYXRvci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVkRhdGFJdGVyYXRvciwgVkRhdGFGb290ZXIsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGFJdGVyYXRvckluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGFJdGVyYXRvcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkRhdGFJdGVyYXRvciAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhSXRlcmF0b3IvVkRhdGFJdGVyYXRvci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZEYXRhSXRlcmF0b3IiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRGF0YUl0ZXJhdG9yX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGFGb290ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEYXRhRm9vdGVyICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFJdGVyYXRvci9WRGF0YUZvb3Rlci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZEYXRhRm9vdGVyIixmdW5jdGlvbigpe3JldHVybiBfVkRhdGFGb290ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09eyRfdnVldGlmeV9zdWJjb21wb25lbnRzOntWRGF0YUl0ZXJhdG9yOl9WRGF0YUl0ZXJhdG9yX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSxWRGF0YUZvb3RlcjpfVkRhdGFGb290ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdfX07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9Nb2JpbGVSb3cudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL01vYmlsZVJvdy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGFUYWJsZU1vYmlsZVJvd1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQuYS5leHRlbmQoe25hbWU6J3JvdycsZnVuY3Rpb25hbDp0cnVlLHByb3BzOntoZWFkZXJzOkFycmF5LGl0ZW06T2JqZWN0LHJ0bDpCb29sZWFufSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgsX2Epe3ZhciBwcm9wcz1fYS5wcm9wcyxzbG90cz1fYS5zbG90cyxkYXRhPV9hLmRhdGE7dmFyIGNvbXB1dGVkU2xvdHM9c2xvdHMoKTt2YXIgY29sdW1ucz1wcm9wcy5oZWFkZXJzLm1hcChmdW5jdGlvbihoZWFkZXIpe3ZhciBjbGFzc2VzPXsndi1kYXRhLXRhYmxlX19tb2JpbGUtcm93Jzp0cnVlfTt2YXIgY2hpbGRyZW49W107dmFyIHZhbHVlPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKHByb3BzLml0ZW0saGVhZGVyLnZhbHVlKTt2YXIgc2xvdE5hbWU9aGVhZGVyLnZhbHVlO3ZhciBzY29wZWRTbG90PWRhdGEuc2NvcGVkU2xvdHMmJmRhdGEuc2NvcGVkU2xvdHNbc2xvdE5hbWVdO3ZhciByZWd1bGFyU2xvdD1jb21wdXRlZFNsb3RzW3Nsb3ROYW1lXTtpZihzY29wZWRTbG90KXtjaGlsZHJlbi5wdXNoKHNjb3BlZFNsb3Qoe2l0ZW06cHJvcHMuaXRlbSxoZWFkZXI6aGVhZGVyLHZhbHVlOnZhbHVlfSkpO31lbHNlIGlmKHJlZ3VsYXJTbG90KXtjaGlsZHJlbi5wdXNoKHJlZ3VsYXJTbG90KTt9ZWxzZXtjaGlsZHJlbi5wdXNoKHZhbHVlKTt9cmV0dXJuIGgoJ3RkJyx7Y2xhc3M6Y2xhc3Nlc30sW2goJ2Rpdicse3N0YXRpY0NsYXNzOid2LWRhdGEtdGFibGVfX21vYmlsZS1yb3dfX3dyYXBwZXInfSxbaGVhZGVyLnZhbHVlIT09J2RhdGFUYWJsZVNlbGVjdCcmJmgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWRhdGEtdGFibGVfX21vYmlsZS1yb3dfX2hlYWRlcid9LFtoZWFkZXIudGV4dF0pLGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWRhdGEtdGFibGVfX21vYmlsZS1yb3dfX2NlbGwnfSxjaGlsZHJlbildKV0pO30pO3JldHVybiBoKCd0cicsZGF0YSxjb2x1bW5zKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9Sb3cudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1Jvdy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGFUYWJsZVJvd1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvLyBUeXBlcwovLyBVdGlscwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQuYS5leHRlbmQoe25hbWU6J3JvdycsZnVuY3Rpb25hbDp0cnVlLHByb3BzOntoZWFkZXJzOkFycmF5LGl0ZW06T2JqZWN0LHJ0bDpCb29sZWFufSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgsX2Epe3ZhciBwcm9wcz1fYS5wcm9wcyxzbG90cz1fYS5zbG90cyxkYXRhPV9hLmRhdGE7dmFyIGNvbXB1dGVkU2xvdHM9c2xvdHMoKTt2YXIgY29sdW1ucz1wcm9wcy5oZWFkZXJzLm1hcChmdW5jdGlvbihoZWFkZXIpe3ZhciBjaGlsZHJlbj1bXTt2YXIgdmFsdWU9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZ2V0T2JqZWN0VmFsdWVCeVBhdGgiXSkocHJvcHMuaXRlbSxoZWFkZXIudmFsdWUpO3ZhciBzbG90TmFtZT1oZWFkZXIudmFsdWU7dmFyIHNjb3BlZFNsb3Q9ZGF0YS5zY29wZWRTbG90cyYmZGF0YS5zY29wZWRTbG90c1tzbG90TmFtZV07dmFyIHJlZ3VsYXJTbG90PWNvbXB1dGVkU2xvdHNbc2xvdE5hbWVdO2lmKHNjb3BlZFNsb3Qpe2NoaWxkcmVuLnB1c2goc2NvcGVkU2xvdCh7aXRlbTpwcm9wcy5pdGVtLGhlYWRlcjpoZWFkZXIsdmFsdWU6dmFsdWV9KSk7fWVsc2UgaWYocmVndWxhclNsb3Qpe2NoaWxkcmVuLnB1c2gocmVndWxhclNsb3QpO31lbHNle2NoaWxkcmVuLnB1c2godmFsdWUpO31yZXR1cm4gaCgndGQnLHtjbGFzczoidGV4dC0iKyhoZWFkZXIuYWxpZ258fCdzdGFydCcpfSxjaGlsZHJlbik7fSk7cmV0dXJuIGgoJ3RyJyxkYXRhLGNvbHVtbnMpO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1Jvd0dyb3VwLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1Jvd0dyb3VwLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEYXRhVGFibGVSb3dHcm91cFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9O3ZhciBfX3NwcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3NwcmVhZHx8ZnVuY3Rpb24oKXtmb3IodmFyIGFyPVtdLGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXthcj1hci5jb25jYXQoX19yZWFkKGFyZ3VtZW50c1tpXSkpO31yZXR1cm4gYXI7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQuYS5leHRlbmQoe25hbWU6J3Jvdy1ncm91cCcsZnVuY3Rpb25hbDp0cnVlLHByb3BzOnt2YWx1ZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0saGVhZGVyQ2xhc3M6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J3Ytcm93LWdyb3VwX19oZWFkZXInfSxjb250ZW50Q2xhc3M6U3RyaW5nLHN1bW1hcnlDbGFzczp7dHlwZTpTdHJpbmcsZGVmYXVsdDondi1yb3ctZ3JvdXBfX3N1bW1hcnknfX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoLF9hKXt2YXIgc2xvdHM9X2Euc2xvdHMscHJvcHM9X2EucHJvcHM7dmFyIGNvbXB1dGVkU2xvdHM9c2xvdHMoKTt2YXIgY2hpbGRyZW49W107aWYoY29tcHV0ZWRTbG90c1snY29sdW1uLmhlYWRlciddKXtjaGlsZHJlbi5wdXNoKGgoJ3RyJyx7c3RhdGljQ2xhc3M6cHJvcHMuaGVhZGVyQ2xhc3N9LGNvbXB1dGVkU2xvdHNbJ2NvbHVtbi5oZWFkZXInXSkpO31lbHNlIGlmKGNvbXB1dGVkU2xvdHNbJ3Jvdy5oZWFkZXInXSl7Y2hpbGRyZW4ucHVzaC5hcHBseShjaGlsZHJlbixfX3NwcmVhZChjb21wdXRlZFNsb3RzWydyb3cuaGVhZGVyJ10pKTt9aWYoY29tcHV0ZWRTbG90c1sncm93LmNvbnRlbnQnXSYmcHJvcHMudmFsdWUpY2hpbGRyZW4ucHVzaC5hcHBseShjaGlsZHJlbixfX3NwcmVhZChjb21wdXRlZFNsb3RzWydyb3cuY29udGVudCddKSk7aWYoY29tcHV0ZWRTbG90c1snY29sdW1uLnN1bW1hcnknXSl7Y2hpbGRyZW4ucHVzaChoKCd0cicse3N0YXRpY0NsYXNzOnByb3BzLnN1bW1hcnlDbGFzc30sY29tcHV0ZWRTbG90c1snY29sdW1uLnN1bW1hcnknXSkpO31lbHNlIGlmKGNvbXB1dGVkU2xvdHNbJ3Jvdy5zdW1tYXJ5J10pe2NoaWxkcmVuLnB1c2guYXBwbHkoY2hpbGRyZW4sX19zcHJlYWQoY29tcHV0ZWRTbG90c1sncm93LnN1bW1hcnknXSkpO31yZXR1cm4gY2hpbGRyZW47fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVkRhdGFUYWJsZS5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9WRGF0YVRhYmxlLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGF0YVRhYmxlVkRhdGFUYWJsZVNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVkRhdGFUYWJsZS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZEYXRhVGFibGUudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGF0YVRhYmxlVkRhdGFUYWJsZVRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEYXRhVGFibGVfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkRhdGFUYWJsZS5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9WRGF0YVRhYmxlLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGFUYWJsZV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WRGF0YVRhYmxlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEYXRhX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkRhdGEgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGF0YUl0ZXJhdG9yX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkRhdGFJdGVyYXRvciAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhSXRlcmF0b3IvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJ0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZCdG4gKi8iLi9zcmMvY29tcG9uZW50cy9WQnRuL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEYXRhVGFibGVIZWFkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEYXRhVGFibGVIZWFkZXIgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZEYXRhVGFibGVIZWFkZXIudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZQcm9ncmVzc0xpbmVhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZQcm9ncmVzc0xpbmVhciAqLyIuL3NyYy9jb21wb25lbnRzL1ZQcm9ncmVzc0xpbmVhci9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9Sb3dfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1JvdyAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvUm93LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1Jvd0dyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9Sb3dHcm91cCAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvUm93R3JvdXAudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNoZWNrYm94X1ZTaW1wbGVDaGVja2JveF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZDaGVja2JveC9WU2ltcGxlQ2hlY2tib3ggKi8iLi9zcmMvY29tcG9uZW50cy9WQ2hlY2tib3gvVlNpbXBsZUNoZWNrYm94LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTaW1wbGVUYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTaW1wbGVUYWJsZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVlNpbXBsZVRhYmxlLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX01vYmlsZVJvd19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL01vYmlsZVJvdyAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvTW9iaWxlUm93LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfcmlwcGxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL2RpcmVjdGl2ZXMvcmlwcGxlICovIi4vc3JjL2RpcmVjdGl2ZXMvcmlwcGxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7ZnVuY3Rpb24gX3R5cGVvZihvYmope2lmKHR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZfdHlwZW9mMihTeW1ib2wuaXRlcmF0b3IpPT09InN5bWJvbCIpe190eXBlb2Y9ZnVuY3Rpb24gX3R5cGVvZihvYmope3JldHVybiBfdHlwZW9mMihvYmopO307fWVsc2V7X3R5cGVvZj1mdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIG9iaiYmdHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9iai5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmb2JqIT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjpfdHlwZW9mMihvYmopO307fXJldHVybiBfdHlwZW9mKG9iaik7fXZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9Oy8vIENvbXBvbmVudHMKLy8gaW1wb3J0IFZWaXJ0dWFsVGFibGUgZnJvbSAnLi9WVmlydHVhbFRhYmxlJwovLyBIZWxwZXJzCmZ1bmN0aW9uIGZpbHRlckZuKGl0ZW0sc2VhcmNoLGZpbHRlcil7cmV0dXJuIGZ1bmN0aW9uKGhlYWRlcil7dmFyIHZhbHVlPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJnZXRPYmplY3RWYWx1ZUJ5UGF0aCJdKShpdGVtLGhlYWRlci52YWx1ZSk7cmV0dXJuIGhlYWRlci5maWx0ZXI/aGVhZGVyLmZpbHRlcih2YWx1ZSxzZWFyY2gsaXRlbSk6ZmlsdGVyKHZhbHVlLHNlYXJjaCxpdGVtKTt9O31mdW5jdGlvbiBzZWFyY2hUYWJsZUl0ZW1zKGl0ZW1zLHNlYXJjaCxoZWFkZXJzV2l0aEN1c3RvbUZpbHRlcnMsaGVhZGVyc1dpdGhvdXRDdXN0b21GaWx0ZXJzLGN1c3RvbUZpbHRlcil7dmFyIGZpbHRlcmVkPWl0ZW1zO3NlYXJjaD10eXBlb2Ygc2VhcmNoPT09J3N0cmluZyc/c2VhcmNoLnRyaW0oKTpudWxsO2lmKHNlYXJjaCYmaGVhZGVyc1dpdGhvdXRDdXN0b21GaWx0ZXJzLmxlbmd0aCl7ZmlsdGVyZWQ9aXRlbXMuZmlsdGVyKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBoZWFkZXJzV2l0aG91dEN1c3RvbUZpbHRlcnMuc29tZShmaWx0ZXJGbihpdGVtLHNlYXJjaCxjdXN0b21GaWx0ZXIpKTt9KTt9aWYoaGVhZGVyc1dpdGhDdXN0b21GaWx0ZXJzLmxlbmd0aCl7ZmlsdGVyZWQ9ZmlsdGVyZWQuZmlsdGVyKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBoZWFkZXJzV2l0aEN1c3RvbUZpbHRlcnMuZXZlcnkoZmlsdGVyRm4oaXRlbSxzZWFyY2gsX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfX1siZGVmYXVsdEZpbHRlciJdKSk7fSk7fXJldHVybiBmaWx0ZXJlZDt9LyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVkRhdGFJdGVyYXRvcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJWRGF0YUl0ZXJhdG9yIl0uZXh0ZW5kKHtuYW1lOid2LWRhdGEtdGFibGUnLC8vIGh0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWUvaXNzdWVzLzY4NzIKZGlyZWN0aXZlczp7cmlwcGxlOl9kaXJlY3RpdmVzX3JpcHBsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfX1siZGVmYXVsdCJdfSxwcm9wczp7aGVhZGVyczp7dHlwZTpBcnJheX0sc2hvd1NlbGVjdDpCb29sZWFuLHNob3dFeHBhbmQ6Qm9vbGVhbixzaG93R3JvdXBCeTpCb29sZWFuLC8vIFRPRE86IEZpeAovLyB2aXJ0dWFsUm93czogQm9vbGVhbiwKbW9iaWxlQnJlYWtwb2ludDp7dHlwZTpOdW1iZXIsZGVmYXVsdDo2MDB9LGhlaWdodDpbTnVtYmVyLFN0cmluZ10saGlkZURlZmF1bHRIZWFkZXI6Qm9vbGVhbixjYXB0aW9uOlN0cmluZyxkZW5zZTpCb29sZWFuLGhlYWRlclByb3BzOk9iamVjdCxjYWxjdWxhdGVXaWR0aHM6Qm9vbGVhbixmaXhlZEhlYWRlcjpCb29sZWFuLGhlYWRlcnNMZW5ndGg6TnVtYmVyLGV4cGFuZEljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRleHBhbmQnfSxjdXN0b21GaWx0ZXI6e3R5cGU6RnVuY3Rpb24sZGVmYXVsdDpfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJkZWZhdWx0RmlsdGVyIl19fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aW50ZXJuYWxHcm91cEJ5OltdLG9wZW5DYWNoZTp7fSx3aWR0aHM6W119O30sY29tcHV0ZWQ6e2NvbXB1dGVkSGVhZGVyczpmdW5jdGlvbiBjb21wdXRlZEhlYWRlcnMoKXt2YXIgX3RoaXM9dGhpcztpZighdGhpcy5oZWFkZXJzKXJldHVybltdO3ZhciBoZWFkZXJzPXRoaXMuaGVhZGVycy5maWx0ZXIoZnVuY3Rpb24oaCl7cmV0dXJuIGgudmFsdWU9PT11bmRlZmluZWR8fCFfdGhpcy5pbnRlcm5hbEdyb3VwQnkuZmluZChmdW5jdGlvbih2KXtyZXR1cm4gdj09PWgudmFsdWU7fSk7fSk7dmFyIGRlZmF1bHRIZWFkZXI9e3RleHQ6Jycsc29ydGFibGU6ZmFsc2Usd2lkdGg6JzFweCd9O2lmKHRoaXMuc2hvd1NlbGVjdCl7dmFyIGluZGV4PWhlYWRlcnMuZmluZEluZGV4KGZ1bmN0aW9uKGgpe3JldHVybiBoLnZhbHVlPT09J2RhdGEtdGFibGUtc2VsZWN0Jzt9KTtpZihpbmRleDwwKWhlYWRlcnMudW5zaGlmdChfX2Fzc2lnbih7fSxkZWZhdWx0SGVhZGVyLHt2YWx1ZTonZGF0YS10YWJsZS1zZWxlY3QnfSkpO2Vsc2UgaGVhZGVycy5zcGxpY2UoaW5kZXgsMSxfX2Fzc2lnbih7fSxkZWZhdWx0SGVhZGVyLGhlYWRlcnNbaW5kZXhdKSk7fWlmKHRoaXMuc2hvd0V4cGFuZCl7dmFyIGluZGV4PWhlYWRlcnMuZmluZEluZGV4KGZ1bmN0aW9uKGgpe3JldHVybiBoLnZhbHVlPT09J2RhdGEtdGFibGUtZXhwYW5kJzt9KTtpZihpbmRleDwwKWhlYWRlcnMudW5zaGlmdChfX2Fzc2lnbih7fSxkZWZhdWx0SGVhZGVyLHt2YWx1ZTonZGF0YS10YWJsZS1leHBhbmQnfSkpO2Vsc2UgaGVhZGVycy5zcGxpY2UoaW5kZXgsMSxfX2Fzc2lnbih7fSxkZWZhdWx0SGVhZGVyLGhlYWRlcnNbaW5kZXhdKSk7fXJldHVybiBoZWFkZXJzO30sY29sc3BhbkF0dHJzOmZ1bmN0aW9uIGNvbHNwYW5BdHRycygpe3JldHVybiB0aGlzLmlzTW9iaWxlP3VuZGVmaW5lZDp7Y29sc3Bhbjp0aGlzLmhlYWRlcnNMZW5ndGh8fHRoaXMuY29tcHV0ZWRIZWFkZXJzLmxlbmd0aH07fSxpc01vYmlsZTpmdW5jdGlvbiBpc01vYmlsZSgpey8vIEd1YXJkIGFnYWluc3QgU1NSIHJlbmRlcgovLyBodHRwczovL2dpdGh1Yi5jb20vdnVldGlmeWpzL3Z1ZXRpZnkvaXNzdWVzLzc0MTAKaWYodGhpcy4kdnVldGlmeS5icmVha3BvaW50LndpZHRoPT09MClyZXR1cm4gZmFsc2U7cmV0dXJuIHRoaXMuJHZ1ZXRpZnkuYnJlYWtwb2ludC53aWR0aDx0aGlzLm1vYmlsZUJyZWFrcG9pbnQ7fSxjb2x1bW5Tb3J0ZXJzOmZ1bmN0aW9uIGNvbHVtblNvcnRlcnMoKXtyZXR1cm4gdGhpcy5jb21wdXRlZEhlYWRlcnMucmVkdWNlKGZ1bmN0aW9uKGFjYyxoZWFkZXIpe2lmKGhlYWRlci5zb3J0KWFjY1toZWFkZXIudmFsdWVdPWhlYWRlci5zb3J0O3JldHVybiBhY2M7fSx7fSk7fSxoZWFkZXJzV2l0aEN1c3RvbUZpbHRlcnM6ZnVuY3Rpb24gaGVhZGVyc1dpdGhDdXN0b21GaWx0ZXJzKCl7cmV0dXJuIHRoaXMuY29tcHV0ZWRIZWFkZXJzLmZpbHRlcihmdW5jdGlvbihoZWFkZXIpe3JldHVybiBoZWFkZXIuZmlsdGVyJiYoIWhlYWRlci5oYXNPd25Qcm9wZXJ0eSgnZmlsdGVyYWJsZScpfHxoZWFkZXIuZmlsdGVyYWJsZT09PXRydWUpO30pO30saGVhZGVyc1dpdGhvdXRDdXN0b21GaWx0ZXJzOmZ1bmN0aW9uIGhlYWRlcnNXaXRob3V0Q3VzdG9tRmlsdGVycygpe3JldHVybiB0aGlzLmNvbXB1dGVkSGVhZGVycy5maWx0ZXIoZnVuY3Rpb24oaGVhZGVyKXtyZXR1cm4haGVhZGVyLmZpbHRlciYmKCFoZWFkZXIuaGFzT3duUHJvcGVydHkoJ2ZpbHRlcmFibGUnKXx8aGVhZGVyLmZpbHRlcmFibGU9PT10cnVlKTt9KTt9LHNhbml0aXplZEhlYWRlclByb3BzOmZ1bmN0aW9uIHNhbml0aXplZEhlYWRlclByb3BzKCl7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJjYW1lbGl6ZU9iamVjdEtleXMiXSkodGhpcy5oZWFkZXJQcm9wcyk7fSxjb21wdXRlZEl0ZW1zUGVyUGFnZTpmdW5jdGlvbiBjb21wdXRlZEl0ZW1zUGVyUGFnZSgpe3ZhciBpdGVtc1BlclBhZ2U9dGhpcy5vcHRpb25zJiZ0aGlzLm9wdGlvbnMuaXRlbXNQZXJQYWdlP3RoaXMub3B0aW9ucy5pdGVtc1BlclBhZ2U6dGhpcy5pdGVtc1BlclBhZ2U7dmFyIGl0ZW1zUGVyUGFnZU9wdGlvbnM9dGhpcy5zYW5pdGl6ZWRGb290ZXJQcm9wcy5pdGVtc1BlclBhZ2VPcHRpb25zO2lmKGl0ZW1zUGVyUGFnZU9wdGlvbnMmJiFpdGVtc1BlclBhZ2VPcHRpb25zLmZpbmQoZnVuY3Rpb24oaXRlbSl7cmV0dXJuIHR5cGVvZiBpdGVtPT09J251bWJlcic/aXRlbT09PWl0ZW1zUGVyUGFnZTppdGVtLnZhbHVlPT09aXRlbXNQZXJQYWdlO30pKXt2YXIgZmlyc3RPcHRpb249aXRlbXNQZXJQYWdlT3B0aW9uc1swXTtyZXR1cm4gX3R5cGVvZihmaXJzdE9wdGlvbik9PT0nb2JqZWN0Jz9maXJzdE9wdGlvbi52YWx1ZTpmaXJzdE9wdGlvbjt9cmV0dXJuIGl0ZW1zUGVyUGFnZTt9fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXt2YXIgX3RoaXM9dGhpczt2YXIgYnJlYWtpbmdQcm9wcz1bWydzb3J0LWljb24nLCdoZWFkZXItcHJvcHMuc29ydC1pY29uJ10sWydoaWRlLWhlYWRlcnMnLCdoaWRlLWRlZmF1bHQtaGVhZGVyJ10sWydzZWxlY3QtYWxsJywnc2hvdy1zZWxlY3QnXV07LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9icmVha2luZ1Byb3BzLmZvckVhY2goZnVuY3Rpb24oX2Epe3ZhciBfYj1fX3JlYWQoX2EsMiksb3JpZ2luYWw9X2JbMF0scmVwbGFjZW1lbnQ9X2JbMV07aWYoX3RoaXMuJGF0dHJzLmhhc093blByb3BlcnR5KG9yaWdpbmFsKSlPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTRfX1siYnJlYWtpbmciXSkob3JpZ2luYWwscmVwbGFjZW1lbnQsX3RoaXMpO30pO30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7Ly8gaWYgKCghdGhpcy5zb3J0QnkgfHwgIXRoaXMuc29ydEJ5Lmxlbmd0aCkgJiYgKCF0aGlzLm9wdGlvbnMuc29ydEJ5IHx8ICF0aGlzLm9wdGlvbnMuc29ydEJ5Lmxlbmd0aCkpIHsKLy8gICBjb25zdCBmaXJzdFNvcnRhYmxlID0gdGhpcy5oZWFkZXJzLmZpbmQoaCA9PiAhKCdzb3J0YWJsZScgaW4gaCkgfHwgISFoLnNvcnRhYmxlKQovLyAgIGlmIChmaXJzdFNvcnRhYmxlKSB0aGlzLnVwZGF0ZU9wdGlvbnMoeyBzb3J0Qnk6IFtmaXJzdFNvcnRhYmxlLnZhbHVlXSwgc29ydERlc2M6IFtmYWxzZV0gfSkKLy8gfQppZih0aGlzLmNhbGN1bGF0ZVdpZHRocyl7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsdGhpcy5jYWxjV2lkdGhzKTt0aGlzLmNhbGNXaWR0aHMoKTt9fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXtpZih0aGlzLmNhbGN1bGF0ZVdpZHRocyl7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsdGhpcy5jYWxjV2lkdGhzKTt9fSxtZXRob2RzOntjYWxjV2lkdGhzOmZ1bmN0aW9uIGNhbGNXaWR0aHMoKXt0aGlzLndpZHRocz1BcnJheS5mcm9tKHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ3RoJykpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS5jbGllbnRXaWR0aDt9KTt9LGN1c3RvbUZpbHRlcldpdGhDb2x1bW5zOmZ1bmN0aW9uIGN1c3RvbUZpbHRlcldpdGhDb2x1bW5zKGl0ZW1zLHNlYXJjaCl7cmV0dXJuIHNlYXJjaFRhYmxlSXRlbXMoaXRlbXMsc2VhcmNoLHRoaXMuaGVhZGVyc1dpdGhDdXN0b21GaWx0ZXJzLHRoaXMuaGVhZGVyc1dpdGhvdXRDdXN0b21GaWx0ZXJzLHRoaXMuY3VzdG9tRmlsdGVyKTt9LGN1c3RvbVNvcnRXaXRoSGVhZGVyczpmdW5jdGlvbiBjdXN0b21Tb3J0V2l0aEhlYWRlcnMoaXRlbXMsc29ydEJ5LHNvcnREZXNjLGxvY2FsZSl7cmV0dXJuIHRoaXMuY3VzdG9tU29ydChpdGVtcyxzb3J0Qnksc29ydERlc2MsbG9jYWxlLHRoaXMuY29sdW1uU29ydGVycyk7fSxjcmVhdGVJdGVtUHJvcHM6ZnVuY3Rpb24gY3JlYXRlSXRlbVByb3BzKGl0ZW0pe3ZhciBwcm9wcz1fVkRhdGFJdGVyYXRvcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJWRGF0YUl0ZXJhdG9yIl0ub3B0aW9ucy5tZXRob2RzLmNyZWF0ZUl0ZW1Qcm9wcy5jYWxsKHRoaXMsaXRlbSk7cmV0dXJuIE9iamVjdC5hc3NpZ24ocHJvcHMse2hlYWRlcnM6dGhpcy5jb21wdXRlZEhlYWRlcnN9KTt9LGdlbkNhcHRpb246ZnVuY3Rpb24gZ2VuQ2FwdGlvbihwcm9wcyl7aWYodGhpcy5jYXB0aW9uKXJldHVyblt0aGlzLiRjcmVhdGVFbGVtZW50KCdjYXB0aW9uJyxbdGhpcy5jYXB0aW9uXSldO3JldHVybiBPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfX1siZ2V0U2xvdCJdKSh0aGlzLCdjYXB0aW9uJyxwcm9wcyx0cnVlKTt9LGdlbkNvbGdyb3VwOmZ1bmN0aW9uIGdlbkNvbGdyb3VwKHByb3BzKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnY29sZ3JvdXAnLHRoaXMuY29tcHV0ZWRIZWFkZXJzLm1hcChmdW5jdGlvbihoZWFkZXIpe3JldHVybiBfdGhpcy4kY3JlYXRlRWxlbWVudCgnY29sJyx7Y2xhc3M6e2RpdmlkZXI6aGVhZGVyLmRpdmlkZXJ9fSk7fSkpO30sZ2VuTG9hZGluZzpmdW5jdGlvbiBnZW5Mb2FkaW5nKCl7dmFyIHByb2dyZXNzPXRoaXMuJHNsb3RzWydwcm9ncmVzcyddP3RoaXMuJHNsb3RzLnByb2dyZXNzOnRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZQcm9ncmVzc0xpbmVhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJkZWZhdWx0Il0se3Byb3BzOntjb2xvcjp0aGlzLmxvYWRpbmc9PT10cnVlPydwcmltYXJ5Jzp0aGlzLmxvYWRpbmcsaGVpZ2h0OjIsaW5kZXRlcm1pbmF0ZTp0cnVlfX0pO3ZhciB0aD10aGlzLiRjcmVhdGVFbGVtZW50KCd0aCcse3N0YXRpY0NsYXNzOidjb2x1bW4nLGF0dHJzOnRoaXMuY29sc3BhbkF0dHJzfSxbcHJvZ3Jlc3NdKTt2YXIgdHI9dGhpcy4kY3JlYXRlRWxlbWVudCgndHInLHtzdGF0aWNDbGFzczondi1kYXRhLXRhYmxlX19wcm9ncmVzcyd9LFt0aF0pO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd0aGVhZCcsW3RyXSk7fSxnZW5IZWFkZXJzOmZ1bmN0aW9uIGdlbkhlYWRlcnMocHJvcHMpe3ZhciBkYXRhPXtwcm9wczpfX2Fzc2lnbih7fSx0aGlzLnNhbml0aXplZEhlYWRlclByb3BzLHtoZWFkZXJzOnRoaXMuY29tcHV0ZWRIZWFkZXJzLG9wdGlvbnM6cHJvcHMub3B0aW9ucyxtb2JpbGU6dGhpcy5pc01vYmlsZSxzaG93R3JvdXBCeTp0aGlzLnNob3dHcm91cEJ5LHNvbWVJdGVtczp0aGlzLnNvbWVJdGVtcyxldmVyeUl0ZW06dGhpcy5ldmVyeUl0ZW0sc2luZ2xlU2VsZWN0OnRoaXMuc2luZ2xlU2VsZWN0LGRpc2FibGVTb3J0OnRoaXMuZGlzYWJsZVNvcnR9KSxvbjp7c29ydDpwcm9wcy5zb3J0LGdyb3VwOnByb3BzLmdyb3VwLCd0b2dnbGUtc2VsZWN0LWFsbCc6dGhpcy50b2dnbGVTZWxlY3RBbGx9fTt2YXIgY2hpbGRyZW49W09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJnZXRTbG90Il0pKHRoaXMsJ2hlYWRlcicsZGF0YSldO2lmKCF0aGlzLmhpZGVEZWZhdWx0SGVhZGVyKXt2YXIgc2NvcGVkU2xvdHM9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEzX19bImdldFByZWZpeGVkU2NvcGVkU2xvdHMiXSkoJ2hlYWRlci4nLHRoaXMuJHNjb3BlZFNsb3RzKTtjaGlsZHJlbi5wdXNoKHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZEYXRhVGFibGVIZWFkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLF9fYXNzaWduKHt9LGRhdGEse3Njb3BlZFNsb3RzOnNjb3BlZFNsb3RzfSkpKTt9aWYodGhpcy5sb2FkaW5nKWNoaWxkcmVuLnB1c2godGhpcy5nZW5Mb2FkaW5nKCkpO3JldHVybiBjaGlsZHJlbjt9LGdlbkVtcHR5V3JhcHBlcjpmdW5jdGlvbiBnZW5FbXB0eVdyYXBwZXIoY29udGVudCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RyJyx7c3RhdGljQ2xhc3M6J3YtZGF0YS10YWJsZV9fZW1wdHktd3JhcHBlcid9LFt0aGlzLiRjcmVhdGVFbGVtZW50KCd0ZCcse2F0dHJzOnRoaXMuY29sc3BhbkF0dHJzfSxjb250ZW50KV0pO30sZ2VuSXRlbXM6ZnVuY3Rpb24gZ2VuSXRlbXMoaXRlbXMscHJvcHMpe3ZhciBlbXB0eT10aGlzLmdlbkVtcHR5KHByb3BzLm9yaWdpbmFsSXRlbXNMZW5ndGgscHJvcHMucGFnaW5hdGlvbi5pdGVtc0xlbmd0aCk7aWYoZW1wdHkpcmV0dXJuW2VtcHR5XTtyZXR1cm4gcHJvcHMuZ3JvdXBlZEl0ZW1zP3RoaXMuZ2VuR3JvdXBlZFJvd3MocHJvcHMuZ3JvdXBlZEl0ZW1zLHByb3BzKTp0aGlzLmdlblJvd3MoaXRlbXMscHJvcHMpO30sZ2VuR3JvdXBlZFJvd3M6ZnVuY3Rpb24gZ2VuR3JvdXBlZFJvd3MoZ3JvdXBlZEl0ZW1zLHByb3BzKXt2YXIgX3RoaXM9dGhpczt2YXIgZ3JvdXBzPU9iamVjdC5rZXlzKGdyb3VwZWRJdGVtc3x8e30pO3JldHVybiBncm91cHMubWFwKGZ1bmN0aW9uKGdyb3VwKXtpZighX3RoaXMub3BlbkNhY2hlLmhhc093blByb3BlcnR5KGdyb3VwKSlfdGhpcy4kc2V0KF90aGlzLm9wZW5DYWNoZSxncm91cCx0cnVlKTtpZihfdGhpcy4kc2NvcGVkU2xvdHMuZ3JvdXApe3JldHVybiBfdGhpcy4kc2NvcGVkU2xvdHMuZ3JvdXAoe2dyb3VwOmdyb3VwLG9wdGlvbnM6cHJvcHMub3B0aW9ucyxpdGVtczpncm91cGVkSXRlbXNbZ3JvdXBdLGhlYWRlcnM6X3RoaXMuY29tcHV0ZWRIZWFkZXJzfSk7fWVsc2V7cmV0dXJuIF90aGlzLmdlbkRlZmF1bHRHcm91cGVkUm93KGdyb3VwLGdyb3VwZWRJdGVtc1tncm91cF0scHJvcHMpO319KTt9LGdlbkRlZmF1bHRHcm91cGVkUm93OmZ1bmN0aW9uIGdlbkRlZmF1bHRHcm91cGVkUm93KGdyb3VwLGl0ZW1zLHByb3BzKXt2YXIgX3RoaXM9dGhpczt2YXIgaXNPcGVuPSEhdGhpcy5vcGVuQ2FjaGVbZ3JvdXBdO3ZhciBjaGlsZHJlbj1bdGhpcy4kY3JlYXRlRWxlbWVudCgndGVtcGxhdGUnLHtzbG90Oidyb3cuY29udGVudCd9LHRoaXMuZ2VuRGVmYXVsdFJvd3MoaXRlbXMscHJvcHMpKV07dmFyIHRvZ2dsZUZuPWZ1bmN0aW9uIHRvZ2dsZUZuKCl7cmV0dXJuIF90aGlzLiRzZXQoX3RoaXMub3BlbkNhY2hlLGdyb3VwLCFfdGhpcy5vcGVuQ2FjaGVbZ3JvdXBdKTt9O3ZhciByZW1vdmVGbj1mdW5jdGlvbiByZW1vdmVGbigpe3JldHVybiBwcm9wcy51cGRhdGVPcHRpb25zKHtncm91cEJ5OltdLGdyb3VwRGVzYzpbXX0pO307aWYodGhpcy4kc2NvcGVkU2xvdHNbJ2dyb3VwLmhlYWRlciddKXtjaGlsZHJlbi51bnNoaWZ0KHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RlbXBsYXRlJyx7c2xvdDonY29sdW1uLmhlYWRlcid9LFt0aGlzLiRzY29wZWRTbG90c1snZ3JvdXAuaGVhZGVyJ10oe2dyb3VwOmdyb3VwLGdyb3VwQnk6cHJvcHMub3B0aW9ucy5ncm91cEJ5LGl0ZW1zOml0ZW1zLGhlYWRlcnM6dGhpcy5jb21wdXRlZEhlYWRlcnMsdG9nZ2xlOnRvZ2dsZUZuLHJlbW92ZTpyZW1vdmVGbn0pXSkpO31lbHNle3ZhciB0b2dnbGU9dGhpcy4kY3JlYXRlRWxlbWVudChfVkJ0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0se3N0YXRpY0NsYXNzOidtYS0wJyxwcm9wczp7aWNvbjp0cnVlLHNtYWxsOnRydWV9LG9uOntjbGljazp0b2dnbGVGbn19LFt0aGlzLiRjcmVhdGVFbGVtZW50KF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0sW2lzT3Blbj8nJG1pbnVzJzonJHBsdXMnXSldKTt2YXIgcmVtb3ZlPXRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLHtzdGF0aWNDbGFzczonbWEtMCcscHJvcHM6e2ljb246dHJ1ZSxzbWFsbDp0cnVlfSxvbjp7Y2xpY2s6cmVtb3ZlRm59fSxbdGhpcy4kY3JlYXRlRWxlbWVudChfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdLFsnJGNsb3NlJ10pXSk7dmFyIGNvbHVtbj10aGlzLiRjcmVhdGVFbGVtZW50KCd0ZCcse3N0YXRpY0NsYXNzOid0ZXh0LXN0YXJ0JyxhdHRyczp0aGlzLmNvbHNwYW5BdHRyc30sW3RvZ2dsZSxwcm9wcy5vcHRpb25zLmdyb3VwQnlbMF0rIjogIitncm91cCxyZW1vdmVdKTtjaGlsZHJlbi51bnNoaWZ0KHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RlbXBsYXRlJyx7c2xvdDonY29sdW1uLmhlYWRlcid9LFtjb2x1bW5dKSk7fWlmKHRoaXMuJHNjb3BlZFNsb3RzWydncm91cC5zdW1tYXJ5J10pe2NoaWxkcmVuLnB1c2godGhpcy4kY3JlYXRlRWxlbWVudCgndGVtcGxhdGUnLHtzbG90Oidjb2x1bW4uc3VtbWFyeSd9LFt0aGlzLiRzY29wZWRTbG90c1snZ3JvdXAuc3VtbWFyeSddKHtncm91cDpncm91cCxncm91cEJ5OnByb3BzLm9wdGlvbnMuZ3JvdXBCeSxpdGVtczppdGVtcyxoZWFkZXJzOnRoaXMuY29tcHV0ZWRIZWFkZXJzfSldKSk7fXJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9Sb3dHcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJkZWZhdWx0Il0se2tleTpncm91cCxwcm9wczp7dmFsdWU6aXNPcGVufX0sY2hpbGRyZW4pO30sZ2VuUm93czpmdW5jdGlvbiBnZW5Sb3dzKGl0ZW1zLHByb3BzKXtyZXR1cm4gdGhpcy4kc2NvcGVkU2xvdHMuaXRlbT90aGlzLmdlblNjb3BlZFJvd3MoaXRlbXMscHJvcHMpOnRoaXMuZ2VuRGVmYXVsdFJvd3MoaXRlbXMscHJvcHMpO30sZ2VuU2NvcGVkUm93czpmdW5jdGlvbiBnZW5TY29wZWRSb3dzKGl0ZW1zLHByb3BzKXt2YXIgcm93cz1bXTtmb3IodmFyIGk9MDtpPGl0ZW1zLmxlbmd0aDtpKyspe3ZhciBpdGVtPWl0ZW1zW2ldO3Jvd3MucHVzaCh0aGlzLiRzY29wZWRTbG90cy5pdGVtKF9fYXNzaWduKHt9LHRoaXMuY3JlYXRlSXRlbVByb3BzKGl0ZW0pLHtpbmRleDppfSkpKTtpZih0aGlzLmlzRXhwYW5kZWQoaXRlbSkpe3Jvd3MucHVzaCh0aGlzLiRzY29wZWRTbG90c1snZXhwYW5kZWQtaXRlbSddKHtpdGVtOml0ZW0saGVhZGVyczp0aGlzLmNvbXB1dGVkSGVhZGVyc30pKTt9fXJldHVybiByb3dzO30sZ2VuRGVmYXVsdFJvd3M6ZnVuY3Rpb24gZ2VuRGVmYXVsdFJvd3MoaXRlbXMscHJvcHMpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0aGlzLiRzY29wZWRTbG90c1snZXhwYW5kZWQtaXRlbSddP2l0ZW1zLm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gX3RoaXMuZ2VuRGVmYXVsdEV4cGFuZGVkUm93KGl0ZW0pO30pOml0ZW1zLm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gX3RoaXMuZ2VuRGVmYXVsdFNpbXBsZVJvdyhpdGVtKTt9KTt9LGdlbkRlZmF1bHRFeHBhbmRlZFJvdzpmdW5jdGlvbiBnZW5EZWZhdWx0RXhwYW5kZWRSb3coaXRlbSl7dmFyIGlzRXhwYW5kZWQ9dGhpcy5pc0V4cGFuZGVkKGl0ZW0pO3ZhciBjbGFzc2VzPXsndi1kYXRhLXRhYmxlX19leHBhbmRlZCB2LWRhdGEtdGFibGVfX2V4cGFuZGVkX19yb3cnOmlzRXhwYW5kZWR9O3ZhciBoZWFkZXJSb3c9dGhpcy5nZW5EZWZhdWx0U2ltcGxlUm93KGl0ZW0sY2xhc3Nlcyk7dmFyIGV4cGFuZGVkUm93PXRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RyJyx7c3RhdGljQ2xhc3M6J3YtZGF0YS10YWJsZV9fZXhwYW5kZWQgdi1kYXRhLXRhYmxlX19leHBhbmRlZF9fY29udGVudCd9LFt0aGlzLiRzY29wZWRTbG90c1snZXhwYW5kZWQtaXRlbSddKHtpdGVtOml0ZW0saGVhZGVyczp0aGlzLmNvbXB1dGVkSGVhZGVyc30pXSk7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1Jvd0dyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImRlZmF1bHQiXSx7cHJvcHM6e3ZhbHVlOmlzRXhwYW5kZWR9fSxbdGhpcy4kY3JlYXRlRWxlbWVudCgndGVtcGxhdGUnLHtzbG90Oidyb3cuaGVhZGVyJ30sW2hlYWRlclJvd10pLHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RlbXBsYXRlJyx7c2xvdDoncm93LmNvbnRlbnQnfSxbZXhwYW5kZWRSb3ddKV0pO30sZ2VuRGVmYXVsdFNpbXBsZVJvdzpmdW5jdGlvbiBnZW5EZWZhdWx0U2ltcGxlUm93KGl0ZW0sY2xhc3Nlcyl7dmFyIF90aGlzPXRoaXM7aWYoY2xhc3Nlcz09PXZvaWQgMCl7Y2xhc3Nlcz17fTt9dmFyIHNjb3BlZFNsb3RzPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJnZXRQcmVmaXhlZFNjb3BlZFNsb3RzIl0pKCdpdGVtLicsdGhpcy4kc2NvcGVkU2xvdHMpO3ZhciBkYXRhPXRoaXMuY3JlYXRlSXRlbVByb3BzKGl0ZW0pO2lmKHRoaXMuc2hvd1NlbGVjdCl7dmFyIHNsb3RfMT1zY29wZWRTbG90c1snZGF0YS10YWJsZS1zZWxlY3QnXTtzY29wZWRTbG90c1snZGF0YS10YWJsZS1zZWxlY3QnXT1zbG90XzE/ZnVuY3Rpb24oKXtyZXR1cm4gc2xvdF8xKGRhdGEpO306ZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZDaGVja2JveF9WU2ltcGxlQ2hlY2tib3hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siZGVmYXVsdCJdLHtzdGF0aWNDbGFzczondi1kYXRhLXRhYmxlX19jaGVja2JveCcscHJvcHM6e3ZhbHVlOmRhdGEuaXNTZWxlY3RlZH0sb246e2lucHV0OmZ1bmN0aW9uIGlucHV0KHZhbCl7cmV0dXJuIGRhdGEuc2VsZWN0KHZhbCk7fX19KTt9O31pZih0aGlzLnNob3dFeHBhbmQpe3ZhciBzbG90XzI9c2NvcGVkU2xvdHNbJ2RhdGEtdGFibGUtZXhwYW5kJ107c2NvcGVkU2xvdHNbJ2RhdGEtdGFibGUtZXhwYW5kJ109c2xvdF8yP2Z1bmN0aW9uKCl7cmV0dXJuIHNsb3RfMihkYXRhKTt9OmZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLiRjcmVhdGVFbGVtZW50KF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0se3N0YXRpY0NsYXNzOid2LWRhdGEtdGFibGVfX2V4cGFuZC1pY29uJyxjbGFzczp7J3YtZGF0YS10YWJsZV9fZXhwYW5kLWljb24tLWFjdGl2ZSc6ZGF0YS5pc0V4cGFuZGVkfSxvbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soZSl7ZS5zdG9wUHJvcGFnYXRpb24oKTtkYXRhLmV4cGFuZCghZGF0YS5pc0V4cGFuZGVkKTt9fX0sW190aGlzLmV4cGFuZEljb25dKTt9O31yZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCh0aGlzLmlzTW9iaWxlP19Nb2JpbGVSb3dfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19bImRlZmF1bHQiXTpfUm93X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImRlZmF1bHQiXSx7a2V5Ok9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJnZXRPYmplY3RWYWx1ZUJ5UGF0aCJdKShpdGVtLHRoaXMuaXRlbUtleSksY2xhc3M6X19hc3NpZ24oe30sY2xhc3Nlcyx7J3YtZGF0YS10YWJsZV9fc2VsZWN0ZWQnOmRhdGEuaXNTZWxlY3RlZH0pLHByb3BzOntoZWFkZXJzOnRoaXMuY29tcHV0ZWRIZWFkZXJzLGl0ZW06aXRlbSxydGw6dGhpcy4kdnVldGlmeS5ydGx9LHNjb3BlZFNsb3RzOnNjb3BlZFNsb3RzLG9uOntjbGljazpmdW5jdGlvbiBjbGljaygpe3JldHVybiBfdGhpcy4kZW1pdCgnY2xpY2s6cm93JyxpdGVtKTt9fX0pO30sZ2VuQm9keTpmdW5jdGlvbiBnZW5Cb2R5KHByb3BzKXt2YXIgZGF0YT1fX2Fzc2lnbih7fSxwcm9wcyx7aXNNb2JpbGU6dGhpcy5pc01vYmlsZSxoZWFkZXJzOnRoaXMuY29tcHV0ZWRIZWFkZXJzfSk7aWYodGhpcy4kc2NvcGVkU2xvdHMuYm9keSl7cmV0dXJuIHRoaXMuJHNjb3BlZFNsb3RzLmJvZHkoZGF0YSk7fXJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd0Ym9keScsW09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJnZXRTbG90Il0pKHRoaXMsJ2JvZHkucHJlcGVuZCcsZGF0YSx0cnVlKSx0aGlzLmdlbkl0ZW1zKHByb3BzLml0ZW1zLHByb3BzKSxPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfX1siZ2V0U2xvdCJdKSh0aGlzLCdib2R5LmFwcGVuZCcsZGF0YSx0cnVlKV0pO30sZ2VuRm9vdGVyczpmdW5jdGlvbiBnZW5Gb290ZXJzKHByb3BzKXt2YXIgZGF0YT17cHJvcHM6X19hc3NpZ24oe29wdGlvbnM6cHJvcHMub3B0aW9ucyxwYWdpbmF0aW9uOnByb3BzLnBhZ2luYXRpb24saXRlbXNQZXJQYWdlVGV4dDonJHZ1ZXRpZnkuZGF0YVRhYmxlLml0ZW1zUGVyUGFnZVRleHQnfSx0aGlzLnNhbml0aXplZEZvb3RlclByb3BzKSxvbjp7J3VwZGF0ZTpvcHRpb25zJzpmdW5jdGlvbiB1cGRhdGVPcHRpb25zKHZhbHVlKXtyZXR1cm4gcHJvcHMudXBkYXRlT3B0aW9ucyh2YWx1ZSk7fX0sd2lkdGhzOnRoaXMud2lkdGhzLGhlYWRlcnM6dGhpcy5jb21wdXRlZEhlYWRlcnN9O3ZhciBjaGlsZHJlbj1bT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEzX19bImdldFNsb3QiXSkodGhpcywnZm9vdGVyJyxkYXRhLHRydWUpXTtpZighdGhpcy5oaWRlRGVmYXVsdEZvb3Rlcil7Y2hpbGRyZW4ucHVzaCh0aGlzLiRjcmVhdGVFbGVtZW50KF9WRGF0YUl0ZXJhdG9yX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bIlZEYXRhRm9vdGVyIl0sX19hc3NpZ24oe30sZGF0YSx7c2NvcGVkU2xvdHM6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEzX19bImdldFByZWZpeGVkU2NvcGVkU2xvdHMiXSkoJ2Zvb3Rlci4nLHRoaXMuJHNjb3BlZFNsb3RzKX0pKSk7fXJldHVybiBjaGlsZHJlbjt9LGdlbkRlZmF1bHRTY29wZWRTbG90OmZ1bmN0aW9uIGdlbkRlZmF1bHRTY29wZWRTbG90KHByb3BzKXt2YXIgc2ltcGxlUHJvcHM9e2hlaWdodDp0aGlzLmhlaWdodCxmaXhlZEhlYWRlcjp0aGlzLmZpeGVkSGVhZGVyLGRlbnNlOnRoaXMuZGVuc2V9Oy8vIGlmICh0aGlzLnZpcnR1YWxSb3dzKSB7Ci8vICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoVlZpcnR1YWxUYWJsZSwgewovLyAgICAgcHJvcHM6IE9iamVjdC5hc3NpZ24oc2ltcGxlUHJvcHMsIHsKLy8gICAgICAgaXRlbXM6IHByb3BzLml0ZW1zLAovLyAgICAgICBoZWlnaHQ6IHRoaXMuaGVpZ2h0LAovLyAgICAgICByb3dIZWlnaHQ6IHRoaXMuZGVuc2UgPyAyNCA6IDQ4LAovLyAgICAgICBoZWFkZXJIZWlnaHQ6IHRoaXMuZGVuc2UgPyAzMiA6IDQ4LAovLyAgICAgICAvLyBUT0RPOiBleHBvc2UgcmVzdCBvZiBwcm9wcyBmcm9tIHZpcnR1YWwgdGFibGU/Ci8vICAgICB9KSwKLy8gICAgIHNjb3BlZFNsb3RzOiB7Ci8vICAgICAgIGl0ZW1zOiAoeyBpdGVtcyB9KSA9PiB0aGlzLmdlbkl0ZW1zKGl0ZW1zLCBwcm9wcykgYXMgYW55LAovLyAgICAgfSwKLy8gICB9LCBbCi8vICAgICB0aGlzLnByb3h5U2xvdCgnYm9keS5iZWZvcmUnLCBbdGhpcy5nZW5DYXB0aW9uKHByb3BzKSwgdGhpcy5nZW5IZWFkZXJzKHByb3BzKV0pLAovLyAgICAgdGhpcy5wcm94eVNsb3QoJ2JvdHRvbScsIHRoaXMuZ2VuRm9vdGVycyhwcm9wcykpLAovLyAgIF0pCi8vIH0KcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZTaW1wbGVUYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfX1siZGVmYXVsdCJdLHtwcm9wczpzaW1wbGVQcm9wc30sW3RoaXMucHJveHlTbG90KCd0b3AnLE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJnZXRTbG90Il0pKHRoaXMsJ3RvcCcscHJvcHMsdHJ1ZSkpLHRoaXMuZ2VuQ2FwdGlvbihwcm9wcyksdGhpcy5nZW5Db2xncm91cChwcm9wcyksdGhpcy5nZW5IZWFkZXJzKHByb3BzKSx0aGlzLmdlbkJvZHkocHJvcHMpLHRoaXMucHJveHlTbG90KCdib3R0b20nLHRoaXMuZ2VuRm9vdGVycyhwcm9wcykpXSk7fSxwcm94eVNsb3Q6ZnVuY3Rpb24gcHJveHlTbG90KHNsb3QsY29udGVudCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RlbXBsYXRlJyx7c2xvdDpzbG90fSxjb250ZW50KTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZEYXRhX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bIlZEYXRhIl0se3Byb3BzOl9fYXNzaWduKHt9LHRoaXMuJHByb3BzLHtjdXN0b21GaWx0ZXI6dGhpcy5jdXN0b21GaWx0ZXJXaXRoQ29sdW1ucyxjdXN0b21Tb3J0OnRoaXMuY3VzdG9tU29ydFdpdGhIZWFkZXJzLGl0ZW1zUGVyUGFnZTp0aGlzLmNvbXB1dGVkSXRlbXNQZXJQYWdlfSksb246eyd1cGRhdGU6b3B0aW9ucyc6ZnVuY3Rpb24gdXBkYXRlT3B0aW9ucyh2LG9sZCl7X3RoaXMuaW50ZXJuYWxHcm91cEJ5PXYuZ3JvdXBCeXx8W107IU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJkZWVwRXF1YWwiXSkodixvbGQpJiZfdGhpcy4kZW1pdCgndXBkYXRlOm9wdGlvbnMnLHYpO30sJ3VwZGF0ZTpwYWdlJzpmdW5jdGlvbiB1cGRhdGVQYWdlKHYpe3JldHVybiBfdGhpcy4kZW1pdCgndXBkYXRlOnBhZ2UnLHYpO30sJ3VwZGF0ZTppdGVtcy1wZXItcGFnZSc6ZnVuY3Rpb24gdXBkYXRlSXRlbXNQZXJQYWdlKHYpe3JldHVybiBfdGhpcy4kZW1pdCgndXBkYXRlOml0ZW1zLXBlci1wYWdlJyx2KTt9LCd1cGRhdGU6c29ydC1ieSc6ZnVuY3Rpb24gdXBkYXRlU29ydEJ5KHYpe3JldHVybiBfdGhpcy4kZW1pdCgndXBkYXRlOnNvcnQtYnknLHYpO30sJ3VwZGF0ZTpzb3J0LWRlc2MnOmZ1bmN0aW9uIHVwZGF0ZVNvcnREZXNjKHYpe3JldHVybiBfdGhpcy4kZW1pdCgndXBkYXRlOnNvcnQtZGVzYycsdik7fSwndXBkYXRlOmdyb3VwLWJ5JzpmdW5jdGlvbiB1cGRhdGVHcm91cEJ5KHYpe3JldHVybiBfdGhpcy4kZW1pdCgndXBkYXRlOmdyb3VwLWJ5Jyx2KTt9LCd1cGRhdGU6Z3JvdXAtZGVzYyc6ZnVuY3Rpb24gdXBkYXRlR3JvdXBEZXNjKHYpe3JldHVybiBfdGhpcy4kZW1pdCgndXBkYXRlOmdyb3VwLWRlc2MnLHYpO30scGFnaW5hdGlvbjpmdW5jdGlvbiBwYWdpbmF0aW9uKHYsb2xkKXtyZXR1cm4hT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEzX19bImRlZXBFcXVhbCJdKSh2LG9sZCkmJl90aGlzLiRlbWl0KCdwYWdpbmF0aW9uJyx2KTt9LCdjdXJyZW50LWl0ZW1zJzpmdW5jdGlvbiBjdXJyZW50SXRlbXModil7X3RoaXMuaW50ZXJuYWxDdXJyZW50SXRlbXM9djtfdGhpcy4kZW1pdCgnY3VycmVudC1pdGVtcycsdik7fSwncGFnZS1jb3VudCc6ZnVuY3Rpb24gcGFnZUNvdW50KHYpe3JldHVybiBfdGhpcy4kZW1pdCgncGFnZS1jb3VudCcsdik7fX0sc2NvcGVkU2xvdHM6e2RlZmF1bHQ6dGhpcy5nZW5EZWZhdWx0U2NvcGVkU2xvdH19KTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9WRGF0YVRhYmxlSGVhZGVyLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZEYXRhVGFibGVIZWFkZXIuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEYXRhVGFibGVWRGF0YVRhYmxlSGVhZGVyU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9WRGF0YVRhYmxlSGVhZGVyLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVkRhdGFUYWJsZUhlYWRlci50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEYXRhVGFibGVWRGF0YVRhYmxlSGVhZGVyVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGFUYWJsZUhlYWRlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRGF0YVRhYmxlSGVhZGVyLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZEYXRhVGFibGVIZWFkZXIuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGF0YVRhYmxlSGVhZGVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZEYXRhVGFibGVIZWFkZXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISB2dWUgKi8idnVlIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9kZWR1cGVNb2RlbExpc3RlbmVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvZGVkdXBlTW9kZWxMaXN0ZW5lcnMgKi8iLi9zcmMvdXRpbC9kZWR1cGVNb2RlbExpc3RlbmVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX3JlYnVpbGRGdW5jdGlvbmFsU2xvdHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL3JlYnVpbGRGdW5jdGlvbmFsU2xvdHMgKi8iLi9zcmMvdXRpbC9yZWJ1aWxkRnVuY3Rpb25hbFNsb3RzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEYXRhVGFibGVIZWFkZXJNb2JpbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEYXRhVGFibGVIZWFkZXJNb2JpbGUgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZEYXRhVGFibGVIZWFkZXJNb2JpbGUudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGFUYWJsZUhlYWRlckRlc2t0b3BfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEYXRhVGFibGVIZWFkZXJEZXNrdG9wICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9WRGF0YVRhYmxlSGVhZGVyRGVza3RvcC50cyIpOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09dnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdC5hLmV4dGVuZCh7bmFtZTondi1kYXRhLXRhYmxlLWhlYWRlcicsZnVuY3Rpb25hbDp0cnVlLHByb3BzOnttb2JpbGU6Qm9vbGVhbn0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoLF9hKXt2YXIgcHJvcHM9X2EucHJvcHMsZGF0YT1fYS5kYXRhLHNsb3RzPV9hLnNsb3RzO09iamVjdChfdXRpbF9kZWR1cGVNb2RlbExpc3RlbmVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pKGRhdGEpO3ZhciBjaGlsZHJlbj1PYmplY3QoX3V0aWxfcmVidWlsZEZ1bmN0aW9uYWxTbG90c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKHNsb3RzKCksaCk7aWYocHJvcHMubW9iaWxlKXtyZXR1cm4gaChfVkRhdGFUYWJsZUhlYWRlck1vYmlsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sZGF0YSxjaGlsZHJlbik7fWVsc2V7cmV0dXJuIGgoX1ZEYXRhVGFibGVIZWFkZXJEZXNrdG9wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSxkYXRhLGNoaWxkcmVuKTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVkRhdGFUYWJsZUhlYWRlckRlc2t0b3AudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVkRhdGFUYWJsZUhlYWRlckRlc2t0b3AudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGFUYWJsZVZEYXRhVGFibGVIZWFkZXJEZXNrdG9wVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfaGVhZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9taXhpbnMvaGVhZGVyICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9taXhpbnMvaGVhZGVyLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTt2YXIgX19yZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fcmVhZHx8ZnVuY3Rpb24obyxuKXt2YXIgbT10eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb1tTeW1ib2wuaXRlcmF0b3JdO2lmKCFtKXJldHVybiBvO3ZhciBpPW0uY2FsbChvKSxyLGFyPVtdLGU7dHJ5e3doaWxlKChuPT09dm9pZCAwfHxuLS0+MCkmJiEocj1pLm5leHQoKSkuZG9uZSl7YXIucHVzaChyLnZhbHVlKTt9fWNhdGNoKGVycm9yKXtlPXtlcnJvcjplcnJvcn07fWZpbmFsbHl7dHJ5e2lmKHImJiFyLmRvbmUmJihtPWlbInJldHVybiJdKSltLmNhbGwoaSk7fWZpbmFsbHl7aWYoZSl0aHJvdyBlLmVycm9yO319cmV0dXJuIGFyO307dmFyIF9fc3ByZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fc3ByZWFkfHxmdW5jdGlvbigpe2Zvcih2YXIgYXI9W10saT0wO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe2FyPWFyLmNvbmNhdChfX3JlYWQoYXJndW1lbnRzW2ldKSk7fXJldHVybiBhcjt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKF9taXhpbnNfaGVhZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOid2LWRhdGEtdGFibGUtaGVhZGVyLWRlc2t0b3AnLG1ldGhvZHM6e2dlbkdyb3VwQnlUb2dnbGU6ZnVuY3Rpb24gZ2VuR3JvdXBCeVRvZ2dsZShoZWFkZXIpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdzcGFuJyx7b246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCl7cmV0dXJuIF90aGlzLiRlbWl0KCdncm91cCcsaGVhZGVyLnZhbHVlKTt9fX0sWydncm91cCddKTt9LC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtc3RhdGVtZW50cwpnZW5IZWFkZXI6ZnVuY3Rpb24gZ2VuSGVhZGVyKGhlYWRlcil7dmFyIF90aGlzPXRoaXM7dmFyIGxpc3RlbmVycz17fTt2YXIgY2hpbGRyZW49W107dmFyIGF0dHJzPXtyb2xlOidjb2x1bW5oZWFkZXInLHNjb3BlOidjb2wnLCdhcmlhLWxhYmVsJzpoZWFkZXIudGV4dHx8JycsJ2FyaWEtc29ydCc6J25vbmUnfTt2YXIgc3R5bGVzPXt3aWR0aDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJjb252ZXJ0VG9Vbml0Il0pKGhlYWRlci53aWR0aCksbWluV2lkdGg6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siY29udmVydFRvVW5pdCJdKShoZWFkZXIud2lkdGgpfTt2YXIgY2xhc3Nlcz1fX3NwcmVhZChbInRleHQtIisoaGVhZGVyLmFsaWdufHwnc3RhcnQnKV0sT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sid3JhcEluQXJyYXkiXSkoaGVhZGVyLmNsYXNzKSk7aWYoaGVhZGVyLnZhbHVlPT09J2RhdGEtdGFibGUtc2VsZWN0JyYmIXRoaXMuc2luZ2xlU2VsZWN0KXtjaGlsZHJlbi5wdXNoKHRoaXMuZ2VuU2VsZWN0QWxsKCkpO31lbHNle2NoaWxkcmVuLnB1c2godGhpcy4kc2NvcGVkU2xvdHNbaGVhZGVyLnZhbHVlXT90aGlzLiRzY29wZWRTbG90c1toZWFkZXIudmFsdWVdKHtoZWFkZXI6aGVhZGVyfSk6dGhpcy4kY3JlYXRlRWxlbWVudCgnc3BhbicsW2hlYWRlci50ZXh0XSkpO2lmKCF0aGlzLmRpc2FibGVTb3J0JiYoaGVhZGVyLnNvcnRhYmxlfHwhaGVhZGVyLmhhc093blByb3BlcnR5KCdzb3J0YWJsZScpKSl7bGlzdGVuZXJzWydjbGljayddPWZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLiRlbWl0KCdzb3J0JyxoZWFkZXIudmFsdWUpO307dmFyIHNvcnRJbmRleD10aGlzLm9wdGlvbnMuc29ydEJ5LmZpbmRJbmRleChmdW5jdGlvbihrKXtyZXR1cm4gaz09PWhlYWRlci52YWx1ZTt9KTt2YXIgYmVpbmdTb3J0ZWQ9c29ydEluZGV4Pj0wO3ZhciBpc0Rlc2M9dGhpcy5vcHRpb25zLnNvcnREZXNjW3NvcnRJbmRleF07Y2xhc3Nlcy5wdXNoKCdzb3J0YWJsZScpO2lmKGJlaW5nU29ydGVkKXtjbGFzc2VzLnB1c2goJ2FjdGl2ZScpO2NsYXNzZXMucHVzaChpc0Rlc2M/J2Rlc2MnOidhc2MnKTthdHRyc1snYXJpYS1zb3J0J109aXNEZXNjPydkZXNjZW5kaW5nJzonYXNjZW5kaW5nJzthdHRyc1snYXJpYS1sYWJlbCddKz1pc0Rlc2M/dGhpcy4kdnVldGlmeS5sYW5nLnQoJyR2dWV0aWZ5LmRhdGFUYWJsZS5hcmlhTGFiZWwuc29ydERlc2NlbmRpbmcnKTp0aGlzLiR2dWV0aWZ5LmxhbmcudCgnJHZ1ZXRpZnkuZGF0YVRhYmxlLmFyaWFMYWJlbC5zb3J0QXNjZW5kaW5nJyk7fWVsc2V7YXR0cnNbJ2FyaWEtbGFiZWwnXSs9dGhpcy4kdnVldGlmeS5sYW5nLnQoJyR2dWV0aWZ5LmRhdGFUYWJsZS5hcmlhTGFiZWwuc29ydE5vbmUnKTt9aWYoaGVhZGVyLmFsaWduPT09J2VuZCcpY2hpbGRyZW4udW5zaGlmdCh0aGlzLmdlblNvcnRJY29uKCkpO2Vsc2UgY2hpbGRyZW4ucHVzaCh0aGlzLmdlblNvcnRJY29uKCkpO2lmKHRoaXMub3B0aW9ucy5tdWx0aVNvcnQmJmJlaW5nU29ydGVkKXtjaGlsZHJlbi5wdXNoKHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLHtjbGFzczondi1kYXRhLXRhYmxlLWhlYWRlcl9fc29ydC1iYWRnZSd9LFtTdHJpbmcoc29ydEluZGV4KzEpXSkpO319aWYodGhpcy5zaG93R3JvdXBCeSl7Y2hpbGRyZW4ucHVzaCh0aGlzLmdlbkdyb3VwQnlUb2dnbGUoaGVhZGVyKSk7fX1yZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndGgnLHthdHRyczphdHRycyxjbGFzczpjbGFzc2VzLHN0eWxlOnN0eWxlcyxvbjpsaXN0ZW5lcnN9LGNoaWxkcmVuKTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RoZWFkJyx7c3RhdGljQ2xhc3M6J3YtZGF0YS10YWJsZS1oZWFkZXInfSxbdGhpcy4kY3JlYXRlRWxlbWVudCgndHInLHRoaXMuaGVhZGVycy5tYXAoZnVuY3Rpb24oaGVhZGVyKXtyZXR1cm4gX3RoaXMuZ2VuSGVhZGVyKGhlYWRlcik7fSkpXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVkRhdGFUYWJsZUhlYWRlck1vYmlsZS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZEYXRhVGFibGVIZWFkZXJNb2JpbGUudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGF0YVRhYmxlVkRhdGFUYWJsZUhlYWRlck1vYmlsZVRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNlbGVjdF9WU2VsZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVlNlbGVjdC9WU2VsZWN0ICovIi4vc3JjL2NvbXBvbmVudHMvVlNlbGVjdC9WU2VsZWN0LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDaGlwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkNoaXAgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2hpcC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfaGVhZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9taXhpbnMvaGVhZGVyICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9taXhpbnMvaGVhZGVyLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTt2YXIgX19yZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fcmVhZHx8ZnVuY3Rpb24obyxuKXt2YXIgbT10eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb1tTeW1ib2wuaXRlcmF0b3JdO2lmKCFtKXJldHVybiBvO3ZhciBpPW0uY2FsbChvKSxyLGFyPVtdLGU7dHJ5e3doaWxlKChuPT09dm9pZCAwfHxuLS0+MCkmJiEocj1pLm5leHQoKSkuZG9uZSl7YXIucHVzaChyLnZhbHVlKTt9fWNhdGNoKGVycm9yKXtlPXtlcnJvcjplcnJvcn07fWZpbmFsbHl7dHJ5e2lmKHImJiFyLmRvbmUmJihtPWlbInJldHVybiJdKSltLmNhbGwoaSk7fWZpbmFsbHl7aWYoZSl0aHJvdyBlLmVycm9yO319cmV0dXJuIGFyO307dmFyIF9fc3ByZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fc3ByZWFkfHxmdW5jdGlvbigpe2Zvcih2YXIgYXI9W10saT0wO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe2FyPWFyLmNvbmNhdChfX3JlYWQoYXJndW1lbnRzW2ldKSk7fXJldHVybiBhcjt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKF9taXhpbnNfaGVhZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOid2LWRhdGEtdGFibGUtaGVhZGVyLW1vYmlsZScscHJvcHM6e3NvcnRCeVRleHQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyR2dWV0aWZ5LmRhdGFUYWJsZS5zb3J0QnknfX0sbWV0aG9kczp7Z2VuU29ydENoaXA6ZnVuY3Rpb24gZ2VuU29ydENoaXAocHJvcHMpe3ZhciBfdGhpcz10aGlzO3ZhciBjaGlsZHJlbj1bcHJvcHMuaXRlbS50ZXh0XTt2YXIgc29ydEluZGV4PXRoaXMub3B0aW9ucy5zb3J0QnkuZmluZEluZGV4KGZ1bmN0aW9uKGspe3JldHVybiBrPT09cHJvcHMuaXRlbS52YWx1ZTt9KTt2YXIgYmVpbmdTb3J0ZWQ9c29ydEluZGV4Pj0wO3ZhciBpc0Rlc2M9dGhpcy5vcHRpb25zLnNvcnREZXNjW3NvcnRJbmRleF07Y2hpbGRyZW4ucHVzaCh0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1jaGlwX19jbG9zZScsY2xhc3M6e3NvcnRhYmxlOnRydWUsYWN0aXZlOmJlaW5nU29ydGVkLGFzYzpiZWluZ1NvcnRlZCYmIWlzRGVzYyxkZXNjOmJlaW5nU29ydGVkJiZpc0Rlc2N9fSxbdGhpcy5nZW5Tb3J0SWNvbigpXSkpO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WQ2hpcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0se3N0YXRpY0NsYXNzOidzb3J0YWJsZScsbmF0aXZlT246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKGUpe2Uuc3RvcFByb3BhZ2F0aW9uKCk7X3RoaXMuJGVtaXQoJ3NvcnQnLHByb3BzLml0ZW0udmFsdWUpO319fSxjaGlsZHJlbik7fSxnZW5Tb3J0U2VsZWN0OmZ1bmN0aW9uIGdlblNvcnRTZWxlY3QoKXt2YXIgX3RoaXM9dGhpczt2YXIgc29ydEhlYWRlcnM9dGhpcy5oZWFkZXJzLmZpbHRlcihmdW5jdGlvbihoKXtyZXR1cm4gaC5zb3J0YWJsZSE9PWZhbHNlJiZoLnZhbHVlIT09J2RhdGEtdGFibGUtc2VsZWN0Jzt9KTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVlNlbGVjdF9WU2VsZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSx7cHJvcHM6e2xhYmVsOnRoaXMuJHZ1ZXRpZnkubGFuZy50KHRoaXMuc29ydEJ5VGV4dCksaXRlbXM6c29ydEhlYWRlcnMsaGlkZURldGFpbHM6dHJ1ZSxtdWx0aXBsZTp0aGlzLm9wdGlvbnMubXVsdGlTb3J0LHZhbHVlOnRoaXMub3B0aW9ucy5tdWx0aVNvcnQ/dGhpcy5vcHRpb25zLnNvcnRCeTp0aGlzLm9wdGlvbnMuc29ydEJ5WzBdLGRpc2FibGVkOnNvcnRIZWFkZXJzLmxlbmd0aD09PTB8fHRoaXMuZGlzYWJsZVNvcnR9LG9uOntjaGFuZ2U6ZnVuY3Rpb24gY2hhbmdlKHYpe3JldHVybiBfdGhpcy4kZW1pdCgnc29ydCcsdik7fX0sc2NvcGVkU2xvdHM6e3NlbGVjdGlvbjpmdW5jdGlvbiBzZWxlY3Rpb24ocHJvcHMpe3JldHVybiBfdGhpcy5nZW5Tb3J0Q2hpcChwcm9wcyk7fX19KTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBjaGlsZHJlbj1bXTt2YXIgaGVhZGVyPXRoaXMuaGVhZGVycy5maW5kKGZ1bmN0aW9uKGgpe3JldHVybiBoLnZhbHVlPT09J2RhdGEtdGFibGUtc2VsZWN0Jzt9KTtpZihoZWFkZXImJiF0aGlzLnNpbmdsZVNlbGVjdCl7Y2hpbGRyZW4ucHVzaCh0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtjbGFzczpfX3NwcmVhZChbJ3YtZGF0YS10YWJsZS1oZWFkZXItbW9iaWxlX19zZWxlY3QnXSxPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJ3cmFwSW5BcnJheSJdKShoZWFkZXIuY2xhc3MpKSxhdHRyczp7d2lkdGg6aGVhZGVyLndpZHRofX0sW3RoaXMuZ2VuU2VsZWN0QWxsKCldKSk7fWNoaWxkcmVuLnB1c2godGhpcy5nZW5Tb3J0U2VsZWN0KCkpO3ZhciB0aD1oKCd0aCcsW2goJ2Rpdicse3N0YXRpY0NsYXNzOid2LWRhdGEtdGFibGUtaGVhZGVyLW1vYmlsZV9fd3JhcHBlcid9LGNoaWxkcmVuKV0pO3ZhciB0cj1oKCd0cicsW3RoXSk7cmV0dXJuIGgoJ3RoZWFkJyx7c3RhdGljQ2xhc3M6J3YtZGF0YS10YWJsZS1oZWFkZXIgdi1kYXRhLXRhYmxlLWhlYWRlci1tb2JpbGUnfSxbdHJdKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9WRWRpdERpYWxvZy5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVkVkaXREaWFsb2cuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGF0YVRhYmxlVkVkaXREaWFsb2dTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZFZGl0RGlhbG9nLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZFZGl0RGlhbG9nLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEYXRhVGFibGVWRWRpdERpYWxvZ1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZFZGl0RGlhbG9nX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZFZGl0RGlhbG9nLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZFZGl0RGlhbG9nLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkVkaXREaWFsb2dfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkVkaXREaWFsb2dfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3JldHVybmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvcmV0dXJuYWJsZSAqLyIuL3NyYy9taXhpbnMvcmV0dXJuYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJ0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZCdG4gKi8iLi9zcmMvY29tcG9uZW50cy9WQnRuL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZNZW51X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVk1lbnUgKi8iLi9zcmMvY29tcG9uZW50cy9WTWVudS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7Ly8gU3R5bGVzCi8vIE1peGlucwovLyBVdGlscwovLyBDb21wb25lbnQKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXSkoX21peGluc19yZXR1cm5hYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pLmV4dGVuZCh7bmFtZTondi1lZGl0LWRpYWxvZycscHJvcHM6e2NhbmNlbFRleHQ6e2RlZmF1bHQ6J0NhbmNlbCd9LGxhcmdlOkJvb2xlYW4sZWFnZXI6Qm9vbGVhbixwZXJzaXN0ZW50OkJvb2xlYW4sc2F2ZVRleHQ6e2RlZmF1bHQ6J1NhdmUnfSx0cmFuc2l0aW9uOnt0eXBlOlN0cmluZyxkZWZhdWx0OidzbGlkZS14LXJldmVyc2UtdHJhbnNpdGlvbid9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aXNBY3RpdmU6ZmFsc2V9O30sd2F0Y2g6e2lzQWN0aXZlOmZ1bmN0aW9uIGlzQWN0aXZlKHZhbCl7aWYodmFsKXt0aGlzLiRlbWl0KCdvcGVuJyk7c2V0VGltZW91dCh0aGlzLmZvY3VzLDUwKTsvLyBHaXZlIERPTSB0aW1lIHRvIHBhaW50Cn1lbHNle3RoaXMuJGVtaXQoJ2Nsb3NlJyk7fX19LG1ldGhvZHM6e2NhbmNlbDpmdW5jdGlvbiBjYW5jZWwoKXt0aGlzLmlzQWN0aXZlPWZhbHNlO3RoaXMuJGVtaXQoJ2NhbmNlbCcpO30sZm9jdXM6ZnVuY3Rpb24gZm9jdXMoKXt2YXIgaW5wdXQ9dGhpcy4kcmVmcy5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0Jyk7aW5wdXQmJmlucHV0LmZvY3VzKCk7fSxnZW5CdXR0b246ZnVuY3Rpb24gZ2VuQnV0dG9uKGZuLHRleHQpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WQnRuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSx7cHJvcHM6e3RleHQ6dHJ1ZSxjb2xvcjoncHJpbWFyeScsbGlnaHQ6dHJ1ZX0sb246e2NsaWNrOmZufX0sdGV4dCk7fSxnZW5BY3Rpb25zOmZ1bmN0aW9uIGdlbkFjdGlvbnMoKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7Y2xhc3M6J3Ytc21hbGwtZGlhbG9nX19hY3Rpb25zJ30sW3RoaXMuZ2VuQnV0dG9uKHRoaXMuY2FuY2VsLHRoaXMuY2FuY2VsVGV4dCksdGhpcy5nZW5CdXR0b24oZnVuY3Rpb24oKXtfdGhpcy5zYXZlKF90aGlzLnJldHVyblZhbHVlKTtfdGhpcy4kZW1pdCgnc2F2ZScpO30sdGhpcy5zYXZlVGV4dCldKTt9LGdlbkNvbnRlbnQ6ZnVuY3Rpb24gZ2VuQ29udGVudCgpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1zbWFsbC1kaWFsb2dfX2NvbnRlbnQnLG9uOntrZXlkb3duOmZ1bmN0aW9uIGtleWRvd24oZSl7dmFyIGlucHV0PV90aGlzLiRyZWZzLmNvbnRlbnQucXVlcnlTZWxlY3RvcignaW5wdXQnKTtlLmtleUNvZGU9PT1fdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImtleUNvZGVzIl0uZXNjJiZfdGhpcy5jYW5jZWwoKTtpZihlLmtleUNvZGU9PT1fdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImtleUNvZGVzIl0uZW50ZXImJmlucHV0KXtfdGhpcy5zYXZlKGlucHV0LnZhbHVlKTtfdGhpcy4kZW1pdCgnc2F2ZScpO319fSxyZWY6J2NvbnRlbnQnfSxbdGhpcy4kc2xvdHMuaW5wdXRdKTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBfdGhpcz10aGlzO3JldHVybiBoKF9WTWVudV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0se3N0YXRpY0NsYXNzOid2LXNtYWxsLWRpYWxvZycsY2xhc3M6dGhpcy50aGVtZUNsYXNzZXMscHJvcHM6e2NvbnRlbnRDbGFzczondi1zbWFsbC1kaWFsb2dfX21lbnUtY29udGVudCcsdHJhbnNpdGlvbjp0aGlzLnRyYW5zaXRpb24sb3JpZ2luOid0b3AgcmlnaHQnLHJpZ2h0OnRydWUsdmFsdWU6dGhpcy5pc0FjdGl2ZSxjbG9zZU9uQ2xpY2s6IXRoaXMucGVyc2lzdGVudCxjbG9zZU9uQ29udGVudENsaWNrOmZhbHNlLGVhZ2VyOnRoaXMuZWFnZXIsbGlnaHQ6dGhpcy5saWdodCxkYXJrOnRoaXMuZGFya30sb246e2lucHV0OmZ1bmN0aW9uIGlucHV0KHZhbCl7cmV0dXJuIF90aGlzLmlzQWN0aXZlPXZhbDt9fSxzY29wZWRTbG90czp7YWN0aXZhdG9yOmZ1bmN0aW9uIGFjdGl2YXRvcihfYSl7dmFyIG9uPV9hLm9uO3JldHVybiBoKCdkaXYnLHtzdGF0aWNDbGFzczondi1zbWFsbC1kaWFsb2dfX2FjdGl2YXRvcicsb246b259LFtoKCdzcGFuJyx7c3RhdGljQ2xhc3M6J3Ytc21hbGwtZGlhbG9nX19hY3RpdmF0b3JfX2NvbnRlbnQnfSxfdGhpcy4kc2xvdHMuZGVmYXVsdCldKTt9fX0sW3RoaXMuZ2VuQ29udGVudCgpLHRoaXMubGFyZ2U/dGhpcy5nZW5BY3Rpb25zKCk6bnVsbF0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZTaW1wbGVUYWJsZS5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZTaW1wbGVUYWJsZS5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGF0YVRhYmxlVlNpbXBsZVRhYmxlU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9WU2ltcGxlVGFibGUudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZTaW1wbGVUYWJsZS50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGFUYWJsZVZTaW1wbGVUYWJsZVRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTaW1wbGVUYWJsZV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU2ltcGxlVGFibGUuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVlNpbXBsZVRhYmxlLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNpbXBsZVRhYmxlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZTaW1wbGVUYWJsZV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3Ytc2ltcGxlLXRhYmxlJyxwcm9wczp7ZGVuc2U6Qm9vbGVhbixmaXhlZEhlYWRlcjpCb29sZWFuLGhlaWdodDpbTnVtYmVyLFN0cmluZ119LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LWRhdGEtdGFibGUtLWRlbnNlJzp0aGlzLmRlbnNlLCd2LWRhdGEtdGFibGUtLWZpeGVkLWhlaWdodCc6ISF0aGlzLmhlaWdodCYmIXRoaXMuZml4ZWRIZWFkZXIsJ3YtZGF0YS10YWJsZS0tZml4ZWQtaGVhZGVyJzp0aGlzLmZpeGVkSGVhZGVyfSx0aGlzLnRoZW1lQ2xhc3Nlcyk7fX0sbWV0aG9kczp7Z2VuV3JhcHBlcjpmdW5jdGlvbiBnZW5XcmFwcGVyKCl7cmV0dXJuIHRoaXMuJHNsb3RzLndyYXBwZXJ8fHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWRhdGEtdGFibGVfX3dyYXBwZXInLHN0eWxlOntoZWlnaHQ6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmhlaWdodCl9fSxbdGhpcy4kY3JlYXRlRWxlbWVudCgndGFibGUnLHRoaXMuJHNsb3RzLmRlZmF1bHQpXSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXtyZXR1cm4gaCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtZGF0YS10YWJsZScsY2xhc3M6dGhpcy5jbGFzc2VzfSxbdGhpcy4kc2xvdHMudG9wLHRoaXMuZ2VuV3JhcHBlcigpLHRoaXMuJHNsb3RzLmJvdHRvbV0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZWaXJ0dWFsVGFibGUuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVlZpcnR1YWxUYWJsZS5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGFUYWJsZVZWaXJ0dWFsVGFibGVTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL1ZWaXJ0dWFsVGFibGUudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9WVmlydHVhbFRhYmxlLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGFUYWJsZVZWaXJ0dWFsVGFibGVUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVmlydHVhbFRhYmxlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZWaXJ0dWFsVGFibGUuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVlZpcnR1YWxUYWJsZS5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZWaXJ0dWFsVGFibGVfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVlZpcnR1YWxUYWJsZV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2ltcGxlVGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTaW1wbGVUYWJsZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVlNpbXBsZVRhYmxlLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8vIENvbXBvbmVudHMKLy8gVXRpbHRpaWVzCi8vIFR5cGVzCnZhciBiYXNlTWl4aW5zPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKShfVlNpbXBsZVRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1iYXNlTWl4aW5zLmV4dGVuZCgpLmV4dGVuZCh7bmFtZTondi12aXJ0dWFsLXRhYmxlJyxwcm9wczp7Y2h1bmtTaXplOnt0eXBlOk51bWJlcixkZWZhdWx0OjI1fSxoZWFkZXJIZWlnaHQ6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6NDh9LGl0ZW1zOnt0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bXTt9fSxyb3dIZWlnaHQ6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6NDh9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57c2Nyb2xsVG9wOjAsb2xkQ2h1bms6MCxzY3JvbGxEZWJvdW5jZTpudWxsLGludmFsaWRhdGVDYWNoZTpmYWxzZX07fSxjb21wdXRlZDp7aXRlbXNMZW5ndGg6ZnVuY3Rpb24gaXRlbXNMZW5ndGgoKXtyZXR1cm4gdGhpcy5pdGVtcy5sZW5ndGg7fSx0b3RhbEhlaWdodDpmdW5jdGlvbiB0b3RhbEhlaWdodCgpe3JldHVybiB0aGlzLml0ZW1zTGVuZ3RoKnRoaXMucm93SGVpZ2h0K3RoaXMuaGVhZGVySGVpZ2h0O30sdG9wSW5kZXg6ZnVuY3Rpb24gdG9wSW5kZXgoKXtyZXR1cm4gTWF0aC5mbG9vcih0aGlzLnNjcm9sbFRvcC90aGlzLnJvd0hlaWdodCk7fSxjaHVua0luZGV4OmZ1bmN0aW9uIGNodW5rSW5kZXgoKXtyZXR1cm4gTWF0aC5mbG9vcih0aGlzLnRvcEluZGV4L3RoaXMuY2h1bmtTaXplKTt9LHN0YXJ0SW5kZXg6ZnVuY3Rpb24gc3RhcnRJbmRleCgpe3JldHVybiBNYXRoLm1heCgwLHRoaXMuY2h1bmtJbmRleCp0aGlzLmNodW5rU2l6ZS10aGlzLmNodW5rU2l6ZSk7fSxvZmZzZXRUb3A6ZnVuY3Rpb24gb2Zmc2V0VG9wKCl7cmV0dXJuIE1hdGgubWF4KDAsdGhpcy5zdGFydEluZGV4KnRoaXMucm93SGVpZ2h0KTt9LHN0b3BJbmRleDpmdW5jdGlvbiBzdG9wSW5kZXgoKXtyZXR1cm4gTWF0aC5taW4odGhpcy5zdGFydEluZGV4K3RoaXMuY2h1bmtTaXplKjMsdGhpcy5pdGVtc0xlbmd0aCk7fSxvZmZzZXRCb3R0b206ZnVuY3Rpb24gb2Zmc2V0Qm90dG9tKCl7cmV0dXJuIE1hdGgubWF4KDAsKHRoaXMuaXRlbXNMZW5ndGgtdGhpcy5zdG9wSW5kZXgtdGhpcy5zdGFydEluZGV4KSp0aGlzLnJvd0hlaWdodCk7fX0sd2F0Y2g6e2NodW5rSW5kZXg6ZnVuY3Rpb24gY2h1bmtJbmRleChuZXdWYWx1ZSxvbGRWYWx1ZSl7dGhpcy5vbGRDaHVuaz1vbGRWYWx1ZTt9LGl0ZW1zOmZ1bmN0aW9uIGl0ZW1zKCl7dGhpcy5jYWNoZWRJdGVtcz1udWxsO3RoaXMuJHJlZnMudGFibGUuc2Nyb2xsVG9wPTA7fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy5jYWNoZWRJdGVtcz1udWxsO30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dGhpcy5zY3JvbGxEZWJvdW5jZT1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWJvdW5jZSJdKSh0aGlzLm9uU2Nyb2xsLDUwKTt0aGlzLiRyZWZzLnRhYmxlLmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsdGhpcy5zY3JvbGxEZWJvdW5jZSx7cGFzc2l2ZTp0cnVlfSk7fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXt0aGlzLiRyZWZzLnRhYmxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsdGhpcy5zY3JvbGxEZWJvdW5jZSk7fSxtZXRob2RzOntjcmVhdGVTdHlsZUhlaWdodDpmdW5jdGlvbiBjcmVhdGVTdHlsZUhlaWdodChoZWlnaHQpe3JldHVybntoZWlnaHQ6aGVpZ2h0KyJweCJ9O30sZ2VuQm9keTpmdW5jdGlvbiBnZW5Cb2R5KCl7aWYodGhpcy5jYWNoZWRJdGVtcz09PW51bGx8fHRoaXMuY2h1bmtJbmRleCE9PXRoaXMub2xkQ2h1bmspe3RoaXMuY2FjaGVkSXRlbXM9dGhpcy5nZW5JdGVtcygpO3RoaXMub2xkQ2h1bms9dGhpcy5jaHVua0luZGV4O31yZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndGJvZHknLFt0aGlzLiRjcmVhdGVFbGVtZW50KCd0cicse3N0eWxlOnRoaXMuY3JlYXRlU3R5bGVIZWlnaHQodGhpcy5vZmZzZXRUb3ApfSksdGhpcy5jYWNoZWRJdGVtcyx0aGlzLiRjcmVhdGVFbGVtZW50KCd0cicse3N0eWxlOnRoaXMuY3JlYXRlU3R5bGVIZWlnaHQodGhpcy5vZmZzZXRCb3R0b20pfSldKTt9LGdlbkl0ZW1zOmZ1bmN0aW9uIGdlbkl0ZW1zKCl7cmV0dXJuIHRoaXMuJHNjb3BlZFNsb3RzLml0ZW1zKHtpdGVtczp0aGlzLml0ZW1zLnNsaWNlKHRoaXMuc3RhcnRJbmRleCx0aGlzLnN0b3BJbmRleCl9KTt9LG9uU2Nyb2xsOmZ1bmN0aW9uIG9uU2Nyb2xsKGUpe3ZhciB0YXJnZXQ9ZS50YXJnZXQ7dGhpcy5zY3JvbGxUb3A9dGFyZ2V0LnNjcm9sbFRvcDt9LGdlblRhYmxlOmZ1bmN0aW9uIGdlblRhYmxlKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3JlZjondGFibGUnLHN0YXRpY0NsYXNzOid2LXZpcnR1YWwtdGFibGVfX3RhYmxlJ30sW3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RhYmxlJyxbdGhpcy4kc2xvdHNbJ2JvZHkuYmVmb3JlJ10sdGhpcy5nZW5Cb2R5KCksdGhpcy4kc2xvdHNbJ2JvZHkuYWZ0ZXInXV0pXSk7fSxnZW5XcmFwcGVyOmZ1bmN0aW9uIGdlbldyYXBwZXIoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtdmlydHVhbC10YWJsZV9fd3JhcHBlcicsc3R5bGU6e2hlaWdodDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuaGVpZ2h0KX19LFt0aGlzLmdlblRhYmxlKCldKTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3JldHVybiBoKCdkaXYnLHtzdGF0aWNDbGFzczondi1kYXRhLXRhYmxlIHYtdmlydHVhbC10YWJsZScsY2xhc3M6dGhpcy5jbGFzc2VzfSxbdGhpcy4kc2xvdHMudG9wLHRoaXMuZ2VuV3JhcHBlcigpLHRoaXMuJHNsb3RzLmJvdHRvbV0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWRGF0YVRhYmxlLCBWRWRpdERpYWxvZywgVlRhYmxlT3ZlcmZsb3csIFZEYXRhVGFibGVIZWFkZXIsIFZTaW1wbGVUYWJsZSwgVlZpcnR1YWxUYWJsZSwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGF0YVRhYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVGFibGVPdmVyZmxvdyIsZnVuY3Rpb24oKXtyZXR1cm4gVlRhYmxlT3ZlcmZsb3c7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGFUYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkRhdGFUYWJsZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVkRhdGFUYWJsZS50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZEYXRhVGFibGUiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRGF0YVRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGFUYWJsZUhlYWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkRhdGFUYWJsZUhlYWRlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVkRhdGFUYWJsZUhlYWRlci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZEYXRhVGFibGVIZWFkZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRGF0YVRhYmxlSGVhZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkVkaXREaWFsb2dfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZFZGl0RGlhbG9nICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9WRWRpdERpYWxvZy50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZFZGl0RGlhbG9nIixmdW5jdGlvbigpe3JldHVybiBfVkVkaXREaWFsb2dfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2ltcGxlVGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTaW1wbGVUYWJsZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVlNpbXBsZVRhYmxlLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNpbXBsZVRhYmxlIixmdW5jdGlvbigpe3JldHVybiBfVlNpbXBsZVRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlZpcnR1YWxUYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlZpcnR1YWxUYWJsZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhVGFibGUvVlZpcnR1YWxUYWJsZS50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZWaXJ0dWFsVGFibGUiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVmlydHVhbFRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXTt9KTt2YXIgVlRhYmxlT3ZlcmZsb3c9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siY3JlYXRlU2ltcGxlRnVuY3Rpb25hbCJdKSgndi10YWJsZV9fb3ZlcmZsb3cnKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXskX3Z1ZXRpZnlfc3ViY29tcG9uZW50czp7VkRhdGFUYWJsZTpfVkRhdGFUYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sVkRhdGFUYWJsZUhlYWRlcjpfVkRhdGFUYWJsZUhlYWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sVkVkaXREaWFsb2c6X1ZFZGl0RGlhbG9nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSxWVGFibGVPdmVyZmxvdzpWVGFibGVPdmVyZmxvdyxWU2ltcGxlVGFibGU6X1ZTaW1wbGVUYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sVlZpcnR1YWxUYWJsZTpfVlZpcnR1YWxUYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il19fTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YVRhYmxlL21peGlucy9oZWFkZXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9taXhpbnMvaGVhZGVyLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGFUYWJsZU1peGluc0hlYWRlclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vVkljb24gKi8iLi9zcmMvY29tcG9uZW50cy9WSWNvbi9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2hlY2tib3hfVlNpbXBsZUNoZWNrYm94X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vVkNoZWNrYm94L1ZTaW1wbGVDaGVja2JveCAqLyIuL3NyYy9jb21wb25lbnRzL1ZDaGVja2JveC9WU2ltcGxlQ2hlY2tib3gudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZGlyZWN0aXZlc19yaXBwbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi8uLi9kaXJlY3RpdmVzL3JpcHBsZSAqLyIuL3NyYy9kaXJlY3RpdmVzL3JpcHBsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKSgpLmV4dGVuZCh7Ly8gaHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS9pc3N1ZXMvNjg3MgpkaXJlY3RpdmVzOntyaXBwbGU6X2RpcmVjdGl2ZXNfcmlwcGxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXX0scHJvcHM6e2hlYWRlcnM6e3R5cGU6QXJyYXkscmVxdWlyZWQ6dHJ1ZX0sb3B0aW9uczp7dHlwZTpPYmplY3QsZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybntwYWdlOjEsaXRlbXNQZXJQYWdlOjEwLHNvcnRCeTpbXSxzb3J0RGVzYzpbXSxncm91cEJ5OltdLGdyb3VwRGVzYzpbXSxtdWx0aVNvcnQ6ZmFsc2UsbXVzdFNvcnQ6ZmFsc2V9O319LHNvcnRJY29uOnt0eXBlOlN0cmluZyxkZWZhdWx0Oickc29ydCd9LGV2ZXJ5SXRlbTpCb29sZWFuLHNvbWVJdGVtczpCb29sZWFuLHNob3dHcm91cEJ5OkJvb2xlYW4sc2luZ2xlU2VsZWN0OkJvb2xlYW4sZGlzYWJsZVNvcnQ6Qm9vbGVhbn0sbWV0aG9kczp7Z2VuU2VsZWN0QWxsOmZ1bmN0aW9uIGdlblNlbGVjdEFsbCgpe3ZhciBfdGhpcz10aGlzO3ZhciBkYXRhPXtwcm9wczp7dmFsdWU6dGhpcy5ldmVyeUl0ZW0saW5kZXRlcm1pbmF0ZTohdGhpcy5ldmVyeUl0ZW0mJnRoaXMuc29tZUl0ZW1zfSxvbjp7aW5wdXQ6ZnVuY3Rpb24gaW5wdXQodil7cmV0dXJuIF90aGlzLiRlbWl0KCd0b2dnbGUtc2VsZWN0LWFsbCcsdik7fX19O2lmKHRoaXMuJHNjb3BlZFNsb3RzWydkYXRhLXRhYmxlLXNlbGVjdCddKXtyZXR1cm4gdGhpcy4kc2NvcGVkU2xvdHNbJ2RhdGEtdGFibGUtc2VsZWN0J10oZGF0YSk7fXJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WQ2hlY2tib3hfVlNpbXBsZUNoZWNrYm94X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfX2Fzc2lnbih7c3RhdGljQ2xhc3M6J3YtZGF0YS10YWJsZV9fY2hlY2tib3gnfSxkYXRhKSk7fSxnZW5Tb3J0SWNvbjpmdW5jdGlvbiBnZW5Tb3J0SWNvbigpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0se3N0YXRpY0NsYXNzOid2LWRhdGEtdGFibGUtaGVhZGVyX19pY29uJyxwcm9wczp7c2l6ZToxOH19LFt0aGlzLnNvcnRJY29uXSk7fX19KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9WRGF0ZVBpY2tlci50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VyLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGF0ZVBpY2tlclZEYXRlUGlja2VyVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGVQaWNrZXJUaXRsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkRhdGVQaWNrZXJUaXRsZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VyVGl0bGUudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGVQaWNrZXJIZWFkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEYXRlUGlja2VySGVhZGVyICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvVkRhdGVQaWNrZXJIZWFkZXIudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGVQaWNrZXJEYXRlVGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEYXRlUGlja2VyRGF0ZVRhYmxlICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvVkRhdGVQaWNrZXJEYXRlVGFibGUudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGVQaWNrZXJNb250aFRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRGF0ZVBpY2tlck1vbnRoVGFibGUgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9WRGF0ZVBpY2tlck1vbnRoVGFibGUudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGVQaWNrZXJZZWFyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkRhdGVQaWNrZXJZZWFycyAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VyWWVhcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2xvY2FsYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9sb2NhbGFibGUgKi8iLi9zcmMvbWl4aW5zL2xvY2FsYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfcGlja2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3BpY2tlciAqLyIuL3NyYy9taXhpbnMvcGlja2VyL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci91dGlsL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaXNEYXRlQWxsb3dlZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbC9pc0RhdGVBbGxvd2VkICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvdXRpbC9pc0RhdGVBbGxvd2VkLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvY29uc29sZSAqLyIuL3NyYy91dGlsL2NvbnNvbGUudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNhbGVuZGFyX3V0aWxfdGltZXN0YW1wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZDYWxlbmRhci91dGlsL3RpbWVzdGFtcCAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYWxlbmRhci91dGlsL3RpbWVzdGFtcC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX3JlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19yZWFkfHxmdW5jdGlvbihvLG4pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl07aWYoIW0pcmV0dXJuIG87dmFyIGk9bS5jYWxsKG8pLHIsYXI9W10sZTt0cnl7d2hpbGUoKG49PT12b2lkIDB8fG4tLT4wKSYmIShyPWkubmV4dCgpKS5kb25lKXthci5wdXNoKHIudmFsdWUpO319Y2F0Y2goZXJyb3Ipe2U9e2Vycm9yOmVycm9yfTt9ZmluYWxseXt0cnl7aWYociYmIXIuZG9uZSYmKG09aVsicmV0dXJuIl0pKW0uY2FsbChpKTt9ZmluYWxseXtpZihlKXRocm93IGUuZXJyb3I7fX1yZXR1cm4gYXI7fTt2YXIgX19zcHJlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19zcHJlYWR8fGZ1bmN0aW9uKCl7Zm9yKHZhciBhcj1bXSxpPTA7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7YXI9YXIuY29uY2F0KF9fcmVhZChhcmd1bWVudHNbaV0pKTt9cmV0dXJuIGFyO307Ly8gQ29tcG9uZW50cwovLyBNaXhpbnMKLy8gVXRpbHMKLy8gQWRkcyBsZWFkaW5nIHplcm8gdG8gbW9udGgvZGF5IGlmIG5lY2Vzc2FyeSwgcmV0dXJucyAnWVlZWScgaWYgdHlwZSA9ICd5ZWFyJywKLy8gJ1lZWVktTU0nIGlmICdtb250aCcgYW5kICdZWVlZLU1NLUREJyBpZiAnZGF0ZScKZnVuY3Rpb24gc2FuaXRpemVEYXRlU3RyaW5nKGRhdGVTdHJpbmcsdHlwZSl7dmFyIF9hPV9fcmVhZChkYXRlU3RyaW5nLnNwbGl0KCctJyksMykseWVhcj1fYVswXSxfYj1fYVsxXSxtb250aD1fYj09PXZvaWQgMD8xOl9iLF9jPV9hWzJdLGRhdGU9X2M9PT12b2lkIDA/MTpfYztyZXR1cm4oeWVhcisiLSIrT2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bInBhZCJdKShtb250aCkrIi0iK09iamVjdChfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJwYWQiXSkoZGF0ZSkpLnN1YnN0cigwLHtkYXRlOjEwLG1vbnRoOjcseWVhcjo0fVt0eXBlXSk7fS8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfX1siZGVmYXVsdCJdKShfbWl4aW5zX2xvY2FsYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0sX21peGluc19waWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdLyogQHZ1ZS9jb21wb25lbnQgKi8pLmV4dGVuZCh7bmFtZTondi1kYXRlLXBpY2tlcicscHJvcHM6e2FsbG93ZWREYXRlczpGdW5jdGlvbiwvLyBGdW5jdGlvbiBmb3JtYXR0aW5nIHRoZSBkYXkgaW4gZGF0ZSBwaWNrZXIgdGFibGUKZGF5Rm9ybWF0OkZ1bmN0aW9uLGRpc2FibGVkOkJvb2xlYW4sZXZlbnRzOnt0eXBlOltBcnJheSxGdW5jdGlvbixPYmplY3RdLGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm4gbnVsbDt9fSxldmVudENvbG9yOnt0eXBlOltBcnJheSxGdW5jdGlvbixPYmplY3QsU3RyaW5nXSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuJ3dhcm5pbmcnO319LGZpcnN0RGF5T2ZXZWVrOnt0eXBlOltTdHJpbmcsTnVtYmVyXSxkZWZhdWx0OjB9LC8vIEZ1bmN0aW9uIGZvcm1hdHRpbmcgdGhlIHRhYmxlRGF0ZSBpbiB0aGUgZGF5L21vbnRoIHRhYmxlIGhlYWRlcgpoZWFkZXJEYXRlRm9ybWF0OkZ1bmN0aW9uLG1heDpTdHJpbmcsbWluOlN0cmluZywvLyBGdW5jdGlvbiBmb3JtYXR0aW5nIG1vbnRoIGluIHRoZSBtb250aHMgdGFibGUKbW9udGhGb3JtYXQ6RnVuY3Rpb24sbXVsdGlwbGU6Qm9vbGVhbixuZXh0SWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJG5leHQnfSxwaWNrZXJEYXRlOlN0cmluZyxwcmV2SWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJHByZXYnfSxyYW5nZTpCb29sZWFuLHJlYWN0aXZlOkJvb2xlYW4scmVhZG9ubHk6Qm9vbGVhbixzY3JvbGxhYmxlOkJvb2xlYW4sc2hvd0N1cnJlbnQ6e3R5cGU6W0Jvb2xlYW4sU3RyaW5nXSxkZWZhdWx0OnRydWV9LHNlbGVjdGVkSXRlbXNUZXh0Ont0eXBlOlN0cmluZyxkZWZhdWx0OickdnVldGlmeS5kYXRlUGlja2VyLml0ZW1zU2VsZWN0ZWQnfSxzaG93V2VlazpCb29sZWFuLC8vIEZ1bmN0aW9uIGZvcm1hdHRpbmcgY3VycmVudGx5IHNlbGVjdGVkIGRhdGUgaW4gdGhlIHBpY2tlciB0aXRsZQp0aXRsZURhdGVGb3JtYXQ6RnVuY3Rpb24sdHlwZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonZGF0ZScsdmFsaWRhdG9yOmZ1bmN0aW9uIHZhbGlkYXRvcih0eXBlKXtyZXR1cm5bJ2RhdGUnLCdtb250aCddLmluY2x1ZGVzKHR5cGUpO319LHZhbHVlOltBcnJheSxTdHJpbmddLHdlZWtkYXlGb3JtYXQ6RnVuY3Rpb24sLy8gRnVuY3Rpb24gZm9ybWF0dGluZyB0aGUgeWVhciBpbiB0YWJsZSBoZWFkZXIgYW5kIHBpY2t1cCB0aXRsZQp5ZWFyRm9ybWF0OkZ1bmN0aW9uLHllYXJJY29uOlN0cmluZ30sZGF0YTpmdW5jdGlvbiBkYXRhKCl7dmFyIF90aGlzPXRoaXM7dmFyIG5vdz1uZXcgRGF0ZSgpO3JldHVybnthY3RpdmVQaWNrZXI6dGhpcy50eXBlLnRvVXBwZXJDYXNlKCksaW5wdXREYXk6bnVsbCxpbnB1dE1vbnRoOm51bGwsaW5wdXRZZWFyOm51bGwsaXNSZXZlcnNpbmc6ZmFsc2Usbm93Om5vdywvLyB0YWJsZURhdGUgaXMgYSBzdHJpbmcgaW4gJ1lZWVknIC8gJ1lZWVktTScgZm9ybWF0IChsZWFkaW5nIHplcm8gZm9yIG1vbnRoIGlzIG5vdCByZXF1aXJlZCkKdGFibGVEYXRlOmZ1bmN0aW9uKCl7aWYoX3RoaXMucGlja2VyRGF0ZSl7cmV0dXJuIF90aGlzLnBpY2tlckRhdGU7fXZhciBkYXRlPShfdGhpcy5tdWx0aXBsZXx8X3RoaXMucmFuZ2U/X3RoaXMudmFsdWVbX3RoaXMudmFsdWUubGVuZ3RoLTFdOl90aGlzLnZhbHVlKXx8bm93LmdldEZ1bGxZZWFyKCkrIi0iKyhub3cuZ2V0TW9udGgoKSsxKTtyZXR1cm4gc2FuaXRpemVEYXRlU3RyaW5nKGRhdGUsX3RoaXMudHlwZT09PSdkYXRlJz8nbW9udGgnOid5ZWFyJyk7fSgpfTt9LGNvbXB1dGVkOntpc011bHRpcGxlOmZ1bmN0aW9uIGlzTXVsdGlwbGUoKXtyZXR1cm4gdGhpcy5tdWx0aXBsZXx8dGhpcy5yYW5nZTt9LGxhc3RWYWx1ZTpmdW5jdGlvbiBsYXN0VmFsdWUoKXtyZXR1cm4gdGhpcy5pc011bHRpcGxlP3RoaXMudmFsdWVbdGhpcy52YWx1ZS5sZW5ndGgtMV06dGhpcy52YWx1ZTt9LHNlbGVjdGVkTW9udGhzOmZ1bmN0aW9uIHNlbGVjdGVkTW9udGhzKCl7aWYoIXRoaXMudmFsdWV8fCF0aGlzLnZhbHVlLmxlbmd0aHx8dGhpcy50eXBlPT09J21vbnRoJyl7cmV0dXJuIHRoaXMudmFsdWU7fWVsc2UgaWYodGhpcy5pc011bHRpcGxlKXtyZXR1cm4gdGhpcy52YWx1ZS5tYXAoZnVuY3Rpb24odmFsKXtyZXR1cm4gdmFsLnN1YnN0cigwLDcpO30pO31lbHNle3JldHVybiB0aGlzLnZhbHVlLnN1YnN0cigwLDcpO319LGN1cnJlbnQ6ZnVuY3Rpb24gY3VycmVudCgpe2lmKHRoaXMuc2hvd0N1cnJlbnQ9PT10cnVlKXtyZXR1cm4gc2FuaXRpemVEYXRlU3RyaW5nKHRoaXMubm93LmdldEZ1bGxZZWFyKCkrIi0iKyh0aGlzLm5vdy5nZXRNb250aCgpKzEpKyItIit0aGlzLm5vdy5nZXREYXRlKCksdGhpcy50eXBlKTt9cmV0dXJuIHRoaXMuc2hvd0N1cnJlbnR8fG51bGw7fSxpbnB1dERhdGU6ZnVuY3Rpb24gaW5wdXREYXRlKCl7cmV0dXJuIHRoaXMudHlwZT09PSdkYXRlJz90aGlzLmlucHV0WWVhcisiLSIrT2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bInBhZCJdKSh0aGlzLmlucHV0TW9udGgrMSkrIi0iK09iamVjdChfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJwYWQiXSkodGhpcy5pbnB1dERheSk6dGhpcy5pbnB1dFllYXIrIi0iK09iamVjdChfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJwYWQiXSkodGhpcy5pbnB1dE1vbnRoKzEpO30sdGFibGVNb250aDpmdW5jdGlvbiB0YWJsZU1vbnRoKCl7cmV0dXJuIE51bWJlcigodGhpcy5waWNrZXJEYXRlfHx0aGlzLnRhYmxlRGF0ZSkuc3BsaXQoJy0nKVsxXSktMTt9LHRhYmxlWWVhcjpmdW5jdGlvbiB0YWJsZVllYXIoKXtyZXR1cm4gTnVtYmVyKCh0aGlzLnBpY2tlckRhdGV8fHRoaXMudGFibGVEYXRlKS5zcGxpdCgnLScpWzBdKTt9LG1pbk1vbnRoOmZ1bmN0aW9uIG1pbk1vbnRoKCl7cmV0dXJuIHRoaXMubWluP3Nhbml0aXplRGF0ZVN0cmluZyh0aGlzLm1pbiwnbW9udGgnKTpudWxsO30sbWF4TW9udGg6ZnVuY3Rpb24gbWF4TW9udGgoKXtyZXR1cm4gdGhpcy5tYXg/c2FuaXRpemVEYXRlU3RyaW5nKHRoaXMubWF4LCdtb250aCcpOm51bGw7fSxtaW5ZZWFyOmZ1bmN0aW9uIG1pblllYXIoKXtyZXR1cm4gdGhpcy5taW4/c2FuaXRpemVEYXRlU3RyaW5nKHRoaXMubWluLCd5ZWFyJyk6bnVsbDt9LG1heFllYXI6ZnVuY3Rpb24gbWF4WWVhcigpe3JldHVybiB0aGlzLm1heD9zYW5pdGl6ZURhdGVTdHJpbmcodGhpcy5tYXgsJ3llYXInKTpudWxsO30sZm9ybWF0dGVyczpmdW5jdGlvbiBmb3JtYXR0ZXJzKCl7cmV0dXJue3llYXI6dGhpcy55ZWFyRm9ybWF0fHxPYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siY3JlYXRlTmF0aXZlTG9jYWxlRm9ybWF0dGVyIl0pKHRoaXMuY3VycmVudExvY2FsZSx7eWVhcjonbnVtZXJpYycsdGltZVpvbmU6J1VUQyd9LHtsZW5ndGg6NH0pLHRpdGxlRGF0ZTp0aGlzLnRpdGxlRGF0ZUZvcm1hdHx8KHRoaXMuaXNNdWx0aXBsZT90aGlzLmRlZmF1bHRUaXRsZU11bHRpcGxlRGF0ZUZvcm1hdHRlcjp0aGlzLmRlZmF1bHRUaXRsZURhdGVGb3JtYXR0ZXIpfTt9LGRlZmF1bHRUaXRsZU11bHRpcGxlRGF0ZUZvcm1hdHRlcjpmdW5jdGlvbiBkZWZhdWx0VGl0bGVNdWx0aXBsZURhdGVGb3JtYXR0ZXIoKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gZnVuY3Rpb24oZGF0ZXMpe2lmKCFkYXRlcy5sZW5ndGgpe3JldHVybictJzt9aWYoZGF0ZXMubGVuZ3RoPT09MSl7cmV0dXJuIF90aGlzLmRlZmF1bHRUaXRsZURhdGVGb3JtYXR0ZXIoZGF0ZXNbMF0pO31yZXR1cm4gX3RoaXMuJHZ1ZXRpZnkubGFuZy50KF90aGlzLnNlbGVjdGVkSXRlbXNUZXh0LGRhdGVzLmxlbmd0aCk7fTt9LGRlZmF1bHRUaXRsZURhdGVGb3JtYXR0ZXI6ZnVuY3Rpb24gZGVmYXVsdFRpdGxlRGF0ZUZvcm1hdHRlcigpe3ZhciB0aXRsZUZvcm1hdHM9e3llYXI6e3llYXI6J251bWVyaWMnLHRpbWVab25lOidVVEMnfSxtb250aDp7bW9udGg6J2xvbmcnLHRpbWVab25lOidVVEMnfSxkYXRlOnt3ZWVrZGF5OidzaG9ydCcsbW9udGg6J3Nob3J0JyxkYXk6J251bWVyaWMnLHRpbWVab25lOidVVEMnfX07dmFyIHRpdGxlRGF0ZUZvcm1hdHRlcj1PYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siY3JlYXRlTmF0aXZlTG9jYWxlRm9ybWF0dGVyIl0pKHRoaXMuY3VycmVudExvY2FsZSx0aXRsZUZvcm1hdHNbdGhpcy50eXBlXSx7c3RhcnQ6MCxsZW5ndGg6e2RhdGU6MTAsbW9udGg6Nyx5ZWFyOjR9W3RoaXMudHlwZV19KTt2YXIgbGFuZHNjYXBlRm9ybWF0dGVyPWZ1bmN0aW9uIGxhbmRzY2FwZUZvcm1hdHRlcihkYXRlKXtyZXR1cm4gdGl0bGVEYXRlRm9ybWF0dGVyKGRhdGUpLnJlcGxhY2UoLyhbXlxkXHNdKShbXGRdKS9nLGZ1bmN0aW9uKG1hdGNoLG5vbkRpZ2l0LGRpZ2l0KXtyZXR1cm4gbm9uRGlnaXQrIiAiK2RpZ2l0O30pLnJlcGxhY2UoJywgJywnLDxicj4nKTt9O3JldHVybiB0aGlzLmxhbmRzY2FwZT9sYW5kc2NhcGVGb3JtYXR0ZXI6dGl0bGVEYXRlRm9ybWF0dGVyO319LHdhdGNoOnt0YWJsZURhdGU6ZnVuY3Rpb24gdGFibGVEYXRlKHZhbCxwcmV2KXsvLyBNYWtlIGEgSVNPIDg2MDEgc3RyaW5ncyBmcm9tIHZhbCBhbmQgcHJldiBmb3IgY29tcGFyaXNpb24sIG90aGVyd2lzZSBpdCB3aWxsIGluY29ycmVjdGx5Ci8vIGNvbXBhcmUgZm9yIGV4YW1wbGUgJzIwMDAtOScgYW5kICcyMDAwLTEwJwp2YXIgc2FuaXRpemVUeXBlPXRoaXMudHlwZT09PSdtb250aCc/J3llYXInOidtb250aCc7dGhpcy5pc1JldmVyc2luZz1zYW5pdGl6ZURhdGVTdHJpbmcodmFsLHNhbml0aXplVHlwZSk8c2FuaXRpemVEYXRlU3RyaW5nKHByZXYsc2FuaXRpemVUeXBlKTt0aGlzLiRlbWl0KCd1cGRhdGU6cGlja2VyLWRhdGUnLHZhbCk7fSxwaWNrZXJEYXRlOmZ1bmN0aW9uIHBpY2tlckRhdGUodmFsKXtpZih2YWwpe3RoaXMudGFibGVEYXRlPXZhbDt9ZWxzZSBpZih0aGlzLmxhc3RWYWx1ZSYmdGhpcy50eXBlPT09J2RhdGUnKXt0aGlzLnRhYmxlRGF0ZT1zYW5pdGl6ZURhdGVTdHJpbmcodGhpcy5sYXN0VmFsdWUsJ21vbnRoJyk7fWVsc2UgaWYodGhpcy5sYXN0VmFsdWUmJnRoaXMudHlwZT09PSdtb250aCcpe3RoaXMudGFibGVEYXRlPXNhbml0aXplRGF0ZVN0cmluZyh0aGlzLmxhc3RWYWx1ZSwneWVhcicpO319LHZhbHVlOmZ1bmN0aW9uIHZhbHVlKG5ld1ZhbHVlLG9sZFZhbHVlKXt0aGlzLmNoZWNrTXVsdGlwbGVQcm9wKCk7dGhpcy5zZXRJbnB1dERhdGUoKTtpZighdGhpcy5pc011bHRpcGxlJiZ0aGlzLnZhbHVlJiYhdGhpcy5waWNrZXJEYXRlKXt0aGlzLnRhYmxlRGF0ZT1zYW5pdGl6ZURhdGVTdHJpbmcodGhpcy5pbnB1dERhdGUsdGhpcy50eXBlPT09J21vbnRoJz8neWVhcic6J21vbnRoJyk7fWVsc2UgaWYodGhpcy5pc011bHRpcGxlJiZ0aGlzLnZhbHVlLmxlbmd0aCYmIW9sZFZhbHVlLmxlbmd0aCYmIXRoaXMucGlja2VyRGF0ZSl7dGhpcy50YWJsZURhdGU9c2FuaXRpemVEYXRlU3RyaW5nKHRoaXMuaW5wdXREYXRlLHRoaXMudHlwZT09PSdtb250aCc/J3llYXInOidtb250aCcpO319LHR5cGU6ZnVuY3Rpb24gdHlwZShfdHlwZSl7dGhpcy5hY3RpdmVQaWNrZXI9X3R5cGUudG9VcHBlckNhc2UoKTtpZih0aGlzLnZhbHVlJiZ0aGlzLnZhbHVlLmxlbmd0aCl7dmFyIG91dHB1dD0odGhpcy5pc011bHRpcGxlP3RoaXMudmFsdWU6W3RoaXMudmFsdWVdKS5tYXAoZnVuY3Rpb24odmFsKXtyZXR1cm4gc2FuaXRpemVEYXRlU3RyaW5nKHZhbCxfdHlwZSk7fSkuZmlsdGVyKHRoaXMuaXNEYXRlQWxsb3dlZCk7dGhpcy4kZW1pdCgnaW5wdXQnLHRoaXMuaXNNdWx0aXBsZT9vdXRwdXQ6b3V0cHV0WzBdKTt9fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy5jaGVja011bHRpcGxlUHJvcCgpO2lmKHRoaXMucGlja2VyRGF0ZSE9PXRoaXMudGFibGVEYXRlKXt0aGlzLiRlbWl0KCd1cGRhdGU6cGlja2VyLWRhdGUnLHRoaXMudGFibGVEYXRlKTt9dGhpcy5zZXRJbnB1dERhdGUoKTt9LG1ldGhvZHM6e2VtaXRJbnB1dDpmdW5jdGlvbiBlbWl0SW5wdXQobmV3SW5wdXQpe2lmKHRoaXMucmFuZ2UmJnRoaXMudmFsdWUpe3RoaXMudmFsdWUubGVuZ3RoPT09Mj90aGlzLiRlbWl0KCdpbnB1dCcsW25ld0lucHV0XSk6dGhpcy4kZW1pdCgnaW5wdXQnLF9fc3ByZWFkKHRoaXMudmFsdWUsW25ld0lucHV0XSkpO3JldHVybjt9dmFyIG91dHB1dD10aGlzLm11bHRpcGxlP3RoaXMudmFsdWUuaW5kZXhPZihuZXdJbnB1dCk9PT0tMT90aGlzLnZhbHVlLmNvbmNhdChbbmV3SW5wdXRdKTp0aGlzLnZhbHVlLmZpbHRlcihmdW5jdGlvbih4KXtyZXR1cm4geCE9PW5ld0lucHV0O30pOm5ld0lucHV0O3RoaXMuJGVtaXQoJ2lucHV0JyxvdXRwdXQpO3RoaXMubXVsdGlwbGV8fHRoaXMuJGVtaXQoJ2NoYW5nZScsbmV3SW5wdXQpO30sY2hlY2tNdWx0aXBsZVByb3A6ZnVuY3Rpb24gY2hlY2tNdWx0aXBsZVByb3AoKXtpZih0aGlzLnZhbHVlPT1udWxsKXJldHVybjt2YXIgdmFsdWVUeXBlPXRoaXMudmFsdWUuY29uc3RydWN0b3IubmFtZTt2YXIgZXhwZWN0ZWQ9dGhpcy5pc011bHRpcGxlPydBcnJheSc6J1N0cmluZyc7aWYodmFsdWVUeXBlIT09ZXhwZWN0ZWQpe09iamVjdChfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19bImNvbnNvbGVXYXJuIl0pKCJWYWx1ZSBtdXN0IGJlICIrKHRoaXMuaXNNdWx0aXBsZT8nYW4nOidhJykrIiAiK2V4cGVjdGVkKyIsIGdvdCAiK3ZhbHVlVHlwZSx0aGlzKTt9fSxpc0RhdGVBbGxvd2VkOmZ1bmN0aW9uIGlzRGF0ZUFsbG93ZWQodmFsdWUpe3JldHVybiBPYmplY3QoX3V0aWxfaXNEYXRlQWxsb3dlZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJkZWZhdWx0Il0pKHZhbHVlLHRoaXMubWluLHRoaXMubWF4LHRoaXMuYWxsb3dlZERhdGVzKTt9LHllYXJDbGljazpmdW5jdGlvbiB5ZWFyQ2xpY2sodmFsdWUpe3RoaXMuaW5wdXRZZWFyPXZhbHVlO2lmKHRoaXMudHlwZT09PSdtb250aCcpe3RoaXMudGFibGVEYXRlPSIiK3ZhbHVlO31lbHNle3RoaXMudGFibGVEYXRlPXZhbHVlKyItIitPYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1sicGFkIl0pKCh0aGlzLnRhYmxlTW9udGh8fDApKzEpO310aGlzLmFjdGl2ZVBpY2tlcj0nTU9OVEgnO2lmKHRoaXMucmVhY3RpdmUmJiF0aGlzLnJlYWRvbmx5JiYhdGhpcy5pc011bHRpcGxlJiZ0aGlzLmlzRGF0ZUFsbG93ZWQodGhpcy5pbnB1dERhdGUpKXt0aGlzLiRlbWl0KCdpbnB1dCcsdGhpcy5pbnB1dERhdGUpO319LG1vbnRoQ2xpY2s6ZnVuY3Rpb24gbW9udGhDbGljayh2YWx1ZSl7dGhpcy5pbnB1dFllYXI9cGFyc2VJbnQodmFsdWUuc3BsaXQoJy0nKVswXSwxMCk7dGhpcy5pbnB1dE1vbnRoPXBhcnNlSW50KHZhbHVlLnNwbGl0KCctJylbMV0sMTApLTE7aWYodGhpcy50eXBlPT09J2RhdGUnKXtpZih0aGlzLmlucHV0RGF5KXt0aGlzLmlucHV0RGF5PU1hdGgubWluKHRoaXMuaW5wdXREYXksT2JqZWN0KF9WQ2FsZW5kYXJfdXRpbF90aW1lc3RhbXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEwX19bImRheXNJbk1vbnRoIl0pKHRoaXMuaW5wdXRZZWFyLHRoaXMuaW5wdXRNb250aCsxKSk7fXRoaXMudGFibGVEYXRlPXZhbHVlO3RoaXMuYWN0aXZlUGlja2VyPSdEQVRFJztpZih0aGlzLnJlYWN0aXZlJiYhdGhpcy5yZWFkb25seSYmIXRoaXMuaXNNdWx0aXBsZSYmdGhpcy5pc0RhdGVBbGxvd2VkKHRoaXMuaW5wdXREYXRlKSl7dGhpcy4kZW1pdCgnaW5wdXQnLHRoaXMuaW5wdXREYXRlKTt9fWVsc2V7dGhpcy5lbWl0SW5wdXQodGhpcy5pbnB1dERhdGUpO319LGRhdGVDbGljazpmdW5jdGlvbiBkYXRlQ2xpY2sodmFsdWUpe3RoaXMuaW5wdXRZZWFyPXBhcnNlSW50KHZhbHVlLnNwbGl0KCctJylbMF0sMTApO3RoaXMuaW5wdXRNb250aD1wYXJzZUludCh2YWx1ZS5zcGxpdCgnLScpWzFdLDEwKS0xO3RoaXMuaW5wdXREYXk9cGFyc2VJbnQodmFsdWUuc3BsaXQoJy0nKVsyXSwxMCk7dGhpcy5lbWl0SW5wdXQodGhpcy5pbnB1dERhdGUpO30sZ2VuUGlja2VyVGl0bGU6ZnVuY3Rpb24gZ2VuUGlja2VyVGl0bGUoKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkRhdGVQaWNrZXJUaXRsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0se3Byb3BzOntkYXRlOnRoaXMudmFsdWU/dGhpcy5mb3JtYXR0ZXJzLnRpdGxlRGF0ZSh0aGlzLnZhbHVlKTonJyxkaXNhYmxlZDp0aGlzLmRpc2FibGVkLHJlYWRvbmx5OnRoaXMucmVhZG9ubHksc2VsZWN0aW5nWWVhcjp0aGlzLmFjdGl2ZVBpY2tlcj09PSdZRUFSJyx5ZWFyOnRoaXMuZm9ybWF0dGVycy55ZWFyKHRoaXMudmFsdWU/IiIrdGhpcy5pbnB1dFllYXI6dGhpcy50YWJsZURhdGUpLHllYXJJY29uOnRoaXMueWVhckljb24sdmFsdWU6dGhpcy5pc011bHRpcGxlP3RoaXMudmFsdWVbMF06dGhpcy52YWx1ZX0sc2xvdDondGl0bGUnLG9uOnsndXBkYXRlOnNlbGVjdGluZy15ZWFyJzpmdW5jdGlvbiB1cGRhdGVTZWxlY3RpbmdZZWFyKHZhbHVlKXtyZXR1cm4gX3RoaXMuYWN0aXZlUGlja2VyPXZhbHVlPydZRUFSJzpfdGhpcy50eXBlLnRvVXBwZXJDYXNlKCk7fX19KTt9LGdlblRhYmxlSGVhZGVyOmZ1bmN0aW9uIGdlblRhYmxlSGVhZGVyKCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZEYXRlUGlja2VySGVhZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSx7cHJvcHM6e25leHRJY29uOnRoaXMubmV4dEljb24sY29sb3I6dGhpcy5jb2xvcixkYXJrOnRoaXMuZGFyayxkaXNhYmxlZDp0aGlzLmRpc2FibGVkLGZvcm1hdDp0aGlzLmhlYWRlckRhdGVGb3JtYXQsbGlnaHQ6dGhpcy5saWdodCxsb2NhbGU6dGhpcy5sb2NhbGUsbWluOnRoaXMuYWN0aXZlUGlja2VyPT09J0RBVEUnP3RoaXMubWluTW9udGg6dGhpcy5taW5ZZWFyLG1heDp0aGlzLmFjdGl2ZVBpY2tlcj09PSdEQVRFJz90aGlzLm1heE1vbnRoOnRoaXMubWF4WWVhcixwcmV2SWNvbjp0aGlzLnByZXZJY29uLHJlYWRvbmx5OnRoaXMucmVhZG9ubHksdmFsdWU6dGhpcy5hY3RpdmVQaWNrZXI9PT0nREFURSc/T2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bInBhZCJdKSh0aGlzLnRhYmxlWWVhciw0KSsiLSIrT2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bInBhZCJdKSh0aGlzLnRhYmxlTW9udGgrMSk6IiIrT2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bInBhZCJdKSh0aGlzLnRhYmxlWWVhciw0KX0sb246e3RvZ2dsZTpmdW5jdGlvbiB0b2dnbGUoKXtyZXR1cm4gX3RoaXMuYWN0aXZlUGlja2VyPV90aGlzLmFjdGl2ZVBpY2tlcj09PSdEQVRFJz8nTU9OVEgnOidZRUFSJzt9LGlucHV0OmZ1bmN0aW9uIGlucHV0KHZhbHVlKXtyZXR1cm4gX3RoaXMudGFibGVEYXRlPXZhbHVlO319fSk7fSxnZW5EYXRlVGFibGU6ZnVuY3Rpb24gZ2VuRGF0ZVRhYmxlKCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZEYXRlUGlja2VyRGF0ZVRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSx7cHJvcHM6e2FsbG93ZWREYXRlczp0aGlzLmFsbG93ZWREYXRlcyxjb2xvcjp0aGlzLmNvbG9yLGN1cnJlbnQ6dGhpcy5jdXJyZW50LGRhcms6dGhpcy5kYXJrLGRpc2FibGVkOnRoaXMuZGlzYWJsZWQsZXZlbnRzOnRoaXMuZXZlbnRzLGV2ZW50Q29sb3I6dGhpcy5ldmVudENvbG9yLGZpcnN0RGF5T2ZXZWVrOnRoaXMuZmlyc3REYXlPZldlZWssZm9ybWF0OnRoaXMuZGF5Rm9ybWF0LGxpZ2h0OnRoaXMubGlnaHQsbG9jYWxlOnRoaXMubG9jYWxlLG1pbjp0aGlzLm1pbixtYXg6dGhpcy5tYXgscmFuZ2U6dGhpcy5yYW5nZSxyZWFkb25seTp0aGlzLnJlYWRvbmx5LHNjcm9sbGFibGU6dGhpcy5zY3JvbGxhYmxlLHNob3dXZWVrOnRoaXMuc2hvd1dlZWssdGFibGVEYXRlOk9iamVjdChfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJwYWQiXSkodGhpcy50YWJsZVllYXIsNCkrIi0iK09iamVjdChfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJwYWQiXSkodGhpcy50YWJsZU1vbnRoKzEpLHZhbHVlOnRoaXMudmFsdWUsd2Vla2RheUZvcm1hdDp0aGlzLndlZWtkYXlGb3JtYXR9LHJlZjondGFibGUnLG9uOntpbnB1dDp0aGlzLmRhdGVDbGljaywndXBkYXRlOnRhYmxlLWRhdGUnOmZ1bmN0aW9uIHVwZGF0ZVRhYmxlRGF0ZSh2YWx1ZSl7cmV0dXJuIF90aGlzLnRhYmxlRGF0ZT12YWx1ZTt9LCdjbGljazpkYXRlJzpmdW5jdGlvbiBjbGlja0RhdGUodmFsdWUpe3JldHVybiBfdGhpcy4kZW1pdCgnY2xpY2s6ZGF0ZScsdmFsdWUpO30sJ2RibGNsaWNrOmRhdGUnOmZ1bmN0aW9uIGRibGNsaWNrRGF0ZSh2YWx1ZSl7cmV0dXJuIF90aGlzLiRlbWl0KCdkYmxjbGljazpkYXRlJyx2YWx1ZSk7fX19KTt9LGdlbk1vbnRoVGFibGU6ZnVuY3Rpb24gZ2VuTW9udGhUYWJsZSgpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WRGF0ZVBpY2tlck1vbnRoVGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLHtwcm9wczp7YWxsb3dlZERhdGVzOnRoaXMudHlwZT09PSdtb250aCc/dGhpcy5hbGxvd2VkRGF0ZXM6bnVsbCxjb2xvcjp0aGlzLmNvbG9yLGN1cnJlbnQ6dGhpcy5jdXJyZW50P3Nhbml0aXplRGF0ZVN0cmluZyh0aGlzLmN1cnJlbnQsJ21vbnRoJyk6bnVsbCxkYXJrOnRoaXMuZGFyayxkaXNhYmxlZDp0aGlzLmRpc2FibGVkLGV2ZW50czp0aGlzLnR5cGU9PT0nbW9udGgnP3RoaXMuZXZlbnRzOm51bGwsZXZlbnRDb2xvcjp0aGlzLnR5cGU9PT0nbW9udGgnP3RoaXMuZXZlbnRDb2xvcjpudWxsLGZvcm1hdDp0aGlzLm1vbnRoRm9ybWF0LGxpZ2h0OnRoaXMubGlnaHQsbG9jYWxlOnRoaXMubG9jYWxlLG1pbjp0aGlzLm1pbk1vbnRoLG1heDp0aGlzLm1heE1vbnRoLHJlYWRvbmx5OnRoaXMucmVhZG9ubHkmJnRoaXMudHlwZT09PSdtb250aCcsc2Nyb2xsYWJsZTp0aGlzLnNjcm9sbGFibGUsdmFsdWU6dGhpcy5zZWxlY3RlZE1vbnRocyx0YWJsZURhdGU6IiIrT2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bInBhZCJdKSh0aGlzLnRhYmxlWWVhciw0KX0scmVmOid0YWJsZScsb246e2lucHV0OnRoaXMubW9udGhDbGljaywndXBkYXRlOnRhYmxlLWRhdGUnOmZ1bmN0aW9uIHVwZGF0ZVRhYmxlRGF0ZSh2YWx1ZSl7cmV0dXJuIF90aGlzLnRhYmxlRGF0ZT12YWx1ZTt9LCdjbGljazptb250aCc6ZnVuY3Rpb24gY2xpY2tNb250aCh2YWx1ZSl7cmV0dXJuIF90aGlzLiRlbWl0KCdjbGljazptb250aCcsdmFsdWUpO30sJ2RibGNsaWNrOm1vbnRoJzpmdW5jdGlvbiBkYmxjbGlja01vbnRoKHZhbHVlKXtyZXR1cm4gX3RoaXMuJGVtaXQoJ2RibGNsaWNrOm1vbnRoJyx2YWx1ZSk7fX19KTt9LGdlblllYXJzOmZ1bmN0aW9uIGdlblllYXJzKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZEYXRlUGlja2VyWWVhcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLHtwcm9wczp7Y29sb3I6dGhpcy5jb2xvcixmb3JtYXQ6dGhpcy55ZWFyRm9ybWF0LGxvY2FsZTp0aGlzLmxvY2FsZSxtaW46dGhpcy5taW5ZZWFyLG1heDp0aGlzLm1heFllYXIsdmFsdWU6dGhpcy50YWJsZVllYXJ9LG9uOntpbnB1dDp0aGlzLnllYXJDbGlja319KTt9LGdlblBpY2tlckJvZHk6ZnVuY3Rpb24gZ2VuUGlja2VyQm9keSgpe3ZhciBjaGlsZHJlbj10aGlzLmFjdGl2ZVBpY2tlcj09PSdZRUFSJz9bdGhpcy5nZW5ZZWFycygpXTpbdGhpcy5nZW5UYWJsZUhlYWRlcigpLHRoaXMuYWN0aXZlUGlja2VyPT09J0RBVEUnP3RoaXMuZ2VuRGF0ZVRhYmxlKCk6dGhpcy5nZW5Nb250aFRhYmxlKCldO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtrZXk6dGhpcy5hY3RpdmVQaWNrZXJ9LGNoaWxkcmVuKTt9LHNldElucHV0RGF0ZTpmdW5jdGlvbiBzZXRJbnB1dERhdGUoKXtpZih0aGlzLmxhc3RWYWx1ZSl7dmFyIGFycmF5PXRoaXMubGFzdFZhbHVlLnNwbGl0KCctJyk7dGhpcy5pbnB1dFllYXI9cGFyc2VJbnQoYXJyYXlbMF0sMTApO3RoaXMuaW5wdXRNb250aD1wYXJzZUludChhcnJheVsxXSwxMCktMTtpZih0aGlzLnR5cGU9PT0nZGF0ZScpe3RoaXMuaW5wdXREYXk9cGFyc2VJbnQoYXJyYXlbMl0sMTApO319ZWxzZXt0aGlzLmlucHV0WWVhcj10aGlzLmlucHV0WWVhcnx8dGhpcy5ub3cuZ2V0RnVsbFllYXIoKTt0aGlzLmlucHV0TW9udGg9dGhpcy5pbnB1dE1vbnRoPT1udWxsP3RoaXMuaW5wdXRNb250aDp0aGlzLm5vdy5nZXRNb250aCgpO3RoaXMuaW5wdXREYXk9dGhpcy5pbnB1dERheXx8dGhpcy5ub3cuZ2V0RGF0ZSgpO319fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKCl7cmV0dXJuIHRoaXMuZ2VuUGlja2VyKCd2LXBpY2tlci0tZGF0ZScpO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9WRGF0ZVBpY2tlckRhdGVUYWJsZS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VyRGF0ZVRhYmxlLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGF0ZVBpY2tlclZEYXRlUGlja2VyRGF0ZVRhYmxlVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2RhdGVfcGlja2VyX3RhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9taXhpbnMvZGF0ZS1waWNrZXItdGFibGUgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9taXhpbnMvZGF0ZS1waWNrZXItdGFibGUudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbCAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL3V0aWwvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7Ly8gTWl4aW5zCi8vIFV0aWxzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKF9taXhpbnNfZGF0ZV9waWNrZXJfdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLyogQHZ1ZS9jb21wb25lbnQgKi8pLmV4dGVuZCh7bmFtZTondi1kYXRlLXBpY2tlci1kYXRlLXRhYmxlJyxwcm9wczp7Zmlyc3REYXlPZldlZWs6e3R5cGU6W1N0cmluZyxOdW1iZXJdLGRlZmF1bHQ6MH0sc2hvd1dlZWs6Qm9vbGVhbix3ZWVrZGF5Rm9ybWF0OkZ1bmN0aW9ufSxjb21wdXRlZDp7Zm9ybWF0dGVyOmZ1bmN0aW9uIGZvcm1hdHRlcigpe3JldHVybiB0aGlzLmZvcm1hdHx8T2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlciJdKSh0aGlzLmN1cnJlbnRMb2NhbGUse2RheTonbnVtZXJpYycsdGltZVpvbmU6J1VUQyd9LHtzdGFydDo4LGxlbmd0aDoyfSk7fSx3ZWVrZGF5Rm9ybWF0dGVyOmZ1bmN0aW9uIHdlZWtkYXlGb3JtYXR0ZXIoKXtyZXR1cm4gdGhpcy53ZWVrZGF5Rm9ybWF0fHxPYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siY3JlYXRlTmF0aXZlTG9jYWxlRm9ybWF0dGVyIl0pKHRoaXMuY3VycmVudExvY2FsZSx7d2Vla2RheTonbmFycm93Jyx0aW1lWm9uZTonVVRDJ30pO30sd2Vla0RheXM6ZnVuY3Rpb24gd2Vla0RheXMoKXt2YXIgX3RoaXM9dGhpczt2YXIgZmlyc3Q9cGFyc2VJbnQodGhpcy5maXJzdERheU9mV2VlaywxMCk7cmV0dXJuIHRoaXMud2Vla2RheUZvcm1hdHRlcj9PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJjcmVhdGVSYW5nZSJdKSg3KS5tYXAoZnVuY3Rpb24oaSl7cmV0dXJuIF90aGlzLndlZWtkYXlGb3JtYXR0ZXIoIjIwMTctMDEtIisoZmlyc3QraSsxNSkpO30pLy8gMjAxNy0wMS0xNSBpcyBTdW5kYXkKOk9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImNyZWF0ZVJhbmdlIl0pKDcpLm1hcChmdW5jdGlvbihpKXtyZXR1cm5bJ1MnLCdNJywnVCcsJ1cnLCdUJywnRicsJ1MnXVsoaStmaXJzdCklN107fSk7fX0sbWV0aG9kczp7Y2FsY3VsYXRlVGFibGVEYXRlOmZ1bmN0aW9uIGNhbGN1bGF0ZVRhYmxlRGF0ZShkZWx0YSl7cmV0dXJuIE9iamVjdChfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJtb250aENoYW5nZSJdKSh0aGlzLnRhYmxlRGF0ZSxNYXRoLnNpZ24oZGVsdGF8fDEpKTt9LGdlblRIZWFkOmZ1bmN0aW9uIGdlblRIZWFkKCl7dmFyIF90aGlzPXRoaXM7dmFyIGRheXM9dGhpcy53ZWVrRGF5cy5tYXAoZnVuY3Rpb24oZGF5KXtyZXR1cm4gX3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RoJyxkYXkpO30pO3RoaXMuc2hvd1dlZWsmJmRheXMudW5zaGlmdCh0aGlzLiRjcmVhdGVFbGVtZW50KCd0aCcpKTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndGhlYWQnLHRoaXMuZ2VuVFIoZGF5cykpO30sLy8gUmV0dXJucyBudW1iZXIgb2YgdGhlIGRheXMgZnJvbSB0aGUgZmlyc3REYXlPZldlZWsgdG8gdGhlIGZpcnN0IGRheSBvZiB0aGUgY3VycmVudCBtb250aAp3ZWVrRGF5c0JlZm9yZUZpcnN0RGF5T2ZUaGVNb250aDpmdW5jdGlvbiB3ZWVrRGF5c0JlZm9yZUZpcnN0RGF5T2ZUaGVNb250aCgpe3ZhciBmaXJzdERheU9mVGhlTW9udGg9bmV3IERhdGUodGhpcy5kaXNwbGF5ZWRZZWFyKyItIitPYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1sicGFkIl0pKHRoaXMuZGlzcGxheWVkTW9udGgrMSkrIi0wMVQwMDowMDowMCswMDowMCIpO3ZhciB3ZWVrRGF5PWZpcnN0RGF5T2ZUaGVNb250aC5nZXRVVENEYXkoKTtyZXR1cm4od2Vla0RheS1wYXJzZUludCh0aGlzLmZpcnN0RGF5T2ZXZWVrKSs3KSU3O30sZ2V0V2Vla051bWJlcjpmdW5jdGlvbiBnZXRXZWVrTnVtYmVyKCl7dmFyIGRheU9mWWVhcj1bMCwzMSw1OSw5MCwxMjAsMTUxLDE4MSwyMTIsMjQzLDI3MywzMDQsMzM0XVt0aGlzLmRpc3BsYXllZE1vbnRoXTtpZih0aGlzLmRpc3BsYXllZE1vbnRoPjEmJih0aGlzLmRpc3BsYXllZFllYXIlND09PTAmJnRoaXMuZGlzcGxheWVkWWVhciUxMDAhPT0wfHx0aGlzLmRpc3BsYXllZFllYXIlNDAwPT09MCkpe2RheU9mWWVhcisrO312YXIgb2Zmc2V0PSh0aGlzLmRpc3BsYXllZFllYXIrKHRoaXMuZGlzcGxheWVkWWVhci0xPj4yKS1NYXRoLmZsb29yKCh0aGlzLmRpc3BsYXllZFllYXItMSkvMTAwKStNYXRoLmZsb29yKCh0aGlzLmRpc3BsYXllZFllYXItMSkvNDAwKS1OdW1iZXIodGhpcy5maXJzdERheU9mV2VlaykpJTc7Ly8gaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvWmVsbGVyJTI3c19jb25ncnVlbmNlCnJldHVybiBNYXRoLmZsb29yKChkYXlPZlllYXIrb2Zmc2V0KS83KSsxO30sZ2VuV2Vla051bWJlcjpmdW5jdGlvbiBnZW5XZWVrTnVtYmVyKHdlZWtOdW1iZXIpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd0ZCcsW3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3NtYWxsJyx7c3RhdGljQ2xhc3M6J3YtZGF0ZS1waWNrZXItdGFibGUtLWRhdGVfX3dlZWsnfSxTdHJpbmcod2Vla051bWJlcikucGFkU3RhcnQoMiwnMCcpKV0pO30sZ2VuVEJvZHk6ZnVuY3Rpb24gZ2VuVEJvZHkoKXt2YXIgY2hpbGRyZW49W107dmFyIGRheXNJbk1vbnRoPW5ldyBEYXRlKHRoaXMuZGlzcGxheWVkWWVhcix0aGlzLmRpc3BsYXllZE1vbnRoKzEsMCkuZ2V0RGF0ZSgpO3ZhciByb3dzPVtdO3ZhciBkYXk9dGhpcy53ZWVrRGF5c0JlZm9yZUZpcnN0RGF5T2ZUaGVNb250aCgpO3ZhciB3ZWVrTnVtYmVyPXRoaXMuZ2V0V2Vla051bWJlcigpO3RoaXMuc2hvd1dlZWsmJnJvd3MucHVzaCh0aGlzLmdlbldlZWtOdW1iZXIod2Vla051bWJlcisrKSk7d2hpbGUoZGF5LS0pe3Jvd3MucHVzaCh0aGlzLiRjcmVhdGVFbGVtZW50KCd0ZCcpKTt9Zm9yKGRheT0xO2RheTw9ZGF5c0luTW9udGg7ZGF5Kyspe3ZhciBkYXRlPXRoaXMuZGlzcGxheWVkWWVhcisiLSIrT2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bInBhZCJdKSh0aGlzLmRpc3BsYXllZE1vbnRoKzEpKyItIitPYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1sicGFkIl0pKGRheSk7cm93cy5wdXNoKHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RkJyxbdGhpcy5nZW5CdXR0b24oZGF0ZSx0cnVlLCdkYXRlJyx0aGlzLmZvcm1hdHRlcildKSk7aWYocm93cy5sZW5ndGglKHRoaXMuc2hvd1dlZWs/ODo3KT09PTApe2NoaWxkcmVuLnB1c2godGhpcy5nZW5UUihyb3dzKSk7cm93cz1bXTtkYXk8ZGF5c0luTW9udGgmJnRoaXMuc2hvd1dlZWsmJnJvd3MucHVzaCh0aGlzLmdlbldlZWtOdW1iZXIod2Vla051bWJlcisrKSk7fX1pZihyb3dzLmxlbmd0aCl7Y2hpbGRyZW4ucHVzaCh0aGlzLmdlblRSKHJvd3MpKTt9cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3Rib2R5JyxjaGlsZHJlbik7fSxnZW5UUjpmdW5jdGlvbiBnZW5UUihjaGlsZHJlbil7cmV0dXJuW3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RyJyxjaGlsZHJlbildO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoKXtyZXR1cm4gdGhpcy5nZW5UYWJsZSgndi1kYXRlLXBpY2tlci10YWJsZSB2LWRhdGUtcGlja2VyLXRhYmxlLS1kYXRlJyxbdGhpcy5nZW5USGVhZCgpLHRoaXMuZ2VuVEJvZHkoKV0sdGhpcy5jYWxjdWxhdGVUYWJsZURhdGUpO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9WRGF0ZVBpY2tlckhlYWRlci5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9WRGF0ZVBpY2tlckhlYWRlci5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGF0ZVBpY2tlclZEYXRlUGlja2VySGVhZGVyU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvVkRhdGVQaWNrZXJIZWFkZXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9WRGF0ZVBpY2tlckhlYWRlci50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGVQaWNrZXJWRGF0ZVBpY2tlckhlYWRlclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEYXRlUGlja2VySGVhZGVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEYXRlUGlja2VySGVhZGVyLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9WRGF0ZVBpY2tlckhlYWRlci5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEYXRlUGlja2VySGVhZGVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZEYXRlUGlja2VySGVhZGVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WQnRuICovIi4vc3JjL2NvbXBvbmVudHMvVkJ0bi9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJY29uICovIi4vc3JjL2NvbXBvbmVudHMvVkljb24vaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9jb2xvcmFibGUgKi8iLi9zcmMvbWl4aW5zL2NvbG9yYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfbG9jYWxhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2xvY2FsYWJsZSAqLyIuL3NyYy9taXhpbnMvbG9jYWxhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbCAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL3V0aWwvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9Oy8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8vIFV0aWxzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJkZWZhdWx0Il0pKF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSxfbWl4aW5zX2xvY2FsYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdLyogQHZ1ZS9jb21wb25lbnQgKi8pLmV4dGVuZCh7bmFtZTondi1kYXRlLXBpY2tlci1oZWFkZXInLHByb3BzOntkaXNhYmxlZDpCb29sZWFuLGZvcm1hdDpGdW5jdGlvbixtaW46U3RyaW5nLG1heDpTdHJpbmcsbmV4dEljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRuZXh0J30scHJldkljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRwcmV2J30scmVhZG9ubHk6Qm9vbGVhbix2YWx1ZTp7dHlwZTpbTnVtYmVyLFN0cmluZ10scmVxdWlyZWQ6dHJ1ZX19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntpc1JldmVyc2luZzpmYWxzZX07fSxjb21wdXRlZDp7Zm9ybWF0dGVyOmZ1bmN0aW9uIGZvcm1hdHRlcigpe2lmKHRoaXMuZm9ybWF0KXtyZXR1cm4gdGhpcy5mb3JtYXQ7fWVsc2UgaWYoU3RyaW5nKHRoaXMudmFsdWUpLnNwbGl0KCctJylbMV0pe3JldHVybiBPYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siY3JlYXRlTmF0aXZlTG9jYWxlRm9ybWF0dGVyIl0pKHRoaXMuY3VycmVudExvY2FsZSx7bW9udGg6J2xvbmcnLHllYXI6J251bWVyaWMnLHRpbWVab25lOidVVEMnfSx7bGVuZ3RoOjd9KTt9ZWxzZXtyZXR1cm4gT2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlciJdKSh0aGlzLmN1cnJlbnRMb2NhbGUse3llYXI6J251bWVyaWMnLHRpbWVab25lOidVVEMnfSx7bGVuZ3RoOjR9KTt9fX0sd2F0Y2g6e3ZhbHVlOmZ1bmN0aW9uIHZhbHVlKG5ld1ZhbCxvbGRWYWwpe3RoaXMuaXNSZXZlcnNpbmc9bmV3VmFsPG9sZFZhbDt9fSxtZXRob2RzOntnZW5CdG46ZnVuY3Rpb24gZ2VuQnRuKGNoYW5nZSl7dmFyIF90aGlzPXRoaXM7dmFyIGRpc2FibGVkPXRoaXMuZGlzYWJsZWR8fGNoYW5nZTwwJiZ0aGlzLm1pbiYmdGhpcy5jYWxjdWxhdGVDaGFuZ2UoY2hhbmdlKTx0aGlzLm1pbnx8Y2hhbmdlPjAmJnRoaXMubWF4JiZ0aGlzLmNhbGN1bGF0ZUNoYW5nZShjaGFuZ2UpPnRoaXMubWF4O3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WQnRuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSx7cHJvcHM6e2Rhcms6dGhpcy5kYXJrLGRpc2FibGVkOmRpc2FibGVkLGljb246dHJ1ZSxsaWdodDp0aGlzLmxpZ2h0fSxuYXRpdmVPbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soZSl7ZS5zdG9wUHJvcGFnYXRpb24oKTtfdGhpcy4kZW1pdCgnaW5wdXQnLF90aGlzLmNhbGN1bGF0ZUNoYW5nZShjaGFuZ2UpKTt9fX0sW3RoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxjaGFuZ2U8MD09PSF0aGlzLiR2dWV0aWZ5LnJ0bD90aGlzLnByZXZJY29uOnRoaXMubmV4dEljb24pXSk7fSxjYWxjdWxhdGVDaGFuZ2U6ZnVuY3Rpb24gY2FsY3VsYXRlQ2hhbmdlKHNpZ24pe3ZhciBfYT1fX3JlYWQoU3RyaW5nKHRoaXMudmFsdWUpLnNwbGl0KCctJykubWFwKE51bWJlciksMikseWVhcj1fYVswXSxtb250aD1fYVsxXTtpZihtb250aD09bnVsbCl7cmV0dXJuIiIrKHllYXIrc2lnbik7fWVsc2V7cmV0dXJuIE9iamVjdChfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJtb250aENoYW5nZSJdKShTdHJpbmcodGhpcy52YWx1ZSksc2lnbik7fX0sZ2VuSGVhZGVyOmZ1bmN0aW9uIGdlbkhlYWRlcigpe3ZhciBfdGhpcz10aGlzO3ZhciBjb2xvcj0hdGhpcy5kaXNhYmxlZCYmKHRoaXMuY29sb3J8fCdhY2NlbnQnKTt2YXIgaGVhZGVyPXRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsdGhpcy5zZXRUZXh0Q29sb3IoY29sb3Ise2tleTpTdHJpbmcodGhpcy52YWx1ZSl9KSxbdGhpcy4kY3JlYXRlRWxlbWVudCgnYnV0dG9uJyx7YXR0cnM6e3R5cGU6J2J1dHRvbid9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygpe3JldHVybiBfdGhpcy4kZW1pdCgndG9nZ2xlJyk7fX19LFt0aGlzLiRzbG90cy5kZWZhdWx0fHx0aGlzLmZvcm1hdHRlcihTdHJpbmcodGhpcy52YWx1ZSkpXSldKTt2YXIgdHJhbnNpdGlvbj10aGlzLiRjcmVhdGVFbGVtZW50KCd0cmFuc2l0aW9uJyx7cHJvcHM6e25hbWU6dGhpcy5pc1JldmVyc2luZz09PSF0aGlzLiR2dWV0aWZ5LnJ0bD8ndGFiLXJldmVyc2UtdHJhbnNpdGlvbic6J3RhYi10cmFuc2l0aW9uJ319LFtoZWFkZXJdKTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtZGF0ZS1waWNrZXItaGVhZGVyX192YWx1ZScsY2xhc3M6eyd2LWRhdGUtcGlja2VyLWhlYWRlcl9fdmFsdWUtLWRpc2FibGVkJzp0aGlzLmRpc2FibGVkfX0sW3RyYW5zaXRpb25dKTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWRhdGUtcGlja2VyLWhlYWRlcicsY2xhc3M6X19hc3NpZ24oeyd2LWRhdGUtcGlja2VyLWhlYWRlci0tZGlzYWJsZWQnOnRoaXMuZGlzYWJsZWR9LHRoaXMudGhlbWVDbGFzc2VzKX0sW3RoaXMuZ2VuQnRuKC0xKSx0aGlzLmdlbkhlYWRlcigpLHRoaXMuZ2VuQnRuKCsxKV0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9WRGF0ZVBpY2tlck1vbnRoVGFibGUudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvVkRhdGVQaWNrZXJNb250aFRhYmxlLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGVQaWNrZXJWRGF0ZVBpY2tlck1vbnRoVGFibGVUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfZGF0ZV9waWNrZXJfdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL21peGlucy9kYXRlLXBpY2tlci10YWJsZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL21peGlucy9kYXRlLXBpY2tlci10YWJsZS50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvdXRpbC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7Ly8gTWl4aW5zCi8vIFV0aWxzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pKF9taXhpbnNfZGF0ZV9waWNrZXJfdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLyogQHZ1ZS9jb21wb25lbnQgKi8pLmV4dGVuZCh7bmFtZTondi1kYXRlLXBpY2tlci1tb250aC10YWJsZScsY29tcHV0ZWQ6e2Zvcm1hdHRlcjpmdW5jdGlvbiBmb3JtYXR0ZXIoKXtyZXR1cm4gdGhpcy5mb3JtYXR8fE9iamVjdChfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJjcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXIiXSkodGhpcy5jdXJyZW50TG9jYWxlLHttb250aDonc2hvcnQnLHRpbWVab25lOidVVEMnfSx7c3RhcnQ6NSxsZW5ndGg6Mn0pO319LG1ldGhvZHM6e2NhbGN1bGF0ZVRhYmxlRGF0ZTpmdW5jdGlvbiBjYWxjdWxhdGVUYWJsZURhdGUoZGVsdGEpe3JldHVybiIiKyhwYXJzZUludCh0aGlzLnRhYmxlRGF0ZSwxMCkrTWF0aC5zaWduKGRlbHRhfHwxKSk7fSxnZW5UQm9keTpmdW5jdGlvbiBnZW5UQm9keSgpe3ZhciBfdGhpcz10aGlzO3ZhciBjaGlsZHJlbj1bXTt2YXIgY29scz1BcnJheSgzKS5maWxsKG51bGwpO3ZhciByb3dzPTEyL2NvbHMubGVuZ3RoO3ZhciBfbG9vcF8xPWZ1bmN0aW9uIF9sb29wXzEocm93KXt2YXIgdGRzPWNvbHMubWFwKGZ1bmN0aW9uKF8sY29sKXt2YXIgbW9udGg9cm93KmNvbHMubGVuZ3RoK2NvbDt2YXIgZGF0ZT1fdGhpcy5kaXNwbGF5ZWRZZWFyKyItIitPYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1sicGFkIl0pKG1vbnRoKzEpO3JldHVybiBfdGhpcy4kY3JlYXRlRWxlbWVudCgndGQnLHtrZXk6bW9udGh9LFtfdGhpcy5nZW5CdXR0b24oZGF0ZSxmYWxzZSwnbW9udGgnLF90aGlzLmZvcm1hdHRlcildKTt9KTtjaGlsZHJlbi5wdXNoKHRoaXNfMS4kY3JlYXRlRWxlbWVudCgndHInLHtrZXk6cm93fSx0ZHMpKTt9O3ZhciB0aGlzXzE9dGhpcztmb3IodmFyIHJvdz0wO3Jvdzxyb3dzO3JvdysrKXtfbG9vcF8xKHJvdyk7fXJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd0Ym9keScsY2hpbGRyZW4pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoKXtyZXR1cm4gdGhpcy5nZW5UYWJsZSgndi1kYXRlLXBpY2tlci10YWJsZSB2LWRhdGUtcGlja2VyLXRhYmxlLS1tb250aCcsW3RoaXMuZ2VuVEJvZHkoKV0sdGhpcy5jYWxjdWxhdGVUYWJsZURhdGUpO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9WRGF0ZVBpY2tlclRhYmxlLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvVkRhdGVQaWNrZXJUYWJsZS5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEYXRlUGlja2VyVkRhdGVQaWNrZXJUYWJsZVNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VyVGl0bGUuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9WRGF0ZVBpY2tlclRpdGxlLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGVQaWNrZXJWRGF0ZVBpY2tlclRpdGxlU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvVkRhdGVQaWNrZXJUaXRsZS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvVkRhdGVQaWNrZXJUaXRsZS50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGF0ZVBpY2tlclZEYXRlUGlja2VyVGl0bGVUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGF0ZVBpY2tlclRpdGxlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEYXRlUGlja2VyVGl0bGUuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VyVGl0bGUuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGF0ZVBpY2tlclRpdGxlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZEYXRlUGlja2VyVGl0bGVfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19waWNrZXJfYnV0dG9uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3BpY2tlci1idXR0b24gKi8iLi9zcmMvbWl4aW5zL3BpY2tlci1idXR0b24vaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8vIFV0aWxzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKF9taXhpbnNfcGlja2VyX2J1dHRvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0vKiBAdnVlL2NvbXBvbmVudCAqLykuZXh0ZW5kKHtuYW1lOid2LWRhdGUtcGlja2VyLXRpdGxlJyxwcm9wczp7ZGF0ZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJ30sZGlzYWJsZWQ6Qm9vbGVhbixyZWFkb25seTpCb29sZWFuLHNlbGVjdGluZ1llYXI6Qm9vbGVhbix2YWx1ZTp7dHlwZTpTdHJpbmd9LHllYXI6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6Jyd9LHllYXJJY29uOnt0eXBlOlN0cmluZ319LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntpc1JldmVyc2luZzpmYWxzZX07fSxjb21wdXRlZDp7Y29tcHV0ZWRUcmFuc2l0aW9uOmZ1bmN0aW9uIGNvbXB1dGVkVHJhbnNpdGlvbigpe3JldHVybiB0aGlzLmlzUmV2ZXJzaW5nPydwaWNrZXItcmV2ZXJzZS10cmFuc2l0aW9uJzoncGlja2VyLXRyYW5zaXRpb24nO319LHdhdGNoOnt2YWx1ZTpmdW5jdGlvbiB2YWx1ZSh2YWwscHJldil7dGhpcy5pc1JldmVyc2luZz12YWw8cHJldjt9fSxtZXRob2RzOntnZW5ZZWFySWNvbjpmdW5jdGlvbiBnZW5ZZWFySWNvbigpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0se3Byb3BzOntkYXJrOnRydWV9fSx0aGlzLnllYXJJY29uKTt9LGdldFllYXJCdG46ZnVuY3Rpb24gZ2V0WWVhckJ0bigpe3JldHVybiB0aGlzLmdlblBpY2tlckJ1dHRvbignc2VsZWN0aW5nWWVhcicsdHJ1ZSxbU3RyaW5nKHRoaXMueWVhciksdGhpcy55ZWFySWNvbj90aGlzLmdlblllYXJJY29uKCk6bnVsbF0sZmFsc2UsJ3YtZGF0ZS1waWNrZXItdGl0bGVfX3llYXInKTt9LGdlblRpdGxlVGV4dDpmdW5jdGlvbiBnZW5UaXRsZVRleHQoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndHJhbnNpdGlvbicse3Byb3BzOntuYW1lOnRoaXMuY29tcHV0ZWRUcmFuc2l0aW9ufX0sW3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse2RvbVByb3BzOntpbm5lckhUTUw6dGhpcy5kYXRlfHwnJm5ic3A7J30sa2V5OnRoaXMudmFsdWV9KV0pO30sZ2VuVGl0bGVEYXRlOmZ1bmN0aW9uIGdlblRpdGxlRGF0ZSgpe3JldHVybiB0aGlzLmdlblBpY2tlckJ1dHRvbignc2VsZWN0aW5nWWVhcicsZmFsc2UsW3RoaXMuZ2VuVGl0bGVUZXh0KCldLGZhbHNlLCd2LWRhdGUtcGlja2VyLXRpdGxlX19kYXRlJyk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXtyZXR1cm4gaCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtZGF0ZS1waWNrZXItdGl0bGUnLGNsYXNzOnsndi1kYXRlLXBpY2tlci10aXRsZS0tZGlzYWJsZWQnOnRoaXMuZGlzYWJsZWR9fSxbdGhpcy5nZXRZZWFyQnRuKCksdGhpcy5nZW5UaXRsZURhdGUoKV0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9WRGF0ZVBpY2tlclllYXJzLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvVkRhdGVQaWNrZXJZZWFycy5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEYXRlUGlja2VyVkRhdGVQaWNrZXJZZWFyc1Nhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VyWWVhcnMudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VyWWVhcnMudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGVQaWNrZXJWRGF0ZVBpY2tlclllYXJzVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGVQaWNrZXJZZWFyc19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRGF0ZVBpY2tlclllYXJzLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9WRGF0ZVBpY2tlclllYXJzLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGVQaWNrZXJZZWFyc19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WRGF0ZVBpY2tlclllYXJzX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2xvY2FsYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9sb2NhbGFibGUgKi8iLi9zcmMvbWl4aW5zL2xvY2FsYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvdXRpbC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7Ly8gTWl4aW5zCi8vIFV0aWxzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0pKF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfbWl4aW5zX2xvY2FsYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0vKiBAdnVlL2NvbXBvbmVudCAqLykuZXh0ZW5kKHtuYW1lOid2LWRhdGUtcGlja2VyLXllYXJzJyxwcm9wczp7Zm9ybWF0OkZ1bmN0aW9uLG1pbjpbTnVtYmVyLFN0cmluZ10sbWF4OltOdW1iZXIsU3RyaW5nXSxyZWFkb25seTpCb29sZWFuLHZhbHVlOltOdW1iZXIsU3RyaW5nXX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2RlZmF1bHRDb2xvcjoncHJpbWFyeSd9O30sY29tcHV0ZWQ6e2Zvcm1hdHRlcjpmdW5jdGlvbiBmb3JtYXR0ZXIoKXtyZXR1cm4gdGhpcy5mb3JtYXR8fE9iamVjdChfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJjcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXIiXSkodGhpcy5jdXJyZW50TG9jYWxlLHt5ZWFyOidudW1lcmljJyx0aW1lWm9uZTonVVRDJ30se2xlbmd0aDo0fSk7fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dmFyIF90aGlzPXRoaXM7c2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBhY3RpdmVJdGVtPV90aGlzLiRlbC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdhY3RpdmUnKVswXTtpZihhY3RpdmVJdGVtKXtfdGhpcy4kZWwuc2Nyb2xsVG9wPWFjdGl2ZUl0ZW0ub2Zmc2V0VG9wLV90aGlzLiRlbC5vZmZzZXRIZWlnaHQvMithY3RpdmVJdGVtLm9mZnNldEhlaWdodC8yO31lbHNlIGlmKF90aGlzLm1pbiYmIV90aGlzLm1heCl7X3RoaXMuJGVsLnNjcm9sbFRvcD1fdGhpcy4kZWwuc2Nyb2xsSGVpZ2h0O31lbHNlIGlmKCFfdGhpcy5taW4mJl90aGlzLm1heCl7X3RoaXMuJGVsLnNjcm9sbFRvcD0wO31lbHNle190aGlzLiRlbC5zY3JvbGxUb3A9X3RoaXMuJGVsLnNjcm9sbEhlaWdodC8yLV90aGlzLiRlbC5vZmZzZXRIZWlnaHQvMjt9fSk7fSxtZXRob2RzOntnZW5ZZWFySXRlbTpmdW5jdGlvbiBnZW5ZZWFySXRlbSh5ZWFyKXt2YXIgX3RoaXM9dGhpczt2YXIgZm9ybWF0dGVkPXRoaXMuZm9ybWF0dGVyKCIiK3llYXIpO3ZhciBhY3RpdmU9cGFyc2VJbnQodGhpcy52YWx1ZSwxMCk9PT15ZWFyO3ZhciBjb2xvcj1hY3RpdmUmJih0aGlzLmNvbG9yfHwncHJpbWFyeScpO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdsaScsdGhpcy5zZXRUZXh0Q29sb3IoY29sb3Ise2tleTp5ZWFyLGNsYXNzOnthY3RpdmU6YWN0aXZlfSxvbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soKXtyZXR1cm4gX3RoaXMuJGVtaXQoJ2lucHV0Jyx5ZWFyKTt9fX0pLGZvcm1hdHRlZCk7fSxnZW5ZZWFySXRlbXM6ZnVuY3Rpb24gZ2VuWWVhckl0ZW1zKCl7dmFyIGNoaWxkcmVuPVtdO3ZhciBzZWxlY3RlZFllYXI9dGhpcy52YWx1ZT9wYXJzZUludCh0aGlzLnZhbHVlLDEwKTpuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCk7dmFyIG1heFllYXI9dGhpcy5tYXg/cGFyc2VJbnQodGhpcy5tYXgsMTApOnNlbGVjdGVkWWVhcisxMDA7dmFyIG1pblllYXI9TWF0aC5taW4obWF4WWVhcix0aGlzLm1pbj9wYXJzZUludCh0aGlzLm1pbiwxMCk6c2VsZWN0ZWRZZWFyLTEwMCk7Zm9yKHZhciB5ZWFyPW1heFllYXI7eWVhcj49bWluWWVhcjt5ZWFyLS0pe2NoaWxkcmVuLnB1c2godGhpcy5nZW5ZZWFySXRlbSh5ZWFyKSk7fXJldHVybiBjaGlsZHJlbjt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3VsJyx7c3RhdGljQ2xhc3M6J3YtZGF0ZS1waWNrZXIteWVhcnMnLHJlZjoneWVhcnMnfSx0aGlzLmdlblllYXJJdGVtcygpKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZEYXRlUGlja2VyLCBWRGF0ZVBpY2tlclRpdGxlLCBWRGF0ZVBpY2tlckhlYWRlciwgVkRhdGVQaWNrZXJEYXRlVGFibGUsIFZEYXRlUGlja2VyTW9udGhUYWJsZSwgVkRhdGVQaWNrZXJZZWFycywgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGF0ZVBpY2tlckluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGVQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEYXRlUGlja2VyICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvVkRhdGVQaWNrZXIudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRGF0ZVBpY2tlciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZEYXRlUGlja2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGVQaWNrZXJUaXRsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkRhdGVQaWNrZXJUaXRsZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VyVGl0bGUudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRGF0ZVBpY2tlclRpdGxlIixmdW5jdGlvbigpe3JldHVybiBfVkRhdGVQaWNrZXJUaXRsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEYXRlUGlja2VySGVhZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRGF0ZVBpY2tlckhlYWRlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VySGVhZGVyLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkRhdGVQaWNrZXJIZWFkZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRGF0ZVBpY2tlckhlYWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEYXRlUGlja2VyRGF0ZVRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRGF0ZVBpY2tlckRhdGVUYWJsZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VyRGF0ZVRhYmxlLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkRhdGVQaWNrZXJEYXRlVGFibGUiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRGF0ZVBpY2tlckRhdGVUYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEYXRlUGlja2VyTW9udGhUYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkRhdGVQaWNrZXJNb250aFRhYmxlICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvVkRhdGVQaWNrZXJNb250aFRhYmxlLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkRhdGVQaWNrZXJNb250aFRhYmxlIixmdW5jdGlvbigpe3JldHVybiBfVkRhdGVQaWNrZXJNb250aFRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGVQaWNrZXJZZWFyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkRhdGVQaWNrZXJZZWFycyAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VyWWVhcnMudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRGF0ZVBpY2tlclllYXJzIixmdW5jdGlvbigpe3JldHVybiBfVkRhdGVQaWNrZXJZZWFyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT17JF92dWV0aWZ5X3N1YmNvbXBvbmVudHM6e1ZEYXRlUGlja2VyOl9WRGF0ZVBpY2tlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0sVkRhdGVQaWNrZXJUaXRsZTpfVkRhdGVQaWNrZXJUaXRsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sVkRhdGVQaWNrZXJIZWFkZXI6X1ZEYXRlUGlja2VySGVhZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxWRGF0ZVBpY2tlckRhdGVUYWJsZTpfVkRhdGVQaWNrZXJEYXRlVGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLFZEYXRlUGlja2VyTW9udGhUYWJsZTpfVkRhdGVQaWNrZXJNb250aFRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSxWRGF0ZVBpY2tlclllYXJzOl9WRGF0ZVBpY2tlclllYXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXX19Oy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL21peGlucy9kYXRlLXBpY2tlci10YWJsZS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9taXhpbnMvZGF0ZS1waWNrZXItdGFibGUudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGF0ZVBpY2tlck1peGluc0RhdGVQaWNrZXJUYWJsZVRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEYXRlUGlja2VyVGFibGVfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZEYXRlUGlja2VyVGFibGUuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL1ZEYXRlUGlja2VyVGFibGUuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGF0ZVBpY2tlclRhYmxlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZEYXRlUGlja2VyVGFibGVfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZGlyZWN0aXZlc190b3VjaF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uLy4uL2RpcmVjdGl2ZXMvdG91Y2ggKi8iLi9zcmMvZGlyZWN0aXZlcy90b3VjaC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19sb2NhbGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi8uLi9taXhpbnMvbG9jYWxhYmxlICovIi4vc3JjL21peGlucy9sb2NhbGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uLy4uL21peGlucy90aGVtZWFibGUgKi8iLi9zcmMvbWl4aW5zL3RoZW1lYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2lzRGF0ZUFsbG93ZWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlsL2lzRGF0ZUFsbG93ZWQgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci91dGlsL2lzRGF0ZUFsbG93ZWQudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9O3ZhciBfX3NwcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3NwcmVhZHx8ZnVuY3Rpb24oKXtmb3IodmFyIGFyPVtdLGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXthcj1hci5jb25jYXQoX19yZWFkKGFyZ3VtZW50c1tpXSkpO31yZXR1cm4gYXI7fTsvLyBEaXJlY3RpdmVzCi8vIE1peGlucwovLyBVdGlscwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdKShfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sX21peGluc19sb2NhbGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXS8qIEB2dWUvY29tcG9uZW50ICovKS5leHRlbmQoe2RpcmVjdGl2ZXM6e1RvdWNoOl9kaXJlY3RpdmVzX3RvdWNoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXX0scHJvcHM6e2FsbG93ZWREYXRlczpGdW5jdGlvbixjdXJyZW50OlN0cmluZyxkaXNhYmxlZDpCb29sZWFuLGZvcm1hdDpGdW5jdGlvbixldmVudHM6e3R5cGU6W0FycmF5LEZ1bmN0aW9uLE9iamVjdF0sZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybiBudWxsO319LGV2ZW50Q29sb3I6e3R5cGU6W0FycmF5LEZ1bmN0aW9uLE9iamVjdCxTdHJpbmddLGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm4nd2FybmluZyc7fX0sbWluOlN0cmluZyxtYXg6U3RyaW5nLHJhbmdlOkJvb2xlYW4scmVhZG9ubHk6Qm9vbGVhbixzY3JvbGxhYmxlOkJvb2xlYW4sdGFibGVEYXRlOnt0eXBlOlN0cmluZyxyZXF1aXJlZDp0cnVlfSx2YWx1ZTpbU3RyaW5nLEFycmF5XX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2lzUmV2ZXJzaW5nOmZhbHNlfTt9LGNvbXB1dGVkOntjb21wdXRlZFRyYW5zaXRpb246ZnVuY3Rpb24gY29tcHV0ZWRUcmFuc2l0aW9uKCl7cmV0dXJuIHRoaXMuaXNSZXZlcnNpbmc9PT0hdGhpcy4kdnVldGlmeS5ydGw/J3RhYi1yZXZlcnNlLXRyYW5zaXRpb24nOid0YWItdHJhbnNpdGlvbic7fSxkaXNwbGF5ZWRNb250aDpmdW5jdGlvbiBkaXNwbGF5ZWRNb250aCgpe3JldHVybiBOdW1iZXIodGhpcy50YWJsZURhdGUuc3BsaXQoJy0nKVsxXSktMTt9LGRpc3BsYXllZFllYXI6ZnVuY3Rpb24gZGlzcGxheWVkWWVhcigpe3JldHVybiBOdW1iZXIodGhpcy50YWJsZURhdGUuc3BsaXQoJy0nKVswXSk7fX0sd2F0Y2g6e3RhYmxlRGF0ZTpmdW5jdGlvbiB0YWJsZURhdGUobmV3VmFsLG9sZFZhbCl7dGhpcy5pc1JldmVyc2luZz1uZXdWYWw8b2xkVmFsO319LG1ldGhvZHM6e2dlbkJ1dHRvbkNsYXNzZXM6ZnVuY3Rpb24gZ2VuQnV0dG9uQ2xhc3Nlcyhpc0FsbG93ZWQsaXNGbG9hdGluZyxpc1NlbGVjdGVkLGlzQ3VycmVudCl7cmV0dXJuIF9fYXNzaWduKHsndi1zaXplLS1kZWZhdWx0JzohaXNGbG9hdGluZywndi1idG4tLWFjdGl2ZSc6aXNTZWxlY3RlZCwndi1idG4tLWZsYXQnOiFpc0FsbG93ZWR8fHRoaXMuZGlzYWJsZWQsJ3YtYnRuLS10ZXh0Jzppc1NlbGVjdGVkPT09aXNDdXJyZW50LCd2LWJ0bi0tcm91bmRlZCc6aXNGbG9hdGluZywndi1idG4tLWRpc2FibGVkJzohaXNBbGxvd2VkfHx0aGlzLmRpc2FibGVkLCd2LWJ0bi0tb3V0bGluZWQnOmlzQ3VycmVudCYmIWlzU2VsZWN0ZWR9LHRoaXMudGhlbWVDbGFzc2VzKTt9LGdlbkJ1dHRvbkV2ZW50czpmdW5jdGlvbiBnZW5CdXR0b25FdmVudHModmFsdWUsaXNBbGxvd2VkLG1vdXNlRXZlbnRUeXBlKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLmRpc2FibGVkKXJldHVybiB1bmRlZmluZWQ7cmV0dXJue2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCl7aXNBbGxvd2VkJiYhX3RoaXMucmVhZG9ubHkmJl90aGlzLiRlbWl0KCdpbnB1dCcsdmFsdWUpO190aGlzLiRlbWl0KCJjbGljazoiK21vdXNlRXZlbnRUeXBlLHZhbHVlKTt9LGRibGNsaWNrOmZ1bmN0aW9uIGRibGNsaWNrKCl7cmV0dXJuIF90aGlzLiRlbWl0KCJkYmxjbGljazoiK21vdXNlRXZlbnRUeXBlLHZhbHVlKTt9fTt9LGdlbkJ1dHRvbjpmdW5jdGlvbiBnZW5CdXR0b24odmFsdWUsaXNGbG9hdGluZyxtb3VzZUV2ZW50VHlwZSxmb3JtYXR0ZXIpe3ZhciBpc0FsbG93ZWQ9T2JqZWN0KF91dGlsX2lzRGF0ZUFsbG93ZWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdKSh2YWx1ZSx0aGlzLm1pbix0aGlzLm1heCx0aGlzLmFsbG93ZWREYXRlcyk7dmFyIGlzU2VsZWN0ZWQ9dGhpcy5pc1NlbGVjdGVkKHZhbHVlKTt2YXIgaXNDdXJyZW50PXZhbHVlPT09dGhpcy5jdXJyZW50O3ZhciBzZXRDb2xvcj1pc1NlbGVjdGVkP3RoaXMuc2V0QmFja2dyb3VuZENvbG9yOnRoaXMuc2V0VGV4dENvbG9yO3ZhciBjb2xvcj0oaXNTZWxlY3RlZHx8aXNDdXJyZW50KSYmKHRoaXMuY29sb3J8fCdhY2NlbnQnKTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnYnV0dG9uJyxzZXRDb2xvcihjb2xvcix7c3RhdGljQ2xhc3M6J3YtYnRuJyxjbGFzczp0aGlzLmdlbkJ1dHRvbkNsYXNzZXMoaXNBbGxvd2VkLGlzRmxvYXRpbmcsaXNTZWxlY3RlZCxpc0N1cnJlbnQpLGF0dHJzOnt0eXBlOididXR0b24nfSxkb21Qcm9wczp7ZGlzYWJsZWQ6dGhpcy5kaXNhYmxlZHx8IWlzQWxsb3dlZH0sb246dGhpcy5nZW5CdXR0b25FdmVudHModmFsdWUsaXNBbGxvd2VkLG1vdXNlRXZlbnRUeXBlKX0pLFt0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1idG5fX2NvbnRlbnQnfSxbZm9ybWF0dGVyKHZhbHVlKV0pLHRoaXMuZ2VuRXZlbnRzKHZhbHVlKV0pO30sZ2V0RXZlbnRDb2xvcnM6ZnVuY3Rpb24gZ2V0RXZlbnRDb2xvcnMoZGF0ZSl7dmFyIGFycmF5aXplPWZ1bmN0aW9uIGFycmF5aXplKHYpe3JldHVybiBBcnJheS5pc0FycmF5KHYpP3Y6W3ZdO307dmFyIGV2ZW50RGF0YTt2YXIgZXZlbnRDb2xvcnM9W107aWYoQXJyYXkuaXNBcnJheSh0aGlzLmV2ZW50cykpe2V2ZW50RGF0YT10aGlzLmV2ZW50cy5pbmNsdWRlcyhkYXRlKTt9ZWxzZSBpZih0aGlzLmV2ZW50cyBpbnN0YW5jZW9mIEZ1bmN0aW9uKXtldmVudERhdGE9dGhpcy5ldmVudHMoZGF0ZSl8fGZhbHNlO31lbHNlIGlmKHRoaXMuZXZlbnRzKXtldmVudERhdGE9dGhpcy5ldmVudHNbZGF0ZV18fGZhbHNlO31lbHNle2V2ZW50RGF0YT1mYWxzZTt9aWYoIWV2ZW50RGF0YSl7cmV0dXJuW107fWVsc2UgaWYoZXZlbnREYXRhIT09dHJ1ZSl7ZXZlbnRDb2xvcnM9YXJyYXlpemUoZXZlbnREYXRhKTt9ZWxzZSBpZih0eXBlb2YgdGhpcy5ldmVudENvbG9yPT09J3N0cmluZycpe2V2ZW50Q29sb3JzPVt0aGlzLmV2ZW50Q29sb3JdO31lbHNlIGlmKHR5cGVvZiB0aGlzLmV2ZW50Q29sb3I9PT0nZnVuY3Rpb24nKXtldmVudENvbG9ycz1hcnJheWl6ZSh0aGlzLmV2ZW50Q29sb3IoZGF0ZSkpO31lbHNlIGlmKEFycmF5LmlzQXJyYXkodGhpcy5ldmVudENvbG9yKSl7ZXZlbnRDb2xvcnM9dGhpcy5ldmVudENvbG9yO31lbHNle2V2ZW50Q29sb3JzPWFycmF5aXplKHRoaXMuZXZlbnRDb2xvcltkYXRlXSk7fXJldHVybiBldmVudENvbG9ycy5maWx0ZXIoZnVuY3Rpb24odil7cmV0dXJuIHY7fSk7fSxnZW5FdmVudHM6ZnVuY3Rpb24gZ2VuRXZlbnRzKGRhdGUpe3ZhciBfdGhpcz10aGlzO3ZhciBldmVudENvbG9ycz10aGlzLmdldEV2ZW50Q29sb3JzKGRhdGUpO3JldHVybiBldmVudENvbG9ycy5sZW5ndGg/dGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtZGF0ZS1waWNrZXItdGFibGVfX2V2ZW50cyd9LGV2ZW50Q29sb3JzLm1hcChmdW5jdGlvbihjb2xvcil7cmV0dXJuIF90aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLF90aGlzLnNldEJhY2tncm91bmRDb2xvcihjb2xvcikpO30pKTpudWxsO30sd2hlZWw6ZnVuY3Rpb24gd2hlZWwoZSxjYWxjdWxhdGVUYWJsZURhdGUpe2UucHJldmVudERlZmF1bHQoKTt0aGlzLiRlbWl0KCd1cGRhdGU6dGFibGUtZGF0ZScsY2FsY3VsYXRlVGFibGVEYXRlKGUuZGVsdGFZKSk7fSx0b3VjaDpmdW5jdGlvbiB0b3VjaCh2YWx1ZSxjYWxjdWxhdGVUYWJsZURhdGUpe3RoaXMuJGVtaXQoJ3VwZGF0ZTp0YWJsZS1kYXRlJyxjYWxjdWxhdGVUYWJsZURhdGUodmFsdWUpKTt9LGdlblRhYmxlOmZ1bmN0aW9uIGdlblRhYmxlKHN0YXRpY0NsYXNzLGNoaWxkcmVuLGNhbGN1bGF0ZVRhYmxlRGF0ZSl7dmFyIF90aGlzPXRoaXM7dmFyIHRyYW5zaXRpb249dGhpcy4kY3JlYXRlRWxlbWVudCgndHJhbnNpdGlvbicse3Byb3BzOntuYW1lOnRoaXMuY29tcHV0ZWRUcmFuc2l0aW9ufX0sW3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RhYmxlJyx7a2V5OnRoaXMudGFibGVEYXRlfSxjaGlsZHJlbildKTt2YXIgdG91Y2hEaXJlY3RpdmU9e25hbWU6J3RvdWNoJyx2YWx1ZTp7bGVmdDpmdW5jdGlvbiBsZWZ0KGUpe3JldHVybiBlLm9mZnNldFg8LTE1JiZfdGhpcy50b3VjaCgxLGNhbGN1bGF0ZVRhYmxlRGF0ZSk7fSxyaWdodDpmdW5jdGlvbiByaWdodChlKXtyZXR1cm4gZS5vZmZzZXRYPjE1JiZfdGhpcy50b3VjaCgtMSxjYWxjdWxhdGVUYWJsZURhdGUpO319fTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6c3RhdGljQ2xhc3MsY2xhc3M6X19hc3NpZ24oeyd2LWRhdGUtcGlja2VyLXRhYmxlLS1kaXNhYmxlZCc6dGhpcy5kaXNhYmxlZH0sdGhpcy50aGVtZUNsYXNzZXMpLG9uOiF0aGlzLmRpc2FibGVkJiZ0aGlzLnNjcm9sbGFibGU/e3doZWVsOmZ1bmN0aW9uIHdoZWVsKGUpe3JldHVybiBfdGhpcy53aGVlbChlLGNhbGN1bGF0ZVRhYmxlRGF0ZSk7fX06dW5kZWZpbmVkLGRpcmVjdGl2ZXM6W3RvdWNoRGlyZWN0aXZlXX0sW3RyYW5zaXRpb25dKTt9LGlzU2VsZWN0ZWQ6ZnVuY3Rpb24gaXNTZWxlY3RlZCh2YWx1ZSl7aWYoQXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlKSl7aWYodGhpcy5yYW5nZSYmdGhpcy52YWx1ZS5sZW5ndGg9PT0yKXt2YXIgX2E9X19yZWFkKF9fc3ByZWFkKHRoaXMudmFsdWUpLnNvcnQoKSwyKSxmcm9tPV9hWzBdLHRvPV9hWzFdO3JldHVybiBmcm9tPD12YWx1ZSYmdmFsdWU8PXRvO31lbHNle3JldHVybiB0aGlzLnZhbHVlLmluZGV4T2YodmFsdWUpIT09LTE7fX1yZXR1cm4gdmFsdWU9PT10aGlzLnZhbHVlO319fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvdXRpbC9jcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci91dGlsL2NyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlci50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGVQaWNrZXJVdGlsQ3JlYXRlTmF0aXZlTG9jYWxlRm9ybWF0dGVyVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfcGFkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9wYWQgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci91dGlsL3BhZC50cyIpO3ZhciBfX3JlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19yZWFkfHxmdW5jdGlvbihvLG4pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl07aWYoIW0pcmV0dXJuIG87dmFyIGk9bS5jYWxsKG8pLHIsYXI9W10sZTt0cnl7d2hpbGUoKG49PT12b2lkIDB8fG4tLT4wKSYmIShyPWkubmV4dCgpKS5kb25lKXthci5wdXNoKHIudmFsdWUpO319Y2F0Y2goZXJyb3Ipe2U9e2Vycm9yOmVycm9yfTt9ZmluYWxseXt0cnl7aWYociYmIXIuZG9uZSYmKG09aVsicmV0dXJuIl0pKW0uY2FsbChpKTt9ZmluYWxseXtpZihlKXRocm93IGUuZXJyb3I7fX1yZXR1cm4gYXI7fTtmdW5jdGlvbiBjcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXIobG9jYWxlLG9wdGlvbnMsc3Vic3RyT3B0aW9ucyl7aWYoc3Vic3RyT3B0aW9ucz09PXZvaWQgMCl7c3Vic3RyT3B0aW9ucz17c3RhcnQ6MCxsZW5ndGg6MH07fXZhciBtYWtlSXNvU3RyaW5nPWZ1bmN0aW9uIG1ha2VJc29TdHJpbmcoZGF0ZVN0cmluZyl7dmFyIF9hPV9fcmVhZChkYXRlU3RyaW5nLnRyaW0oKS5zcGxpdCgnICcpWzBdLnNwbGl0KCctJyksMykseWVhcj1fYVswXSxtb250aD1fYVsxXSxkYXRlPV9hWzJdO3JldHVybltPYmplY3QoX3BhZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKHllYXIsNCksT2JqZWN0KF9wYWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKShtb250aHx8MSksT2JqZWN0KF9wYWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKShkYXRlfHwxKV0uam9pbignLScpO307dHJ5e3ZhciBpbnRsRm9ybWF0dGVyXzE9bmV3IEludGwuRGF0ZVRpbWVGb3JtYXQobG9jYWxlfHx1bmRlZmluZWQsb3B0aW9ucyk7cmV0dXJuIGZ1bmN0aW9uKGRhdGVTdHJpbmcpe3JldHVybiBpbnRsRm9ybWF0dGVyXzEuZm9ybWF0KG5ldyBEYXRlKG1ha2VJc29TdHJpbmcoZGF0ZVN0cmluZykrIlQwMDowMDowMCswMDowMCIpKTt9O31jYXRjaChlKXtyZXR1cm4gc3Vic3RyT3B0aW9ucy5zdGFydHx8c3Vic3RyT3B0aW9ucy5sZW5ndGg/ZnVuY3Rpb24oZGF0ZVN0cmluZyl7cmV0dXJuIG1ha2VJc29TdHJpbmcoZGF0ZVN0cmluZykuc3Vic3RyKHN1YnN0ck9wdGlvbnMuc3RhcnR8fDAsc3Vic3RyT3B0aW9ucy5sZW5ndGgpO306dW5kZWZpbmVkO319LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1jcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXI7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvdXRpbC9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvdXRpbC9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogY3JlYXRlTmF0aXZlTG9jYWxlRm9ybWF0dGVyLCBtb250aENoYW5nZSwgcGFkICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEYXRlUGlja2VyVXRpbEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfY3JlYXRlTmF0aXZlTG9jYWxlRm9ybWF0dGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jcmVhdGVOYXRpdmVMb2NhbGVGb3JtYXR0ZXIgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci91dGlsL2NyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImNyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlciIsZnVuY3Rpb24oKXtyZXR1cm4gX2NyZWF0ZU5hdGl2ZUxvY2FsZUZvcm1hdHRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21vbnRoQ2hhbmdlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9tb250aENoYW5nZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL3V0aWwvbW9udGhDaGFuZ2UudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJtb250aENoYW5nZSIsZnVuY3Rpb24oKXtyZXR1cm4gX21vbnRoQ2hhbmdlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfcGFkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9wYWQgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci91dGlsL3BhZC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sInBhZCIsZnVuY3Rpb24oKXtyZXR1cm4gX3BhZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il07fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvdXRpbC9pc0RhdGVBbGxvd2VkLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL3V0aWwvaXNEYXRlQWxsb3dlZC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEYXRlUGlja2VyVXRpbElzRGF0ZUFsbG93ZWRUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJkZWZhdWx0IixmdW5jdGlvbigpe3JldHVybiBpc0RhdGVBbGxvd2VkO30pO2Z1bmN0aW9uIGlzRGF0ZUFsbG93ZWQoZGF0ZSxtaW4sbWF4LGFsbG93ZWRGbil7cmV0dXJuKCFhbGxvd2VkRm58fGFsbG93ZWRGbihkYXRlKSkmJighbWlufHxkYXRlPj1taW4uc3Vic3RyKDAsMTApKSYmKCFtYXh8fGRhdGU8PW1heCk7fS8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL3V0aWwvbW9udGhDaGFuZ2UudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL3V0aWwvbW9udGhDaGFuZ2UudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRhdGVQaWNrZXJVdGlsTW9udGhDaGFuZ2VUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9wYWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3BhZCAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL3V0aWwvcGFkLnRzIik7dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9Oy8qKgogKiBAcGFyYW0ge1N0cmluZ30gdmFsdWUgWVlZWS1NTSBmb3JtYXQKICogQHBhcmFtIHtOdW1iZXJ9IHNpZ24gLTEgb3IgKzEKICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09ZnVuY3Rpb24odmFsdWUsc2lnbil7dmFyIF9hPV9fcmVhZCh2YWx1ZS5zcGxpdCgnLScpLm1hcChOdW1iZXIpLDIpLHllYXI9X2FbMF0sbW9udGg9X2FbMV07aWYobW9udGgrc2lnbj09PTApe3JldHVybiB5ZWFyLTErIi0xMiI7fWVsc2UgaWYobW9udGgrc2lnbj09PTEzKXtyZXR1cm4geWVhcisxKyItMDEiO31lbHNle3JldHVybiB5ZWFyKyItIitPYmplY3QoX3BhZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKG1vbnRoK3NpZ24pO319Oy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL3V0aWwvcGFkLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvdXRpbC9wYWQudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEYXRlUGlja2VyVXRpbFBhZFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7dmFyIHBhZFN0YXJ0PWZ1bmN0aW9uIHBhZFN0YXJ0KHN0cmluZyx0YXJnZXRMZW5ndGgscGFkU3RyaW5nKXt0YXJnZXRMZW5ndGg9dGFyZ2V0TGVuZ3RoPj4wO3N0cmluZz1TdHJpbmcoc3RyaW5nKTtwYWRTdHJpbmc9U3RyaW5nKHBhZFN0cmluZyk7aWYoc3RyaW5nLmxlbmd0aD50YXJnZXRMZW5ndGgpe3JldHVybiBTdHJpbmcoc3RyaW5nKTt9dGFyZ2V0TGVuZ3RoPXRhcmdldExlbmd0aC1zdHJpbmcubGVuZ3RoO2lmKHRhcmdldExlbmd0aD5wYWRTdHJpbmcubGVuZ3RoKXtwYWRTdHJpbmcrPXBhZFN0cmluZy5yZXBlYXQodGFyZ2V0TGVuZ3RoL3BhZFN0cmluZy5sZW5ndGgpO31yZXR1cm4gcGFkU3RyaW5nLnNsaWNlKDAsdGFyZ2V0TGVuZ3RoKStTdHJpbmcoc3RyaW5nKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09ZnVuY3Rpb24obixsZW5ndGgpe2lmKGxlbmd0aD09PXZvaWQgMCl7bGVuZ3RoPTI7fXJldHVybiBwYWRTdGFydChuLGxlbmd0aCwnMCcpO307LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRpYWxvZy9WRGlhbG9nLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGlhbG9nL1ZEaWFsb2cuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEaWFsb2dWRGlhbG9nU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRpYWxvZy9WRGlhbG9nLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZEaWFsb2cvVkRpYWxvZy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEaWFsb2dWRGlhbG9nVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRpYWxvZ19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRGlhbG9nLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WRGlhbG9nL1ZEaWFsb2cuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGlhbG9nX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZEaWFsb2dfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2FjdGl2YXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2FjdGl2YXRhYmxlICovIi4vc3JjL21peGlucy9hY3RpdmF0YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfZGVwZW5kZW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2RlcGVuZGVudCAqLyIuL3NyYy9taXhpbnMvZGVwZW5kZW50L2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19kZXRhY2hhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2RldGFjaGFibGUgKi8iLi9zcmMvbWl4aW5zL2RldGFjaGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX292ZXJsYXlhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL292ZXJsYXlhYmxlICovIi4vc3JjL21peGlucy9vdmVybGF5YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfcmV0dXJuYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9yZXR1cm5hYmxlICovIi4vc3JjL21peGlucy9yZXR1cm5hYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19zdGFja2FibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvc3RhY2thYmxlICovIi4vc3JjL21peGlucy9zdGFja2FibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RvZ2dsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdG9nZ2xlYWJsZSAqLyIuL3NyYy9taXhpbnMvdG9nZ2xlYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9kaXJlY3RpdmVzL2NsaWNrLW91dHNpZGUgKi8iLi9zcmMvZGlyZWN0aXZlcy9jbGljay1vdXRzaWRlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9UaGVtZVByb3ZpZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvVGhlbWVQcm92aWRlciAqLyIuL3NyYy91dGlsL1RoZW1lUHJvdmlkZXIudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvY29uc29sZSAqLyIuL3NyYy91dGlsL2NvbnNvbGUudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIE1peGlucwovLyBEaXJlY3RpdmVzCi8vIEhlbHBlcnMKdmFyIGJhc2VNaXhpbnM9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfX1siZGVmYXVsdCJdKShfbWl4aW5zX2FjdGl2YXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfbWl4aW5zX2RlcGVuZGVudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sX21peGluc19kZXRhY2hhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSxfbWl4aW5zX292ZXJsYXlhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSxfbWl4aW5zX3JldHVybmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdLF9taXhpbnNfc3RhY2thYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXSxfbWl4aW5zX3RvZ2dsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siZGVmYXVsdCJdKTsvKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPWJhc2VNaXhpbnMuZXh0ZW5kKHtuYW1lOid2LWRpYWxvZycsZGlyZWN0aXZlczp7Q2xpY2tPdXRzaWRlOl9kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZGVmYXVsdCJdfSxwcm9wczp7ZGFyazpCb29sZWFuLGRpc2FibGVkOkJvb2xlYW4sZnVsbHNjcmVlbjpCb29sZWFuLGxpZ2h0OkJvb2xlYW4sbWF4V2lkdGg6e3R5cGU6W1N0cmluZyxOdW1iZXJdLGRlZmF1bHQ6J25vbmUnfSxub0NsaWNrQW5pbWF0aW9uOkJvb2xlYW4sb3JpZ2luOnt0eXBlOlN0cmluZyxkZWZhdWx0OidjZW50ZXIgY2VudGVyJ30scGVyc2lzdGVudDpCb29sZWFuLHJldGFpbkZvY3VzOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxzY3JvbGxhYmxlOkJvb2xlYW4sdHJhbnNpdGlvbjp7dHlwZTpbU3RyaW5nLEJvb2xlYW5dLGRlZmF1bHQ6J2RpYWxvZy10cmFuc2l0aW9uJ30sd2lkdGg6e3R5cGU6W1N0cmluZyxOdW1iZXJdLGRlZmF1bHQ6J2F1dG8nfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2FjdGl2YXRlZEJ5Om51bGwsYW5pbWF0ZTpmYWxzZSxhbmltYXRlVGltZW91dDotMSxpc0FjdGl2ZTohIXRoaXMudmFsdWUsc3RhY2tNaW5aSW5kZXg6MjAwfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXt2YXIgX2E7cmV0dXJuIF9hPXt9LF9hWygidi1kaWFsb2cgIit0aGlzLmNvbnRlbnRDbGFzcykudHJpbSgpXT10cnVlLF9hWyd2LWRpYWxvZy0tYWN0aXZlJ109dGhpcy5pc0FjdGl2ZSxfYVsndi1kaWFsb2ctLXBlcnNpc3RlbnQnXT10aGlzLnBlcnNpc3RlbnQsX2FbJ3YtZGlhbG9nLS1mdWxsc2NyZWVuJ109dGhpcy5mdWxsc2NyZWVuLF9hWyd2LWRpYWxvZy0tc2Nyb2xsYWJsZSddPXRoaXMuc2Nyb2xsYWJsZSxfYVsndi1kaWFsb2ctLWFuaW1hdGVkJ109dGhpcy5hbmltYXRlLF9hO30sY29udGVudENsYXNzZXM6ZnVuY3Rpb24gY29udGVudENsYXNzZXMoKXtyZXR1cm57J3YtZGlhbG9nX19jb250ZW50Jzp0cnVlLCd2LWRpYWxvZ19fY29udGVudC0tYWN0aXZlJzp0aGlzLmlzQWN0aXZlfTt9LGhhc0FjdGl2YXRvcjpmdW5jdGlvbiBoYXNBY3RpdmF0b3IoKXtyZXR1cm4gQm9vbGVhbighIXRoaXMuJHNsb3RzLmFjdGl2YXRvcnx8ISF0aGlzLiRzY29wZWRTbG90cy5hY3RpdmF0b3IpO319LHdhdGNoOntpc0FjdGl2ZTpmdW5jdGlvbiBpc0FjdGl2ZSh2YWwpe2lmKHZhbCl7dGhpcy5zaG93KCk7dGhpcy5oaWRlU2Nyb2xsKCk7fWVsc2V7dGhpcy5yZW1vdmVPdmVybGF5KCk7dGhpcy51bmJpbmQoKTt9fSxmdWxsc2NyZWVuOmZ1bmN0aW9uIGZ1bGxzY3JlZW4odmFsKXtpZighdGhpcy5pc0FjdGl2ZSlyZXR1cm47aWYodmFsKXt0aGlzLmhpZGVTY3JvbGwoKTt0aGlzLnJlbW92ZU92ZXJsYXkoZmFsc2UpO31lbHNle3RoaXMuc2hvd1Njcm9sbCgpO3RoaXMuZ2VuT3ZlcmxheSgpO319fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXsvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2lmKHRoaXMuJGF0dHJzLmhhc093blByb3BlcnR5KCdmdWxsLXdpZHRoJykpe09iamVjdChfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fWyJyZW1vdmVkIl0pKCdmdWxsLXdpZHRoJyx0aGlzKTt9fSxiZWZvcmVNb3VudDpmdW5jdGlvbiBiZWZvcmVNb3VudCgpe3ZhciBfdGhpcz10aGlzO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7X3RoaXMuaXNCb290ZWQ9X3RoaXMuaXNBY3RpdmU7X3RoaXMuaXNBY3RpdmUmJl90aGlzLnNob3coKTt9KTt9LGJlZm9yZURlc3Ryb3k6ZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpe2lmKHR5cGVvZiB3aW5kb3chPT0ndW5kZWZpbmVkJyl0aGlzLnVuYmluZCgpO30sbWV0aG9kczp7YW5pbWF0ZUNsaWNrOmZ1bmN0aW9uIGFuaW1hdGVDbGljaygpe3ZhciBfdGhpcz10aGlzO3RoaXMuYW5pbWF0ZT1mYWxzZTsvLyBOZWVkZWQgZm9yIHdoZW4gY2xpY2tpbmcgdmVyeSBmYXN0Ci8vIG91dHNpZGUgb2YgdGhlIGRpYWxvZwp0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe190aGlzLmFuaW1hdGU9dHJ1ZTt3aW5kb3cuY2xlYXJUaW1lb3V0KF90aGlzLmFuaW1hdGVUaW1lb3V0KTtfdGhpcy5hbmltYXRlVGltZW91dD13aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpe3JldHVybiBfdGhpcy5hbmltYXRlPWZhbHNlO30sMTUwKTt9KTt9LGNsb3NlQ29uZGl0aW9uYWw6ZnVuY3Rpb24gY2xvc2VDb25kaXRpb25hbChlKXt2YXIgdGFyZ2V0PWUudGFyZ2V0Oy8vIElmIHRoZSBkaWFsb2cgY29udGVudCBjb250YWlucwovLyB0aGUgY2xpY2sgZXZlbnQsIG9yIGlmIHRoZQovLyBkaWFsb2cgaXMgbm90IGFjdGl2ZSwgb3IgaWYgdGhlIG92ZXJsYXkKLy8gaXMgdGhlIHNhbWUgZWxlbWVudCBhcyB0aGUgdGFyZ2V0CmlmKHRoaXMuX2lzRGVzdHJveWVkfHwhdGhpcy5pc0FjdGl2ZXx8dGhpcy4kcmVmcy5jb250ZW50LmNvbnRhaW5zKHRhcmdldCl8fHRoaXMub3ZlcmxheSYmdGFyZ2V0JiYhdGhpcy5vdmVybGF5LiRlbC5jb250YWlucyh0YXJnZXQpKXJldHVybiBmYWxzZTsvLyBJZiB3ZSBtYWRlIGl0IGhlcmUsIHRoZSBjbGljayBpcyBvdXRzaWRlCi8vIGFuZCBpcyBhY3RpdmUuIElmIHBlcnNpc3RlbnQsIGFuZCB0aGUKLy8gY2xpY2sgaXMgb24gdGhlIG92ZXJsYXksIGFuaW1hdGUKdGhpcy4kZW1pdCgnY2xpY2s6b3V0c2lkZScpO2lmKHRoaXMucGVyc2lzdGVudCl7IXRoaXMubm9DbGlja0FuaW1hdGlvbiYmdGhpcy5hbmltYXRlQ2xpY2soKTtyZXR1cm4gZmFsc2U7fS8vIGNsb3NlIGRpYWxvZyBpZiAhcGVyc2lzdGVudCwgY2xpY2tlZCBvdXRzaWRlIGFuZCB3ZSdyZSB0aGUgdG9wbW9zdCBkaWFsb2cuCi8vIFNpbmNlIHRoaXMgc2hvdWxkIG9ubHkgYmUgY2FsbGVkIGluIGEgY2FwdHVyZSBldmVudCAoYm90dG9tIHVwKSwgd2Ugc2hvdWxkbid0IG5lZWQgdG8gc3RvcCBwcm9wYWdhdGlvbgpyZXR1cm4gdGhpcy5hY3RpdmVaSW5kZXg+PXRoaXMuZ2V0TWF4WkluZGV4KCk7fSxoaWRlU2Nyb2xsOmZ1bmN0aW9uIGhpZGVTY3JvbGwoKXtpZih0aGlzLmZ1bGxzY3JlZW4pe2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdvdmVyZmxvdy15LWhpZGRlbicpO31lbHNle19taXhpbnNfb3ZlcmxheWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5oaWRlU2Nyb2xsLmNhbGwodGhpcyk7fX0sc2hvdzpmdW5jdGlvbiBzaG93KCl7dmFyIF90aGlzPXRoaXM7IXRoaXMuZnVsbHNjcmVlbiYmIXRoaXMuaGlkZU92ZXJsYXkmJnRoaXMuZ2VuT3ZlcmxheSgpO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7X3RoaXMuJHJlZnMuY29udGVudC5mb2N1cygpO190aGlzLmJpbmQoKTt9KTt9LGJpbmQ6ZnVuY3Rpb24gYmluZCgpe3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdmb2N1c2luJyx0aGlzLm9uRm9jdXNpbik7fSx1bmJpbmQ6ZnVuY3Rpb24gdW5iaW5kKCl7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2ZvY3VzaW4nLHRoaXMub25Gb2N1c2luKTt9LG9uS2V5ZG93bjpmdW5jdGlvbiBvbktleWRvd24oZSl7aWYoZS5rZXlDb2RlPT09X3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fWyJrZXlDb2RlcyJdLmVzYyYmIXRoaXMuZ2V0T3BlbkRlcGVuZGVudHMoKS5sZW5ndGgpe2lmKCF0aGlzLnBlcnNpc3RlbnQpe3RoaXMuaXNBY3RpdmU9ZmFsc2U7dmFyIGFjdGl2YXRvcl8xPXRoaXMuZ2V0QWN0aXZhdG9yKCk7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gYWN0aXZhdG9yXzEmJmFjdGl2YXRvcl8xLmZvY3VzKCk7fSk7fWVsc2UgaWYoIXRoaXMubm9DbGlja0FuaW1hdGlvbil7dGhpcy5hbmltYXRlQ2xpY2soKTt9fXRoaXMuJGVtaXQoJ2tleWRvd24nLGUpO30sLy8gT24gZm9jdXMgY2hhbmdlLCB3cmFwIGZvY3VzIHRvIHN0YXkgaW5zaWRlIHRoZSBkaWFsb2cKLy8gaHR0cHM6Ly9naXRodWIuY29tL3Z1ZXRpZnlqcy92dWV0aWZ5L2lzc3Vlcy82ODkyCm9uRm9jdXNpbjpmdW5jdGlvbiBvbkZvY3VzaW4oZSl7aWYoIWV8fCF0aGlzLnJldGFpbkZvY3VzKXJldHVybjt2YXIgdGFyZ2V0PWUudGFyZ2V0O2lmKCEhdGFyZ2V0JiYvLyBJdCBpc24ndCB0aGUgZG9jdW1lbnQgb3IgdGhlIGRpYWxvZyBib2R5CiFbZG9jdW1lbnQsdGhpcy4kcmVmcy5jb250ZW50XS5pbmNsdWRlcyh0YXJnZXQpJiYvLyBJdCBpc24ndCBpbnNpZGUgdGhlIGRpYWxvZyBib2R5CiF0aGlzLiRyZWZzLmNvbnRlbnQuY29udGFpbnModGFyZ2V0KSYmLy8gV2UncmUgdGhlIHRvcG1vc3QgZGlhbG9nCnRoaXMuYWN0aXZlWkluZGV4Pj10aGlzLmdldE1heFpJbmRleCgpJiYvLyBJdCBpc24ndCBpbnNpZGUgYSBkZXBlbmRlbnQgZWxlbWVudCAobGlrZSBhIG1lbnUpCiF0aGlzLmdldE9wZW5EZXBlbmRlbnRFbGVtZW50cygpLnNvbWUoZnVuY3Rpb24oZWwpe3JldHVybiBlbC5jb250YWlucyh0YXJnZXQpO30pLy8gU28gd2UgbXVzdCBoYXZlIGZvY3VzZWQgc29tZXRoaW5nIG91dHNpZGUgdGhlIGRpYWxvZyBhbmQgaXRzIGNoaWxkcmVuCil7Ly8gRmluZCBhbmQgZm9jdXMgdGhlIGZpcnN0IGF2YWlsYWJsZSBlbGVtZW50IGluc2lkZSB0aGUgZGlhbG9nCnZhciBmb2N1c2FibGU9dGhpcy4kcmVmcy5jb250ZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbiwgW2hyZWZdLCBpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYSwgW3RhYmluZGV4XTpub3QoW3RhYmluZGV4PSItMSJdKScpO2ZvY3VzYWJsZS5sZW5ndGgmJmZvY3VzYWJsZVswXS5mb2N1cygpO319fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBfdGhpcz10aGlzO3ZhciBjaGlsZHJlbj1bXTt2YXIgZGF0YT17Y2xhc3M6dGhpcy5jbGFzc2VzLHJlZjonZGlhbG9nJyxkaXJlY3RpdmVzOlt7bmFtZTonY2xpY2stb3V0c2lkZScsdmFsdWU6ZnVuY3Rpb24gdmFsdWUoKXtfdGhpcy5pc0FjdGl2ZT1mYWxzZTt9LGFyZ3M6e2Nsb3NlQ29uZGl0aW9uYWw6dGhpcy5jbG9zZUNvbmRpdGlvbmFsLGluY2x1ZGU6dGhpcy5nZXRPcGVuRGVwZW5kZW50RWxlbWVudHN9fSx7bmFtZTonc2hvdycsdmFsdWU6dGhpcy5pc0FjdGl2ZX1dLG9uOntjbGljazpmdW5jdGlvbiBjbGljayhlKXtlLnN0b3BQcm9wYWdhdGlvbigpO319LHN0eWxlOnt9fTtpZighdGhpcy5mdWxsc2NyZWVuKXtkYXRhLnN0eWxlPXttYXhXaWR0aDp0aGlzLm1heFdpZHRoPT09J25vbmUnP3VuZGVmaW5lZDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMubWF4V2lkdGgpLHdpZHRoOnRoaXMud2lkdGg9PT0nYXV0byc/dW5kZWZpbmVkOk9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy53aWR0aCl9O31jaGlsZHJlbi5wdXNoKHRoaXMuZ2VuQWN0aXZhdG9yKCkpO3ZhciBkaWFsb2c9aCgnZGl2JyxkYXRhLHRoaXMuc2hvd0xhenlDb250ZW50KHRoaXMuZ2V0Q29udGVudFNsb3QoKSkpO2lmKHRoaXMudHJhbnNpdGlvbil7ZGlhbG9nPWgoJ3RyYW5zaXRpb24nLHtwcm9wczp7bmFtZTp0aGlzLnRyYW5zaXRpb24sb3JpZ2luOnRoaXMub3JpZ2lufX0sW2RpYWxvZ10pO31jaGlsZHJlbi5wdXNoKGgoJ2Rpdicse2NsYXNzOnRoaXMuY29udGVudENsYXNzZXMsYXR0cnM6X19hc3NpZ24oe3JvbGU6J2RvY3VtZW50Jyx0YWJpbmRleDp0aGlzLmlzQWN0aXZlPzA6dW5kZWZpbmVkfSx0aGlzLmdldFNjb3BlSWRBdHRycygpKSxvbjp7a2V5ZG93bjp0aGlzLm9uS2V5ZG93bn0sc3R5bGU6e3pJbmRleDp0aGlzLmFjdGl2ZVpJbmRleH0scmVmOidjb250ZW50J30sW3RoaXMuJGNyZWF0ZUVsZW1lbnQoX3V0aWxfVGhlbWVQcm92aWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfX1siZGVmYXVsdCJdLHtwcm9wczp7cm9vdDp0cnVlLGxpZ2h0OnRoaXMubGlnaHQsZGFyazp0aGlzLmRhcmt9fSxbZGlhbG9nXSldKSk7cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWRpYWxvZ19fY29udGFpbmVyJyxjbGFzczp7J3YtZGlhbG9nX19jb250YWluZXItLWF0dGFjaGVkJzp0aGlzLmF0dGFjaD09PScnfHx0aGlzLmF0dGFjaD09PXRydWV8fHRoaXMuYXR0YWNoPT09J2F0dGFjaCd9LGF0dHJzOntyb2xlOidkaWFsb2cnfX0sY2hpbGRyZW4pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRGlhbG9nL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRGlhbG9nL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWRGlhbG9nLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEaWFsb2dJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEaWFsb2dfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEaWFsb2cgKi8iLi9zcmMvY29tcG9uZW50cy9WRGlhbG9nL1ZEaWFsb2cudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRGlhbG9nIixmdW5jdGlvbigpe3JldHVybiBfVkRpYWxvZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVkRpYWxvZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkRpdmlkZXIvVkRpdmlkZXIuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRpdmlkZXIvVkRpdmlkZXIuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkRpdmlkZXJWRGl2aWRlclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZEaXZpZGVyL1ZEaXZpZGVyLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRpdmlkZXIvVkRpdmlkZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZEaXZpZGVyVkRpdmlkZXJUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGl2aWRlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRGl2aWRlci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkRpdmlkZXIvVkRpdmlkZXIuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGl2aWRlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WRGl2aWRlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gTWl4aW5zCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLmV4dGVuZCh7bmFtZTondi1kaXZpZGVyJyxwcm9wczp7aW5zZXQ6Qm9vbGVhbix2ZXJ0aWNhbDpCb29sZWFufSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpey8vIFdBSS1BUklBIGF0dHJpYnV0ZXMKdmFyIG9yaWVudGF0aW9uO2lmKCF0aGlzLiRhdHRycy5yb2xlfHx0aGlzLiRhdHRycy5yb2xlPT09J3NlcGFyYXRvcicpe29yaWVudGF0aW9uPXRoaXMudmVydGljYWw/J3ZlcnRpY2FsJzonaG9yaXpvbnRhbCc7fXJldHVybiBoKCdocicse2NsYXNzOl9fYXNzaWduKHsndi1kaXZpZGVyJzp0cnVlLCd2LWRpdmlkZXItLWluc2V0Jzp0aGlzLmluc2V0LCd2LWRpdmlkZXItLXZlcnRpY2FsJzp0aGlzLnZlcnRpY2FsfSx0aGlzLnRoZW1lQ2xhc3NlcyksYXR0cnM6X19hc3NpZ24oe3JvbGU6J3NlcGFyYXRvcicsJ2FyaWEtb3JpZW50YXRpb24nOm9yaWVudGF0aW9ufSx0aGlzLiRhdHRycyksb246dGhpcy4kbGlzdGVuZXJzfSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZEaXZpZGVyL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkRpdmlkZXIvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWRGl2aWRlciwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRGl2aWRlckluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRpdmlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEaXZpZGVyICovIi4vc3JjL2NvbXBvbmVudHMvVkRpdmlkZXIvVkRpdmlkZXIudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRGl2aWRlciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZEaXZpZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WRGl2aWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkV4cGFuc2lvblBhbmVsL1ZFeHBhbnNpb25QYW5lbC5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZFeHBhbnNpb25QYW5lbC9WRXhwYW5zaW9uUGFuZWwuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRXhwYW5zaW9uUGFuZWxWRXhwYW5zaW9uUGFuZWxTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRXhwYW5zaW9uUGFuZWwvVkV4cGFuc2lvblBhbmVsLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRXhwYW5zaW9uUGFuZWwvVkV4cGFuc2lvblBhbmVsLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZFeHBhbnNpb25QYW5lbFZFeHBhbnNpb25QYW5lbFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19ncm91cGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvZ3JvdXBhYmxlICovIi4vc3JjL21peGlucy9ncm91cGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3JlZ2lzdHJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3JlZ2lzdHJhYmxlICovIi4vc3JjL21peGlucy9yZWdpc3RyYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIE1peGlucwovLyBVdGlsaXRpZXMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoT2JqZWN0KF9taXhpbnNfZ3JvdXBhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImZhY3RvcnkiXSkoJ2V4cGFuc2lvblBhbmVscycsJ3YtZXhwYW5zaW9uLXBhbmVsJywndi1leHBhbnNpb24tcGFuZWxzJyksT2JqZWN0KF9taXhpbnNfcmVnaXN0cmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1sicHJvdmlkZSJdKSgnZXhwYW5zaW9uUGFuZWwnLHRydWUpLyogQHZ1ZS9jb21wb25lbnQgKi8pLmV4dGVuZCh7bmFtZTondi1leHBhbnNpb24tcGFuZWwnLHByb3BzOntkaXNhYmxlZDpCb29sZWFuLHJlYWRvbmx5OkJvb2xlYW59LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntjb250ZW50Om51bGwsaGVhZGVyOm51bGwsbmV4dElzQWN0aXZlOmZhbHNlfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LWV4cGFuc2lvbi1wYW5lbC0tYWN0aXZlJzp0aGlzLmlzQWN0aXZlLCd2LWV4cGFuc2lvbi1wYW5lbC0tbmV4dC1hY3RpdmUnOnRoaXMubmV4dElzQWN0aXZlLCd2LWV4cGFuc2lvbi1wYW5lbC0tZGlzYWJsZWQnOnRoaXMuaXNEaXNhYmxlZH0sdGhpcy5ncm91cENsYXNzZXMpO30saXNEaXNhYmxlZDpmdW5jdGlvbiBpc0Rpc2FibGVkKCl7cmV0dXJuIHRoaXMuZXhwYW5zaW9uUGFuZWxzLmRpc2FibGVkfHx0aGlzLmRpc2FibGVkO30saXNSZWFkb25seTpmdW5jdGlvbiBpc1JlYWRvbmx5KCl7cmV0dXJuIHRoaXMuZXhwYW5zaW9uUGFuZWxzLnJlYWRvbmx5fHx0aGlzLnJlYWRvbmx5O319LG1ldGhvZHM6e3JlZ2lzdGVyQ29udGVudDpmdW5jdGlvbiByZWdpc3RlckNvbnRlbnQodm0pe3RoaXMuY29udGVudD12bTt9LHVucmVnaXN0ZXJDb250ZW50OmZ1bmN0aW9uIHVucmVnaXN0ZXJDb250ZW50KCl7dGhpcy5jb250ZW50PW51bGw7fSxyZWdpc3RlckhlYWRlcjpmdW5jdGlvbiByZWdpc3RlckhlYWRlcih2bSl7dGhpcy5oZWFkZXI9dm07dm0uJG9uKCdjbGljaycsdGhpcy5vbkNsaWNrKTt9LHVucmVnaXN0ZXJIZWFkZXI6ZnVuY3Rpb24gdW5yZWdpc3RlckhlYWRlcigpe3RoaXMuaGVhZGVyPW51bGw7fSxvbkNsaWNrOmZ1bmN0aW9uIG9uQ2xpY2soZSl7aWYoZS5kZXRhaWwpdGhpcy5oZWFkZXIuJGVsLmJsdXIoKTt0aGlzLiRlbWl0KCdjbGljaycsZSk7dGhpcy5pc1JlYWRvbmx5fHx0aGlzLmlzRGlzYWJsZWR8fHRoaXMudG9nZ2xlKCk7fSx0b2dnbGU6ZnVuY3Rpb24gdG9nZ2xlKCl7dmFyIF90aGlzPXRoaXM7LyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9pZih0aGlzLmNvbnRlbnQpdGhpcy5jb250ZW50LmlzQm9vdGVkPXRydWU7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuJGVtaXQoJ2NoYW5nZScpO30pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWV4cGFuc2lvbi1wYW5lbCcsY2xhc3M6dGhpcy5jbGFzc2VzLGF0dHJzOnsnYXJpYS1leHBhbmRlZCc6U3RyaW5nKHRoaXMuaXNBY3RpdmUpfX0sT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZ2V0U2xvdCJdKSh0aGlzKSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZFeHBhbnNpb25QYW5lbC9WRXhwYW5zaW9uUGFuZWxDb250ZW50LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkV4cGFuc2lvblBhbmVsL1ZFeHBhbnNpb25QYW5lbENvbnRlbnQudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZFeHBhbnNpb25QYW5lbFZFeHBhbnNpb25QYW5lbENvbnRlbnRUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF90cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3RyYW5zaXRpb25zICovIi4vc3JjL2NvbXBvbmVudHMvdHJhbnNpdGlvbnMvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2Jvb3RhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2Jvb3RhYmxlICovIi4vc3JjL21peGlucy9ib290YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfcmVnaXN0cmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvcmVnaXN0cmFibGUgKi8iLi9zcmMvbWl4aW5zL3JlZ2lzdHJhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8vIE1peGlucwovLyBVdGlsaXRpZXMKdmFyIGJhc2VNaXhpbnM9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0pKF9taXhpbnNfYm9vdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLE9iamVjdChfbWl4aW5zX3JlZ2lzdHJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImluamVjdCJdKSgnZXhwYW5zaW9uUGFuZWwnLCd2LWV4cGFuc2lvbi1wYW5lbC1jb250ZW50Jywndi1leHBhbnNpb24tcGFuZWwnKSk7LyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1iYXNlTWl4aW5zLmV4dGVuZCgpLmV4dGVuZCh7bmFtZTondi1leHBhbnNpb24tcGFuZWwtY29udGVudCcsY29tcHV0ZWQ6e2lzQWN0aXZlOmZ1bmN0aW9uIGlzQWN0aXZlKCl7cmV0dXJuIHRoaXMuZXhwYW5zaW9uUGFuZWwuaXNBY3RpdmU7fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy5leHBhbnNpb25QYW5lbC5yZWdpc3RlckNvbnRlbnQodGhpcyk7fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXt0aGlzLmV4cGFuc2lvblBhbmVsLnVucmVnaXN0ZXJDb250ZW50KCk7fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3JldHVybiBoKF90cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJWRXhwYW5kVHJhbnNpdGlvbiJdLFtoKCdkaXYnLHtzdGF0aWNDbGFzczondi1leHBhbnNpb24tcGFuZWwtY29udGVudCcsZGlyZWN0aXZlczpbe25hbWU6J3Nob3cnLHZhbHVlOnRoaXMuaXNBY3RpdmV9XX0sdGhpcy5zaG93TGF6eUNvbnRlbnQoW2goJ2Rpdicse2NsYXNzOid2LWV4cGFuc2lvbi1wYW5lbC1jb250ZW50X193cmFwJ30sT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZ2V0U2xvdCJdKSh0aGlzKSldKSldKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkV4cGFuc2lvblBhbmVsL1ZFeHBhbnNpb25QYW5lbEhlYWRlci50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkV4cGFuc2lvblBhbmVsL1ZFeHBhbnNpb25QYW5lbEhlYWRlci50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRXhwYW5zaW9uUGFuZWxWRXhwYW5zaW9uUGFuZWxIZWFkZXJUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF90cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3RyYW5zaXRpb25zICovIi4vc3JjL2NvbXBvbmVudHMvdHJhbnNpdGlvbnMvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19yZWdpc3RyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9yZWdpc3RyYWJsZSAqLyIuL3NyYy9taXhpbnMvcmVnaXN0cmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZGlyZWN0aXZlc19yaXBwbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9kaXJlY3RpdmVzL3JpcHBsZSAqLyIuL3NyYy9kaXJlY3RpdmVzL3JpcHBsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8vIERpcmVjdGl2ZXMKLy8gVXRpbGl0aWVzCnZhciBiYXNlTWl4aW5zPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdKShPYmplY3QoX21peGluc19yZWdpc3RyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJpbmplY3QiXSkoJ2V4cGFuc2lvblBhbmVsJywndi1leHBhbnNpb24tcGFuZWwtaGVhZGVyJywndi1leHBhbnNpb24tcGFuZWwnKSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1iYXNlTWl4aW5zLmV4dGVuZCgpLmV4dGVuZCh7bmFtZTondi1leHBhbnNpb24tcGFuZWwtaGVhZGVyJyxkaXJlY3RpdmVzOntyaXBwbGU6X2RpcmVjdGl2ZXNfcmlwcGxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXX0scHJvcHM6e2Rpc2FibGVJY29uUm90YXRlOkJvb2xlYW4sZXhwYW5kSWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJGV4cGFuZCd9LGhpZGVBY3Rpb25zOkJvb2xlYW4scmlwcGxlOnt0eXBlOltCb29sZWFuLE9iamVjdF0sZGVmYXVsdDpmYWxzZX19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntoYXNNb3VzZWRvd246ZmFsc2V9O30sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybnsndi1leHBhbnNpb24tcGFuZWwtaGVhZGVyLS1hY3RpdmUnOnRoaXMuaXNBY3RpdmUsJ3YtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci0tbW91c2Vkb3duJzp0aGlzLmhhc01vdXNlZG93bn07fSxpc0FjdGl2ZTpmdW5jdGlvbiBpc0FjdGl2ZSgpe3JldHVybiB0aGlzLmV4cGFuc2lvblBhbmVsLmlzQWN0aXZlO30saXNEaXNhYmxlZDpmdW5jdGlvbiBpc0Rpc2FibGVkKCl7cmV0dXJuIHRoaXMuZXhwYW5zaW9uUGFuZWwuaXNEaXNhYmxlZDt9LGlzUmVhZG9ubHk6ZnVuY3Rpb24gaXNSZWFkb25seSgpe3JldHVybiB0aGlzLmV4cGFuc2lvblBhbmVsLmlzUmVhZG9ubHk7fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy5leHBhbnNpb25QYW5lbC5yZWdpc3RlckhlYWRlcih0aGlzKTt9LGJlZm9yZURlc3Ryb3k6ZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpe3RoaXMuZXhwYW5zaW9uUGFuZWwudW5yZWdpc3RlckhlYWRlcigpO30sbWV0aG9kczp7b25DbGljazpmdW5jdGlvbiBvbkNsaWNrKGUpe3RoaXMuJGVtaXQoJ2NsaWNrJyxlKTt9LGdlbkljb246ZnVuY3Rpb24gZ2VuSWNvbigpe3ZhciBpY29uPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImdldFNsb3QiXSkodGhpcywnYWN0aW9ucycpfHxbdGhpcy4kY3JlYXRlRWxlbWVudChfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLHRoaXMuZXhwYW5kSWNvbildO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF90cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJWRmFkZVRyYW5zaXRpb24iXSxbdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcl9faWNvbicsY2xhc3M6eyd2LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXJfX2ljb24tLWRpc2FibGUtcm90YXRlJzp0aGlzLmRpc2FibGVJY29uUm90YXRlfSxkaXJlY3RpdmVzOlt7bmFtZTonc2hvdycsdmFsdWU6IXRoaXMuaXNEaXNhYmxlZH1dfSxpY29uKV0pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIGgoJ2J1dHRvbicse3N0YXRpY0NsYXNzOid2LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXInLGNsYXNzOnRoaXMuY2xhc3NlcyxhdHRyczp7dGFiaW5kZXg6dGhpcy5pc0Rpc2FibGVkPy0xOm51bGwsdHlwZTonYnV0dG9uJ30sZGlyZWN0aXZlczpbe25hbWU6J3JpcHBsZScsdmFsdWU6dGhpcy5yaXBwbGV9XSxvbjpfX2Fzc2lnbih7fSx0aGlzLiRsaXN0ZW5lcnMse2NsaWNrOnRoaXMub25DbGljayxtb3VzZWRvd246ZnVuY3Rpb24gbW91c2Vkb3duKCl7cmV0dXJuIF90aGlzLmhhc01vdXNlZG93bj10cnVlO30sbW91c2V1cDpmdW5jdGlvbiBtb3VzZXVwKCl7cmV0dXJuIF90aGlzLmhhc01vdXNlZG93bj1mYWxzZTt9fSl9LFtPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJnZXRTbG90Il0pKHRoaXMsJ2RlZmF1bHQnLHtvcGVuOnRoaXMuaXNBY3RpdmV9LHRydWUpLHRoaXMuaGlkZUFjdGlvbnN8fHRoaXMuZ2VuSWNvbigpXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZFeHBhbnNpb25QYW5lbC9WRXhwYW5zaW9uUGFuZWxzLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkV4cGFuc2lvblBhbmVsL1ZFeHBhbnNpb25QYW5lbHMudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZFeHBhbnNpb25QYW5lbFZFeHBhbnNpb25QYW5lbHNUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRXhwYW5zaW9uUGFuZWxfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkV4cGFuc2lvblBhbmVsLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WRXhwYW5zaW9uUGFuZWwvVkV4cGFuc2lvblBhbmVsLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkV4cGFuc2lvblBhbmVsX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZFeHBhbnNpb25QYW5lbF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WSXRlbUdyb3VwX1ZJdGVtR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSXRlbUdyb3VwL1ZJdGVtR3JvdXAgKi8iLi9zcmMvY29tcG9uZW50cy9WSXRlbUdyb3VwL1ZJdGVtR3JvdXAudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gU3R5bGVzCi8vIENvbXBvbmVudHMKLy8gVXRpbGl0aWVzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZJdGVtR3JvdXBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJCYXNlSXRlbUdyb3VwIl0uZXh0ZW5kKHtuYW1lOid2LWV4cGFuc2lvbi1wYW5lbHMnLHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybntleHBhbnNpb25QYW5lbHM6dGhpc307fSxwcm9wczp7YWNjb3JkaW9uOkJvb2xlYW4sZGlzYWJsZWQ6Qm9vbGVhbixmb2N1c2FibGU6Qm9vbGVhbixpbnNldDpCb29sZWFuLHBvcG91dDpCb29sZWFuLHJlYWRvbmx5OkJvb2xlYW59LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oe30sX1ZJdGVtR3JvdXBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJCYXNlSXRlbUdyb3VwIl0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LWV4cGFuc2lvbi1wYW5lbHMnOnRydWUsJ3YtZXhwYW5zaW9uLXBhbmVscy0tYWNjb3JkaW9uJzp0aGlzLmFjY29yZGlvbiwndi1leHBhbnNpb24tcGFuZWxzLS1mb2N1c2FibGUnOnRoaXMuZm9jdXNhYmxlLCd2LWV4cGFuc2lvbi1wYW5lbHMtLWluc2V0Jzp0aGlzLmluc2V0LCd2LWV4cGFuc2lvbi1wYW5lbHMtLXBvcG91dCc6dGhpcy5wb3BvdXR9KTt9fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXsvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2lmKHRoaXMuJGF0dHJzLmhhc093blByb3BlcnR5KCdleHBhbmQnKSl7T2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siYnJlYWtpbmciXSkoJ2V4cGFuZCcsJ211bHRpcGxlJyx0aGlzKTt9LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9pZihBcnJheS5pc0FycmF5KHRoaXMudmFsdWUpJiZ0aGlzLnZhbHVlLmxlbmd0aD4wJiZ0eXBlb2YgdGhpcy52YWx1ZVswXT09PSdib29sZWFuJyl7T2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siYnJlYWtpbmciXSkoJzp2YWx1ZT0iW3RydWUsIGZhbHNlLCB0cnVlXSInLCc6dmFsdWU9IlswLCAyXSInLHRoaXMpO319LG1ldGhvZHM6e3VwZGF0ZUl0ZW06ZnVuY3Rpb24gdXBkYXRlSXRlbShpdGVtLGluZGV4KXt2YXIgdmFsdWU9dGhpcy5nZXRWYWx1ZShpdGVtLGluZGV4KTt2YXIgbmV4dFZhbHVlPXRoaXMuZ2V0VmFsdWUoaXRlbSxpbmRleCsxKTtpdGVtLmlzQWN0aXZlPXRoaXMudG9nZ2xlTWV0aG9kKHZhbHVlKTtpdGVtLm5leHRJc0FjdGl2ZT10aGlzLnRvZ2dsZU1ldGhvZChuZXh0VmFsdWUpO319fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkV4cGFuc2lvblBhbmVsL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZFeHBhbnNpb25QYW5lbC9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWRXhwYW5zaW9uUGFuZWxzLCBWRXhwYW5zaW9uUGFuZWwsIFZFeHBhbnNpb25QYW5lbEhlYWRlciwgVkV4cGFuc2lvblBhbmVsQ29udGVudCwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRXhwYW5zaW9uUGFuZWxJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZFeHBhbnNpb25QYW5lbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZFeHBhbnNpb25QYW5lbHMgKi8iLi9zcmMvY29tcG9uZW50cy9WRXhwYW5zaW9uUGFuZWwvVkV4cGFuc2lvblBhbmVscy50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZFeHBhbnNpb25QYW5lbHMiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRXhwYW5zaW9uUGFuZWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkV4cGFuc2lvblBhbmVsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRXhwYW5zaW9uUGFuZWwgKi8iLi9zcmMvY29tcG9uZW50cy9WRXhwYW5zaW9uUGFuZWwvVkV4cGFuc2lvblBhbmVsLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkV4cGFuc2lvblBhbmVsIixmdW5jdGlvbigpe3JldHVybiBfVkV4cGFuc2lvblBhbmVsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkV4cGFuc2lvblBhbmVsQ29udGVudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkV4cGFuc2lvblBhbmVsQ29udGVudCAqLyIuL3NyYy9jb21wb25lbnRzL1ZFeHBhbnNpb25QYW5lbC9WRXhwYW5zaW9uUGFuZWxDb250ZW50LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkV4cGFuc2lvblBhbmVsQ29udGVudCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZFeHBhbnNpb25QYW5lbENvbnRlbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRXhwYW5zaW9uUGFuZWxIZWFkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZFeHBhbnNpb25QYW5lbEhlYWRlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZFeHBhbnNpb25QYW5lbC9WRXhwYW5zaW9uUGFuZWxIZWFkZXIudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRXhwYW5zaW9uUGFuZWxIZWFkZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRXhwYW5zaW9uUGFuZWxIZWFkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09eyRfdnVldGlmeV9zdWJjb21wb25lbnRzOntWRXhwYW5zaW9uUGFuZWxzOl9WRXhwYW5zaW9uUGFuZWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSxWRXhwYW5zaW9uUGFuZWw6X1ZFeHBhbnNpb25QYW5lbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sVkV4cGFuc2lvblBhbmVsSGVhZGVyOl9WRXhwYW5zaW9uUGFuZWxIZWFkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLFZFeHBhbnNpb25QYW5lbENvbnRlbnQ6X1ZFeHBhbnNpb25QYW5lbENvbnRlbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdfX07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkZpbGVJbnB1dC9WRmlsZUlucHV0LnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRmlsZUlucHV0L1ZGaWxlSW5wdXQuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZGaWxlSW5wdXRWRmlsZUlucHV0U2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkZpbGVJbnB1dC9WRmlsZUlucHV0LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZGaWxlSW5wdXQvVkZpbGVJbnB1dC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZGaWxlSW5wdXRWRmlsZUlucHV0VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkZpbGVJbnB1dF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRmlsZUlucHV0LnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WRmlsZUlucHV0L1ZGaWxlSW5wdXQuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRmlsZUlucHV0X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZGaWxlSW5wdXRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZUZXh0RmllbGQgKi8iLi9zcmMvY29tcG9uZW50cy9WVGV4dEZpZWxkL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDaGlwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkNoaXAgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2hpcC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvY29uc29sZSAqLyIuL3NyYy91dGlsL2NvbnNvbGUudHMiKTtmdW5jdGlvbiBfdHlwZW9mKG9iail7aWYodHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJl90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcik9PT0ic3ltYm9sIil7X3R5cGVvZj1mdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIF90eXBlb2YyKG9iaik7fTt9ZWxzZXtfdHlwZW9mPWZ1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gb2JqJiZ0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb2JqLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZvYmohPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOl90eXBlb2YyKG9iaik7fTt9cmV0dXJuIF90eXBlb2Yob2JqKTt9dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTt2YXIgX19yZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fcmVhZHx8ZnVuY3Rpb24obyxuKXt2YXIgbT10eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb1tTeW1ib2wuaXRlcmF0b3JdO2lmKCFtKXJldHVybiBvO3ZhciBpPW0uY2FsbChvKSxyLGFyPVtdLGU7dHJ5e3doaWxlKChuPT09dm9pZCAwfHxuLS0+MCkmJiEocj1pLm5leHQoKSkuZG9uZSl7YXIucHVzaChyLnZhbHVlKTt9fWNhdGNoKGVycm9yKXtlPXtlcnJvcjplcnJvcn07fWZpbmFsbHl7dHJ5e2lmKHImJiFyLmRvbmUmJihtPWlbInJldHVybiJdKSltLmNhbGwoaSk7fWZpbmFsbHl7aWYoZSl0aHJvdyBlLmVycm9yO319cmV0dXJuIGFyO307dmFyIF9fc3ByZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fc3ByZWFkfHxmdW5jdGlvbigpe2Zvcih2YXIgYXI9W10saT0wO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe2FyPWFyLmNvbmNhdChfX3JlYWQoYXJndW1lbnRzW2ldKSk7fXJldHVybiBhcjt9Oy8vIFN0eWxlcwovLyBFeHRlbnNpb25zCi8vIENvbXBvbmVudHMKLy8gVXRpbGl0aWVzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZUZXh0RmllbGRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLmV4dGVuZCh7bmFtZTondi1maWxlLWlucHV0Jyxtb2RlbDp7cHJvcDondmFsdWUnLGV2ZW50OidjaGFuZ2UnfSxwcm9wczp7Y2hpcHM6Qm9vbGVhbixjbGVhcmFibGU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGNvdW50ZXJTaXplU3RyaW5nOnt0eXBlOlN0cmluZyxkZWZhdWx0OickdnVldGlmeS5maWxlSW5wdXQuY291bnRlclNpemUnfSxjb3VudGVyU3RyaW5nOnt0eXBlOlN0cmluZyxkZWZhdWx0OickdnVldGlmeS5maWxlSW5wdXQuY291bnRlcid9LHBsYWNlaG9sZGVyOlN0cmluZyxwcmVwZW5kSWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJGZpbGUnfSxyZWFkb25seTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LHNob3dTaXplOnt0eXBlOltCb29sZWFuLE51bWJlcl0sZGVmYXVsdDpmYWxzZSx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHYpe3JldHVybiB0eXBlb2Ygdj09PSdib29sZWFuJ3x8WzEwMDAsMTAyNF0uaW5jbHVkZXModik7fX0sc21hbGxDaGlwczpCb29sZWFuLHRydW5jYXRlTGVuZ3RoOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjIyfSx0eXBlOnt0eXBlOlN0cmluZyxkZWZhdWx0OidmaWxlJ30sdmFsdWU6e2RlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bXTt9LHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsKXtyZXR1cm4gX3R5cGVvZih2YWwpPT09J29iamVjdCd8fEFycmF5LmlzQXJyYXkodmFsKTt9fX0sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7fSxfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LWZpbGUtaW5wdXQnOnRydWV9KTt9LGNvdW50ZXJWYWx1ZTpmdW5jdGlvbiBjb3VudGVyVmFsdWUoKXt2YXIgZmlsZUNvdW50PXRoaXMuaXNNdWx0aXBsZSYmdGhpcy5sYXp5VmFsdWU/dGhpcy5sYXp5VmFsdWUubGVuZ3RoOnRoaXMubGF6eVZhbHVlIGluc3RhbmNlb2YgRmlsZT8xOjA7aWYoIXRoaXMuc2hvd1NpemUpcmV0dXJuIHRoaXMuJHZ1ZXRpZnkubGFuZy50KHRoaXMuY291bnRlclN0cmluZyxmaWxlQ291bnQpO3ZhciBieXRlcz10aGlzLmludGVybmFsQXJyYXlWYWx1ZS5yZWR1Y2UoZnVuY3Rpb24oc2l6ZSxmaWxlKXtyZXR1cm4gc2l6ZStmaWxlLnNpemU7fSwwKTtyZXR1cm4gdGhpcy4kdnVldGlmeS5sYW5nLnQodGhpcy5jb3VudGVyU2l6ZVN0cmluZyxmaWxlQ291bnQsT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siaHVtYW5SZWFkYWJsZUZpbGVTaXplIl0pKGJ5dGVzLHRoaXMuYmFzZT09PTEwMjQpKTt9LGludGVybmFsQXJyYXlWYWx1ZTpmdW5jdGlvbiBpbnRlcm5hbEFycmF5VmFsdWUoKXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0aGlzLmludGVybmFsVmFsdWUpP3RoaXMuaW50ZXJuYWxWYWx1ZTpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJ3cmFwSW5BcnJheSJdKSh0aGlzLmludGVybmFsVmFsdWUpO30saW50ZXJuYWxWYWx1ZTp7Z2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLmxhenlWYWx1ZTt9LHNldDpmdW5jdGlvbiBzZXQodmFsKXt0aGlzLmxhenlWYWx1ZT12YWw7dGhpcy4kZW1pdCgnY2hhbmdlJyx0aGlzLmxhenlWYWx1ZSk7fX0saXNEaXJ0eTpmdW5jdGlvbiBpc0RpcnR5KCl7cmV0dXJuIHRoaXMuaW50ZXJuYWxBcnJheVZhbHVlLmxlbmd0aD4wO30saXNMYWJlbEFjdGl2ZTpmdW5jdGlvbiBpc0xhYmVsQWN0aXZlKCl7cmV0dXJuIHRoaXMuaXNEaXJ0eTt9LGlzTXVsdGlwbGU6ZnVuY3Rpb24gaXNNdWx0aXBsZSgpe3JldHVybiB0aGlzLiRhdHRycy5oYXNPd25Qcm9wZXJ0eSgnbXVsdGlwbGUnKTt9LHRleHQ6ZnVuY3Rpb24gdGV4dCgpe3ZhciBfdGhpcz10aGlzO2lmKCF0aGlzLmlzRGlydHkpcmV0dXJuW3RoaXMucGxhY2Vob2xkZXJdO3JldHVybiB0aGlzLmludGVybmFsQXJyYXlWYWx1ZS5tYXAoZnVuY3Rpb24oZmlsZSl7dmFyIG5hbWU9X3RoaXMudHJ1bmNhdGVUZXh0KGZpbGUubmFtZSk7cmV0dXJuIV90aGlzLnNob3dTaXplP25hbWU6bmFtZSsiICgiK09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImh1bWFuUmVhZGFibGVGaWxlU2l6ZSJdKShmaWxlLnNpemUsX3RoaXMuYmFzZT09PTEwMjQpKyIpIjt9KTt9LGJhc2U6ZnVuY3Rpb24gYmFzZSgpe3JldHVybiB0eXBlb2YgdGhpcy5zaG93U2l6ZSE9PSdib29sZWFuJz90aGlzLnNob3dTaXplOnVuZGVmaW5lZDt9LGhhc0NoaXBzOmZ1bmN0aW9uIGhhc0NoaXBzKCl7cmV0dXJuIHRoaXMuY2hpcHN8fHRoaXMuc21hbGxDaGlwczt9fSx3YXRjaDp7cmVhZG9ubHk6e2hhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcih2KXtpZih2PT09dHJ1ZSlPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJjb25zb2xlRXJyb3IiXSkoJ3JlYWRvbmx5IGlzIG5vdCBzdXBwb3J0ZWQgb24gPHYtZmlsZS1pbnB1dD4nLHRoaXMpO30saW1tZWRpYXRlOnRydWV9LHZhbHVlOmZ1bmN0aW9uIHZhbHVlKHYpe3ZhciB2YWx1ZT10aGlzLmlzTXVsdGlwbGU/djp2P1t2XTpbXTtpZighT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVlcEVxdWFsIl0pKHZhbHVlLHRoaXMuJHJlZnMuaW5wdXQuZmlsZXMpKXsvLyBXaGVuIHRoZSBpbnB1dCB2YWx1ZSBpcyBjaGFuZ2VkIHByb2dyYW1hdGljYWxseSwgY2xlYXIgdGhlCi8vIGludGVybmFsIGlucHV0J3MgdmFsdWUgc28gdGhhdCB0aGUgYG9uSW5wdXRgIGhhbmRsZXIKLy8gY2FuIGJlIHRyaWdnZXJlZCBhZ2FpbiBpZiB0aGUgdXNlciByZS1zZWxlY3RzIHRoZSBleGFjdAovLyBzYW1lIGZpbGUocykuIElkZWFsbHksIGBpbnB1dC5maWxlc2Agc2hvdWxkIGJlCi8vIG1hbmlwdWxhdGVkIGRpcmVjdGx5IGJ1dCB0aGF0IHByb3BlcnR5IGlzIHJlYWRvbmx5Lgp0aGlzLiRyZWZzLmlucHV0LnZhbHVlPScnO319fSxtZXRob2RzOntjbGVhcmFibGVDYWxsYmFjazpmdW5jdGlvbiBjbGVhcmFibGVDYWxsYmFjaygpe3RoaXMuaW50ZXJuYWxWYWx1ZT10aGlzLmlzTXVsdGlwbGU/W106bnVsbDt0aGlzLiRyZWZzLmlucHV0LnZhbHVlPScnO30sZ2VuQ2hpcHM6ZnVuY3Rpb24gZ2VuQ2hpcHMoKXt2YXIgX3RoaXM9dGhpcztpZighdGhpcy5pc0RpcnR5KXJldHVybltdO3JldHVybiB0aGlzLnRleHQubWFwKGZ1bmN0aW9uKHRleHQsaW5kZXgpe3JldHVybiBfdGhpcy4kY3JlYXRlRWxlbWVudChfVkNoaXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siVkNoaXAiXSx7cHJvcHM6e3NtYWxsOl90aGlzLnNtYWxsQ2hpcHN9LG9uOnsnY2xpY2s6Y2xvc2UnOmZ1bmN0aW9uIGNsaWNrQ2xvc2UoKXt2YXIgaW50ZXJuYWxWYWx1ZT1fdGhpcy5pbnRlcm5hbFZhbHVlO2ludGVybmFsVmFsdWUuc3BsaWNlKGluZGV4LDEpO190aGlzLmludGVybmFsVmFsdWU9aW50ZXJuYWxWYWx1ZTsvLyBUcmlnZ2VyIHRoZSB3YXRjaGVyCn19fSxbdGV4dF0pO30pO30sZ2VuSW5wdXQ6ZnVuY3Rpb24gZ2VuSW5wdXQoKXt2YXIgaW5wdXQ9X1ZUZXh0RmllbGRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5nZW5JbnB1dC5jYWxsKHRoaXMpOy8vIFdlIHNob3VsZCBub3QgYmUgc2V0dGluZyB2YWx1ZQovLyBwcm9ncmFtbWF0aWNhbGx5IG9uIHRoZSBpbnB1dAovLyB3aGVuIGl0IGlzIHVzaW5nIHR5cGU9ImZpbGUiCmRlbGV0ZSBpbnB1dC5kYXRhLmRvbVByb3BzLnZhbHVlOy8vIFRoaXMgc29sdmVzIGFuIGlzc3VlIGluIFNhZmFyaSB3aGVyZQovLyBub3RoaW5nIGhhcHBlbnMgd2hlbiBhZGRpbmcgYSBmaWxlCi8vIGRvIHRvIHRoZSBpbnB1dCBldmVudCBub3QgZmlyaW5nCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS92dWV0aWZ5anMvdnVldGlmeS9pc3N1ZXMvNzk0MQpkZWxldGUgaW5wdXQuZGF0YS5vbi5pbnB1dDtpbnB1dC5kYXRhLm9uLmNoYW5nZT10aGlzLm9uSW5wdXQ7cmV0dXJuW3RoaXMuZ2VuU2VsZWN0aW9ucygpLGlucHV0XTt9LGdlblByZXBlbmRTbG90OmZ1bmN0aW9uIGdlblByZXBlbmRTbG90KCl7dmFyIF90aGlzPXRoaXM7aWYoIXRoaXMucHJlcGVuZEljb24pcmV0dXJuIG51bGw7dmFyIGljb249dGhpcy5nZW5JY29uKCdwcmVwZW5kJyxmdW5jdGlvbigpe190aGlzLiRyZWZzLmlucHV0LmNsaWNrKCk7fSk7cmV0dXJuIHRoaXMuZ2VuU2xvdCgncHJlcGVuZCcsJ291dGVyJyxbaWNvbl0pO30sZ2VuU2VsZWN0aW9uVGV4dDpmdW5jdGlvbiBnZW5TZWxlY3Rpb25UZXh0KCl7dmFyIGxlbmd0aD10aGlzLnRleHQubGVuZ3RoO2lmKGxlbmd0aDwyKXJldHVybiB0aGlzLnRleHQ7aWYodGhpcy5zaG93U2l6ZSYmIXRoaXMuY291bnRlcilyZXR1cm5bdGhpcy5jb3VudGVyVmFsdWVdO3JldHVyblt0aGlzLiR2dWV0aWZ5LmxhbmcudCh0aGlzLmNvdW50ZXJTdHJpbmcsbGVuZ3RoKV07fSxnZW5TZWxlY3Rpb25zOmZ1bmN0aW9uIGdlblNlbGVjdGlvbnMoKXt2YXIgX3RoaXM9dGhpczt2YXIgY2hpbGRyZW49W107aWYodGhpcy5pc0RpcnR5JiZ0aGlzLiRzY29wZWRTbG90cy5zZWxlY3Rpb24pe3RoaXMuaW50ZXJuYWxBcnJheVZhbHVlLmZvckVhY2goZnVuY3Rpb24oZmlsZSxpbmRleCl7aWYoIV90aGlzLiRzY29wZWRTbG90cy5zZWxlY3Rpb24pcmV0dXJuO2NoaWxkcmVuLnB1c2goX3RoaXMuJHNjb3BlZFNsb3RzLnNlbGVjdGlvbih7dGV4dDpfdGhpcy50ZXh0W2luZGV4XSxmaWxlOmZpbGUsaW5kZXg6aW5kZXh9KSk7fSk7fWVsc2V7Y2hpbGRyZW4ucHVzaCh0aGlzLmhhc0NoaXBzJiZ0aGlzLmlzRGlydHk/dGhpcy5nZW5DaGlwcygpOnRoaXMuZ2VuU2VsZWN0aW9uVGV4dCgpKTt9cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWZpbGUtaW5wdXRfX3RleHQnLGNsYXNzOnsndi1maWxlLWlucHV0X190ZXh0LS1wbGFjZWhvbGRlcic6dGhpcy5wbGFjZWhvbGRlciYmIXRoaXMuaXNEaXJ0eSwndi1maWxlLWlucHV0X190ZXh0LS1jaGlwcyc6dGhpcy5oYXNDaGlwcyYmIXRoaXMuJHNjb3BlZFNsb3RzLnNlbGVjdGlvbn0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCl7cmV0dXJuIF90aGlzLiRyZWZzLmlucHV0LmNsaWNrKCk7fX19LGNoaWxkcmVuKTt9LG9uSW5wdXQ6ZnVuY3Rpb24gb25JbnB1dChlKXt2YXIgZmlsZXM9X19zcHJlYWQoZS50YXJnZXQuZmlsZXN8fFtdKTt0aGlzLmludGVybmFsVmFsdWU9dGhpcy5pc011bHRpcGxlP2ZpbGVzOmZpbGVzWzBdOy8vIFNldCBpbml0aWFsVmFsdWUgaGVyZSBvdGhlcndpc2UgaXNGb2N1c2VkCi8vIHdhdGNoZXIgaW4gVlRleHRGaWVsZCB3aWxsIGVtaXQgYSBjaGFuZ2UKLy8gZXZlbnQgd2hlbmV2ZXIgdGhlIGNvbXBvbmVudCBpcyBibHVycmVkCnRoaXMuaW5pdGlhbFZhbHVlPXRoaXMuaW50ZXJuYWxWYWx1ZTt9LG9uS2V5RG93bjpmdW5jdGlvbiBvbktleURvd24oZSl7dGhpcy4kZW1pdCgna2V5ZG93bicsZSk7fSx0cnVuY2F0ZVRleHQ6ZnVuY3Rpb24gdHJ1bmNhdGVUZXh0KHN0cil7aWYoc3RyLmxlbmd0aDxOdW1iZXIodGhpcy50cnVuY2F0ZUxlbmd0aCkpcmV0dXJuIHN0cjt2YXIgY2hhcnNLZWVwT25lU2lkZT1NYXRoLmZsb29yKChOdW1iZXIodGhpcy50cnVuY2F0ZUxlbmd0aCktMSkvMik7cmV0dXJuIHN0ci5zbGljZSgwLGNoYXJzS2VlcE9uZVNpZGUpKyJcdTIwMjYiK3N0ci5zbGljZShzdHIubGVuZ3RoLWNoYXJzS2VlcE9uZVNpZGUpO319fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkZpbGVJbnB1dC9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkZpbGVJbnB1dC9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVkZpbGVJbnB1dCwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRmlsZUlucHV0SW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRmlsZUlucHV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRmlsZUlucHV0ICovIi4vc3JjL2NvbXBvbmVudHMvVkZpbGVJbnB1dC9WRmlsZUlucHV0LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkZpbGVJbnB1dCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZGaWxlSW5wdXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZGaWxlSW5wdXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZGb290ZXIvVkZvb3Rlci5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkZvb3Rlci9WRm9vdGVyLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRm9vdGVyVkZvb3RlclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZGb290ZXIvVkZvb3Rlci50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRm9vdGVyL1ZGb290ZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRm9vdGVyVkZvb3RlclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZGb290ZXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkZvb3Rlci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkZvb3Rlci9WRm9vdGVyLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkZvb3Rlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WRm9vdGVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19hcHBsaWNhdGlvbmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvYXBwbGljYXRpb25hYmxlICovIi4vc3JjL21peGlucy9hcHBsaWNhdGlvbmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNoZWV0X1ZTaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZTaGVldC9WU2hlZXQgKi8iLi9zcmMvY29tcG9uZW50cy9WU2hlZXQvVlNoZWV0LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19zc3JfYm9vdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvc3NyLWJvb3RhYmxlICovIi4vc3JjL21peGlucy9zc3ItYm9vdGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gTWl4aW5zCi8vIFV0aWxpdGllcwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdKShfVlNoZWV0X1ZTaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sT2JqZWN0KF9taXhpbnNfYXBwbGljYXRpb25hYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkoJ2Zvb3RlcicsWydoZWlnaHQnLCdpbnNldCddKSxfbWl4aW5zX3Nzcl9ib290YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pLmV4dGVuZCh7bmFtZTondi1mb290ZXInLHByb3BzOntoZWlnaHQ6e2RlZmF1bHQ6J2F1dG8nLHR5cGU6W051bWJlcixTdHJpbmddfSxpbnNldDpCb29sZWFuLHBhZGxlc3M6Qm9vbGVhbix0aWxlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfX0sY29tcHV0ZWQ6e2FwcGxpY2F0aW9uUHJvcGVydHk6ZnVuY3Rpb24gYXBwbGljYXRpb25Qcm9wZXJ0eSgpe3JldHVybiB0aGlzLmluc2V0PydpbnNldEZvb3Rlcic6J2Zvb3Rlcic7fSxjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oe30sX1ZTaGVldF9WU2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuY2xhc3Nlcy5jYWxsKHRoaXMpLHsndi1mb290ZXItLWFic29sdXRlJzp0aGlzLmFic29sdXRlLCd2LWZvb3Rlci0tZml4ZWQnOiF0aGlzLmFic29sdXRlJiYodGhpcy5hcHB8fHRoaXMuZml4ZWQpLCd2LWZvb3Rlci0tcGFkbGVzcyc6dGhpcy5wYWRsZXNzLCd2LWZvb3Rlci0taW5zZXQnOnRoaXMuaW5zZXR9KTt9LGNvbXB1dGVkQm90dG9tOmZ1bmN0aW9uIGNvbXB1dGVkQm90dG9tKCl7aWYoIXRoaXMuaXNQb3NpdGlvbmVkKXJldHVybiB1bmRlZmluZWQ7cmV0dXJuIHRoaXMuYXBwP3RoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24uYm90dG9tOjA7fSxjb21wdXRlZExlZnQ6ZnVuY3Rpb24gY29tcHV0ZWRMZWZ0KCl7aWYoIXRoaXMuaXNQb3NpdGlvbmVkKXJldHVybiB1bmRlZmluZWQ7cmV0dXJuIHRoaXMuYXBwJiZ0aGlzLmluc2V0P3RoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24ubGVmdDowO30sY29tcHV0ZWRSaWdodDpmdW5jdGlvbiBjb21wdXRlZFJpZ2h0KCl7aWYoIXRoaXMuaXNQb3NpdGlvbmVkKXJldHVybiB1bmRlZmluZWQ7cmV0dXJuIHRoaXMuYXBwJiZ0aGlzLmluc2V0P3RoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24ucmlnaHQ6MDt9LGlzUG9zaXRpb25lZDpmdW5jdGlvbiBpc1Bvc2l0aW9uZWQoKXtyZXR1cm4gQm9vbGVhbih0aGlzLmFic29sdXRlfHx0aGlzLmZpeGVkfHx0aGlzLmFwcCk7fSxzdHlsZXM6ZnVuY3Rpb24gc3R5bGVzKCl7dmFyIGhlaWdodD1wYXJzZUludCh0aGlzLmhlaWdodCk7cmV0dXJuIF9fYXNzaWduKHt9LF9WU2hlZXRfVlNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLnN0eWxlcy5jYWxsKHRoaXMpLHtoZWlnaHQ6aXNOYU4oaGVpZ2h0KT9oZWlnaHQ6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siY29udmVydFRvVW5pdCJdKShoZWlnaHQpLGxlZnQ6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmNvbXB1dGVkTGVmdCkscmlnaHQ6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmNvbXB1dGVkUmlnaHQpLGJvdHRvbTpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuY29tcHV0ZWRCb3R0b20pfSk7fX0sbWV0aG9kczp7dXBkYXRlQXBwbGljYXRpb246ZnVuY3Rpb24gdXBkYXRlQXBwbGljYXRpb24oKXt2YXIgaGVpZ2h0PXBhcnNlSW50KHRoaXMuaGVpZ2h0KTtyZXR1cm4gaXNOYU4oaGVpZ2h0KT90aGlzLiRlbD90aGlzLiRlbC5jbGllbnRIZWlnaHQ6MDpoZWlnaHQ7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgZGF0YT10aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbG9yLHtzdGF0aWNDbGFzczondi1mb290ZXInLGNsYXNzOnRoaXMuY2xhc3NlcyxzdHlsZTp0aGlzLnN0eWxlc30pO3JldHVybiBoKCdmb290ZXInLGRhdGEsdGhpcy4kc2xvdHMuZGVmYXVsdCk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZGb290ZXIvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZGb290ZXIvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZGb290ZXIsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkZvb3RlckluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkZvb3Rlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkZvb3RlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZGb290ZXIvVkZvb3Rlci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZGb290ZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRm9vdGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WRm9vdGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WRm9ybS9WRm9ybS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZGb3JtL1ZGb3JtLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWRm9ybVZGb3JtVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfYmluZHNfYXR0cnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvYmluZHMtYXR0cnMgKi8iLi9zcmMvbWl4aW5zL2JpbmRzLWF0dHJzL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19yZWdpc3RyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9yZWdpc3RyYWJsZSAqLyIuL3NyYy9taXhpbnMvcmVnaXN0cmFibGUvaW5kZXgudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIE1peGlucwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKShfbWl4aW5zX2JpbmRzX2F0dHJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxPYmplY3QoX21peGluc19yZWdpc3RyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJwcm92aWRlIl0pKCdmb3JtJykvKiBAdnVlL2NvbXBvbmVudCAqLykuZXh0ZW5kKHtuYW1lOid2LWZvcm0nLGluaGVyaXRBdHRyczpmYWxzZSxwcm9wczp7bGF6eVZhbGlkYXRpb246Qm9vbGVhbix2YWx1ZTpCb29sZWFufSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aW5wdXRzOltdLHdhdGNoZXJzOltdLGVycm9yQmFnOnt9fTt9LHdhdGNoOntlcnJvckJhZzp7aGFuZGxlcjpmdW5jdGlvbiBoYW5kbGVyKHZhbCl7dmFyIGVycm9ycz1PYmplY3QudmFsdWVzKHZhbCkuaW5jbHVkZXModHJ1ZSk7dGhpcy4kZW1pdCgnaW5wdXQnLCFlcnJvcnMpO30sZGVlcDp0cnVlLGltbWVkaWF0ZTp0cnVlfX0sbWV0aG9kczp7d2F0Y2hJbnB1dDpmdW5jdGlvbiB3YXRjaElucHV0KGlucHV0KXt2YXIgX3RoaXM9dGhpczt2YXIgd2F0Y2hlcj1mdW5jdGlvbiB3YXRjaGVyKGlucHV0KXtyZXR1cm4gaW5wdXQuJHdhdGNoKCdoYXNFcnJvcicsZnVuY3Rpb24odmFsKXtfdGhpcy4kc2V0KF90aGlzLmVycm9yQmFnLGlucHV0Ll91aWQsdmFsKTt9LHtpbW1lZGlhdGU6dHJ1ZX0pO307dmFyIHdhdGNoZXJzPXtfdWlkOmlucHV0Ll91aWQsdmFsaWQ6ZnVuY3Rpb24gdmFsaWQoKXt9LHNob3VsZFZhbGlkYXRlOmZ1bmN0aW9uIHNob3VsZFZhbGlkYXRlKCl7fX07aWYodGhpcy5sYXp5VmFsaWRhdGlvbil7Ly8gT25seSBzdGFydCB3YXRjaGluZyBpbnB1dHMgaWYgd2UgbmVlZCB0bwp3YXRjaGVycy5zaG91bGRWYWxpZGF0ZT1pbnB1dC4kd2F0Y2goJ3Nob3VsZFZhbGlkYXRlJyxmdW5jdGlvbih2YWwpe2lmKCF2YWwpcmV0dXJuOy8vIE9ubHkgd2F0Y2ggaWYgd2UncmUgbm90IGFscmVhZHkgZG9pbmcgaXQKaWYoX3RoaXMuZXJyb3JCYWcuaGFzT3duUHJvcGVydHkoaW5wdXQuX3VpZCkpcmV0dXJuO3dhdGNoZXJzLnZhbGlkPXdhdGNoZXIoaW5wdXQpO30pO31lbHNle3dhdGNoZXJzLnZhbGlkPXdhdGNoZXIoaW5wdXQpO31yZXR1cm4gd2F0Y2hlcnM7fSwvKiogQHB1YmxpYyAqL3ZhbGlkYXRlOmZ1bmN0aW9uIHZhbGlkYXRlKCl7cmV0dXJuIHRoaXMuaW5wdXRzLmZpbHRlcihmdW5jdGlvbihpbnB1dCl7cmV0dXJuIWlucHV0LnZhbGlkYXRlKHRydWUpO30pLmxlbmd0aD09PTA7fSwvKiogQHB1YmxpYyAqL3Jlc2V0OmZ1bmN0aW9uIHJlc2V0KCl7dGhpcy5pbnB1dHMuZm9yRWFjaChmdW5jdGlvbihpbnB1dCl7cmV0dXJuIGlucHV0LnJlc2V0KCk7fSk7dGhpcy5yZXNldEVycm9yQmFnKCk7fSxyZXNldEVycm9yQmFnOmZ1bmN0aW9uIHJlc2V0RXJyb3JCYWcoKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLmxhenlWYWxpZGF0aW9uKXsvLyBBY2NvdW50IGZvciB0aW1lb3V0IGluIHZhbGlkYXRhYmxlCnNldFRpbWVvdXQoZnVuY3Rpb24oKXtfdGhpcy5lcnJvckJhZz17fTt9LDApO319LC8qKiBAcHVibGljICovcmVzZXRWYWxpZGF0aW9uOmZ1bmN0aW9uIHJlc2V0VmFsaWRhdGlvbigpe3RoaXMuaW5wdXRzLmZvckVhY2goZnVuY3Rpb24oaW5wdXQpe3JldHVybiBpbnB1dC5yZXNldFZhbGlkYXRpb24oKTt9KTt0aGlzLnJlc2V0RXJyb3JCYWcoKTt9LHJlZ2lzdGVyOmZ1bmN0aW9uIHJlZ2lzdGVyKGlucHV0KXt0aGlzLmlucHV0cy5wdXNoKGlucHV0KTt0aGlzLndhdGNoZXJzLnB1c2godGhpcy53YXRjaElucHV0KGlucHV0KSk7fSx1bnJlZ2lzdGVyOmZ1bmN0aW9uIHVucmVnaXN0ZXIoaW5wdXQpe3ZhciBmb3VuZD10aGlzLmlucHV0cy5maW5kKGZ1bmN0aW9uKGkpe3JldHVybiBpLl91aWQ9PT1pbnB1dC5fdWlkO30pO2lmKCFmb3VuZClyZXR1cm47dmFyIHVud2F0Y2g9dGhpcy53YXRjaGVycy5maW5kKGZ1bmN0aW9uKGkpe3JldHVybiBpLl91aWQ9PT1mb3VuZC5fdWlkO30pO2lmKHVud2F0Y2gpe3Vud2F0Y2gudmFsaWQoKTt1bndhdGNoLnNob3VsZFZhbGlkYXRlKCk7fXRoaXMud2F0Y2hlcnM9dGhpcy53YXRjaGVycy5maWx0ZXIoZnVuY3Rpb24oaSl7cmV0dXJuIGkuX3VpZCE9PWZvdW5kLl91aWQ7fSk7dGhpcy5pbnB1dHM9dGhpcy5pbnB1dHMuZmlsdGVyKGZ1bmN0aW9uKGkpe3JldHVybiBpLl91aWQhPT1mb3VuZC5fdWlkO30pO3RoaXMuJGRlbGV0ZSh0aGlzLmVycm9yQmFnLGZvdW5kLl91aWQpO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIGgoJ2Zvcm0nLHtzdGF0aWNDbGFzczondi1mb3JtJyxhdHRyczpfX2Fzc2lnbih7bm92YWxpZGF0ZTp0cnVlfSx0aGlzLmF0dHJzJCksb246e3N1Ym1pdDpmdW5jdGlvbiBzdWJtaXQoZSl7cmV0dXJuIF90aGlzLiRlbWl0KCdzdWJtaXQnLGUpO319fSx0aGlzLiRzbG90cy5kZWZhdWx0KTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkZvcm0vaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WRm9ybS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZGb3JtLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZGb3JtSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRm9ybV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkZvcm0gKi8iLi9zcmMvY29tcG9uZW50cy9WRm9ybS9WRm9ybS50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZGb3JtIixmdW5jdGlvbigpe3JldHVybiBfVkZvcm1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZGb3JtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WQ29sLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WQ29sLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZHcmlkVkNvbFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZHcmlkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZHcmlkLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WR3JpZC5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZHcmlkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZHcmlkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWVyZ2VEYXRhX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9tZXJnZURhdGEgKi8iLi9zcmMvdXRpbC9tZXJnZURhdGEudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gbm8geHMKdmFyIGJyZWFrcG9pbnRzPVsnc20nLCdtZCcsJ2xnJywneGwnXTt2YXIgYnJlYWtwb2ludFByb3BzPWZ1bmN0aW9uKCl7cmV0dXJuIGJyZWFrcG9pbnRzLnJlZHVjZShmdW5jdGlvbihwcm9wcyx2YWwpe3Byb3BzW3ZhbF09e3R5cGU6W0Jvb2xlYW4sU3RyaW5nLE51bWJlcl0sZGVmYXVsdDpmYWxzZX07cmV0dXJuIHByb3BzO30se30pO30oKTt2YXIgb2Zmc2V0UHJvcHM9ZnVuY3Rpb24oKXtyZXR1cm4gYnJlYWtwb2ludHMucmVkdWNlKGZ1bmN0aW9uKHByb3BzLHZhbCl7cHJvcHNbJ29mZnNldCcrT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1sidXBwZXJGaXJzdCJdKSh2YWwpXT17dHlwZTpbU3RyaW5nLE51bWJlcl0sZGVmYXVsdDpudWxsfTtyZXR1cm4gcHJvcHM7fSx7fSk7fSgpO3ZhciBvcmRlclByb3BzPWZ1bmN0aW9uKCl7cmV0dXJuIGJyZWFrcG9pbnRzLnJlZHVjZShmdW5jdGlvbihwcm9wcyx2YWwpe3Byb3BzWydvcmRlcicrT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1sidXBwZXJGaXJzdCJdKSh2YWwpXT17dHlwZTpbU3RyaW5nLE51bWJlcl0sZGVmYXVsdDpudWxsfTtyZXR1cm4gcHJvcHM7fSx7fSk7fSgpO3ZhciBwcm9wTWFwPXtjb2w6T2JqZWN0LmtleXMoYnJlYWtwb2ludFByb3BzKSxvZmZzZXQ6T2JqZWN0LmtleXMob2Zmc2V0UHJvcHMpLG9yZGVyOk9iamVjdC5rZXlzKG9yZGVyUHJvcHMpfTtmdW5jdGlvbiBicmVha3BvaW50Q2xhc3ModHlwZSxwcm9wLHZhbCl7dmFyIGNsYXNzTmFtZT10eXBlO2lmKHZhbD09bnVsbHx8dmFsPT09ZmFsc2Upe3JldHVybiB1bmRlZmluZWQ7fWlmKHByb3Ape3ZhciBicmVha3BvaW50PXByb3AucmVwbGFjZSh0eXBlLCcnKTtjbGFzc05hbWUrPSItIiticmVha3BvaW50O30vLyBIYW5kbGluZyB0aGUgYm9vbGVhbiBzdHlsZSBwcm9wIHdoZW4gYWNjZXB0aW5nIFtCb29sZWFuLCBTdHJpbmcsIE51bWJlcl0KLy8gbWVhbnMgVnVlIHdpbGwgbm90IGNvbnZlcnQgPHYtY29sIHNtPjwvdi1jb2w+IHRvIHNtOiB0cnVlIGZvciB1cy4KLy8gU2luY2UgdGhlIGRlZmF1bHQgaXMgZmFsc2UsIGFuIGVtcHR5IHN0cmluZyBpbmRpY2F0ZXMgdGhlIHByb3AncyBwcmVzZW5jZS4KaWYodHlwZT09PSdjb2wnJiYodmFsPT09Jyd8fHZhbD09PXRydWUpKXsvLyAuY29sLW1kCnJldHVybiBjbGFzc05hbWUudG9Mb3dlckNhc2UoKTt9Ly8gLm9yZGVyLW1kLTYKY2xhc3NOYW1lKz0iLSIrdmFsO3JldHVybiBjbGFzc05hbWUudG9Mb3dlckNhc2UoKTt9dmFyIGNhY2hlPW5ldyBNYXAoKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQuYS5leHRlbmQoe25hbWU6J3YtY29sJyxmdW5jdGlvbmFsOnRydWUscHJvcHM6X19hc3NpZ24oe2NvbHM6e3R5cGU6W0Jvb2xlYW4sU3RyaW5nLE51bWJlcl0sZGVmYXVsdDpmYWxzZX19LGJyZWFrcG9pbnRQcm9wcyx7b2Zmc2V0Ont0eXBlOltTdHJpbmcsTnVtYmVyXSxkZWZhdWx0Om51bGx9fSxvZmZzZXRQcm9wcyx7b3JkZXI6e3R5cGU6W1N0cmluZyxOdW1iZXJdLGRlZmF1bHQ6bnVsbH19LG9yZGVyUHJvcHMse2FsaWduU2VsZjp7dHlwZTpTdHJpbmcsZGVmYXVsdDpudWxsLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3Ioc3RyKXtyZXR1cm5bJ2F1dG8nLCdzdGFydCcsJ2VuZCcsJ2NlbnRlcicsJ2Jhc2VsaW5lJywnc3RyZXRjaCddLmluY2x1ZGVzKHN0cik7fX0sanVzdGlmeVNlbGY6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6bnVsbCx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHN0cil7cmV0dXJuWydhdXRvJywnc3RhcnQnLCdlbmQnLCdjZW50ZXInLCdiYXNlbGluZScsJ3N0cmV0Y2gnXS5pbmNsdWRlcyhzdHIpO319LHRhZzp7dHlwZTpTdHJpbmcsZGVmYXVsdDonZGl2J319KSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgsX2Epe3ZhciBfYjt2YXIgcHJvcHM9X2EucHJvcHMsZGF0YT1fYS5kYXRhLGNoaWxkcmVuPV9hLmNoaWxkcmVuLHBhcmVudD1fYS5wYXJlbnQ7Ly8gU3VwZXItZmFzdCBtZW1vaXphdGlvbiBiYXNlZCBvbiBwcm9wcywgNXggZmFzdGVyIHRoYW4gSlNPTi5zdHJpbmdpZnkKdmFyIGNhY2hlS2V5PScnO2Zvcih2YXIgcHJvcCBpbiBwcm9wcyl7Y2FjaGVLZXkrPVN0cmluZyhwcm9wc1twcm9wXSk7fXZhciBjbGFzc0xpc3Q9Y2FjaGUuZ2V0KGNhY2hlS2V5KTtpZighY2xhc3NMaXN0KXtjbGFzc0xpc3Q9W107Ly8gTG9vcCB0aHJvdWdoIGBjb2xgLCBgb2Zmc2V0YCwgYG9yZGVyYCBicmVha3BvaW50IHByb3BzCnZhciB0eXBlXzE7Zm9yKHR5cGVfMSBpbiBwcm9wTWFwKXtwcm9wTWFwW3R5cGVfMV0uZm9yRWFjaChmdW5jdGlvbihwcm9wKXt2YXIgdmFsdWU9cHJvcHNbcHJvcF07dmFyIGNsYXNzTmFtZT1icmVha3BvaW50Q2xhc3ModHlwZV8xLHByb3AsdmFsdWUpO2lmKGNsYXNzTmFtZSljbGFzc0xpc3QucHVzaChjbGFzc05hbWUpO30pO312YXIgaGFzQ29sQ2xhc3Nlcz1jbGFzc0xpc3Quc29tZShmdW5jdGlvbihjbGFzc05hbWUpe3JldHVybiBjbGFzc05hbWUuc3RhcnRzV2l0aCgnY29sLScpO30pO2NsYXNzTGlzdC5wdXNoKChfYj17Ly8gRGVmYXVsdCB0byAuY29sIGlmIG5vIG90aGVyIGNvbC17YnB9LSogY2xhc3NlcyBnZW5lcmF0ZWQgbm9yIGBjb2xzYCBzcGVjaWZpZWQuCmNvbDohaGFzQ29sQ2xhc3Nlc3x8IXByb3BzLmNvbHN9LF9iWyJjb2wtIitwcm9wcy5jb2xzXT1wcm9wcy5jb2xzLF9iWyJvZmZzZXQtIitwcm9wcy5vZmZzZXRdPXByb3BzLm9mZnNldCxfYlsib3JkZXItIitwcm9wcy5vcmRlcl09cHJvcHMub3JkZXIsX2JbImFsaWduLXNlbGYtIitwcm9wcy5hbGlnblNlbGZdPXByb3BzLmFsaWduU2VsZixfYlsianVzdGlmeS1zZWxmLSIrcHJvcHMuanVzdGlmeVNlbGZdPXByb3BzLmp1c3RpZnlTZWxmLF9iKSk7Y2FjaGUuc2V0KGNhY2hlS2V5LGNsYXNzTGlzdCk7fXJldHVybiBoKHByb3BzLnRhZyxPYmplY3QoX3V0aWxfbWVyZ2VEYXRhX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoZGF0YSx7Y2xhc3M6Y2xhc3NMaXN0fSksY2hpbGRyZW4pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WQ29udGFpbmVyLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WQ29udGFpbmVyLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZHcmlkVkNvbnRhaW5lclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2dyaWRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vX2dyaWQuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZHcmlkL19ncmlkLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZ3JpZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9ncmlkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZHcmlkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZHcmlkLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WR3JpZC5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZHcmlkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZHcmlkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2dyaWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dyaWQgKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9ncmlkLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWVyZ2VEYXRhX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9tZXJnZURhdGEgKi8iLi9zcmMvdXRpbC9tZXJnZURhdGEudHMiKTsvKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfZ3JpZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pKCdjb250YWluZXInKS5leHRlbmQoe25hbWU6J3YtY29udGFpbmVyJyxmdW5jdGlvbmFsOnRydWUscHJvcHM6e2lkOlN0cmluZyx0YWc6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2Rpdid9LGZsdWlkOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX19LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCxfYSl7dmFyIHByb3BzPV9hLnByb3BzLGRhdGE9X2EuZGF0YSxjaGlsZHJlbj1fYS5jaGlsZHJlbjt2YXIgY2xhc3Nlczt2YXIgYXR0cnM9ZGF0YS5hdHRycztpZihhdHRycyl7Ly8gcmVzZXQgYXR0cnMgdG8gZXh0cmFjdCB1dGlsaXR5IGNsYXNlcyBsaWtlIHBhLTMKZGF0YS5hdHRycz17fTtjbGFzc2VzPU9iamVjdC5rZXlzKGF0dHJzKS5maWx0ZXIoZnVuY3Rpb24oa2V5KXsvLyBUT0RPOiBSZW1vdmUgb25jZSByZXNvbHZlZAovLyBodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlL2lzc3Vlcy83ODQxCmlmKGtleT09PSdzbG90JylyZXR1cm4gZmFsc2U7dmFyIHZhbHVlPWF0dHJzW2tleV07Ly8gYWRkIGJhY2sgZGF0YSBhdHRyaWJ1dGVzIGxpa2UgZGF0YS10ZXN0PSJmb28iIGJ1dCBkbyBub3QKLy8gYWRkIHRoZW0gYXMgY2xhc3NlcwppZihrZXkuc3RhcnRzV2l0aCgnZGF0YS0nKSl7ZGF0YS5hdHRyc1trZXldPXZhbHVlO3JldHVybiBmYWxzZTt9cmV0dXJuIHZhbHVlfHx0eXBlb2YgdmFsdWU9PT0nc3RyaW5nJzt9KTt9aWYocHJvcHMuaWQpe2RhdGEuZG9tUHJvcHM9ZGF0YS5kb21Qcm9wc3x8e307ZGF0YS5kb21Qcm9wcy5pZD1wcm9wcy5pZDt9cmV0dXJuIGgocHJvcHMudGFnLE9iamVjdChfdXRpbF9tZXJnZURhdGFfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKShkYXRhLHtzdGF0aWNDbGFzczonY29udGFpbmVyJyxjbGFzczpBcnJheSh7J2NvbnRhaW5lci0tZmx1aWQnOnByb3BzLmZsdWlkfSkuY29uY2F0KGNsYXNzZXN8fFtdKX0pLGNoaWxkcmVuKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkdyaWQvVkZsZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WRmxleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkdyaWRWRmxleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2dyaWRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vX2dyaWQuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZHcmlkL19ncmlkLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZ3JpZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9ncmlkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2dyaWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dyaWQgKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9ncmlkLnRzIik7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX2dyaWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKSgnZmxleCcpOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZHcmlkL1ZHcmlkLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZHcmlkL1ZHcmlkLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZHcmlkVkdyaWRTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WTGF5b3V0LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WTGF5b3V0LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZHcmlkVkxheW91dFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2dyaWRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vX2dyaWQuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZHcmlkL19ncmlkLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZ3JpZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9ncmlkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2dyaWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dyaWQgKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9ncmlkLnRzIik7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX2dyaWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKSgnbGF5b3V0Jyk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkdyaWQvVlJvdy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkdyaWQvVlJvdy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWR3JpZFZSb3dUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WR3JpZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WR3JpZC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkdyaWQvVkdyaWQuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WR3JpZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WR3JpZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21lcmdlRGF0YV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWVyZ2VEYXRhICovIi4vc3JjL3V0aWwvbWVyZ2VEYXRhLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9O3ZhciBfX3JlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19yZWFkfHxmdW5jdGlvbihvLG4pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl07aWYoIW0pcmV0dXJuIG87dmFyIGk9bS5jYWxsKG8pLHIsYXI9W10sZTt0cnl7d2hpbGUoKG49PT12b2lkIDB8fG4tLT4wKSYmIShyPWkubmV4dCgpKS5kb25lKXthci5wdXNoKHIudmFsdWUpO319Y2F0Y2goZXJyb3Ipe2U9e2Vycm9yOmVycm9yfTt9ZmluYWxseXt0cnl7aWYociYmIXIuZG9uZSYmKG09aVsicmV0dXJuIl0pKW0uY2FsbChpKTt9ZmluYWxseXtpZihlKXRocm93IGUuZXJyb3I7fX1yZXR1cm4gYXI7fTt2YXIgX19zcHJlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19zcHJlYWR8fGZ1bmN0aW9uKCl7Zm9yKHZhciBhcj1bXSxpPTA7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7YXI9YXIuY29uY2F0KF9fcmVhZChhcmd1bWVudHNbaV0pKTt9cmV0dXJuIGFyO307Ly8gbm8geHMKdmFyIGJyZWFrcG9pbnRzPVsnc20nLCdtZCcsJ2xnJywneGwnXTt2YXIgQUxJR05NRU5UPVsnc3RhcnQnLCdlbmQnLCdjZW50ZXInXTtmdW5jdGlvbiBtYWtlUHJvcHMocHJlZml4LGRlZil7cmV0dXJuIGJyZWFrcG9pbnRzLnJlZHVjZShmdW5jdGlvbihwcm9wcyx2YWwpe3Byb3BzW3ByZWZpeCtPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJ1cHBlckZpcnN0Il0pKHZhbCldPWRlZigpO3JldHVybiBwcm9wczt9LHt9KTt9dmFyIGFsaWduVmFsaWRhdG9yPWZ1bmN0aW9uIGFsaWduVmFsaWRhdG9yKHN0cil7cmV0dXJuIF9fc3ByZWFkKEFMSUdOTUVOVCxbJ2Jhc2VsaW5lJywnc3RyZXRjaCddKS5pbmNsdWRlcyhzdHIpO307dmFyIGFsaWduUHJvcHM9bWFrZVByb3BzKCdhbGlnbicsZnVuY3Rpb24oKXtyZXR1cm57dHlwZTpTdHJpbmcsZGVmYXVsdDpudWxsLHZhbGlkYXRvcjphbGlnblZhbGlkYXRvcn07fSk7dmFyIGp1c3RpZnlWYWxpZGF0b3I9ZnVuY3Rpb24ganVzdGlmeVZhbGlkYXRvcihzdHIpe3JldHVybiBfX3NwcmVhZChBTElHTk1FTlQsWydzcGFjZS1iZXR3ZWVuJywnc3BhY2UtYXJvdW5kJ10pLmluY2x1ZGVzKHN0cik7fTt2YXIganVzdGlmeVByb3BzPW1ha2VQcm9wcygnanVzdGlmeScsZnVuY3Rpb24oKXtyZXR1cm57dHlwZTpTdHJpbmcsZGVmYXVsdDpudWxsLHZhbGlkYXRvcjpqdXN0aWZ5VmFsaWRhdG9yfTt9KTt2YXIgYWxpZ25Db250ZW50VmFsaWRhdG9yPWZ1bmN0aW9uIGFsaWduQ29udGVudFZhbGlkYXRvcihzdHIpe3JldHVybiBfX3NwcmVhZChBTElHTk1FTlQsWydzcGFjZS1iZXR3ZWVuJywnc3BhY2UtYXJvdW5kJywnc3RyZXRjaCddKS5pbmNsdWRlcyhzdHIpO307dmFyIGFsaWduQ29udGVudFByb3BzPW1ha2VQcm9wcygnYWxpZ25Db250ZW50JyxmdW5jdGlvbigpe3JldHVybnt0eXBlOlN0cmluZyxkZWZhdWx0Om51bGwsdmFsaWRhdG9yOmFsaWduQ29udGVudFZhbGlkYXRvcn07fSk7dmFyIHByb3BNYXA9e2FsaWduOk9iamVjdC5rZXlzKGFsaWduUHJvcHMpLGp1c3RpZnk6T2JqZWN0LmtleXMoanVzdGlmeVByb3BzKSxhbGlnbkNvbnRlbnQ6T2JqZWN0LmtleXMoYWxpZ25Db250ZW50UHJvcHMpfTt2YXIgY2xhc3NNYXA9e2FsaWduOidhbGlnbicsanVzdGlmeTonanVzdGlmeScsYWxpZ25Db250ZW50OidhbGlnbi1jb250ZW50J307ZnVuY3Rpb24gYnJlYWtwb2ludENsYXNzKHR5cGUscHJvcCx2YWwpe3ZhciBjbGFzc05hbWU9Y2xhc3NNYXBbdHlwZV07aWYodmFsPT1udWxsKXtyZXR1cm4gdW5kZWZpbmVkO31pZihwcm9wKXsvLyBhbGlnblNtIC0+IFNtCnZhciBicmVha3BvaW50PXByb3AucmVwbGFjZSh0eXBlLCcnKTtjbGFzc05hbWUrPSItIiticmVha3BvaW50O30vLyAuYWxpZ24taXRlbXMtc20tY2VudGVyCmNsYXNzTmFtZSs9Ii0iK3ZhbDtyZXR1cm4gY2xhc3NOYW1lLnRvTG93ZXJDYXNlKCk7fXZhciBjYWNoZT1uZXcgTWFwKCk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOid2LXJvdycsZnVuY3Rpb25hbDp0cnVlLHByb3BzOl9fYXNzaWduKHt0YWc6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2Rpdid9LGRlbnNlOkJvb2xlYW4sbm9HdXR0ZXJzOkJvb2xlYW4sYWxpZ246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6bnVsbCx2YWxpZGF0b3I6YWxpZ25WYWxpZGF0b3J9fSxhbGlnblByb3BzLHtqdXN0aWZ5Ont0eXBlOlN0cmluZyxkZWZhdWx0Om51bGwsdmFsaWRhdG9yOmp1c3RpZnlWYWxpZGF0b3J9fSxqdXN0aWZ5UHJvcHMse2FsaWduQ29udGVudDp7dHlwZTpTdHJpbmcsZGVmYXVsdDpudWxsLHZhbGlkYXRvcjphbGlnbkNvbnRlbnRWYWxpZGF0b3J9fSxhbGlnbkNvbnRlbnRQcm9wcykscmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoLF9hKXt2YXIgX2I7dmFyIHByb3BzPV9hLnByb3BzLGRhdGE9X2EuZGF0YSxjaGlsZHJlbj1fYS5jaGlsZHJlbjsvLyBTdXBlci1mYXN0IG1lbW9pemF0aW9uIGJhc2VkIG9uIHByb3BzLCA1eCBmYXN0ZXIgdGhhbiBKU09OLnN0cmluZ2lmeQp2YXIgY2FjaGVLZXk9Jyc7Zm9yKHZhciBwcm9wIGluIHByb3BzKXtjYWNoZUtleSs9U3RyaW5nKHByb3BzW3Byb3BdKTt9dmFyIGNsYXNzTGlzdD1jYWNoZS5nZXQoY2FjaGVLZXkpO2lmKCFjbGFzc0xpc3Qpe2NsYXNzTGlzdD1bXTsvLyBMb29wIHRocm91Z2ggYGFsaWduYCwgYGp1c3RpZnlgLCBgYWxpZ25Db250ZW50YCBicmVha3BvaW50IHByb3BzCnZhciB0eXBlXzE7Zm9yKHR5cGVfMSBpbiBwcm9wTWFwKXtwcm9wTWFwW3R5cGVfMV0uZm9yRWFjaChmdW5jdGlvbihwcm9wKXt2YXIgdmFsdWU9cHJvcHNbcHJvcF07dmFyIGNsYXNzTmFtZT1icmVha3BvaW50Q2xhc3ModHlwZV8xLHByb3AsdmFsdWUpO2lmKGNsYXNzTmFtZSljbGFzc0xpc3QucHVzaChjbGFzc05hbWUpO30pO31jbGFzc0xpc3QucHVzaCgoX2I9eyduby1ndXR0ZXJzJzpwcm9wcy5ub0d1dHRlcnMsJ3Jvdy0tZGVuc2UnOnByb3BzLmRlbnNlfSxfYlsiYWxpZ24tIitwcm9wcy5hbGlnbl09cHJvcHMuYWxpZ24sX2JbImp1c3RpZnktIitwcm9wcy5qdXN0aWZ5XT1wcm9wcy5qdXN0aWZ5LF9iWyJhbGlnbi1jb250ZW50LSIrcHJvcHMuYWxpZ25Db250ZW50XT1wcm9wcy5hbGlnbkNvbnRlbnQsX2IpKTtjYWNoZS5zZXQoY2FjaGVLZXksY2xhc3NMaXN0KTt9cmV0dXJuIGgocHJvcHMudGFnLE9iamVjdChfdXRpbF9tZXJnZURhdGFfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKShkYXRhLHtzdGF0aWNDbGFzczoncm93JyxjbGFzczpjbGFzc0xpc3R9KSxjaGlsZHJlbik7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZHcmlkL1ZTcGFjZXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZHcmlkL1ZTcGFjZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkdyaWRWU3BhY2VyVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZ3JpZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9fZ3JpZC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkdyaWQvX2dyaWQuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9ncmlkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX2dyaWRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siY3JlYXRlU2ltcGxlRnVuY3Rpb25hbCJdKSgnc3BhY2VyJywnZGl2Jywndi1zcGFjZXInKTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9fZ3JpZC5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WR3JpZC9fZ3JpZC5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWR3JpZF9ncmlkU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkdyaWQvZ3JpZC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkdyaWQvZ3JpZC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWR3JpZEdyaWRUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJkZWZhdWx0IixmdW5jdGlvbigpe3JldHVybiBWR3JpZDt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISB2dWUgKi8idnVlIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvLyBUeXBlcwpmdW5jdGlvbiBWR3JpZChuYW1lKXsvKiBAdnVlL2NvbXBvbmVudCAqL3JldHVybiB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOiJ2LSIrbmFtZSxmdW5jdGlvbmFsOnRydWUscHJvcHM6e2lkOlN0cmluZyx0YWc6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2Rpdid9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgsX2Epe3ZhciBwcm9wcz1fYS5wcm9wcyxkYXRhPV9hLmRhdGEsY2hpbGRyZW49X2EuY2hpbGRyZW47ZGF0YS5zdGF0aWNDbGFzcz0obmFtZSsiICIrKGRhdGEuc3RhdGljQ2xhc3N8fCcnKSkudHJpbSgpO3ZhciBhdHRycz1kYXRhLmF0dHJzO2lmKGF0dHJzKXsvLyByZXNldCBhdHRycyB0byBleHRyYWN0IHV0aWxpdHkgY2xhc2VzIGxpa2UgcGEtMwpkYXRhLmF0dHJzPXt9O3ZhciBjbGFzc2VzPU9iamVjdC5rZXlzKGF0dHJzKS5maWx0ZXIoZnVuY3Rpb24oa2V5KXsvLyBUT0RPOiBSZW1vdmUgb25jZSByZXNvbHZlZAovLyBodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlL2lzc3Vlcy83ODQxCmlmKGtleT09PSdzbG90JylyZXR1cm4gZmFsc2U7dmFyIHZhbHVlPWF0dHJzW2tleV07Ly8gYWRkIGJhY2sgZGF0YSBhdHRyaWJ1dGVzIGxpa2UgZGF0YS10ZXN0PSJmb28iIGJ1dCBkbyBub3QKLy8gYWRkIHRoZW0gYXMgY2xhc3NlcwppZihrZXkuc3RhcnRzV2l0aCgnZGF0YS0nKSl7ZGF0YS5hdHRyc1trZXldPXZhbHVlO3JldHVybiBmYWxzZTt9cmV0dXJuIHZhbHVlfHx0eXBlb2YgdmFsdWU9PT0nc3RyaW5nJzt9KTtpZihjbGFzc2VzLmxlbmd0aClkYXRhLnN0YXRpY0NsYXNzKz0iICIrY2xhc3Nlcy5qb2luKCcgJyk7fWlmKHByb3BzLmlkKXtkYXRhLmRvbVByb3BzPWRhdGEuZG9tUHJvcHN8fHt9O2RhdGEuZG9tUHJvcHMuaWQ9cHJvcHMuaWQ7fXJldHVybiBoKHByb3BzLnRhZyxkYXRhLGNoaWxkcmVuKTt9fSk7fS8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZHcmlkL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkdyaWQvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWQ29udGFpbmVyLCBWQ29sLCBWUm93LCBWU3BhY2VyLCBWTGF5b3V0LCBWRmxleCwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWR3JpZEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNvbnRhaW5lcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNvbnRhaW5lciAqLyIuL3NyYy9jb21wb25lbnRzL1ZHcmlkL1ZDb250YWluZXIudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ29udGFpbmVyIixmdW5jdGlvbigpe3JldHVybiBfVkNvbnRhaW5lcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDb2xfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDb2wgKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WQ29sLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNvbCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDb2xfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WUm93X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WUm93ICovIi4vc3JjL2NvbXBvbmVudHMvVkdyaWQvVlJvdy50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZSb3ciLGZ1bmN0aW9uKCl7cmV0dXJuIF9WUm93X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNwYWNlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlNwYWNlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZHcmlkL1ZTcGFjZXIudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWU3BhY2VyIixmdW5jdGlvbigpe3JldHVybiBfVlNwYWNlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZMYXlvdXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZMYXlvdXQgKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WTGF5b3V0LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkxheW91dCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZMYXlvdXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRmxleF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkZsZXggKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9WRmxleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZGbGV4IixmdW5jdGlvbigpe3JldHVybiBfVkZsZXhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09eyRfdnVldGlmeV9zdWJjb21wb25lbnRzOntWQ29udGFpbmVyOl9WQ29udGFpbmVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSxWQ29sOl9WQ29sX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxWUm93Ol9WUm93X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxWU3BhY2VyOl9WU3BhY2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSxWTGF5b3V0Ol9WTGF5b3V0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSxWRmxleDpfVkZsZXhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdfX07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkhvdmVyL1ZIb3Zlci50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkhvdmVyL1ZIb3Zlci50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWSG92ZXJWSG92ZXJUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfZGVsYXlhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2RlbGF5YWJsZSAqLyIuL3NyYy9taXhpbnMvZGVsYXlhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190b2dnbGVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RvZ2dsZWFibGUgKi8iLi9zcmMvbWl4aW5zL3RvZ2dsZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7Ly8gTWl4aW5zCi8vIFV0aWxpdGllcwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKShfbWl4aW5zX2RlbGF5YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0sX21peGluc190b2dnbGVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS8qIEB2dWUvY29tcG9uZW50ICovKS5leHRlbmQoe25hbWU6J3YtaG92ZXInLHByb3BzOntkaXNhYmxlZDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LHZhbHVlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp1bmRlZmluZWR9fSxtZXRob2RzOntvbk1vdXNlRW50ZXI6ZnVuY3Rpb24gb25Nb3VzZUVudGVyKCl7dGhpcy5ydW5EZWxheSgnb3BlbicpO30sb25Nb3VzZUxlYXZlOmZ1bmN0aW9uIG9uTW91c2VMZWF2ZSgpe3RoaXMucnVuRGVsYXkoJ2Nsb3NlJyk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcigpe2lmKCF0aGlzLiRzY29wZWRTbG90cy5kZWZhdWx0JiZ0aGlzLnZhbHVlPT09dW5kZWZpbmVkKXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJjb25zb2xlV2FybiJdKSgndi1ob3ZlciBpcyBtaXNzaW5nIGEgZGVmYXVsdCBzY29wZWRTbG90IG9yIGJvdW5kIHZhbHVlJyx0aGlzKTtyZXR1cm4gbnVsbDt9dmFyIGVsZW1lbnQ7LyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9pZih0aGlzLiRzY29wZWRTbG90cy5kZWZhdWx0KXtlbGVtZW50PXRoaXMuJHNjb3BlZFNsb3RzLmRlZmF1bHQoe2hvdmVyOnRoaXMuaXNBY3RpdmV9KTt9aWYoQXJyYXkuaXNBcnJheShlbGVtZW50KSYmZWxlbWVudC5sZW5ndGg9PT0xKXtlbGVtZW50PWVsZW1lbnRbMF07fWlmKCFlbGVtZW50fHxBcnJheS5pc0FycmF5KGVsZW1lbnQpfHwhZWxlbWVudC50YWcpe09iamVjdChfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImNvbnNvbGVXYXJuIl0pKCd2LWhvdmVyIHNob3VsZCBvbmx5IGNvbnRhaW4gYSBzaW5nbGUgZWxlbWVudCcsdGhpcyk7cmV0dXJuIGVsZW1lbnQ7fWlmKCF0aGlzLmRpc2FibGVkKXtlbGVtZW50LmRhdGE9ZWxlbWVudC5kYXRhfHx7fTt0aGlzLl9nKGVsZW1lbnQuZGF0YSx7bW91c2VlbnRlcjp0aGlzLm9uTW91c2VFbnRlcixtb3VzZWxlYXZlOnRoaXMub25Nb3VzZUxlYXZlfSk7fXJldHVybiBlbGVtZW50O319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WSG92ZXIvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkhvdmVyL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZIb3ZlciwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWSG92ZXJJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZIb3Zlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkhvdmVyICovIi4vc3JjL2NvbXBvbmVudHMvVkhvdmVyL1ZIb3Zlci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZIb3ZlciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZIb3Zlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVkhvdmVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WSWNvbi9WSWNvbi5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WSWNvbi9WSWNvbi5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWSWNvblZJY29uU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkljb24vVkljb24udHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WSWNvbi9WSWNvbi50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkljb25WSWNvblRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJY29uX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZJY29uLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WSWNvbi9WSWNvbi5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJY29uX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZJY29uX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19iaW5kc19hdHRyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9iaW5kcy1hdHRycyAqLyIuL3NyYy9taXhpbnMvYmluZHMtYXR0cnMvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9jb2xvcmFibGUgKi8iLi9zcmMvbWl4aW5zL2NvbG9yYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfc2l6ZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvc2l6ZWFibGUgKi8iLi9zcmMvbWl4aW5zL3NpemVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBNaXhpbnMKLy8gVXRpbAovLyBUeXBlcwp2YXIgU0laRV9NQVA7KGZ1bmN0aW9uKFNJWkVfTUFQKXtTSVpFX01BUFsieFNtYWxsIl09IjEycHgiO1NJWkVfTUFQWyJzbWFsbCJdPSIxNnB4IjtTSVpFX01BUFsiZGVmYXVsdCJdPSIyNHB4IjtTSVpFX01BUFsibWVkaXVtIl09IjI4cHgiO1NJWkVfTUFQWyJsYXJnZSJdPSIzNnB4IjtTSVpFX01BUFsieExhcmdlIl09IjQwcHgiO30pKFNJWkVfTUFQfHwoU0laRV9NQVA9e30pKTtmdW5jdGlvbiBpc0ZvbnRBd2Vzb21lNShpY29uVHlwZSl7cmV0dXJuWydmYXMnLCdmYXInLCdmYWwnLCdmYWInXS5zb21lKGZ1bmN0aW9uKHZhbCl7cmV0dXJuIGljb25UeXBlLmluY2x1ZGVzKHZhbCk7fSk7fWZ1bmN0aW9uIGlzU3ZnUGF0aChpY29uKXtyZXR1cm4gL15bbXpsaHZjc3F0YV1ccypbLSsuMC05XVtebWxodnpjc3F0YV0rL2kudGVzdChpY29uKSYmL1tcZHpdJC9pLnRlc3QoaWNvbikmJmljb24ubGVuZ3RoPjQ7fXZhciBWSWNvbj1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImRlZmF1bHQiXSkoX21peGluc19iaW5kc19hdHRyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLF9taXhpbnNfc2l6ZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXS8qIEB2dWUvY29tcG9uZW50ICovKS5leHRlbmQoe25hbWU6J3YtaWNvbicscHJvcHM6e2RlbnNlOkJvb2xlYW4sZGlzYWJsZWQ6Qm9vbGVhbixsZWZ0OkJvb2xlYW4scmlnaHQ6Qm9vbGVhbixzaXplOltOdW1iZXIsU3RyaW5nXSx0YWc6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOmZhbHNlLGRlZmF1bHQ6J2knfX0sY29tcHV0ZWQ6e21lZGl1bTpmdW5jdGlvbiBtZWRpdW0oKXtyZXR1cm4gZmFsc2U7fX0sbWV0aG9kczp7Z2V0SWNvbjpmdW5jdGlvbiBnZXRJY29uKCl7dmFyIGljb25OYW1lPScnO2lmKHRoaXMuJHNsb3RzLmRlZmF1bHQpaWNvbk5hbWU9dGhpcy4kc2xvdHMuZGVmYXVsdFswXS50ZXh0LnRyaW0oKTtyZXR1cm4gT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1sicmVtYXBJbnRlcm5hbEljb24iXSkodGhpcyxpY29uTmFtZSk7fSxnZXRTaXplOmZ1bmN0aW9uIGdldFNpemUoKXt2YXIgc2l6ZXM9e3hTbWFsbDp0aGlzLnhTbWFsbCxzbWFsbDp0aGlzLnNtYWxsLG1lZGl1bTp0aGlzLm1lZGl1bSxsYXJnZTp0aGlzLmxhcmdlLHhMYXJnZTp0aGlzLnhMYXJnZX07dmFyIGV4cGxpY2l0U2l6ZT1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJrZXlzIl0pKHNpemVzKS5maW5kKGZ1bmN0aW9uKGtleSl7cmV0dXJuIHNpemVzW2tleV07fSk7cmV0dXJuIGV4cGxpY2l0U2l6ZSYmU0laRV9NQVBbZXhwbGljaXRTaXplXXx8T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLnNpemUpO30sLy8gQ29tcG9uZW50IGRhdGEgZm9yIGJvdGggZm9udCBhbmQgc3ZnIGljb24uCmdldERlZmF1bHREYXRhOmZ1bmN0aW9uIGdldERlZmF1bHREYXRhKCl7dmFyIGhhc0NsaWNrTGlzdGVuZXI9Qm9vbGVhbih0aGlzLmxpc3RlbmVycyQuY2xpY2t8fHRoaXMubGlzdGVuZXJzJFsnIWNsaWNrJ10pO3ZhciBkYXRhPXtzdGF0aWNDbGFzczondi1pY29uIG5vdHJhbnNsYXRlJyxjbGFzczp7J3YtaWNvbi0tZGlzYWJsZWQnOnRoaXMuZGlzYWJsZWQsJ3YtaWNvbi0tbGVmdCc6dGhpcy5sZWZ0LCd2LWljb24tLWxpbmsnOmhhc0NsaWNrTGlzdGVuZXIsJ3YtaWNvbi0tcmlnaHQnOnRoaXMucmlnaHQsJ3YtaWNvbi0tZGVuc2UnOnRoaXMuZGVuc2V9LGF0dHJzOl9fYXNzaWduKHsnYXJpYS1oaWRkZW4nOiFoYXNDbGlja0xpc3RlbmVyLHJvbGU6aGFzQ2xpY2tMaXN0ZW5lcj8nYnV0dG9uJzpudWxsfSx0aGlzLmF0dHJzJCksb246dGhpcy5saXN0ZW5lcnMkfTtyZXR1cm4gZGF0YTt9LGFwcGx5Q29sb3JzOmZ1bmN0aW9uIGFwcGx5Q29sb3JzKGRhdGEpe2RhdGEuY2xhc3M9X19hc3NpZ24oe30sZGF0YS5jbGFzcyx0aGlzLnRoZW1lQ2xhc3Nlcyk7dGhpcy5zZXRUZXh0Q29sb3IodGhpcy5jb2xvcixkYXRhKTt9LHJlbmRlckZvbnRJY29uOmZ1bmN0aW9uIHJlbmRlckZvbnRJY29uKGljb24saCl7dmFyIG5ld0NoaWxkcmVuPVtdO3ZhciBkYXRhPXRoaXMuZ2V0RGVmYXVsdERhdGEoKTt2YXIgaWNvblR5cGU9J21hdGVyaWFsLWljb25zJzsvLyBNYXRlcmlhbCBJY29uIGRlbGltaXRlciBpcyBfCi8vIGh0dHBzOi8vbWF0ZXJpYWwuaW8vaWNvbnMvCnZhciBkZWxpbWl0ZXJJbmRleD1pY29uLmluZGV4T2YoJy0nKTt2YXIgaXNNYXRlcmlhbEljb249ZGVsaW1pdGVySW5kZXg8PS0xO2lmKGlzTWF0ZXJpYWxJY29uKXsvLyBNYXRlcmlhbCBpY29uIHVzZXMgbGlnYXR1cmVzLgpuZXdDaGlsZHJlbi5wdXNoKGljb24pO31lbHNle2ljb25UeXBlPWljb24uc2xpY2UoMCxkZWxpbWl0ZXJJbmRleCk7aWYoaXNGb250QXdlc29tZTUoaWNvblR5cGUpKWljb25UeXBlPScnO31kYXRhLmNsYXNzW2ljb25UeXBlXT10cnVlO2RhdGEuY2xhc3NbaWNvbl09IWlzTWF0ZXJpYWxJY29uO3ZhciBmb250U2l6ZT10aGlzLmdldFNpemUoKTtpZihmb250U2l6ZSlkYXRhLnN0eWxlPXtmb250U2l6ZTpmb250U2l6ZX07dGhpcy5hcHBseUNvbG9ycyhkYXRhKTtyZXR1cm4gaCh0aGlzLnRhZyxkYXRhLG5ld0NoaWxkcmVuKTt9LHJlbmRlclN2Z0ljb246ZnVuY3Rpb24gcmVuZGVyU3ZnSWNvbihpY29uLGgpe3ZhciBkYXRhPXRoaXMuZ2V0RGVmYXVsdERhdGEoKTtkYXRhLmNsYXNzWyd2LWljb24tLXN2ZyddPXRydWU7ZGF0YS5hdHRycz17eG1sbnM6J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyx2aWV3Qm94OicwIDAgMjQgMjQnLGhlaWdodDonMjQnLHdpZHRoOicyNCcscm9sZTonaW1nJywnYXJpYS1oaWRkZW4nOiF0aGlzLmF0dHJzJFsnYXJpYS1sYWJlbCddLCdhcmlhLWxhYmVsJzp0aGlzLmF0dHJzJFsnYXJpYS1sYWJlbCddfTt2YXIgZm9udFNpemU9dGhpcy5nZXRTaXplKCk7aWYoZm9udFNpemUpe2RhdGEuc3R5bGU9e2ZvbnRTaXplOmZvbnRTaXplLGhlaWdodDpmb250U2l6ZSx3aWR0aDpmb250U2l6ZX07ZGF0YS5hdHRycy5oZWlnaHQ9Zm9udFNpemU7ZGF0YS5hdHRycy53aWR0aD1mb250U2l6ZTt9dGhpcy5hcHBseUNvbG9ycyhkYXRhKTtyZXR1cm4gaCgnc3ZnJyxkYXRhLFtoKCdwYXRoJyx7YXR0cnM6e2Q6aWNvbn19KV0pO30scmVuZGVyU3ZnSWNvbkNvbXBvbmVudDpmdW5jdGlvbiByZW5kZXJTdmdJY29uQ29tcG9uZW50KGljb24saCl7dmFyIGRhdGE9dGhpcy5nZXREZWZhdWx0RGF0YSgpO2RhdGEuY2xhc3NbJ3YtaWNvbi0taXMtY29tcG9uZW50J109dHJ1ZTt2YXIgc2l6ZT10aGlzLmdldFNpemUoKTtpZihzaXplKXtkYXRhLnN0eWxlPXtmb250U2l6ZTpzaXplLGhlaWdodDpzaXplfTt9dGhpcy5hcHBseUNvbG9ycyhkYXRhKTt2YXIgY29tcG9uZW50PWljb24uY29tcG9uZW50O2RhdGEucHJvcHM9aWNvbi5wcm9wcztkYXRhLm5hdGl2ZU9uPWRhdGEub247cmV0dXJuIGgoY29tcG9uZW50LGRhdGEpO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGljb249dGhpcy5nZXRJY29uKCk7aWYodHlwZW9mIGljb249PT0nc3RyaW5nJyl7aWYoaXNTdmdQYXRoKGljb24pKXtyZXR1cm4gdGhpcy5yZW5kZXJTdmdJY29uKGljb24saCk7fXJldHVybiB0aGlzLnJlbmRlckZvbnRJY29uKGljb24saCk7fXJldHVybiB0aGlzLnJlbmRlclN2Z0ljb25Db21wb25lbnQoaWNvbixoKTt9fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOid2LWljb24nLCRfd3JhcHBlckZvcjpWSWNvbixmdW5jdGlvbmFsOnRydWUscmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoLF9hKXt2YXIgZGF0YT1fYS5kYXRhLGNoaWxkcmVuPV9hLmNoaWxkcmVuO3ZhciBpY29uTmFtZT0nJzsvLyBTdXBwb3J0IHVzYWdlIG9mIHYtdGV4dCBhbmQgdi1odG1sCmlmKGRhdGEuZG9tUHJvcHMpe2ljb25OYW1lPWRhdGEuZG9tUHJvcHMudGV4dENvbnRlbnR8fGRhdGEuZG9tUHJvcHMuaW5uZXJIVE1MfHxpY29uTmFtZTsvLyBSZW1vdmUgbm9kZXMgc28gaXQgZG9lc24ndAovLyBvdmVyd3JpdGUgb3VyIGNoYW5nZXMKZGVsZXRlIGRhdGEuZG9tUHJvcHMudGV4dENvbnRlbnQ7ZGVsZXRlIGRhdGEuZG9tUHJvcHMuaW5uZXJIVE1MO31yZXR1cm4gaChWSWNvbixkYXRhLGljb25OYW1lP1tpY29uTmFtZV06Y2hpbGRyZW4pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WSWNvbi9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVkljb24sIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkljb25JbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL1ZJY29uLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkljb24iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZJbWcvVkltZy5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkltZy9WSW1nLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWSW1nVkltZ1Nhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZJbWcvVkltZy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WSW1nL1ZJbWcudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWSW1nVkltZ1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJbWdfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkltZy5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkltZy9WSW1nLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkltZ19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WSW1nX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfaW50ZXJzZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vZGlyZWN0aXZlcy9pbnRlcnNlY3QgKi8iLi9zcmMvZGlyZWN0aXZlcy9pbnRlcnNlY3QvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJlc3BvbnNpdmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WUmVzcG9uc2l2ZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZSZXNwb25zaXZlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvY29uc29sZSAqLyIuL3NyYy91dGlsL2NvbnNvbGUudHMiKTsvLyBTdHlsZXMKLy8gRGlyZWN0aXZlcwovLyBDb21wb25lbnRzCi8vIFV0aWxzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZSZXNwb25zaXZlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5leHRlbmQoe25hbWU6J3YtaW1nJyxkaXJlY3RpdmVzOntpbnRlcnNlY3Q6X2RpcmVjdGl2ZXNfaW50ZXJzZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXX0scHJvcHM6e2FsdDpTdHJpbmcsY29udGFpbjpCb29sZWFuLGVhZ2VyOkJvb2xlYW4sZ3JhZGllbnQ6U3RyaW5nLGxhenlTcmM6U3RyaW5nLG9wdGlvbnM6e3R5cGU6T2JqZWN0LC8vIEZvciBtb3JlIGluZm9ybWF0aW9uIG9uIHR5cGVzLCBuYXZpZ2F0ZSB0bzoKLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbl9PYnNlcnZlcl9BUEkKZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybntyb290OnVuZGVmaW5lZCxyb290TWFyZ2luOnVuZGVmaW5lZCx0aHJlc2hvbGQ6dW5kZWZpbmVkfTt9fSxwb3NpdGlvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonY2VudGVyIGNlbnRlcid9LHNpemVzOlN0cmluZyxzcmM6e3R5cGU6W1N0cmluZyxPYmplY3RdLGRlZmF1bHQ6Jyd9LHNyY3NldDpTdHJpbmcsdHJhbnNpdGlvbjp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6J2ZhZGUtdHJhbnNpdGlvbid9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57Y3VycmVudFNyYzonJyxpbWFnZTpudWxsLGlzTG9hZGluZzp0cnVlLGNhbGN1bGF0ZWRBc3BlY3RSYXRpbzp1bmRlZmluZWQsbmF0dXJhbFdpZHRoOnVuZGVmaW5lZH07fSxjb21wdXRlZDp7Y29tcHV0ZWRBc3BlY3RSYXRpbzpmdW5jdGlvbiBjb21wdXRlZEFzcGVjdFJhdGlvKCl7cmV0dXJuIE51bWJlcih0aGlzLm5vcm1hbGlzZWRTcmMuYXNwZWN0fHx0aGlzLmNhbGN1bGF0ZWRBc3BlY3RSYXRpbyk7fSxoYXNJbnRlcnNlY3Q6ZnVuY3Rpb24gaGFzSW50ZXJzZWN0KCl7cmV0dXJuIHR5cGVvZiB3aW5kb3chPT0ndW5kZWZpbmVkJyYmJ0ludGVyc2VjdGlvbk9ic2VydmVyJ2luIHdpbmRvdzt9LG5vcm1hbGlzZWRTcmM6ZnVuY3Rpb24gbm9ybWFsaXNlZFNyYygpe3JldHVybiB0eXBlb2YgdGhpcy5zcmM9PT0nc3RyaW5nJz97c3JjOnRoaXMuc3JjLHNyY3NldDp0aGlzLnNyY3NldCxsYXp5U3JjOnRoaXMubGF6eVNyYyxhc3BlY3Q6TnVtYmVyKHRoaXMuYXNwZWN0UmF0aW8pfTp7c3JjOnRoaXMuc3JjLnNyYyxzcmNzZXQ6dGhpcy5zcmNzZXR8fHRoaXMuc3JjLnNyY3NldCxsYXp5U3JjOnRoaXMubGF6eVNyY3x8dGhpcy5zcmMubGF6eVNyYyxhc3BlY3Q6TnVtYmVyKHRoaXMuYXNwZWN0UmF0aW98fHRoaXMuc3JjLmFzcGVjdCl9O30sX19jYWNoZWRJbWFnZTpmdW5jdGlvbiBfX2NhY2hlZEltYWdlKCl7aWYoISh0aGlzLm5vcm1hbGlzZWRTcmMuc3JjfHx0aGlzLm5vcm1hbGlzZWRTcmMubGF6eVNyYykpcmV0dXJuW107dmFyIGJhY2tncm91bmRJbWFnZT1bXTt2YXIgc3JjPXRoaXMuaXNMb2FkaW5nP3RoaXMubm9ybWFsaXNlZFNyYy5sYXp5U3JjOnRoaXMuY3VycmVudFNyYztpZih0aGlzLmdyYWRpZW50KWJhY2tncm91bmRJbWFnZS5wdXNoKCJsaW5lYXItZ3JhZGllbnQoIit0aGlzLmdyYWRpZW50KyIpIik7aWYoc3JjKWJhY2tncm91bmRJbWFnZS5wdXNoKCJ1cmwoXCIiK3NyYysiXCIpIik7dmFyIGltYWdlPXRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWltYWdlX19pbWFnZScsY2xhc3M6eyd2LWltYWdlX19pbWFnZS0tcHJlbG9hZCc6dGhpcy5pc0xvYWRpbmcsJ3YtaW1hZ2VfX2ltYWdlLS1jb250YWluJzp0aGlzLmNvbnRhaW4sJ3YtaW1hZ2VfX2ltYWdlLS1jb3Zlcic6IXRoaXMuY29udGFpbn0sc3R5bGU6e2JhY2tncm91bmRJbWFnZTpiYWNrZ3JvdW5kSW1hZ2Uuam9pbignLCAnKSxiYWNrZ3JvdW5kUG9zaXRpb246dGhpcy5wb3NpdGlvbn0sa2V5Oit0aGlzLmlzTG9hZGluZ30pOy8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL2lmKCF0aGlzLnRyYW5zaXRpb24pcmV0dXJuIGltYWdlO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd0cmFuc2l0aW9uJyx7YXR0cnM6e25hbWU6dGhpcy50cmFuc2l0aW9uLG1vZGU6J2luLW91dCd9fSxbaW1hZ2VdKTt9fSx3YXRjaDp7c3JjOmZ1bmN0aW9uIHNyYygpey8vIEZvcmNlIHJlLWluaXQgd2hlbiBzcmMgY2hhbmdlcwppZighdGhpcy5pc0xvYWRpbmcpdGhpcy5pbml0KHVuZGVmaW5lZCx1bmRlZmluZWQsdHJ1ZSk7ZWxzZSB0aGlzLmxvYWRJbWFnZSgpO30sJyR2dWV0aWZ5LmJyZWFrcG9pbnQud2lkdGgnOidnZXRTcmMnfSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLmluaXQoKTt9LG1ldGhvZHM6e2luaXQ6ZnVuY3Rpb24gaW5pdChlbnRyaWVzLG9ic2VydmVyLGlzSW50ZXJzZWN0aW5nKXsvLyBJZiB0aGUgY3VycmVudCBicm93c2VyIHN1cHBvcnRzIHRoZSBpbnRlcnNlY3Rpb24KLy8gb2JzZXJ2ZXIgYXBpLCB0aGUgaW1hZ2UgaXMgbm90IG9ic2VydmFibGUsIGFuZAovLyB0aGUgZWFnZXIgcHJvcCBpc24ndCBiZWluZyB1c2VkLCBkbyBub3QgbG9hZAppZih0aGlzLmhhc0ludGVyc2VjdCYmIWlzSW50ZXJzZWN0aW5nJiYhdGhpcy5lYWdlcilyZXR1cm47aWYodGhpcy5ub3JtYWxpc2VkU3JjLmxhenlTcmMpe3ZhciBsYXp5SW1nPW5ldyBJbWFnZSgpO2xhenlJbWcuc3JjPXRoaXMubm9ybWFsaXNlZFNyYy5sYXp5U3JjO3RoaXMucG9sbEZvclNpemUobGF6eUltZyxudWxsKTt9LyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9pZih0aGlzLm5vcm1hbGlzZWRTcmMuc3JjKXRoaXMubG9hZEltYWdlKCk7fSxvbkxvYWQ6ZnVuY3Rpb24gb25Mb2FkKCl7dGhpcy5nZXRTcmMoKTt0aGlzLmlzTG9hZGluZz1mYWxzZTt0aGlzLiRlbWl0KCdsb2FkJyx0aGlzLnNyYyk7fSxvbkVycm9yOmZ1bmN0aW9uIG9uRXJyb3IoKXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJjb25zb2xlRXJyb3IiXSkoIkltYWdlIGxvYWQgZmFpbGVkXG5cbiIrKCJzcmM6ICIrdGhpcy5ub3JtYWxpc2VkU3JjLnNyYyksdGhpcyk7dGhpcy4kZW1pdCgnZXJyb3InLHRoaXMuc3JjKTt9LGdldFNyYzpmdW5jdGlvbiBnZXRTcmMoKXsvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL2lmKHRoaXMuaW1hZ2UpdGhpcy5jdXJyZW50U3JjPXRoaXMuaW1hZ2UuY3VycmVudFNyY3x8dGhpcy5pbWFnZS5zcmM7fSxsb2FkSW1hZ2U6ZnVuY3Rpb24gbG9hZEltYWdlKCl7dmFyIF90aGlzPXRoaXM7dmFyIGltYWdlPW5ldyBJbWFnZSgpO3RoaXMuaW1hZ2U9aW1hZ2U7aW1hZ2Uub25sb2FkPWZ1bmN0aW9uKCl7LyogaXN0YW5idWwgaWdub3JlIGlmICovaWYoaW1hZ2UuZGVjb2RlKXtpbWFnZS5kZWNvZGUoKS5jYXRjaChmdW5jdGlvbihlcnIpe09iamVjdChfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImNvbnNvbGVXYXJuIl0pKCJGYWlsZWQgdG8gZGVjb2RlIGltYWdlLCB0cnlpbmcgdG8gcmVuZGVyIGFueXdheVxuXG4iKygic3JjOiAiK190aGlzLm5vcm1hbGlzZWRTcmMuc3JjKSsoZXJyLm1lc3NhZ2U/IlxuT3JpZ2luYWwgZXJyb3I6ICIrZXJyLm1lc3NhZ2U6JycpLF90aGlzKTt9KS50aGVuKF90aGlzLm9uTG9hZCk7fWVsc2V7X3RoaXMub25Mb2FkKCk7fX07aW1hZ2Uub25lcnJvcj10aGlzLm9uRXJyb3I7aW1hZ2Uuc3JjPXRoaXMubm9ybWFsaXNlZFNyYy5zcmM7dGhpcy5zaXplcyYmKGltYWdlLnNpemVzPXRoaXMuc2l6ZXMpO3RoaXMubm9ybWFsaXNlZFNyYy5zcmNzZXQmJihpbWFnZS5zcmNzZXQ9dGhpcy5ub3JtYWxpc2VkU3JjLnNyY3NldCk7dGhpcy5hc3BlY3RSYXRpb3x8dGhpcy5wb2xsRm9yU2l6ZShpbWFnZSk7dGhpcy5nZXRTcmMoKTt9LHBvbGxGb3JTaXplOmZ1bmN0aW9uIHBvbGxGb3JTaXplKGltZyx0aW1lb3V0KXt2YXIgX3RoaXM9dGhpcztpZih0aW1lb3V0PT09dm9pZCAwKXt0aW1lb3V0PTEwMDt9dmFyIHBvbGw9ZnVuY3Rpb24gcG9sbCgpe3ZhciBuYXR1cmFsSGVpZ2h0PWltZy5uYXR1cmFsSGVpZ2h0LG5hdHVyYWxXaWR0aD1pbWcubmF0dXJhbFdpZHRoO2lmKG5hdHVyYWxIZWlnaHR8fG5hdHVyYWxXaWR0aCl7X3RoaXMubmF0dXJhbFdpZHRoPW5hdHVyYWxXaWR0aDtfdGhpcy5jYWxjdWxhdGVkQXNwZWN0UmF0aW89bmF0dXJhbFdpZHRoL25hdHVyYWxIZWlnaHQ7fWVsc2V7dGltZW91dCE9bnVsbCYmc2V0VGltZW91dChwb2xsLHRpbWVvdXQpO319O3BvbGwoKTt9LGdlbkNvbnRlbnQ6ZnVuY3Rpb24gZ2VuQ29udGVudCgpe3ZhciBjb250ZW50PV9WUmVzcG9uc2l2ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlbkNvbnRlbnQuY2FsbCh0aGlzKTtpZih0aGlzLm5hdHVyYWxXaWR0aCl7dGhpcy5fYihjb250ZW50LmRhdGEsJ2Rpdicse3N0eWxlOnt3aWR0aDp0aGlzLm5hdHVyYWxXaWR0aCsicHgifX0pO31yZXR1cm4gY29udGVudDt9LF9fZ2VuUGxhY2Vob2xkZXI6ZnVuY3Rpb24gX19nZW5QbGFjZWhvbGRlcigpe2lmKHRoaXMuJHNsb3RzLnBsYWNlaG9sZGVyKXt2YXIgcGxhY2Vob2xkZXI9dGhpcy5pc0xvYWRpbmc/W3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWltYWdlX19wbGFjZWhvbGRlcid9LHRoaXMuJHNsb3RzLnBsYWNlaG9sZGVyKV06W107aWYoIXRoaXMudHJhbnNpdGlvbilyZXR1cm4gcGxhY2Vob2xkZXJbMF07cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RyYW5zaXRpb24nLHtwcm9wczp7YXBwZWFyOnRydWUsbmFtZTp0aGlzLnRyYW5zaXRpb259fSxwbGFjZWhvbGRlcik7fX19LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIG5vZGU9X1ZSZXNwb25zaXZlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5vcHRpb25zLnJlbmRlci5jYWxsKHRoaXMsaCk7bm9kZS5kYXRhLnN0YXRpY0NsYXNzKz0nIHYtaW1hZ2UnOy8vIE9ubHkgbG9hZCBpbnRlcnNlY3QgZGlyZWN0aXZlIGlmIGl0Ci8vIHdpbGwgd29yayBpbiB0aGUgY3VycmVudCBicm93c2VyLgpub2RlLmRhdGEuZGlyZWN0aXZlcz10aGlzLmhhc0ludGVyc2VjdD9be25hbWU6J2ludGVyc2VjdCcsb3B0aW9uczp0aGlzLm9wdGlvbnMsbW9kaWZpZXJzOntvbmNlOnRydWV9LHZhbHVlOnRoaXMuaW5pdH1dOltdO25vZGUuZGF0YS5hdHRycz17cm9sZTp0aGlzLmFsdD8naW1nJzp1bmRlZmluZWQsJ2FyaWEtbGFiZWwnOnRoaXMuYWx0fTtub2RlLmNoaWxkcmVuPVt0aGlzLl9fY2FjaGVkU2l6ZXIsdGhpcy5fX2NhY2hlZEltYWdlLHRoaXMuX19nZW5QbGFjZWhvbGRlcigpLHRoaXMuZ2VuQ29udGVudCgpXTtyZXR1cm4gaChub2RlLnRhZyxub2RlLmRhdGEsbm9kZS5jaGlsZHJlbik7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZJbWcvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZJbWcvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZJbWcsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkltZ0luZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkltZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkltZyAqLyIuL3NyYy9jb21wb25lbnRzL1ZJbWcvVkltZy50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZJbWciLGZ1bmN0aW9uKCl7cmV0dXJuIF9WSW1nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WSW1nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WSW5wdXQvVklucHV0LnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVklucHV0L1ZJbnB1dC5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZJbnB1dFZJbnB1dFNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZJbnB1dC9WSW5wdXQudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZJbnB1dC9WSW5wdXQudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVklucHV0VklucHV0VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVklucHV0X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZJbnB1dC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVklucHV0L1ZJbnB1dC5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJbnB1dF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WSW5wdXRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZMYWJlbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZMYWJlbCAqLyIuL3NyYy9jb21wb25lbnRzL1ZMYWJlbC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTWVzc2FnZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WTWVzc2FnZXMgKi8iLi9zcmMvY29tcG9uZW50cy9WTWVzc2FnZXMvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2JpbmRzX2F0dHJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2JpbmRzLWF0dHJzICovIi4vc3JjL21peGlucy9iaW5kcy1hdHRycy9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdmFsaWRhdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdmFsaWRhdGFibGUgKi8iLi9zcmMvbWl4aW5zL3ZhbGlkYXRhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gU3R5bGVzCi8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8vIFV0aWxpdGllcwp2YXIgYmFzZU1peGlucz1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImRlZmF1bHQiXSkoX21peGluc19iaW5kc19hdHRyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sX21peGluc192YWxpZGF0YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0pOy8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09YmFzZU1peGlucy5leHRlbmQoKS5leHRlbmQoe25hbWU6J3YtaW5wdXQnLGluaGVyaXRBdHRyczpmYWxzZSxwcm9wczp7YXBwZW5kSWNvbjpTdHJpbmcsYmFja2dyb3VuZENvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OicnfSxkZW5zZTpCb29sZWFuLGhlaWdodDpbTnVtYmVyLFN0cmluZ10saGlkZURldGFpbHM6Qm9vbGVhbixoaW50OlN0cmluZyxpZDpTdHJpbmcsbGFiZWw6U3RyaW5nLGxvYWRpbmc6Qm9vbGVhbixwZXJzaXN0ZW50SGludDpCb29sZWFuLHByZXBlbmRJY29uOlN0cmluZyx2YWx1ZTpudWxsfSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57bGF6eVZhbHVlOnRoaXMudmFsdWUsaGFzTW91c2VEb3duOmZhbHNlfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LWlucHV0LS1oYXMtc3RhdGUnOnRoaXMuaGFzU3RhdGUsJ3YtaW5wdXQtLWhpZGUtZGV0YWlscyc6dGhpcy5oaWRlRGV0YWlscywndi1pbnB1dC0taXMtbGFiZWwtYWN0aXZlJzp0aGlzLmlzTGFiZWxBY3RpdmUsJ3YtaW5wdXQtLWlzLWRpcnR5Jzp0aGlzLmlzRGlydHksJ3YtaW5wdXQtLWlzLWRpc2FibGVkJzp0aGlzLmRpc2FibGVkLCd2LWlucHV0LS1pcy1mb2N1c2VkJzp0aGlzLmlzRm9jdXNlZCwndi1pbnB1dC0taXMtbG9hZGluZyc6dGhpcy5sb2FkaW5nIT09ZmFsc2UmJnRoaXMubG9hZGluZyE9PXVuZGVmaW5lZCwndi1pbnB1dC0taXMtcmVhZG9ubHknOnRoaXMucmVhZG9ubHksJ3YtaW5wdXQtLWRlbnNlJzp0aGlzLmRlbnNlfSx0aGlzLnRoZW1lQ2xhc3Nlcyk7fSxjb21wdXRlZElkOmZ1bmN0aW9uIGNvbXB1dGVkSWQoKXtyZXR1cm4gdGhpcy5pZHx8ImlucHV0LSIrdGhpcy5fdWlkO30saGFzSGludDpmdW5jdGlvbiBoYXNIaW50KCl7cmV0dXJuIXRoaXMuaGFzTWVzc2FnZXMmJiEhdGhpcy5oaW50JiYodGhpcy5wZXJzaXN0ZW50SGludHx8dGhpcy5pc0ZvY3VzZWQpO30saGFzTGFiZWw6ZnVuY3Rpb24gaGFzTGFiZWwoKXtyZXR1cm4hISh0aGlzLiRzbG90cy5sYWJlbHx8dGhpcy5sYWJlbCk7fSwvLyBQcm94eSBmb3IgYGxhenlWYWx1ZWAKLy8gVGhpcyBhbGxvd3MgYW4gaW5wdXQKLy8gdG8gZnVuY3Rpb24gd2l0aG91dAovLyBhIHByb3ZpZGVkIG1vZGVsCmludGVybmFsVmFsdWU6e2dldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5sYXp5VmFsdWU7fSxzZXQ6ZnVuY3Rpb24gc2V0KHZhbCl7dGhpcy5sYXp5VmFsdWU9dmFsO3RoaXMuJGVtaXQodGhpcy4kX21vZGVsRXZlbnQsdmFsKTt9fSxpc0RpcnR5OmZ1bmN0aW9uIGlzRGlydHkoKXtyZXR1cm4hIXRoaXMubGF6eVZhbHVlO30saXNEaXNhYmxlZDpmdW5jdGlvbiBpc0Rpc2FibGVkKCl7cmV0dXJuIHRoaXMuZGlzYWJsZWR8fHRoaXMucmVhZG9ubHk7fSxpc0xhYmVsQWN0aXZlOmZ1bmN0aW9uIGlzTGFiZWxBY3RpdmUoKXtyZXR1cm4gdGhpcy5pc0RpcnR5O319LHdhdGNoOnt2YWx1ZTpmdW5jdGlvbiB2YWx1ZSh2YWwpe3RoaXMubGF6eVZhbHVlPXZhbDt9fSxiZWZvcmVDcmVhdGU6ZnVuY3Rpb24gYmVmb3JlQ3JlYXRlKCl7Ly8gdi1yYWRpby1ncm91cCBuZWVkcyB0byBlbWl0IGEgZGlmZmVyZW50IGV2ZW50Ci8vIGh0dHBzOi8vZ2l0aHViLmNvbS92dWV0aWZ5anMvdnVldGlmeS9pc3N1ZXMvNDc1Mgp0aGlzLiRfbW9kZWxFdmVudD10aGlzLiRvcHRpb25zLm1vZGVsJiZ0aGlzLiRvcHRpb25zLm1vZGVsLmV2ZW50fHwnaW5wdXQnO30sbWV0aG9kczp7Z2VuQ29udGVudDpmdW5jdGlvbiBnZW5Db250ZW50KCl7cmV0dXJuW3RoaXMuZ2VuUHJlcGVuZFNsb3QoKSx0aGlzLmdlbkNvbnRyb2woKSx0aGlzLmdlbkFwcGVuZFNsb3QoKV07fSxnZW5Db250cm9sOmZ1bmN0aW9uIGdlbkNvbnRyb2woKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtaW5wdXRfX2NvbnRyb2wnfSxbdGhpcy5nZW5JbnB1dFNsb3QoKSx0aGlzLmdlbk1lc3NhZ2VzKCldKTt9LGdlbkRlZmF1bHRTbG90OmZ1bmN0aW9uIGdlbkRlZmF1bHRTbG90KCl7cmV0dXJuW3RoaXMuZ2VuTGFiZWwoKSx0aGlzLiRzbG90cy5kZWZhdWx0XTt9LGdlbkljb246ZnVuY3Rpb24gZ2VuSWNvbih0eXBlLGNiKXt2YXIgX3RoaXM9dGhpczt2YXIgaWNvbj10aGlzW3R5cGUrIkljb24iXTt2YXIgZXZlbnROYW1lPSJjbGljazoiK09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImtlYmFiQ2FzZSJdKSh0eXBlKTt2YXIgZGF0YT17cHJvcHM6e2NvbG9yOnRoaXMudmFsaWRhdGlvblN0YXRlLGRhcms6dGhpcy5kYXJrLGRpc2FibGVkOnRoaXMuZGlzYWJsZWQsbGlnaHQ6dGhpcy5saWdodH0sb246ISh0aGlzLmxpc3RlbmVycyRbZXZlbnROYW1lXXx8Y2IpP3VuZGVmaW5lZDp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soZSl7ZS5wcmV2ZW50RGVmYXVsdCgpO2Uuc3RvcFByb3BhZ2F0aW9uKCk7X3RoaXMuJGVtaXQoZXZlbnROYW1lLGUpO2NiJiZjYihlKTt9LC8vIENvbnRhaW5lciBoYXMgZyBldmVudCB0aGF0IHdpbGwKLy8gdHJpZ2dlciBtZW51IG9wZW4gaWYgZW5jbG9zZWQKbW91c2V1cDpmdW5jdGlvbiBtb3VzZXVwKGUpe2UucHJldmVudERlZmF1bHQoKTtlLnN0b3BQcm9wYWdhdGlvbigpO319fTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6InYtaW5wdXRfX2ljb24gdi1pbnB1dF9faWNvbi0tIitPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJrZWJhYkNhc2UiXSkodHlwZSksa2V5OnR5cGUraWNvbn0sW3RoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxkYXRhLGljb24pXSk7fSxnZW5JbnB1dFNsb3Q6ZnVuY3Rpb24gZ2VuSW5wdXRTbG90KCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IodGhpcy5iYWNrZ3JvdW5kQ29sb3Ise3N0YXRpY0NsYXNzOid2LWlucHV0X19zbG90JyxzdHlsZTp7aGVpZ2h0Ok9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5oZWlnaHQpfSxvbjp7Y2xpY2s6dGhpcy5vbkNsaWNrLG1vdXNlZG93bjp0aGlzLm9uTW91c2VEb3duLG1vdXNldXA6dGhpcy5vbk1vdXNlVXB9LHJlZjonaW5wdXQtc2xvdCd9KSxbdGhpcy5nZW5EZWZhdWx0U2xvdCgpXSk7fSxnZW5MYWJlbDpmdW5jdGlvbiBnZW5MYWJlbCgpe2lmKCF0aGlzLmhhc0xhYmVsKXJldHVybiBudWxsO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WTGFiZWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLHtwcm9wczp7Y29sb3I6dGhpcy52YWxpZGF0aW9uU3RhdGUsZGFyazp0aGlzLmRhcmssZm9jdXNlZDp0aGlzLmhhc1N0YXRlLGZvcjp0aGlzLmNvbXB1dGVkSWQsbGlnaHQ6dGhpcy5saWdodH19LHRoaXMuJHNsb3RzLmxhYmVsfHx0aGlzLmxhYmVsKTt9LGdlbk1lc3NhZ2VzOmZ1bmN0aW9uIGdlbk1lc3NhZ2VzKCl7dmFyIF90aGlzPXRoaXM7aWYodGhpcy5oaWRlRGV0YWlscylyZXR1cm4gbnVsbDt2YXIgbWVzc2FnZXM9dGhpcy5oYXNIaW50P1t0aGlzLmhpbnRdOnRoaXMudmFsaWRhdGlvbnM7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZNZXNzYWdlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0se3Byb3BzOntjb2xvcjp0aGlzLmhhc0hpbnQ/Jyc6dGhpcy52YWxpZGF0aW9uU3RhdGUsZGFyazp0aGlzLmRhcmssbGlnaHQ6dGhpcy5saWdodCx2YWx1ZTp0aGlzLmhhc01lc3NhZ2VzfHx0aGlzLmhhc0hpbnQ/bWVzc2FnZXM6W119LGF0dHJzOntyb2xlOnRoaXMuaGFzTWVzc2FnZXM/J2FsZXJ0JzpudWxsfSxzY29wZWRTbG90czp7ZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdChwcm9wcyl7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImdldFNsb3QiXSkoX3RoaXMsJ21lc3NhZ2UnLHByb3BzKTt9fX0pO30sZ2VuU2xvdDpmdW5jdGlvbiBnZW5TbG90KHR5cGUsbG9jYXRpb24sc2xvdCl7aWYoIXNsb3QubGVuZ3RoKXJldHVybiBudWxsO3ZhciByZWY9dHlwZSsiLSIrbG9jYXRpb247cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOiJ2LWlucHV0X18iK3JlZixyZWY6cmVmfSxzbG90KTt9LGdlblByZXBlbmRTbG90OmZ1bmN0aW9uIGdlblByZXBlbmRTbG90KCl7dmFyIHNsb3Q9W107aWYodGhpcy4kc2xvdHMucHJlcGVuZCl7c2xvdC5wdXNoKHRoaXMuJHNsb3RzLnByZXBlbmQpO31lbHNlIGlmKHRoaXMucHJlcGVuZEljb24pe3Nsb3QucHVzaCh0aGlzLmdlbkljb24oJ3ByZXBlbmQnKSk7fXJldHVybiB0aGlzLmdlblNsb3QoJ3ByZXBlbmQnLCdvdXRlcicsc2xvdCk7fSxnZW5BcHBlbmRTbG90OmZ1bmN0aW9uIGdlbkFwcGVuZFNsb3QoKXt2YXIgc2xvdD1bXTsvLyBBcHBlbmQgaWNvbiBmb3IgdGV4dCBmaWVsZCB3YXMgcmVhbGx5Ci8vIGFuIGFwcGVuZGVkIGlubmVyIGljb24sIHYtdGV4dC1maWVsZAovLyB3aWxsIG92ZXJ3cml0ZSB0aGlzIG1ldGhvZCBpbiBvcmRlciB0byBvYnRhaW4KLy8gYmFja3dhcmRzIGNvbXBhdAppZih0aGlzLiRzbG90cy5hcHBlbmQpe3Nsb3QucHVzaCh0aGlzLiRzbG90cy5hcHBlbmQpO31lbHNlIGlmKHRoaXMuYXBwZW5kSWNvbil7c2xvdC5wdXNoKHRoaXMuZ2VuSWNvbignYXBwZW5kJykpO31yZXR1cm4gdGhpcy5nZW5TbG90KCdhcHBlbmQnLCdvdXRlcicsc2xvdCk7fSxvbkNsaWNrOmZ1bmN0aW9uIG9uQ2xpY2soZSl7dGhpcy4kZW1pdCgnY2xpY2snLGUpO30sb25Nb3VzZURvd246ZnVuY3Rpb24gb25Nb3VzZURvd24oZSl7dGhpcy5oYXNNb3VzZURvd249dHJ1ZTt0aGlzLiRlbWl0KCdtb3VzZWRvd24nLGUpO30sb25Nb3VzZVVwOmZ1bmN0aW9uIG9uTW91c2VVcChlKXt0aGlzLmhhc01vdXNlRG93bj1mYWxzZTt0aGlzLiRlbWl0KCdtb3VzZXVwJyxlKTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3JldHVybiBoKCdkaXYnLHRoaXMuc2V0VGV4dENvbG9yKHRoaXMudmFsaWRhdGlvblN0YXRlLHtzdGF0aWNDbGFzczondi1pbnB1dCcsY2xhc3M6dGhpcy5jbGFzc2VzfSksdGhpcy5nZW5Db250ZW50KCkpO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WSW5wdXQvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVklucHV0L2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZJbnB1dCwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWSW5wdXRJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVklucHV0ICovIi4vc3JjL2NvbXBvbmVudHMvVklucHV0L1ZJbnB1dC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZJbnB1dCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVklucHV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WSXRlbUdyb3VwL1ZJdGVtLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WSXRlbUdyb3VwL1ZJdGVtLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBCYXNlSXRlbSwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWSXRlbUdyb3VwVkl0ZW1Ucyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJCYXNlSXRlbSIsZnVuY3Rpb24oKXtyZXR1cm4gQmFzZUl0ZW07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19ncm91cGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvZ3JvdXBhYmxlICovIi4vc3JjL21peGlucy9ncm91cGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyk7Ly8gTWl4aW5zCi8vIFV0aWxpdGllcwovLyBUeXBlcwovKiBAdnVlL2NvbXBvbmVudCAqL3ZhciBCYXNlSXRlbT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX19kZWZhdWx0LmEuZXh0ZW5kKHtwcm9wczp7YWN0aXZlQ2xhc3M6U3RyaW5nLHZhbHVlOntyZXF1aXJlZDpmYWxzZX19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntpc0FjdGl2ZTpmYWxzZX07fSxtZXRob2RzOnt0b2dnbGU6ZnVuY3Rpb24gdG9nZ2xlKCl7dGhpcy5pc0FjdGl2ZT0hdGhpcy5pc0FjdGl2ZTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKCl7dmFyIF9hO2lmKCF0aGlzLiRzY29wZWRTbG90cy5kZWZhdWx0KXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJjb25zb2xlV2FybiJdKSgndi1pdGVtIGlzIG1pc3NpbmcgYSBkZWZhdWx0IHNjb3BlZFNsb3QnLHRoaXMpO3JldHVybiBudWxsO312YXIgZWxlbWVudDsvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL2lmKHRoaXMuJHNjb3BlZFNsb3RzLmRlZmF1bHQpe2VsZW1lbnQ9dGhpcy4kc2NvcGVkU2xvdHMuZGVmYXVsdCh7YWN0aXZlOnRoaXMuaXNBY3RpdmUsdG9nZ2xlOnRoaXMudG9nZ2xlfSk7fWlmKEFycmF5LmlzQXJyYXkoZWxlbWVudCkmJmVsZW1lbnQubGVuZ3RoPT09MSl7ZWxlbWVudD1lbGVtZW50WzBdO31pZighZWxlbWVudHx8QXJyYXkuaXNBcnJheShlbGVtZW50KXx8IWVsZW1lbnQudGFnKXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJjb25zb2xlV2FybiJdKSgndi1pdGVtIHNob3VsZCBvbmx5IGNvbnRhaW4gYSBzaW5nbGUgZWxlbWVudCcsdGhpcyk7cmV0dXJuIGVsZW1lbnQ7fWVsZW1lbnQuZGF0YT10aGlzLl9iKGVsZW1lbnQuZGF0YXx8e30sZWxlbWVudC50YWcse2NsYXNzOihfYT17fSxfYVt0aGlzLmFjdGl2ZUNsYXNzXT10aGlzLmlzQWN0aXZlLF9hKX0pO3JldHVybiBlbGVtZW50O319KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKShCYXNlSXRlbSxPYmplY3QoX21peGluc19ncm91cGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZmFjdG9yeSJdKSgnaXRlbUdyb3VwJywndi1pdGVtJywndi1pdGVtLWdyb3VwJykpLmV4dGVuZCh7bmFtZTondi1pdGVtJ30pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZJdGVtR3JvdXAvVkl0ZW1Hcm91cC5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkl0ZW1Hcm91cC9WSXRlbUdyb3VwLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWSXRlbUdyb3VwVkl0ZW1Hcm91cFNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZJdGVtR3JvdXAvVkl0ZW1Hcm91cC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WSXRlbUdyb3VwL1ZJdGVtR3JvdXAudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogQmFzZUl0ZW1Hcm91cCwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWSXRlbUdyb3VwVkl0ZW1Hcm91cFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIkJhc2VJdGVtR3JvdXAiLGZ1bmN0aW9uKCl7cmV0dXJuIEJhc2VJdGVtR3JvdXA7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJdGVtR3JvdXBfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkl0ZW1Hcm91cC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkl0ZW1Hcm91cC9WSXRlbUdyb3VwLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkl0ZW1Hcm91cF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WSXRlbUdyb3VwX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19wcm94eWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvcHJveHlhYmxlICovIi4vc3JjL21peGlucy9wcm94eWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy90aGVtZWFibGUgKi8iLi9zcmMvbWl4aW5zL3RoZW1lYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvY29uc29sZSAqLyIuL3NyYy91dGlsL2NvbnNvbGUudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBVdGlsaXRpZXMKdmFyIEJhc2VJdGVtR3JvdXA9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKF9taXhpbnNfcHJveHlhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pLmV4dGVuZCh7bmFtZTonYmFzZS1pdGVtLWdyb3VwJyxwcm9wczp7YWN0aXZlQ2xhc3M6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J3YtaXRlbS0tYWN0aXZlJ30sbWFuZGF0b3J5OkJvb2xlYW4sbWF4Ont0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0Om51bGx9LG11bHRpcGxlOkJvb2xlYW59LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnsvLyBBcyBsb25nIGFzIGEgdmFsdWUgaXMgZGVmaW5lZCwgc2hvdyBpdAovLyBPdGhlcndpc2UsIGNoZWNrIGlmIG11bHRpcGxlCi8vIHRvIGRldGVybWluZSB3aGljaCBkZWZhdWx0IHRvIHByb3ZpZGUKaW50ZXJuYWxMYXp5VmFsdWU6dGhpcy52YWx1ZSE9PXVuZGVmaW5lZD90aGlzLnZhbHVlOnRoaXMubXVsdGlwbGU/W106dW5kZWZpbmVkLGl0ZW1zOltdfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LWl0ZW0tZ3JvdXAnOnRydWV9LHRoaXMudGhlbWVDbGFzc2VzKTt9LHNlbGVjdGVkSW5kZXg6ZnVuY3Rpb24gc2VsZWN0ZWRJbmRleCgpe3JldHVybiB0aGlzLnNlbGVjdGVkSXRlbSYmdGhpcy5pdGVtcy5pbmRleE9mKHRoaXMuc2VsZWN0ZWRJdGVtKXx8LTE7fSxzZWxlY3RlZEl0ZW06ZnVuY3Rpb24gc2VsZWN0ZWRJdGVtKCl7aWYodGhpcy5tdWx0aXBsZSlyZXR1cm4gdW5kZWZpbmVkO3JldHVybiB0aGlzLnNlbGVjdGVkSXRlbXNbMF07fSxzZWxlY3RlZEl0ZW1zOmZ1bmN0aW9uIHNlbGVjdGVkSXRlbXMoKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gdGhpcy5pdGVtcy5maWx0ZXIoZnVuY3Rpb24oaXRlbSxpbmRleCl7cmV0dXJuIF90aGlzLnRvZ2dsZU1ldGhvZChfdGhpcy5nZXRWYWx1ZShpdGVtLGluZGV4KSk7fSk7fSxzZWxlY3RlZFZhbHVlczpmdW5jdGlvbiBzZWxlY3RlZFZhbHVlcygpe2lmKHRoaXMuaW50ZXJuYWxWYWx1ZT09bnVsbClyZXR1cm5bXTtyZXR1cm4gQXJyYXkuaXNBcnJheSh0aGlzLmludGVybmFsVmFsdWUpP3RoaXMuaW50ZXJuYWxWYWx1ZTpbdGhpcy5pbnRlcm5hbFZhbHVlXTt9LHRvZ2dsZU1ldGhvZDpmdW5jdGlvbiB0b2dnbGVNZXRob2QoKXt2YXIgX3RoaXM9dGhpcztpZighdGhpcy5tdWx0aXBsZSl7cmV0dXJuIGZ1bmN0aW9uKHYpe3JldHVybiBfdGhpcy5pbnRlcm5hbFZhbHVlPT09djt9O312YXIgaW50ZXJuYWxWYWx1ZT10aGlzLmludGVybmFsVmFsdWU7aWYoQXJyYXkuaXNBcnJheShpbnRlcm5hbFZhbHVlKSl7cmV0dXJuIGZ1bmN0aW9uKHYpe3JldHVybiBpbnRlcm5hbFZhbHVlLmluY2x1ZGVzKHYpO307fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBmYWxzZTt9O319LHdhdGNoOntpbnRlcm5hbFZhbHVlOmZ1bmN0aW9uIGludGVybmFsVmFsdWUoKXsvLyBodHRwczovL2dpdGh1Yi5jb20vdnVldGlmeWpzL3Z1ZXRpZnkvaXNzdWVzLzUzNTIKdGhpcy4kbmV4dFRpY2sodGhpcy51cGRhdGVJdGVtc1N0YXRlKTt9fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXtpZih0aGlzLm11bHRpcGxlJiYhQXJyYXkuaXNBcnJheSh0aGlzLmludGVybmFsVmFsdWUpKXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJjb25zb2xlV2FybiJdKSgnTW9kZWwgbXVzdCBiZSBib3VuZCB0byBhbiBhcnJheSBpZiB0aGUgbXVsdGlwbGUgcHJvcGVydHkgaXMgdHJ1ZS4nLHRoaXMpO319LG1ldGhvZHM6e2dlbkRhdGE6ZnVuY3Rpb24gZ2VuRGF0YSgpe3JldHVybntjbGFzczp0aGlzLmNsYXNzZXN9O30sZ2V0VmFsdWU6ZnVuY3Rpb24gZ2V0VmFsdWUoaXRlbSxpKXtyZXR1cm4gaXRlbS52YWx1ZT09bnVsbHx8aXRlbS52YWx1ZT09PScnP2k6aXRlbS52YWx1ZTt9LG9uQ2xpY2s6ZnVuY3Rpb24gb25DbGljayhpdGVtKXt0aGlzLnVwZGF0ZUludGVybmFsVmFsdWUodGhpcy5nZXRWYWx1ZShpdGVtLHRoaXMuaXRlbXMuaW5kZXhPZihpdGVtKSkpO30scmVnaXN0ZXI6ZnVuY3Rpb24gcmVnaXN0ZXIoaXRlbSl7dmFyIF90aGlzPXRoaXM7dmFyIGluZGV4PXRoaXMuaXRlbXMucHVzaChpdGVtKS0xO2l0ZW0uJG9uKCdjaGFuZ2UnLGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLm9uQ2xpY2soaXRlbSk7fSk7Ly8gSWYgbm8gdmFsdWUgcHJvdmlkZWQgYW5kIG1hbmRhdG9yeSwKLy8gYXNzaWduIGZpcnN0IHJlZ2lzdGVyZWQgaXRlbQppZih0aGlzLm1hbmRhdG9yeSYmdGhpcy5pbnRlcm5hbExhenlWYWx1ZT09bnVsbCl7dGhpcy51cGRhdGVNYW5kYXRvcnkoKTt9dGhpcy51cGRhdGVJdGVtKGl0ZW0saW5kZXgpO30sdW5yZWdpc3RlcjpmdW5jdGlvbiB1bnJlZ2lzdGVyKGl0ZW0pe2lmKHRoaXMuX2lzRGVzdHJveWVkKXJldHVybjt2YXIgaW5kZXg9dGhpcy5pdGVtcy5pbmRleE9mKGl0ZW0pO3ZhciB2YWx1ZT10aGlzLmdldFZhbHVlKGl0ZW0saW5kZXgpO3RoaXMuaXRlbXMuc3BsaWNlKGluZGV4LDEpO3ZhciB2YWx1ZUluZGV4PXRoaXMuc2VsZWN0ZWRWYWx1ZXMuaW5kZXhPZih2YWx1ZSk7Ly8gSXRlbXMgaXMgbm90IHNlbGVjdGVkLCBkbyBub3RoaW5nCmlmKHZhbHVlSW5kZXg8MClyZXR1cm47Ly8gSWYgbm90IG1hbmRhdG9yeSwgdXNlIHJlZ3VsYXIgdXBkYXRlIHByb2Nlc3MKaWYoIXRoaXMubWFuZGF0b3J5KXtyZXR1cm4gdGhpcy51cGRhdGVJbnRlcm5hbFZhbHVlKHZhbHVlKTt9Ly8gUmVtb3ZlIHRoZSB2YWx1ZQppZih0aGlzLm11bHRpcGxlJiZBcnJheS5pc0FycmF5KHRoaXMuaW50ZXJuYWxWYWx1ZSkpe3RoaXMuaW50ZXJuYWxWYWx1ZT10aGlzLmludGVybmFsVmFsdWUuZmlsdGVyKGZ1bmN0aW9uKHYpe3JldHVybiB2IT09dmFsdWU7fSk7fWVsc2V7dGhpcy5pbnRlcm5hbFZhbHVlPXVuZGVmaW5lZDt9Ly8gSWYgbWFuZGF0b3J5IGFuZCB3ZSBoYXZlIG5vIHNlbGVjdGlvbgovLyBhZGQgdGhlIGxhc3QgaXRlbSBhcyB2YWx1ZQovKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL2lmKCF0aGlzLnNlbGVjdGVkSXRlbXMubGVuZ3RoKXt0aGlzLnVwZGF0ZU1hbmRhdG9yeSh0cnVlKTt9fSx1cGRhdGVJdGVtOmZ1bmN0aW9uIHVwZGF0ZUl0ZW0oaXRlbSxpbmRleCl7dmFyIHZhbHVlPXRoaXMuZ2V0VmFsdWUoaXRlbSxpbmRleCk7aXRlbS5pc0FjdGl2ZT10aGlzLnRvZ2dsZU1ldGhvZCh2YWx1ZSk7fSx1cGRhdGVJdGVtc1N0YXRlOmZ1bmN0aW9uIHVwZGF0ZUl0ZW1zU3RhdGUoKXtpZih0aGlzLm1hbmRhdG9yeSYmIXRoaXMuc2VsZWN0ZWRJdGVtcy5sZW5ndGgpe3JldHVybiB0aGlzLnVwZGF0ZU1hbmRhdG9yeSgpO30vLyBUT0RPOiBNYWtlIHRoaXMgc21hcnRlciBzbyBpdAovLyBkb2Vzbid0IGhhdmUgdG8gaXRlcmF0ZSBldmVyeQovLyBjaGlsZCBpbiBhbiB1cGRhdGUKdGhpcy5pdGVtcy5mb3JFYWNoKHRoaXMudXBkYXRlSXRlbSk7fSx1cGRhdGVJbnRlcm5hbFZhbHVlOmZ1bmN0aW9uIHVwZGF0ZUludGVybmFsVmFsdWUodmFsdWUpe3RoaXMubXVsdGlwbGU/dGhpcy51cGRhdGVNdWx0aXBsZSh2YWx1ZSk6dGhpcy51cGRhdGVTaW5nbGUodmFsdWUpO30sdXBkYXRlTWFuZGF0b3J5OmZ1bmN0aW9uIHVwZGF0ZU1hbmRhdG9yeShsYXN0KXtpZighdGhpcy5pdGVtcy5sZW5ndGgpcmV0dXJuO3ZhciBpdGVtcz10aGlzLml0ZW1zLnNsaWNlKCk7aWYobGFzdClpdGVtcy5yZXZlcnNlKCk7dmFyIGl0ZW09aXRlbXMuZmluZChmdW5jdGlvbihpdGVtKXtyZXR1cm4haXRlbS5kaXNhYmxlZDt9KTsvLyBJZiBubyB0YWJzIGFyZSBhdmFpbGFibGUKLy8gYWJvcnRzIG1hbmRhdG9yeSB2YWx1ZQppZighaXRlbSlyZXR1cm47dmFyIGluZGV4PXRoaXMuaXRlbXMuaW5kZXhPZihpdGVtKTt0aGlzLnVwZGF0ZUludGVybmFsVmFsdWUodGhpcy5nZXRWYWx1ZShpdGVtLGluZGV4KSk7fSx1cGRhdGVNdWx0aXBsZTpmdW5jdGlvbiB1cGRhdGVNdWx0aXBsZSh2YWx1ZSl7dmFyIGRlZmF1bHRWYWx1ZT1BcnJheS5pc0FycmF5KHRoaXMuaW50ZXJuYWxWYWx1ZSk/dGhpcy5pbnRlcm5hbFZhbHVlOltdO3ZhciBpbnRlcm5hbFZhbHVlPWRlZmF1bHRWYWx1ZS5zbGljZSgpO3ZhciBpbmRleD1pbnRlcm5hbFZhbHVlLmZpbmRJbmRleChmdW5jdGlvbih2YWwpe3JldHVybiB2YWw9PT12YWx1ZTt9KTtpZih0aGlzLm1hbmRhdG9yeSYmLy8gSXRlbSBhbHJlYWR5IGV4aXN0cwppbmRleD4tMSYmLy8gdmFsdWUgd291bGQgYmUgcmVkdWNlZCBiZWxvdyBtaW4KaW50ZXJuYWxWYWx1ZS5sZW5ndGgtMTwxKXJldHVybjtpZigvLyBNYXggaXMgc2V0CnRoaXMubWF4IT1udWxsJiYvLyBJdGVtIGRvZXNuJ3QgZXhpc3QKaW5kZXg8MCYmLy8gdmFsdWUgd291bGQgYmUgaW5jcmVhc2VkIGFib3ZlIG1heAppbnRlcm5hbFZhbHVlLmxlbmd0aCsxPnRoaXMubWF4KXJldHVybjtpbmRleD4tMT9pbnRlcm5hbFZhbHVlLnNwbGljZShpbmRleCwxKTppbnRlcm5hbFZhbHVlLnB1c2godmFsdWUpO3RoaXMuaW50ZXJuYWxWYWx1ZT1pbnRlcm5hbFZhbHVlO30sdXBkYXRlU2luZ2xlOmZ1bmN0aW9uIHVwZGF0ZVNpbmdsZSh2YWx1ZSl7dmFyIGlzU2FtZT12YWx1ZT09PXRoaXMuaW50ZXJuYWxWYWx1ZTtpZih0aGlzLm1hbmRhdG9yeSYmaXNTYW1lKXJldHVybjt0aGlzLmludGVybmFsVmFsdWU9aXNTYW1lP3VuZGVmaW5lZDp2YWx1ZTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3JldHVybiBoKCdkaXYnLHRoaXMuZ2VuRGF0YSgpLHRoaXMuJHNsb3RzLmRlZmF1bHQpO319KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPUJhc2VJdGVtR3JvdXAuZXh0ZW5kKHtuYW1lOid2LWl0ZW0tZ3JvdXAnLHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybntpdGVtR3JvdXA6dGhpc307fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZJdGVtR3JvdXAvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZJdGVtR3JvdXAvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZJdGVtLCBWSXRlbUdyb3VwLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZJdGVtR3JvdXBJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WSXRlbSAqLyIuL3NyYy9jb21wb25lbnRzL1ZJdGVtR3JvdXAvVkl0ZW0udHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWSXRlbSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkl0ZW1Hcm91cCAqLyIuL3NyYy9jb21wb25lbnRzL1ZJdGVtR3JvdXAvVkl0ZW1Hcm91cC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZJdGVtR3JvdXAiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WSXRlbUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXskX3Z1ZXRpZnlfc3ViY29tcG9uZW50czp7Vkl0ZW06X1ZJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSxWSXRlbUdyb3VwOl9WSXRlbUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXX19Oy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZMYWJlbC9WTGFiZWwuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WTGFiZWwvVkxhYmVsLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkxhYmVsVkxhYmVsU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkxhYmVsL1ZMYWJlbC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkxhYmVsL1ZMYWJlbC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWTGFiZWxWTGFiZWxUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGFiZWxfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkxhYmVsLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WTGFiZWwvVkxhYmVsLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkxhYmVsX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZMYWJlbF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gTWl4aW5zCi8vIEhlbHBlcnMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3YtbGFiZWwnLGZ1bmN0aW9uYWw6dHJ1ZSxwcm9wczp7YWJzb2x1dGU6Qm9vbGVhbixjb2xvcjp7dHlwZTpTdHJpbmcsZGVmYXVsdDoncHJpbWFyeSd9LGRpc2FibGVkOkJvb2xlYW4sZm9jdXNlZDpCb29sZWFuLGZvcjpTdHJpbmcsbGVmdDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDowfSxyaWdodDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDonYXV0byd9LHZhbHVlOkJvb2xlYW59LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCxjdHgpe3ZhciBjaGlsZHJlbj1jdHguY2hpbGRyZW4sbGlzdGVuZXJzPWN0eC5saXN0ZW5lcnMscHJvcHM9Y3R4LnByb3BzO3ZhciBkYXRhPXtzdGF0aWNDbGFzczondi1sYWJlbCcsY2xhc3M6X19hc3NpZ24oeyd2LWxhYmVsLS1hY3RpdmUnOnByb3BzLnZhbHVlLCd2LWxhYmVsLS1pcy1kaXNhYmxlZCc6cHJvcHMuZGlzYWJsZWR9LE9iamVjdChfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJmdW5jdGlvbmFsVGhlbWVDbGFzc2VzIl0pKGN0eCkpLGF0dHJzOntmb3I6cHJvcHMuZm9yLCdhcmlhLWhpZGRlbic6IXByb3BzLmZvcn0sb246bGlzdGVuZXJzLHN0eWxlOntsZWZ0Ok9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImNvbnZlcnRUb1VuaXQiXSkocHJvcHMubGVmdCkscmlnaHQ6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siY29udmVydFRvVW5pdCJdKShwcm9wcy5yaWdodCkscG9zaXRpb246cHJvcHMuYWJzb2x1dGU/J2Fic29sdXRlJzoncmVsYXRpdmUnfSxyZWY6J2xhYmVsJ307cmV0dXJuIGgoJ2xhYmVsJyxfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLnNldFRleHRDb2xvcihwcm9wcy5mb2N1c2VkJiZwcm9wcy5jb2xvcixkYXRhKSxjaGlsZHJlbik7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZMYWJlbC9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WTGFiZWwvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVkxhYmVsLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZMYWJlbEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkxhYmVsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WTGFiZWwgKi8iLi9zcmMvY29tcG9uZW50cy9WTGFiZWwvVkxhYmVsLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkxhYmVsIixmdW5jdGlvbigpe3JldHVybiBfVkxhYmVsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WTGFiZWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZMYXp5L1ZMYXp5LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkxhenkvVkxhenkudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZMYXp5VkxhenlUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy90b2dnbGVhYmxlICovIi4vc3JjL21peGlucy90b2dnbGVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfaW50ZXJzZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vZGlyZWN0aXZlcy9pbnRlcnNlY3QgKi8iLi9zcmMvZGlyZWN0aXZlcy9pbnRlcnNlY3QvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7Ly8gTWl4aW5zCi8vIERpcmVjdGl2ZXMKLy8gVXRpbGl0aWVzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pKF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pLmV4dGVuZCh7bmFtZTonVkxhenknLGRpcmVjdGl2ZXM6e2ludGVyc2VjdDpfZGlyZWN0aXZlc19pbnRlcnNlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdfSxwcm9wczp7bWluSGVpZ2h0OltOdW1iZXIsU3RyaW5nXSxvcHRpb25zOnt0eXBlOk9iamVjdCwvLyBGb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiB0eXBlcywgbmF2aWdhdGUgdG86Ci8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9JbnRlcnNlY3Rpb25fT2JzZXJ2ZXJfQVBJCmRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm57cm9vdDp1bmRlZmluZWQscm9vdE1hcmdpbjp1bmRlZmluZWQsdGhyZXNob2xkOnVuZGVmaW5lZH07fX0sdHJhbnNpdGlvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonZmFkZS10cmFuc2l0aW9uJ319LGNvbXB1dGVkOntzdHlsZXM6ZnVuY3Rpb24gc3R5bGVzKCl7cmV0dXJue21pbkhlaWdodDpwYXJzZUludCh0aGlzLm1pbkhlaWdodCk/T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLm1pbkhlaWdodCk6dGhpcy5taW5IZWlnaHR9O319LG1ldGhvZHM6e2dlbkNvbnRlbnQ6ZnVuY3Rpb24gZ2VuQ29udGVudCgpe3ZhciBzbG90PU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImdldFNsb3QiXSkodGhpcyk7LyogaXN0YW5idWwgaWdub3JlIGlmICovaWYoIXRoaXMudHJhbnNpdGlvbilyZXR1cm4gc2xvdDt2YXIgY2hpbGRyZW49W107aWYodGhpcy5pc0FjdGl2ZSljaGlsZHJlbi5wdXNoKHNsb3QpO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCd0cmFuc2l0aW9uJyx7cHJvcHM6e25hbWU6dGhpcy50cmFuc2l0aW9ufX0sY2hpbGRyZW4pO30sb25PYnNlcnZlOmZ1bmN0aW9uIG9uT2JzZXJ2ZShlbnRyaWVzLG9ic2VydmVyLGlzSW50ZXJzZWN0aW5nKXtpZih0aGlzLmlzQWN0aXZlKXJldHVybjt0aGlzLmlzQWN0aXZlPWlzSW50ZXJzZWN0aW5nO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWxhenknLGF0dHJzOnRoaXMuJGF0dHJzLGRpcmVjdGl2ZXM6W3tuYW1lOidpbnRlcnNlY3QnLHZhbHVlOntoYW5kbGVyOnRoaXMub25PYnNlcnZlLG9wdGlvbnM6dGhpcy5vcHRpb25zfX1dLG9uOnRoaXMuJGxpc3RlbmVycyxzdHlsZTp0aGlzLnN0eWxlc30sW3RoaXMuZ2VuQ29udGVudCgpXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZMYXp5L2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkxhenkvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWTGF6eSwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWTGF6eUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkxhenlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZMYXp5ICovIi4vc3JjL2NvbXBvbmVudHMvVkxhenkvVkxhenkudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGF6eSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZMYXp5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WTGF6eV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3Quc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3Quc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkxpc3RWTGlzdFNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZMaXN0L1ZMaXN0LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3QudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZMaXN0Vkxpc3RUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGlzdF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WTGlzdC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3Quc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGlzdF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WTGlzdF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2hlZXRfVlNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVlNoZWV0L1ZTaGVldCAqLyIuL3NyYy9jb21wb25lbnRzL1ZTaGVldC9WU2hlZXQudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9O3ZhciBfX3ZhbHVlcz11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3ZhbHVlc3x8ZnVuY3Rpb24obyl7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXSxpPTA7aWYobSlyZXR1cm4gbS5jYWxsKG8pO3JldHVybntuZXh0OmZ1bmN0aW9uIG5leHQoKXtpZihvJiZpPj1vLmxlbmd0aClvPXZvaWQgMDtyZXR1cm57dmFsdWU6byYmb1tpKytdLGRvbmU6IW99O319O307Ly8gU3R5bGVzCi8vIENvbXBvbmVudHMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVlNoZWV0X1ZTaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0uZXh0ZW5kKCkuZXh0ZW5kKHtuYW1lOid2LWxpc3QnLHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybntpc0luTGlzdDp0cnVlLGxpc3Q6dGhpc307fSxpbmplY3Q6e2lzSW5NZW51OntkZWZhdWx0OmZhbHNlfSxpc0luTmF2OntkZWZhdWx0OmZhbHNlfX0scHJvcHM6e2RlbnNlOkJvb2xlYW4sZGlzYWJsZWQ6Qm9vbGVhbixleHBhbmQ6Qm9vbGVhbixmbGF0OkJvb2xlYW4sbmF2OkJvb2xlYW4scm91bmRlZDpCb29sZWFuLHNoYXBlZDpCb29sZWFuLHN1YmhlYWRlcjpCb29sZWFuLHRocmVlTGluZTpCb29sZWFuLHRpbGU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LHR3b0xpbmU6Qm9vbGVhbn0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2dyb3VwczpbXX07fSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJuIF9fYXNzaWduKHt9LF9WU2hlZXRfVlNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSx7J3YtbGlzdC0tZGVuc2UnOnRoaXMuZGVuc2UsJ3YtbGlzdC0tZGlzYWJsZWQnOnRoaXMuZGlzYWJsZWQsJ3YtbGlzdC0tZmxhdCc6dGhpcy5mbGF0LCd2LWxpc3QtLW5hdic6dGhpcy5uYXYsJ3YtbGlzdC0tcm91bmRlZCc6dGhpcy5yb3VuZGVkLCd2LWxpc3QtLXNoYXBlZCc6dGhpcy5zaGFwZWQsJ3YtbGlzdC0tc3ViaGVhZGVyJzp0aGlzLnN1YmhlYWRlciwndi1saXN0LS10d28tbGluZSc6dGhpcy50d29MaW5lLCd2LWxpc3QtLXRocmVlLWxpbmUnOnRoaXMudGhyZWVMaW5lfSk7fX0sbWV0aG9kczp7cmVnaXN0ZXI6ZnVuY3Rpb24gcmVnaXN0ZXIoY29udGVudCl7dGhpcy5ncm91cHMucHVzaChjb250ZW50KTt9LHVucmVnaXN0ZXI6ZnVuY3Rpb24gdW5yZWdpc3Rlcihjb250ZW50KXt2YXIgaW5kZXg9dGhpcy5ncm91cHMuZmluZEluZGV4KGZ1bmN0aW9uKGcpe3JldHVybiBnLl91aWQ9PT1jb250ZW50Ll91aWQ7fSk7aWYoaW5kZXg+LTEpdGhpcy5ncm91cHMuc3BsaWNlKGluZGV4LDEpO30sbGlzdENsaWNrOmZ1bmN0aW9uIGxpc3RDbGljayh1aWQpe3ZhciBlXzEsX2E7aWYodGhpcy5leHBhbmQpcmV0dXJuO3RyeXtmb3IodmFyIF9iPV9fdmFsdWVzKHRoaXMuZ3JvdXBzKSxfYz1fYi5uZXh0KCk7IV9jLmRvbmU7X2M9X2IubmV4dCgpKXt2YXIgZ3JvdXA9X2MudmFsdWU7Z3JvdXAudG9nZ2xlKHVpZCk7fX1jYXRjaChlXzFfMSl7ZV8xPXtlcnJvcjplXzFfMX07fWZpbmFsbHl7dHJ5e2lmKF9jJiYhX2MuZG9uZSYmKF9hPV9iLnJldHVybikpX2EuY2FsbChfYik7fWZpbmFsbHl7aWYoZV8xKXRocm93IGVfMS5lcnJvcjt9fX19LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGRhdGE9e3N0YXRpY0NsYXNzOid2LWxpc3QnLGNsYXNzOnRoaXMuY2xhc3NlcyxzdHlsZTp0aGlzLnN0eWxlcyxhdHRyczpfX2Fzc2lnbih7cm9sZTp0aGlzLmlzSW5OYXZ8fHRoaXMuaXNJbk1lbnU/dW5kZWZpbmVkOidsaXN0J30sdGhpcy5hdHRycyQpfTtyZXR1cm4gaCgnZGl2Jyx0aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbG9yLGRhdGEpLFt0aGlzLiRzbG90cy5kZWZhdWx0XSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZMaXN0L1ZMaXN0R3JvdXAuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEdyb3VwLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkxpc3RWTGlzdEdyb3VwU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3RHcm91cC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3RHcm91cC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWTGlzdFZMaXN0R3JvdXBUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGlzdEdyb3VwX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZMaXN0R3JvdXAuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZMaXN0L1ZMaXN0R3JvdXAuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGlzdEdyb3VwX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZMaXN0R3JvdXBfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZMaXN0SXRlbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkxpc3RJdGVtICovIi4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3RJdGVtLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZMaXN0SXRlbUljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZMaXN0SXRlbUljb24gKi8iLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW1JY29uLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19iaW5kc19hdHRyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9iaW5kcy1hdHRycyAqLyIuL3NyYy9taXhpbnMvYmluZHMtYXR0cnMvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2Jvb3RhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2Jvb3RhYmxlICovIi4vc3JjL21peGlucy9ib290YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190b2dnbGVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RvZ2dsZWFibGUgKi8iLi9zcmMvbWl4aW5zL3RvZ2dsZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3JlZ2lzdHJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3JlZ2lzdHJhYmxlICovIi4vc3JjL21peGlucy9yZWdpc3RyYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX3JpcHBsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL2RpcmVjdGl2ZXMvcmlwcGxlICovIi4vc3JjL2RpcmVjdGl2ZXMvcmlwcGxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3RyYW5zaXRpb25zICovIi4vc3JjL2NvbXBvbmVudHMvdHJhbnNpdGlvbnMvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBDb21wb25lbnRzCi8vIE1peGlucwovLyBEaXJlY3RpdmVzCi8vIFRyYW5zaXRpb25zCi8vIFV0aWxzCnZhciBiYXNlTWl4aW5zPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19bImRlZmF1bHQiXSkoX21peGluc19iaW5kc19hdHRyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sX21peGluc19ib290YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0sX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdLE9iamVjdChfbWl4aW5zX3JlZ2lzdHJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImluamVjdCJdKSgnbGlzdCcpLF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJkZWZhdWx0Il0pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09YmFzZU1peGlucy5leHRlbmQoKS5leHRlbmQoe25hbWU6J3YtbGlzdC1ncm91cCcsZGlyZWN0aXZlczp7cmlwcGxlOl9kaXJlY3RpdmVzX3JpcHBsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fWyJkZWZhdWx0Il19LHByb3BzOnthY3RpdmVDbGFzczp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJ30sYXBwZW5kSWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJGV4cGFuZCd9LGNvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OidwcmltYXJ5J30sZGlzYWJsZWQ6Qm9vbGVhbixncm91cDpTdHJpbmcsbm9BY3Rpb246Qm9vbGVhbixwcmVwZW5kSWNvbjpTdHJpbmcscmlwcGxlOnt0eXBlOltCb29sZWFuLE9iamVjdF0sZGVmYXVsdDp0cnVlfSxzdWJHcm91cDpCb29sZWFufSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJueyd2LWxpc3QtZ3JvdXAtLWFjdGl2ZSc6dGhpcy5pc0FjdGl2ZSwndi1saXN0LWdyb3VwLS1kaXNhYmxlZCc6dGhpcy5kaXNhYmxlZCwndi1saXN0LWdyb3VwLS1uby1hY3Rpb24nOnRoaXMubm9BY3Rpb24sJ3YtbGlzdC1ncm91cC0tc3ViLWdyb3VwJzp0aGlzLnN1Ykdyb3VwfTt9fSx3YXRjaDp7aXNBY3RpdmU6ZnVuY3Rpb24gaXNBY3RpdmUodmFsKXsvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL2lmKCF0aGlzLnN1Ykdyb3VwJiZ2YWwpe3RoaXMubGlzdCYmdGhpcy5saXN0Lmxpc3RDbGljayh0aGlzLl91aWQpO319LCRyb3V0ZTonb25Sb3V0ZUNoYW5nZSd9LGNyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpe3RoaXMubGlzdCYmdGhpcy5saXN0LnJlZ2lzdGVyKHRoaXMpO2lmKHRoaXMuZ3JvdXAmJnRoaXMuJHJvdXRlJiZ0aGlzLnZhbHVlPT1udWxsKXt0aGlzLmlzQWN0aXZlPXRoaXMubWF0Y2hSb3V0ZSh0aGlzLiRyb3V0ZS5wYXRoKTt9fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXt0aGlzLmxpc3QmJnRoaXMubGlzdC51bnJlZ2lzdGVyKHRoaXMpO30sbWV0aG9kczp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soZSl7dmFyIF90aGlzPXRoaXM7aWYodGhpcy5kaXNhYmxlZClyZXR1cm47dGhpcy5pc0Jvb3RlZD10cnVlO3RoaXMuJGVtaXQoJ2NsaWNrJyxlKTt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe3JldHVybiBfdGhpcy5pc0FjdGl2ZT0hX3RoaXMuaXNBY3RpdmU7fSk7fSxnZW5JY29uOmZ1bmN0aW9uIGdlbkljb24oaWNvbil7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxpY29uKTt9LGdlbkFwcGVuZEljb246ZnVuY3Rpb24gZ2VuQXBwZW5kSWNvbigpe3ZhciBpY29uPSF0aGlzLnN1Ykdyb3VwP3RoaXMuYXBwZW5kSWNvbjpmYWxzZTtpZighaWNvbiYmIXRoaXMuJHNsb3RzLmFwcGVuZEljb24pcmV0dXJuIG51bGw7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZMaXN0SXRlbUljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLHtzdGF0aWNDbGFzczondi1saXN0LWdyb3VwX19oZWFkZXJfX2FwcGVuZC1pY29uJ30sW3RoaXMuJHNsb3RzLmFwcGVuZEljb258fHRoaXMuZ2VuSWNvbihpY29uKV0pO30sZ2VuSGVhZGVyOmZ1bmN0aW9uIGdlbkhlYWRlcigpe3ZhciBfYTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkxpc3RJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSx7c3RhdGljQ2xhc3M6J3YtbGlzdC1ncm91cF9faGVhZGVyJyxhdHRyczp7J2FyaWEtZXhwYW5kZWQnOlN0cmluZyh0aGlzLmlzQWN0aXZlKSxyb2xlOididXR0b24nfSxjbGFzczooX2E9e30sX2FbdGhpcy5hY3RpdmVDbGFzc109dGhpcy5pc0FjdGl2ZSxfYSkscHJvcHM6e2lucHV0VmFsdWU6dGhpcy5pc0FjdGl2ZX0sZGlyZWN0aXZlczpbe25hbWU6J3JpcHBsZScsdmFsdWU6dGhpcy5yaXBwbGV9XSxvbjpfX2Fzc2lnbih7fSx0aGlzLmxpc3RlbmVycyQse2NsaWNrOnRoaXMuY2xpY2t9KX0sW3RoaXMuZ2VuUHJlcGVuZEljb24oKSx0aGlzLiRzbG90cy5hY3RpdmF0b3IsdGhpcy5nZW5BcHBlbmRJY29uKCldKTt9LGdlbkl0ZW1zOmZ1bmN0aW9uIGdlbkl0ZW1zKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWxpc3QtZ3JvdXBfX2l0ZW1zJyxkaXJlY3RpdmVzOlt7bmFtZTonc2hvdycsdmFsdWU6dGhpcy5pc0FjdGl2ZX1dfSx0aGlzLnNob3dMYXp5Q29udGVudChbdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx0aGlzLiRzbG90cy5kZWZhdWx0KV0pKTt9LGdlblByZXBlbmRJY29uOmZ1bmN0aW9uIGdlblByZXBlbmRJY29uKCl7dmFyIGljb249dGhpcy5wcmVwZW5kSWNvbj90aGlzLnByZXBlbmRJY29uOnRoaXMuc3ViR3JvdXA/JyRzdWJncm91cCc6ZmFsc2U7aWYoIWljb24mJiF0aGlzLiRzbG90cy5wcmVwZW5kSWNvbilyZXR1cm4gbnVsbDtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkxpc3RJdGVtSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0se3N0YXRpY0NsYXNzOid2LWxpc3QtZ3JvdXBfX2hlYWRlcl9fcHJlcGVuZC1pY29uJ30sW3RoaXMuJHNsb3RzLnByZXBlbmRJY29ufHx0aGlzLmdlbkljb24oaWNvbildKTt9LG9uUm91dGVDaGFuZ2U6ZnVuY3Rpb24gb25Sb3V0ZUNoYW5nZSh0byl7LyogaXN0YW5idWwgaWdub3JlIGlmICovaWYoIXRoaXMuZ3JvdXApcmV0dXJuO3ZhciBpc0FjdGl2ZT10aGlzLm1hdGNoUm91dGUodG8ucGF0aCk7LyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9pZihpc0FjdGl2ZSYmdGhpcy5pc0FjdGl2ZSE9PWlzQWN0aXZlKXt0aGlzLmxpc3QmJnRoaXMubGlzdC5saXN0Q2xpY2sodGhpcy5fdWlkKTt9dGhpcy5pc0FjdGl2ZT1pc0FjdGl2ZTt9LHRvZ2dsZTpmdW5jdGlvbiB0b2dnbGUodWlkKXt2YXIgX3RoaXM9dGhpczt2YXIgaXNBY3RpdmU9dGhpcy5fdWlkPT09dWlkO2lmKGlzQWN0aXZlKXRoaXMuaXNCb290ZWQ9dHJ1ZTt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe3JldHVybiBfdGhpcy5pc0FjdGl2ZT1pc0FjdGl2ZTt9KTt9LG1hdGNoUm91dGU6ZnVuY3Rpb24gbWF0Y2hSb3V0ZSh0byl7cmV0dXJuIHRvLm1hdGNoKHRoaXMuZ3JvdXApIT09bnVsbDt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3JldHVybiBoKCdkaXYnLHRoaXMuc2V0VGV4dENvbG9yKHRoaXMuaXNBY3RpdmUmJnRoaXMuY29sb3Ise3N0YXRpY0NsYXNzOid2LWxpc3QtZ3JvdXAnLGNsYXNzOnRoaXMuY2xhc3Nlc30pLFt0aGlzLmdlbkhlYWRlcigpLGgoX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fWyJWRXhwYW5kVHJhbnNpdGlvbiJdLFt0aGlzLmdlbkl0ZW1zKCldKV0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW0uc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZMaXN0L1ZMaXN0SXRlbS5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkxpc3RWTGlzdEl0ZW1TYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW0udHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3RJdGVtLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkxpc3RWTGlzdEl0ZW1Ucyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGlzdEl0ZW1fc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkxpc3RJdGVtLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW0uc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGlzdEl0ZW1fc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVkxpc3RJdGVtX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3JvdXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3JvdXRhYmxlICovIi4vc3JjL21peGlucy9yb3V0YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfZ3JvdXBhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2dyb3VwYWJsZSAqLyIuL3NyYy9taXhpbnMvZ3JvdXBhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RvZ2dsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdG9nZ2xlYWJsZSAqLyIuL3NyYy9taXhpbnMvdG9nZ2xlYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX3JpcHBsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL2RpcmVjdGl2ZXMvcmlwcGxlICovIi4vc3JjL2RpcmVjdGl2ZXMvcmlwcGxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBNaXhpbnMKLy8gRGlyZWN0aXZlcwovLyBVdGlsaXRpZXMKLy8gVHlwZXMKdmFyIGJhc2VNaXhpbnM9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fWyJkZWZhdWx0Il0pKF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfbWl4aW5zX3JvdXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sT2JqZWN0KF9taXhpbnNfZ3JvdXBhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImZhY3RvcnkiXSkoJ2xpc3RJdGVtR3JvdXAnKSxPYmplY3QoX21peGluc190b2dnbGVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImZhY3RvcnkiXSkoJ2lucHV0VmFsdWUnKSk7LyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1iYXNlTWl4aW5zLmV4dGVuZCgpLmV4dGVuZCh7bmFtZTondi1saXN0LWl0ZW0nLGRpcmVjdGl2ZXM6e1JpcHBsZTpfZGlyZWN0aXZlc19yaXBwbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdfSxpbmhlcml0QXR0cnM6ZmFsc2UsaW5qZWN0Ontpc0luR3JvdXA6e2RlZmF1bHQ6ZmFsc2V9LGlzSW5MaXN0OntkZWZhdWx0OmZhbHNlfSxpc0luTWVudTp7ZGVmYXVsdDpmYWxzZX0saXNJbk5hdjp7ZGVmYXVsdDpmYWxzZX19LHByb3BzOnthY3RpdmVDbGFzczp7dHlwZTpTdHJpbmcsZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe2lmKCF0aGlzLmxpc3RJdGVtR3JvdXApcmV0dXJuJyc7cmV0dXJuIHRoaXMubGlzdEl0ZW1Hcm91cC5hY3RpdmVDbGFzczt9fSxkZW5zZTpCb29sZWFuLGluYWN0aXZlOkJvb2xlYW4sbGluazpCb29sZWFuLHNlbGVjdGFibGU6e3R5cGU6Qm9vbGVhbn0sdGFnOnt0eXBlOlN0cmluZyxkZWZhdWx0OidkaXYnfSx0aHJlZUxpbmU6Qm9vbGVhbix0d29MaW5lOkJvb2xlYW4sdmFsdWU6bnVsbH0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3Byb3h5Q2xhc3M6J3YtbGlzdC1pdGVtLS1hY3RpdmUnfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LWxpc3QtaXRlbSc6dHJ1ZX0sX21peGluc19yb3V0YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LWxpc3QtaXRlbS0tZGVuc2UnOnRoaXMuZGVuc2UsJ3YtbGlzdC1pdGVtLS1kaXNhYmxlZCc6dGhpcy5kaXNhYmxlZCwndi1saXN0LWl0ZW0tLWxpbmsnOnRoaXMuaXNDbGlja2FibGUmJiF0aGlzLmluYWN0aXZlLCd2LWxpc3QtaXRlbS0tc2VsZWN0YWJsZSc6dGhpcy5zZWxlY3RhYmxlLCd2LWxpc3QtaXRlbS0tdGhyZWUtbGluZSc6dGhpcy50aHJlZUxpbmUsJ3YtbGlzdC1pdGVtLS10d28tbGluZSc6dGhpcy50d29MaW5lfSx0aGlzLnRoZW1lQ2xhc3Nlcyk7fSxpc0NsaWNrYWJsZTpmdW5jdGlvbiBpc0NsaWNrYWJsZSgpe3JldHVybiBCb29sZWFuKF9taXhpbnNfcm91dGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuaXNDbGlja2FibGUuY2FsbCh0aGlzKXx8dGhpcy5saXN0SXRlbUdyb3VwKTt9fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXsvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2lmKHRoaXMuJGF0dHJzLmhhc093blByb3BlcnR5KCdhdmF0YXInKSl7T2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1sicmVtb3ZlZCJdKSgnYXZhdGFyJyx0aGlzKTt9fSxtZXRob2RzOntjbGljazpmdW5jdGlvbiBjbGljayhlKXtpZihlLmRldGFpbCl0aGlzLiRlbC5ibHVyKCk7dGhpcy4kZW1pdCgnY2xpY2snLGUpO3RoaXMudG98fHRoaXMudG9nZ2xlKCk7fSxnZW5BdHRyczpmdW5jdGlvbiBnZW5BdHRycygpe3ZhciBhdHRycz1fX2Fzc2lnbih7J2FyaWEtZGlzYWJsZWQnOnRoaXMuZGlzYWJsZWQ/dHJ1ZTp1bmRlZmluZWQsdGFiaW5kZXg6dGhpcy5pc0NsaWNrYWJsZSYmIXRoaXMuZGlzYWJsZWQ/MDotMX0sdGhpcy4kYXR0cnMpO2lmKHRoaXMuJGF0dHJzLmhhc093blByb3BlcnR5KCdyb2xlJykpey8vIGRvIG5vdGhpbmcsIHJvbGUgYWxyZWFkeSBwcm92aWRlZAp9ZWxzZSBpZih0aGlzLmlzSW5OYXYpey8vIGRvIG5vdGhpbmcsIHJvbGUgaXMgaW5oZXJpdAp9ZWxzZSBpZih0aGlzLmlzSW5Hcm91cCl7YXR0cnMucm9sZT0nbGlzdGl0ZW0nO2F0dHJzWydhcmlhLXNlbGVjdGVkJ109U3RyaW5nKHRoaXMuaXNBY3RpdmUpO31lbHNlIGlmKHRoaXMuaXNJbk1lbnUpe2F0dHJzLnJvbGU9dGhpcy5pc0NsaWNrYWJsZT8nbWVudWl0ZW0nOnVuZGVmaW5lZDt9ZWxzZSBpZih0aGlzLmlzSW5MaXN0KXthdHRycy5yb2xlPSdsaXN0aXRlbSc7fXJldHVybiBhdHRyczt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBfdGhpcz10aGlzO3ZhciBfYT10aGlzLmdlbmVyYXRlUm91dGVMaW5rKCksdGFnPV9hLnRhZyxkYXRhPV9hLmRhdGE7ZGF0YS5hdHRycz1fX2Fzc2lnbih7fSxkYXRhLmF0dHJzLHRoaXMuZ2VuQXR0cnMoKSk7ZGF0YS5vbj1fX2Fzc2lnbih7fSxkYXRhLm9uLHtjbGljazp0aGlzLmNsaWNrLGtleWRvd246ZnVuY3Rpb24ga2V5ZG93bihlKXsvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL2lmKGUua2V5Q29kZT09PV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1sia2V5Q29kZXMiXS5lbnRlcilfdGhpcy5jbGljayhlKTtfdGhpcy4kZW1pdCgna2V5ZG93bicsZSk7fX0pO3ZhciBjaGlsZHJlbj10aGlzLiRzY29wZWRTbG90cy5kZWZhdWx0P3RoaXMuJHNjb3BlZFNsb3RzLmRlZmF1bHQoe2FjdGl2ZTp0aGlzLmlzQWN0aXZlLHRvZ2dsZTp0aGlzLnRvZ2dsZX0pOnRoaXMuJHNsb3RzLmRlZmF1bHQ7dGFnPXRoaXMuaW5hY3RpdmU/J2Rpdic6dGFnO3JldHVybiBoKHRhZyx0aGlzLnNldFRleHRDb2xvcih0aGlzLmNvbG9yLGRhdGEpLGNoaWxkcmVuKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3RJdGVtQWN0aW9uLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZMaXN0L1ZMaXN0SXRlbUFjdGlvbi50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZMaXN0Vkxpc3RJdGVtQWN0aW9uVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISB2dWUgKi8idnVlIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvLyBUeXBlcwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQuYS5leHRlbmQoe25hbWU6J3YtbGlzdC1pdGVtLWFjdGlvbicsZnVuY3Rpb25hbDp0cnVlLHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCxfYSl7dmFyIGRhdGE9X2EuZGF0YSxfYj1fYS5jaGlsZHJlbixjaGlsZHJlbj1fYj09PXZvaWQgMD9bXTpfYjtkYXRhLnN0YXRpY0NsYXNzPWRhdGEuc3RhdGljQ2xhc3M/InYtbGlzdC1pdGVtX19hY3Rpb24gIitkYXRhLnN0YXRpY0NsYXNzOid2LWxpc3QtaXRlbV9fYWN0aW9uJzt2YXIgZmlsdGVyZWRDaGlsZD1jaGlsZHJlbi5maWx0ZXIoZnVuY3Rpb24oVk5vZGUpe3JldHVybiBWTm9kZS5pc0NvbW1lbnQ9PT1mYWxzZSYmVk5vZGUudGV4dCE9PScgJzt9KTtpZihmaWx0ZXJlZENoaWxkLmxlbmd0aD4xKWRhdGEuc3RhdGljQ2xhc3MrPScgdi1saXN0LWl0ZW1fX2FjdGlvbi0tc3RhY2snO3JldHVybiBoKCdkaXYnLGRhdGEsY2hpbGRyZW4pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW1BdmF0YXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3RJdGVtQXZhdGFyLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkxpc3RWTGlzdEl0ZW1BdmF0YXJUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXZhdGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkF2YXRhciAqLyIuL3NyYy9jb21wb25lbnRzL1ZBdmF0YXIvaW5kZXgudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIENvbXBvbmVudHMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVkF2YXRhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0uZXh0ZW5kKHtuYW1lOid2LWxpc3QtaXRlbS1hdmF0YXInLHByb3BzOntob3Jpem9udGFsOkJvb2xlYW4sc2l6ZTp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDo0MH19LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LWxpc3QtaXRlbV9fYXZhdGFyLS1ob3Jpem9udGFsJzp0aGlzLmhvcml6b250YWx9LF9WQXZhdGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSx7J3YtYXZhdGFyLS10aWxlJzp0aGlzLnRpbGV8fHRoaXMuaG9yaXpvbnRhbH0pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIHJlbmRlcj1fVkF2YXRhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0ub3B0aW9ucy5yZW5kZXIuY2FsbCh0aGlzLGgpO3JlbmRlci5kYXRhPXJlbmRlci5kYXRhfHx7fTtyZW5kZXIuZGF0YS5zdGF0aWNDbGFzcys9JyB2LWxpc3QtaXRlbV9fYXZhdGFyJztyZXR1cm4gcmVuZGVyO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW1Hcm91cC5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW1Hcm91cC5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWTGlzdFZMaXN0SXRlbUdyb3VwU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3RJdGVtR3JvdXAudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW1Hcm91cC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVkxpc3RWTGlzdEl0ZW1Hcm91cFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZMaXN0SXRlbUdyb3VwX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZMaXN0SXRlbUdyb3VwLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW1Hcm91cC5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZMaXN0SXRlbUdyb3VwX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZMaXN0SXRlbUdyb3VwX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJdGVtR3JvdXBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJdGVtR3JvdXAvVkl0ZW1Hcm91cCAqLyIuL3NyYy9jb21wb25lbnRzL1ZJdGVtR3JvdXAvVkl0ZW1Hcm91cC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBFeHRlbnNpb25zCi8vIE1peGlucwovLyBVdGlsaXRpZXMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoX1ZJdGVtR3JvdXBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJCYXNlSXRlbUdyb3VwIl0sX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3YtbGlzdC1pdGVtLWdyb3VwJyxwcm92aWRlOmZ1bmN0aW9uIHByb3ZpZGUoKXtyZXR1cm57aXNJbkdyb3VwOnRydWUsbGlzdEl0ZW1Hcm91cDp0aGlzfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oe30sX1ZJdGVtR3JvdXBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJCYXNlSXRlbUdyb3VwIl0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LWxpc3QtaXRlbS1ncm91cCc6dHJ1ZX0pO319LG1ldGhvZHM6e2dlbkRhdGE6ZnVuY3Rpb24gZ2VuRGF0YSgpe3JldHVybiB0aGlzLnNldFRleHRDb2xvcih0aGlzLmNvbG9yLF9fYXNzaWduKHt9LF9WSXRlbUdyb3VwX1ZJdGVtR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siQmFzZUl0ZW1Hcm91cCJdLm9wdGlvbnMubWV0aG9kcy5nZW5EYXRhLmNhbGwodGhpcykse2F0dHJzOntyb2xlOidsaXN0Ym94J319KSk7fX19KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW1JY29uLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW1JY29uLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZMaXN0Vkxpc3RJdGVtSWNvblRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7Ly8gVHlwZXMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOid2LWxpc3QtaXRlbS1pY29uJyxmdW5jdGlvbmFsOnRydWUscmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoLF9hKXt2YXIgZGF0YT1fYS5kYXRhLGNoaWxkcmVuPV9hLmNoaWxkcmVuO2RhdGEuc3RhdGljQ2xhc3M9KCJ2LWxpc3QtaXRlbV9faWNvbiAiKyhkYXRhLnN0YXRpY0NsYXNzfHwnJykpLnRyaW0oKTtyZXR1cm4gaCgnZGl2JyxkYXRhLGNoaWxkcmVuKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVkxpc3QvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WTGlzdC9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZMaXN0SXRlbUFjdGlvblRleHQsIFZMaXN0SXRlbUNvbnRlbnQsIFZMaXN0SXRlbVRpdGxlLCBWTGlzdEl0ZW1TdWJ0aXRsZSwgVkxpc3QsIFZMaXN0R3JvdXAsIFZMaXN0SXRlbSwgVkxpc3RJdGVtQWN0aW9uLCBWTGlzdEl0ZW1BdmF0YXIsIFZMaXN0SXRlbUljb24sIFZMaXN0SXRlbUdyb3VwLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZMaXN0SW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGlzdEl0ZW1BY3Rpb25UZXh0IixmdW5jdGlvbigpe3JldHVybiBWTGlzdEl0ZW1BY3Rpb25UZXh0O30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGlzdEl0ZW1Db250ZW50IixmdW5jdGlvbigpe3JldHVybiBWTGlzdEl0ZW1Db250ZW50O30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGlzdEl0ZW1UaXRsZSIsZnVuY3Rpb24oKXtyZXR1cm4gVkxpc3RJdGVtVGl0bGU7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZMaXN0SXRlbVN1YnRpdGxlIixmdW5jdGlvbigpe3JldHVybiBWTGlzdEl0ZW1TdWJ0aXRsZTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkxpc3QgKi8iLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZMaXN0IixmdW5jdGlvbigpe3JldHVybiBfVkxpc3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGlzdEdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WTGlzdEdyb3VwICovIi4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3RHcm91cC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZMaXN0R3JvdXAiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WTGlzdEdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkxpc3RJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WTGlzdEl0ZW0gKi8iLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW0udHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGlzdEl0ZW0iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WTGlzdEl0ZW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGlzdEl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkxpc3RJdGVtR3JvdXAgKi8iLi9zcmMvY29tcG9uZW50cy9WTGlzdC9WTGlzdEl0ZW1Hcm91cC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZMaXN0SXRlbUdyb3VwIixmdW5jdGlvbigpe3JldHVybiBfVkxpc3RJdGVtR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGlzdEl0ZW1BY3Rpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZMaXN0SXRlbUFjdGlvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZMaXN0L1ZMaXN0SXRlbUFjdGlvbi50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZMaXN0SXRlbUFjdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZMaXN0SXRlbUFjdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZMaXN0SXRlbUF2YXRhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkxpc3RJdGVtQXZhdGFyICovIi4vc3JjL2NvbXBvbmVudHMvVkxpc3QvVkxpc3RJdGVtQXZhdGFyLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkxpc3RJdGVtQXZhdGFyIixmdW5jdGlvbigpe3JldHVybiBfVkxpc3RJdGVtQXZhdGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkxpc3RJdGVtSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkxpc3RJdGVtSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZMaXN0L1ZMaXN0SXRlbUljb24udHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGlzdEl0ZW1JY29uIixmdW5jdGlvbigpe3JldHVybiBfVkxpc3RJdGVtSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJkZWZhdWx0Il07fSk7dmFyIFZMaXN0SXRlbUFjdGlvblRleHQ9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siY3JlYXRlU2ltcGxlRnVuY3Rpb25hbCJdKSgndi1saXN0LWl0ZW1fX2FjdGlvbi10ZXh0Jywnc3BhbicpO3ZhciBWTGlzdEl0ZW1Db250ZW50PU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNyZWF0ZVNpbXBsZUZ1bmN0aW9uYWwiXSkoJ3YtbGlzdC1pdGVtX19jb250ZW50JywnZGl2Jyk7dmFyIFZMaXN0SXRlbVRpdGxlPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNyZWF0ZVNpbXBsZUZ1bmN0aW9uYWwiXSkoJ3YtbGlzdC1pdGVtX190aXRsZScsJ2RpdicpO3ZhciBWTGlzdEl0ZW1TdWJ0aXRsZT1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjcmVhdGVTaW1wbGVGdW5jdGlvbmFsIl0pKCd2LWxpc3QtaXRlbV9fc3VidGl0bGUnLCdkaXYnKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXskX3Z1ZXRpZnlfc3ViY29tcG9uZW50czp7Vkxpc3Q6X1ZMaXN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxWTGlzdEdyb3VwOl9WTGlzdEdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxWTGlzdEl0ZW06X1ZMaXN0SXRlbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0sVkxpc3RJdGVtQWN0aW9uOl9WTGlzdEl0ZW1BY3Rpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdLFZMaXN0SXRlbUFjdGlvblRleHQ6Vkxpc3RJdGVtQWN0aW9uVGV4dCxWTGlzdEl0ZW1BdmF0YXI6X1ZMaXN0SXRlbUF2YXRhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJkZWZhdWx0Il0sVkxpc3RJdGVtQ29udGVudDpWTGlzdEl0ZW1Db250ZW50LFZMaXN0SXRlbUdyb3VwOl9WTGlzdEl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sVkxpc3RJdGVtSWNvbjpfVkxpc3RJdGVtSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJkZWZhdWx0Il0sVkxpc3RJdGVtU3VidGl0bGU6Vkxpc3RJdGVtU3VidGl0bGUsVkxpc3RJdGVtVGl0bGU6Vkxpc3RJdGVtVGl0bGV9fTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WTWVudS9WTWVudS5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WTWVudS9WTWVudS5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWTWVudVZNZW51U2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVk1lbnUvVk1lbnUudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WTWVudS9WTWVudS50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVk1lbnVWTWVudVRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZNZW51X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZNZW51LnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WTWVudS9WTWVudS5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZNZW51X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZNZW51X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19kZWxheWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvZGVsYXlhYmxlICovIi4vc3JjL21peGlucy9kZWxheWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2RlcGVuZGVudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9kZXBlbmRlbnQgKi8iLi9zcmMvbWl4aW5zL2RlcGVuZGVudC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfZGV0YWNoYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9kZXRhY2hhYmxlICovIi4vc3JjL21peGlucy9kZXRhY2hhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19tZW51YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9tZW51YWJsZSAqLyIuL3NyYy9taXhpbnMvbWVudWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3JldHVybmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvcmV0dXJuYWJsZSAqLyIuL3NyYy9taXhpbnMvcmV0dXJuYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy90b2dnbGVhYmxlICovIi4vc3JjL21peGlucy90b2dnbGVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZGlyZWN0aXZlc19jbGlja19vdXRzaWRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vZGlyZWN0aXZlcy9jbGljay1vdXRzaWRlICovIi4vc3JjL2RpcmVjdGl2ZXMvY2xpY2stb3V0c2lkZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX3Jlc2l6ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL2RpcmVjdGl2ZXMvcmVzaXplICovIi4vc3JjL2RpcmVjdGl2ZXMvcmVzaXplL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfVGhlbWVQcm92aWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL1RoZW1lUHJvdmlkZXIgKi8iLi9zcmMvdXRpbC9UaGVtZVByb3ZpZGVyLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTt2YXIgX19yZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fcmVhZHx8ZnVuY3Rpb24obyxuKXt2YXIgbT10eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb1tTeW1ib2wuaXRlcmF0b3JdO2lmKCFtKXJldHVybiBvO3ZhciBpPW0uY2FsbChvKSxyLGFyPVtdLGU7dHJ5e3doaWxlKChuPT09dm9pZCAwfHxuLS0+MCkmJiEocj1pLm5leHQoKSkuZG9uZSl7YXIucHVzaChyLnZhbHVlKTt9fWNhdGNoKGVycm9yKXtlPXtlcnJvcjplcnJvcn07fWZpbmFsbHl7dHJ5e2lmKHImJiFyLmRvbmUmJihtPWlbInJldHVybiJdKSltLmNhbGwoaSk7fWZpbmFsbHl7aWYoZSl0aHJvdyBlLmVycm9yO319cmV0dXJuIGFyO307dmFyIF9fc3ByZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fc3ByZWFkfHxmdW5jdGlvbigpe2Zvcih2YXIgYXI9W10saT0wO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe2FyPWFyLmNvbmNhdChfX3JlYWQoYXJndW1lbnRzW2ldKSk7fXJldHVybiBhcjt9Oy8vIFN0eWxlcwovLyBNaXhpbnMKLy8gRGlyZWN0aXZlcwovLyBVdGlsaXRpZXMKdmFyIGJhc2VNaXhpbnM9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfX1siZGVmYXVsdCJdKShfbWl4aW5zX2RlcGVuZGVudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sX21peGluc19kZWxheWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLF9taXhpbnNfZGV0YWNoYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0sX21peGluc19tZW51YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sX21peGluc19yZXR1cm5hYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSxfbWl4aW5zX3RvZ2dsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImRlZmF1bHQiXSk7LyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1iYXNlTWl4aW5zLmV4dGVuZCh7bmFtZTondi1tZW51Jyxwcm92aWRlOmZ1bmN0aW9uIHByb3ZpZGUoKXtyZXR1cm57aXNJbk1lbnU6dHJ1ZSwvLyBQYXNzIHRoZW1lIHRocm91Z2ggdG8gZGVmYXVsdCBzbG90CnRoZW1lOnRoaXMudGhlbWV9O30sZGlyZWN0aXZlczp7Q2xpY2tPdXRzaWRlOl9kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZGVmYXVsdCJdLFJlc2l6ZTpfZGlyZWN0aXZlc19yZXNpemVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siZGVmYXVsdCJdfSxwcm9wczp7YXV0bzpCb29sZWFuLGNsb3NlT25DbGljazp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sY2xvc2VPbkNvbnRlbnRDbGljazp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sZGlzYWJsZWQ6Qm9vbGVhbixkaXNhYmxlS2V5czpCb29sZWFuLG1heEhlaWdodDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDonYXV0byd9LG9mZnNldFg6Qm9vbGVhbixvZmZzZXRZOkJvb2xlYW4sb3Blbk9uQ2xpY2s6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LG9wZW5PbkhvdmVyOkJvb2xlYW4sb3JpZ2luOnt0eXBlOlN0cmluZyxkZWZhdWx0Oid0b3AgbGVmdCd9LHRyYW5zaXRpb246e3R5cGU6W0Jvb2xlYW4sU3RyaW5nXSxkZWZhdWx0Oid2LW1lbnUtdHJhbnNpdGlvbid9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57Y2FsY3VsYXRlZFRvcEF1dG86MCxkZWZhdWx0T2Zmc2V0OjgsaGFzSnVzdEZvY3VzZWQ6ZmFsc2UsbGlzdEluZGV4Oi0xLHJlc2l6ZVRpbWVvdXQ6MCxzZWxlY3RlZEluZGV4Om51bGwsdGlsZXM6W119O30sY29tcHV0ZWQ6e2FjdGl2ZVRpbGU6ZnVuY3Rpb24gYWN0aXZlVGlsZSgpe3JldHVybiB0aGlzLnRpbGVzW3RoaXMubGlzdEluZGV4XTt9LGNhbGN1bGF0ZWRMZWZ0OmZ1bmN0aW9uIGNhbGN1bGF0ZWRMZWZ0KCl7dmFyIG1lbnVXaWR0aD1NYXRoLm1heCh0aGlzLmRpbWVuc2lvbnMuY29udGVudC53aWR0aCxwYXJzZUZsb2F0KHRoaXMuY2FsY3VsYXRlZE1pbldpZHRoKSk7aWYoIXRoaXMuYXV0bylyZXR1cm4gdGhpcy5jYWxjTGVmdChtZW51V2lkdGgpfHwnMCc7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuY2FsY1hPdmVyZmxvdyh0aGlzLmNhbGNMZWZ0QXV0bygpLG1lbnVXaWR0aCkpfHwnMCc7fSxjYWxjdWxhdGVkTWF4SGVpZ2h0OmZ1bmN0aW9uIGNhbGN1bGF0ZWRNYXhIZWlnaHQoKXt2YXIgaGVpZ2h0PXRoaXMuYXV0bz8nMjAwcHgnOk9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMubWF4SGVpZ2h0KTtyZXR1cm4gaGVpZ2h0fHwnMCc7fSxjYWxjdWxhdGVkTWF4V2lkdGg6ZnVuY3Rpb24gY2FsY3VsYXRlZE1heFdpZHRoKCl7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMubWF4V2lkdGgpfHwnMCc7fSxjYWxjdWxhdGVkTWluV2lkdGg6ZnVuY3Rpb24gY2FsY3VsYXRlZE1pbldpZHRoKCl7aWYodGhpcy5taW5XaWR0aCl7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMubWluV2lkdGgpfHwnMCc7fXZhciBtaW5XaWR0aD1NYXRoLm1pbih0aGlzLmRpbWVuc2lvbnMuYWN0aXZhdG9yLndpZHRoK051bWJlcih0aGlzLm51ZGdlV2lkdGgpKyh0aGlzLmF1dG8/MTY6MCksTWF0aC5tYXgodGhpcy5wYWdlV2lkdGgtMjQsMCkpO3ZhciBjYWxjdWxhdGVkTWF4V2lkdGg9aXNOYU4ocGFyc2VJbnQodGhpcy5jYWxjdWxhdGVkTWF4V2lkdGgpKT9taW5XaWR0aDpwYXJzZUludCh0aGlzLmNhbGN1bGF0ZWRNYXhXaWR0aCk7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fWyJjb252ZXJ0VG9Vbml0Il0pKE1hdGgubWluKGNhbGN1bGF0ZWRNYXhXaWR0aCxtaW5XaWR0aCkpfHwnMCc7fSxjYWxjdWxhdGVkVG9wOmZ1bmN0aW9uIGNhbGN1bGF0ZWRUb3AoKXt2YXIgdG9wPSF0aGlzLmF1dG8/dGhpcy5jYWxjVG9wKCk6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5jYWxjWU92ZXJmbG93KHRoaXMuY2FsY3VsYXRlZFRvcEF1dG8pKTtyZXR1cm4gdG9wfHwnMCc7fSxoYXNDbGlja2FibGVUaWxlczpmdW5jdGlvbiBoYXNDbGlja2FibGVUaWxlcygpe3JldHVybiBCb29sZWFuKHRoaXMudGlsZXMuZmluZChmdW5jdGlvbih0aWxlKXtyZXR1cm4gdGlsZS50YWJJbmRleD4tMTt9KSk7fSxzdHlsZXM6ZnVuY3Rpb24gc3R5bGVzKCl7cmV0dXJue21heEhlaWdodDp0aGlzLmNhbGN1bGF0ZWRNYXhIZWlnaHQsbWluV2lkdGg6dGhpcy5jYWxjdWxhdGVkTWluV2lkdGgsbWF4V2lkdGg6dGhpcy5jYWxjdWxhdGVkTWF4V2lkdGgsdG9wOnRoaXMuY2FsY3VsYXRlZFRvcCxsZWZ0OnRoaXMuY2FsY3VsYXRlZExlZnQsdHJhbnNmb3JtT3JpZ2luOnRoaXMub3JpZ2luLHpJbmRleDp0aGlzLnpJbmRleHx8dGhpcy5hY3RpdmVaSW5kZXh9O319LHdhdGNoOntpc0FjdGl2ZTpmdW5jdGlvbiBpc0FjdGl2ZSh2YWwpe2lmKCF2YWwpdGhpcy5saXN0SW5kZXg9LTE7fSxpc0NvbnRlbnRBY3RpdmU6ZnVuY3Rpb24gaXNDb250ZW50QWN0aXZlKHZhbCl7dGhpcy5oYXNKdXN0Rm9jdXNlZD12YWw7fSxsaXN0SW5kZXg6ZnVuY3Rpb24gbGlzdEluZGV4KG5leHQscHJldil7aWYobmV4dCBpbiB0aGlzLnRpbGVzKXt2YXIgdGlsZT10aGlzLnRpbGVzW25leHRdO3RpbGUuY2xhc3NMaXN0LmFkZCgndi1saXN0LWl0ZW0tLWhpZ2hsaWdodGVkJyk7dGhpcy4kcmVmcy5jb250ZW50LnNjcm9sbFRvcD10aWxlLm9mZnNldFRvcC10aWxlLmNsaWVudEhlaWdodDt9cHJldiBpbiB0aGlzLnRpbGVzJiZ0aGlzLnRpbGVzW3ByZXZdLmNsYXNzTGlzdC5yZW1vdmUoJ3YtbGlzdC1pdGVtLS1oaWdobGlnaHRlZCcpO319LGNyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpey8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovaWYodGhpcy4kYXR0cnMuaGFzT3duUHJvcGVydHkoJ2Z1bGwtd2lkdGgnKSl7T2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEzX19bInJlbW92ZWQiXSkoJ2Z1bGwtd2lkdGgnLHRoaXMpO319LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3RoaXMuaXNBY3RpdmUmJnRoaXMuY2FsbEFjdGl2YXRlKCk7fSxtZXRob2RzOnthY3RpdmF0ZTpmdW5jdGlvbiBhY3RpdmF0ZSgpe3ZhciBfdGhpcz10aGlzOy8vIFVwZGF0ZSBjb29yZGluYXRlcyBhbmQgZGltZW5zaW9ucyBvZiBtZW51Ci8vIGFuZCBpdHMgYWN0aXZhdG9yCnRoaXMudXBkYXRlRGltZW5zaW9ucygpOy8vIFN0YXJ0IHRoZSB0cmFuc2l0aW9uCnJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpey8vIE9uY2UgdHJhbnNpdGlvbmluZywgY2FsY3VsYXRlIHNjcm9sbCBhbmQgdG9wIHBvc2l0aW9uCl90aGlzLnN0YXJ0VHJhbnNpdGlvbigpLnRoZW4oZnVuY3Rpb24oKXtpZihfdGhpcy4kcmVmcy5jb250ZW50KXtfdGhpcy5jYWxjdWxhdGVkVG9wQXV0bz1fdGhpcy5jYWxjVG9wQXV0bygpO190aGlzLmF1dG8mJihfdGhpcy4kcmVmcy5jb250ZW50LnNjcm9sbFRvcD1fdGhpcy5jYWxjU2Nyb2xsUG9zaXRpb24oKSk7fX0pO30pO30sY2FsY1Njcm9sbFBvc2l0aW9uOmZ1bmN0aW9uIGNhbGNTY3JvbGxQb3NpdGlvbigpe3ZhciAkZWw9dGhpcy4kcmVmcy5jb250ZW50O3ZhciBhY3RpdmVUaWxlPSRlbC5xdWVyeVNlbGVjdG9yKCcudi1saXN0LWl0ZW0tLWFjdGl2ZScpO3ZhciBtYXhTY3JvbGxUb3A9JGVsLnNjcm9sbEhlaWdodC0kZWwub2Zmc2V0SGVpZ2h0O3JldHVybiBhY3RpdmVUaWxlP01hdGgubWluKG1heFNjcm9sbFRvcCxNYXRoLm1heCgwLGFjdGl2ZVRpbGUub2Zmc2V0VG9wLSRlbC5vZmZzZXRIZWlnaHQvMithY3RpdmVUaWxlLm9mZnNldEhlaWdodC8yKSk6JGVsLnNjcm9sbFRvcDt9LGNhbGNMZWZ0QXV0bzpmdW5jdGlvbiBjYWxjTGVmdEF1dG8oKXtyZXR1cm4gcGFyc2VJbnQodGhpcy5kaW1lbnNpb25zLmFjdGl2YXRvci5sZWZ0LXRoaXMuZGVmYXVsdE9mZnNldCoyKTt9LGNhbGNUb3BBdXRvOmZ1bmN0aW9uIGNhbGNUb3BBdXRvKCl7dmFyICRlbD10aGlzLiRyZWZzLmNvbnRlbnQ7dmFyIGFjdGl2ZVRpbGU9JGVsLnF1ZXJ5U2VsZWN0b3IoJy52LWxpc3QtaXRlbS0tYWN0aXZlJyk7aWYoIWFjdGl2ZVRpbGUpe3RoaXMuc2VsZWN0ZWRJbmRleD1udWxsO31pZih0aGlzLm9mZnNldFl8fCFhY3RpdmVUaWxlKXtyZXR1cm4gdGhpcy5jb21wdXRlZFRvcDt9dGhpcy5zZWxlY3RlZEluZGV4PUFycmF5LmZyb20odGhpcy50aWxlcykuaW5kZXhPZihhY3RpdmVUaWxlKTt2YXIgdGlsZURpc3RhbmNlRnJvbU1lbnVUb3A9YWN0aXZlVGlsZS5vZmZzZXRUb3AtdGhpcy5jYWxjU2Nyb2xsUG9zaXRpb24oKTt2YXIgZmlyc3RUaWxlT2Zmc2V0VG9wPSRlbC5xdWVyeVNlbGVjdG9yKCcudi1saXN0LWl0ZW0nKS5vZmZzZXRUb3A7cmV0dXJuIHRoaXMuY29tcHV0ZWRUb3AtdGlsZURpc3RhbmNlRnJvbU1lbnVUb3AtZmlyc3RUaWxlT2Zmc2V0VG9wLTE7fSxjaGFuZ2VMaXN0SW5kZXg6ZnVuY3Rpb24gY2hhbmdlTGlzdEluZGV4KGUpey8vIEZvciBpbmZpbml0ZSBzY3JvbGwgYW5kIGF1dG9jb21wbGV0ZSwgcmUtZXZhbHVhdGUgY2hpbGRyZW4KdGhpcy5nZXRUaWxlcygpO2lmKCF0aGlzLmlzQWN0aXZlfHwhdGhpcy5oYXNDbGlja2FibGVUaWxlcyl7cmV0dXJuO31lbHNlIGlmKGUua2V5Q29kZT09PV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19bImtleUNvZGVzIl0udGFiKXt0aGlzLmlzQWN0aXZlPWZhbHNlO3JldHVybjt9ZWxzZSBpZihlLmtleUNvZGU9PT1fdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fWyJrZXlDb2RlcyJdLmRvd24pe3RoaXMubmV4dFRpbGUoKTt9ZWxzZSBpZihlLmtleUNvZGU9PT1fdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fWyJrZXlDb2RlcyJdLnVwKXt0aGlzLnByZXZUaWxlKCk7fWVsc2UgaWYoZS5rZXlDb2RlPT09X3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfX1sia2V5Q29kZXMiXS5lbnRlciYmdGhpcy5saXN0SW5kZXghPT0tMSl7dGhpcy50aWxlc1t0aGlzLmxpc3RJbmRleF0uY2xpY2soKTt9ZWxzZXtyZXR1cm47fS8vIE9uZSBvZiB0aGUgY29uZGl0aW9ucyB3YXMgbWV0LCBwcmV2ZW50IGRlZmF1bHQgYWN0aW9uICgjMjk4OCkKZS5wcmV2ZW50RGVmYXVsdCgpO30sY2xvc2VDb25kaXRpb25hbDpmdW5jdGlvbiBjbG9zZUNvbmRpdGlvbmFsKGUpe3ZhciB0YXJnZXQ9ZS50YXJnZXQ7cmV0dXJuIHRoaXMuaXNBY3RpdmUmJiF0aGlzLl9pc0Rlc3Ryb3llZCYmdGhpcy5jbG9zZU9uQ2xpY2smJiF0aGlzLiRyZWZzLmNvbnRlbnQuY29udGFpbnModGFyZ2V0KTt9LGdlbkFjdGl2YXRvckxpc3RlbmVyczpmdW5jdGlvbiBnZW5BY3RpdmF0b3JMaXN0ZW5lcnMoKXt2YXIgbGlzdGVuZXJzPV9taXhpbnNfbWVudWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5nZW5BY3RpdmF0b3JMaXN0ZW5lcnMuY2FsbCh0aGlzKTtpZighdGhpcy5kaXNhYmxlS2V5cyl7bGlzdGVuZXJzLmtleWRvd249dGhpcy5vbktleURvd247fXJldHVybiBsaXN0ZW5lcnM7fSxnZW5UcmFuc2l0aW9uOmZ1bmN0aW9uIGdlblRyYW5zaXRpb24oKXtpZighdGhpcy50cmFuc2l0aW9uKXJldHVybiB0aGlzLmdlbkNvbnRlbnQoKTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndHJhbnNpdGlvbicse3Byb3BzOntuYW1lOnRoaXMudHJhbnNpdGlvbn19LFt0aGlzLmdlbkNvbnRlbnQoKV0pO30sZ2VuRGlyZWN0aXZlczpmdW5jdGlvbiBnZW5EaXJlY3RpdmVzKCl7dmFyIF90aGlzPXRoaXM7dmFyIGRpcmVjdGl2ZXM9W3tuYW1lOidzaG93Jyx2YWx1ZTp0aGlzLmlzQ29udGVudEFjdGl2ZX1dOy8vIERvIG5vdCBhZGQgY2xpY2sgb3V0c2lkZSBmb3IgaG92ZXIgbWVudQppZighdGhpcy5vcGVuT25Ib3ZlciYmdGhpcy5jbG9zZU9uQ2xpY2spe2RpcmVjdGl2ZXMucHVzaCh7bmFtZTonY2xpY2stb3V0c2lkZScsdmFsdWU6ZnVuY3Rpb24gdmFsdWUoKXtfdGhpcy5pc0FjdGl2ZT1mYWxzZTt9LGFyZ3M6e2Nsb3NlQ29uZGl0aW9uYWw6dGhpcy5jbG9zZUNvbmRpdGlvbmFsLGluY2x1ZGU6ZnVuY3Rpb24gaW5jbHVkZSgpe3JldHVybiBfX3NwcmVhZChbX3RoaXMuJGVsXSxfdGhpcy5nZXRPcGVuRGVwZW5kZW50RWxlbWVudHMoKSk7fX19KTt9cmV0dXJuIGRpcmVjdGl2ZXM7fSxnZW5Db250ZW50OmZ1bmN0aW9uIGdlbkNvbnRlbnQoKXt2YXIgX2E7dmFyIF90aGlzPXRoaXM7dmFyIG9wdGlvbnM9e2F0dHJzOl9fYXNzaWduKHt9LHRoaXMuZ2V0U2NvcGVJZEF0dHJzKCkse3JvbGU6J3JvbGUnaW4gdGhpcy4kYXR0cnM/dGhpcy4kYXR0cnMucm9sZTonbWVudSd9KSxzdGF0aWNDbGFzczondi1tZW51X19jb250ZW50JyxjbGFzczpfX2Fzc2lnbih7fSx0aGlzLnJvb3RUaGVtZUNsYXNzZXMsKF9hPXsndi1tZW51X19jb250ZW50LS1hdXRvJzp0aGlzLmF1dG8sJ3YtbWVudV9fY29udGVudC0tZml4ZWQnOnRoaXMuYWN0aXZhdG9yRml4ZWQsbWVudWFibGVfX2NvbnRlbnRfX2FjdGl2ZTp0aGlzLmlzQWN0aXZlfSxfYVt0aGlzLmNvbnRlbnRDbGFzcy50cmltKCldPXRydWUsX2EpKSxzdHlsZTp0aGlzLnN0eWxlcyxkaXJlY3RpdmVzOnRoaXMuZ2VuRGlyZWN0aXZlcygpLHJlZjonY29udGVudCcsb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKGUpe2Uuc3RvcFByb3BhZ2F0aW9uKCk7dmFyIHRhcmdldD1lLnRhcmdldDtpZih0YXJnZXQuZ2V0QXR0cmlidXRlKCdkaXNhYmxlZCcpKXJldHVybjtpZihfdGhpcy5jbG9zZU9uQ29udGVudENsaWNrKV90aGlzLmlzQWN0aXZlPWZhbHNlO30sa2V5ZG93bjp0aGlzLm9uS2V5RG93bn19O2lmKCF0aGlzLmRpc2FibGVkJiZ0aGlzLm9wZW5PbkhvdmVyKXtvcHRpb25zLm9uPW9wdGlvbnMub258fHt9O29wdGlvbnMub24ubW91c2VlbnRlcj10aGlzLm1vdXNlRW50ZXJIYW5kbGVyO31pZih0aGlzLm9wZW5PbkhvdmVyKXtvcHRpb25zLm9uPW9wdGlvbnMub258fHt9O29wdGlvbnMub24ubW91c2VsZWF2ZT10aGlzLm1vdXNlTGVhdmVIYW5kbGVyO31yZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2JyxvcHRpb25zLHRoaXMuc2hvd0xhenlDb250ZW50KHRoaXMuZ2V0Q29udGVudFNsb3QoKSkpO30sZ2V0VGlsZXM6ZnVuY3Rpb24gZ2V0VGlsZXMoKXt0aGlzLnRpbGVzPUFycmF5LmZyb20odGhpcy4kcmVmcy5jb250ZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy52LWxpc3QtaXRlbScpKTt9LG1vdXNlRW50ZXJIYW5kbGVyOmZ1bmN0aW9uIG1vdXNlRW50ZXJIYW5kbGVyKCl7dmFyIF90aGlzPXRoaXM7dGhpcy5ydW5EZWxheSgnb3BlbicsZnVuY3Rpb24oKXtpZihfdGhpcy5oYXNKdXN0Rm9jdXNlZClyZXR1cm47X3RoaXMuaGFzSnVzdEZvY3VzZWQ9dHJ1ZTtfdGhpcy5pc0FjdGl2ZT10cnVlO30pO30sbW91c2VMZWF2ZUhhbmRsZXI6ZnVuY3Rpb24gbW91c2VMZWF2ZUhhbmRsZXIoZSl7dmFyIF90aGlzPXRoaXM7Ly8gUHJldmVudCBhY2NpZGVudGFsIHJlLWFjdGl2YXRpb24KdGhpcy5ydW5EZWxheSgnY2xvc2UnLGZ1bmN0aW9uKCl7aWYoX3RoaXMuJHJlZnMuY29udGVudC5jb250YWlucyhlLnJlbGF0ZWRUYXJnZXQpKXJldHVybjtyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKXtfdGhpcy5pc0FjdGl2ZT1mYWxzZTtfdGhpcy5jYWxsRGVhY3RpdmF0ZSgpO30pO30pO30sbmV4dFRpbGU6ZnVuY3Rpb24gbmV4dFRpbGUoKXt2YXIgdGlsZT10aGlzLnRpbGVzW3RoaXMubGlzdEluZGV4KzFdO2lmKCF0aWxlKXtpZighdGhpcy50aWxlcy5sZW5ndGgpcmV0dXJuO3RoaXMubGlzdEluZGV4PS0xO3RoaXMubmV4dFRpbGUoKTtyZXR1cm47fXRoaXMubGlzdEluZGV4Kys7aWYodGlsZS50YWJJbmRleD09PS0xKXRoaXMubmV4dFRpbGUoKTt9LHByZXZUaWxlOmZ1bmN0aW9uIHByZXZUaWxlKCl7dmFyIHRpbGU9dGhpcy50aWxlc1t0aGlzLmxpc3RJbmRleC0xXTtpZighdGlsZSl7aWYoIXRoaXMudGlsZXMubGVuZ3RoKXJldHVybjt0aGlzLmxpc3RJbmRleD10aGlzLnRpbGVzLmxlbmd0aDt0aGlzLnByZXZUaWxlKCk7cmV0dXJuO310aGlzLmxpc3RJbmRleC0tO2lmKHRpbGUudGFiSW5kZXg9PT0tMSl0aGlzLnByZXZUaWxlKCk7fSxvbktleURvd246ZnVuY3Rpb24gb25LZXlEb3duKGUpe3ZhciBfdGhpcz10aGlzO2lmKGUua2V5Q29kZT09PV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19bImtleUNvZGVzIl0uZXNjKXsvLyBXYWl0IGZvciBkZXBlbmRlbnQgZWxlbWVudHMgdG8gY2xvc2UgZmlyc3QKc2V0VGltZW91dChmdW5jdGlvbigpe190aGlzLmlzQWN0aXZlPWZhbHNlO30pO3ZhciBhY3RpdmF0b3JfMT10aGlzLmdldEFjdGl2YXRvcigpO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7cmV0dXJuIGFjdGl2YXRvcl8xJiZhY3RpdmF0b3JfMS5mb2N1cygpO30pO31lbHNlIGlmKCF0aGlzLmlzQWN0aXZlJiZbX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfX1sia2V5Q29kZXMiXS51cCxfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fWyJrZXlDb2RlcyJdLmRvd25dLmluY2x1ZGVzKGUua2V5Q29kZSkpe3RoaXMuaXNBY3RpdmU9dHJ1ZTt9Ly8gQWxsb3cgZm9yIGlzQWN0aXZlIHdhdGNoZXIgdG8gZ2VuZXJhdGUgdGlsZSBsaXN0CnRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLmNoYW5nZUxpc3RJbmRleChlKTt9KTt9LG9uUmVzaXplOmZ1bmN0aW9uIG9uUmVzaXplKCl7aWYoIXRoaXMuaXNBY3RpdmUpcmV0dXJuOy8vIEFjY291bnQgZm9yIHNjcmVlbiByZXNpemUKLy8gYW5kIG9yaWVudGF0aW9uIGNoYW5nZQovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLWV4cHJlc3Npb25zCnRoaXMuJHJlZnMuY29udGVudC5vZmZzZXRXaWR0aDt0aGlzLnVwZGF0ZURpbWVuc2lvbnMoKTsvLyBXaGVuIHJlc2l6aW5nIHRvIGEgc21hbGxlciB3aWR0aAovLyBjb250ZW50IHdpZHRoIGlzIGV2YWx1YXRlZCBiZWZvcmUKLy8gdGhlIG5ldyBhY3RpdmF0b3Igd2lkdGggaGFzIGJlZW4KLy8gc2V0LCBjYXVzaW5nIGl0IHRvIG5vdCBzaXplIHByb3Blcmx5Ci8vIGhhY2t5IGJ1dCB3aWxsIHJldmlzaXQgaW4gdGhlIGZ1dHVyZQpjbGVhclRpbWVvdXQodGhpcy5yZXNpemVUaW1lb3V0KTt0aGlzLnJlc2l6ZVRpbWVvdXQ9d2luZG93LnNldFRpbWVvdXQodGhpcy51cGRhdGVEaW1lbnNpb25zLDEwMCk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgZGF0YT17c3RhdGljQ2xhc3M6J3YtbWVudScsY2xhc3M6eyd2LW1lbnUtLWF0dGFjaGVkJzp0aGlzLmF0dGFjaD09PScnfHx0aGlzLmF0dGFjaD09PXRydWV8fHRoaXMuYXR0YWNoPT09J2F0dGFjaCd9LGRpcmVjdGl2ZXM6W3thcmc6JzUwMCcsbmFtZToncmVzaXplJyx2YWx1ZTp0aGlzLm9uUmVzaXplfV19O3JldHVybiBoKCdkaXYnLGRhdGEsWyF0aGlzLmFjdGl2YXRvciYmdGhpcy5nZW5BY3RpdmF0b3IoKSx0aGlzLiRjcmVhdGVFbGVtZW50KF91dGlsX1RoZW1lUHJvdmlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEyX19bImRlZmF1bHQiXSx7cHJvcHM6e3Jvb3Q6dHJ1ZSxsaWdodDp0aGlzLmxpZ2h0LGRhcms6dGhpcy5kYXJrfX0sW3RoaXMuZ2VuVHJhbnNpdGlvbigpXSldKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVk1lbnUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WTWVudS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZNZW51LCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZNZW51SW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTWVudV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVk1lbnUgKi8iLi9zcmMvY29tcG9uZW50cy9WTWVudS9WTWVudS50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZNZW51IixmdW5jdGlvbigpe3JldHVybiBfVk1lbnVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZNZW51X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WTWVzc2FnZXMvVk1lc3NhZ2VzLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVk1lc3NhZ2VzL1ZNZXNzYWdlcy5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZNZXNzYWdlc1ZNZXNzYWdlc1Nhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZNZXNzYWdlcy9WTWVzc2FnZXMudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZNZXNzYWdlcy9WTWVzc2FnZXMudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVk1lc3NhZ2VzVk1lc3NhZ2VzVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVk1lc3NhZ2VzX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZNZXNzYWdlcy5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVk1lc3NhZ2VzL1ZNZXNzYWdlcy5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZNZXNzYWdlc19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WTWVzc2FnZXNfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9jb2xvcmFibGUgKi8iLi9zcmMvbWl4aW5zL2NvbG9yYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8vIFN0eWxlcwovLyBNaXhpbnMKLy8gVXRpbGl0aWVzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pLmV4dGVuZCh7bmFtZTondi1tZXNzYWdlcycscHJvcHM6e3ZhbHVlOnt0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bXTt9fX0sbWV0aG9kczp7Z2VuQ2hpbGRyZW46ZnVuY3Rpb24gZ2VuQ2hpbGRyZW4oKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndHJhbnNpdGlvbi1ncm91cCcse3N0YXRpY0NsYXNzOid2LW1lc3NhZ2VzX193cmFwcGVyJyxhdHRyczp7bmFtZTonbWVzc2FnZS10cmFuc2l0aW9uJyx0YWc6J2Rpdid9fSx0aGlzLnZhbHVlLm1hcCh0aGlzLmdlbk1lc3NhZ2UpKTt9LGdlbk1lc3NhZ2U6ZnVuY3Rpb24gZ2VuTWVzc2FnZShtZXNzYWdlLGtleSl7dmFyIHNsb3Q9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZ2V0U2xvdCJdKSh0aGlzLCdkZWZhdWx0Jyx7bWVzc2FnZTptZXNzYWdlLGtleTprZXl9KTt2YXIgZXNjYXBlZEhUTUw9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZXNjYXBlSFRNTCJdKShtZXNzYWdlKTt2YXIgaW5uZXJIVE1MPSFzbG90P2VzY2FwZWRIVE1MOnVuZGVmaW5lZDtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtbWVzc2FnZXNfX21lc3NhZ2UnLGtleTprZXksZG9tUHJvcHM6e2lubmVySFRNTDppbm5lckhUTUx9fSxzbG90KTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3JldHVybiBoKCdkaXYnLHRoaXMuc2V0VGV4dENvbG9yKHRoaXMuY29sb3Ise3N0YXRpY0NsYXNzOid2LW1lc3NhZ2VzJyxjbGFzczp0aGlzLnRoZW1lQ2xhc3Nlc30pLFt0aGlzLmdlbkNoaWxkcmVuKCldKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVk1lc3NhZ2VzL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZNZXNzYWdlcy9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWTWVzc2FnZXMsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVk1lc3NhZ2VzSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTWVzc2FnZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZNZXNzYWdlcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZNZXNzYWdlcy9WTWVzc2FnZXMudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTWVzc2FnZXMiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WTWVzc2FnZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZNZXNzYWdlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVk5hdmlnYXRpb25EcmF3ZXIvVk5hdmlnYXRpb25EcmF3ZXIuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVk5hdmlnYXRpb25EcmF3ZXIvVk5hdmlnYXRpb25EcmF3ZXIuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVk5hdmlnYXRpb25EcmF3ZXJWTmF2aWdhdGlvbkRyYXdlclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZOYXZpZ2F0aW9uRHJhd2VyL1ZOYXZpZ2F0aW9uRHJhd2VyLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVk5hdmlnYXRpb25EcmF3ZXIvVk5hdmlnYXRpb25EcmF3ZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZOYXZpZ2F0aW9uRHJhd2VyVk5hdmlnYXRpb25EcmF3ZXJUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTmF2aWdhdGlvbkRyYXdlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WTmF2aWdhdGlvbkRyYXdlci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVk5hdmlnYXRpb25EcmF3ZXIvVk5hdmlnYXRpb25EcmF3ZXIuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTmF2aWdhdGlvbkRyYXdlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WTmF2aWdhdGlvbkRyYXdlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WSW1nX1ZJbWdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSW1nL1ZJbWcgKi8iLi9zcmMvY29tcG9uZW50cy9WSW1nL1ZJbWcudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2FwcGxpY2F0aW9uYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9hcHBsaWNhdGlvbmFibGUgKi8iLi9zcmMvbWl4aW5zL2FwcGxpY2F0aW9uYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19kZXBlbmRlbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvZGVwZW5kZW50ICovIi4vc3JjL21peGlucy9kZXBlbmRlbnQvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX292ZXJsYXlhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL292ZXJsYXlhYmxlICovIi4vc3JjL21peGlucy9vdmVybGF5YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfc3NyX2Jvb3RhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3Nzci1ib290YWJsZSAqLyIuL3NyYy9taXhpbnMvc3NyLWJvb3RhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZGlyZWN0aXZlc19jbGlja19vdXRzaWRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vZGlyZWN0aXZlcy9jbGljay1vdXRzaWRlICovIi4vc3JjL2RpcmVjdGl2ZXMvY2xpY2stb3V0c2lkZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX3Jlc2l6ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL2RpcmVjdGl2ZXMvcmVzaXplICovIi4vc3JjL2RpcmVjdGl2ZXMvcmVzaXplL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfdG91Y2hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEwX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vZGlyZWN0aXZlcy90b3VjaCAqLyIuL3NyYy9kaXJlY3RpdmVzL3RvdWNoL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gQ29tcG9uZW50cwovLyBNaXhpbnMKLy8gRGlyZWN0aXZlcwovLyBVdGlsaXRpZXMKdmFyIGJhc2VNaXhpbnM9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfX1siZGVmYXVsdCJdKShPYmplY3QoX21peGluc19hcHBsaWNhdGlvbmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKSgnbGVmdCcsWydpc0FjdGl2ZScsJ2lzTW9iaWxlJywnbWluaVZhcmlhbnQnLCdleHBhbmRPbkhvdmVyJywncGVybWFuZW50JywncmlnaHQnLCd0ZW1wb3JhcnknLCd3aWR0aCddKSxfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0sX21peGluc19kZXBlbmRlbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLF9taXhpbnNfb3ZlcmxheWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdLF9taXhpbnNfc3NyX2Jvb3RhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXSxfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJkZWZhdWx0Il0pOy8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09YmFzZU1peGlucy5leHRlbmQoe25hbWU6J3YtbmF2aWdhdGlvbi1kcmF3ZXInLHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybntpc0luTmF2OnRoaXMudGFnPT09J25hdid9O30sZGlyZWN0aXZlczp7Q2xpY2tPdXRzaWRlOl9kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZGVmYXVsdCJdLFJlc2l6ZTpfZGlyZWN0aXZlc19yZXNpemVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siZGVmYXVsdCJdLFRvdWNoOl9kaXJlY3RpdmVzX3RvdWNoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fWyJkZWZhdWx0Il19LHByb3BzOntib3R0b206Qm9vbGVhbixjbGlwcGVkOkJvb2xlYW4sZGlzYWJsZVJlc2l6ZVdhdGNoZXI6Qm9vbGVhbixkaXNhYmxlUm91dGVXYXRjaGVyOkJvb2xlYW4sZXhwYW5kT25Ib3ZlcjpCb29sZWFuLGZsb2F0aW5nOkJvb2xlYW4saGVpZ2h0Ont0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuIHRoaXMuYXBwPycxMDB2aCc6JzEwMCUnO319LG1pbmlWYXJpYW50OkJvb2xlYW4sbWluaVZhcmlhbnRXaWR0aDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDo4MH0sbW9iaWxlQnJlYWtQb2ludDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDoxMjY0fSxwZXJtYW5lbnQ6Qm9vbGVhbixyaWdodDpCb29sZWFuLHNyYzp7dHlwZTpbU3RyaW5nLE9iamVjdF0sZGVmYXVsdDonJ30sc3RhdGVsZXNzOkJvb2xlYW4sdGFnOnt0eXBlOlN0cmluZyxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuIHRoaXMuYXBwPyduYXYnOidhc2lkZSc7fX0sdGVtcG9yYXJ5OkJvb2xlYW4sdG91Y2hsZXNzOkJvb2xlYW4sd2lkdGg6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MjU2fSx2YWx1ZTp7cmVxdWlyZWQ6ZmFsc2V9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aXNNb3VzZW92ZXI6ZmFsc2UsdG91Y2hBcmVhOntsZWZ0OjAscmlnaHQ6MH0sc3RhY2tNaW5aSW5kZXg6Nn07fSxjb21wdXRlZDp7LyoqCiAgICAgKiBVc2VkIGZvciBzZXR0aW5nIGFuIGFwcCB2YWx1ZSBmcm9tIGEgZHluYW1pYwogICAgICogcHJvcGVydHkuIENhbGxlZCBmcm9tIGFwcGxpY2F0aW9uYWJsZS5qcwogICAgICovYXBwbGljYXRpb25Qcm9wZXJ0eTpmdW5jdGlvbiBhcHBsaWNhdGlvblByb3BlcnR5KCl7cmV0dXJuIHRoaXMucmlnaHQ/J3JpZ2h0JzonbGVmdCc7fSxjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LW5hdmlnYXRpb24tZHJhd2VyJzp0cnVlLCd2LW5hdmlnYXRpb24tZHJhd2VyLS1hYnNvbHV0ZSc6dGhpcy5hYnNvbHV0ZSwndi1uYXZpZ2F0aW9uLWRyYXdlci0tYm90dG9tJzp0aGlzLmJvdHRvbSwndi1uYXZpZ2F0aW9uLWRyYXdlci0tY2xpcHBlZCc6dGhpcy5jbGlwcGVkLCd2LW5hdmlnYXRpb24tZHJhd2VyLS1jbG9zZSc6IXRoaXMuaXNBY3RpdmUsJ3YtbmF2aWdhdGlvbi1kcmF3ZXItLWZpeGVkJzohdGhpcy5hYnNvbHV0ZSYmKHRoaXMuYXBwfHx0aGlzLmZpeGVkKSwndi1uYXZpZ2F0aW9uLWRyYXdlci0tZmxvYXRpbmcnOnRoaXMuZmxvYXRpbmcsJ3YtbmF2aWdhdGlvbi1kcmF3ZXItLWlzLW1vYmlsZSc6dGhpcy5pc01vYmlsZSwndi1uYXZpZ2F0aW9uLWRyYXdlci0taXMtbW91c2VvdmVyJzp0aGlzLmlzTW91c2VvdmVyLCd2LW5hdmlnYXRpb24tZHJhd2VyLS1taW5pLXZhcmlhbnQnOnRoaXMuaXNNaW5pVmFyaWFudCwndi1uYXZpZ2F0aW9uLWRyYXdlci0tb3Blbic6dGhpcy5pc0FjdGl2ZSwndi1uYXZpZ2F0aW9uLWRyYXdlci0tb3Blbi1vbi1ob3Zlcic6dGhpcy5leHBhbmRPbkhvdmVyLCd2LW5hdmlnYXRpb24tZHJhd2VyLS1yaWdodCc6dGhpcy5yaWdodCwndi1uYXZpZ2F0aW9uLWRyYXdlci0tdGVtcG9yYXJ5Jzp0aGlzLnRlbXBvcmFyeX0sdGhpcy50aGVtZUNsYXNzZXMpO30sY29tcHV0ZWRNYXhIZWlnaHQ6ZnVuY3Rpb24gY29tcHV0ZWRNYXhIZWlnaHQoKXtpZighdGhpcy5oYXNBcHApcmV0dXJuIG51bGw7dmFyIGNvbXB1dGVkTWF4SGVpZ2h0PXRoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24uYm90dG9tK3RoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24uZm9vdGVyK3RoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24uYmFyO2lmKCF0aGlzLmNsaXBwZWQpcmV0dXJuIGNvbXB1dGVkTWF4SGVpZ2h0O3JldHVybiBjb21wdXRlZE1heEhlaWdodCt0aGlzLiR2dWV0aWZ5LmFwcGxpY2F0aW9uLnRvcDt9LGNvbXB1dGVkVG9wOmZ1bmN0aW9uIGNvbXB1dGVkVG9wKCl7aWYoIXRoaXMuaGFzQXBwKXJldHVybiAwO3ZhciBjb21wdXRlZFRvcD10aGlzLiR2dWV0aWZ5LmFwcGxpY2F0aW9uLmJhcjtjb21wdXRlZFRvcCs9dGhpcy5jbGlwcGVkP3RoaXMuJHZ1ZXRpZnkuYXBwbGljYXRpb24udG9wOjA7cmV0dXJuIGNvbXB1dGVkVG9wO30sY29tcHV0ZWRUcmFuc2Zvcm06ZnVuY3Rpb24gY29tcHV0ZWRUcmFuc2Zvcm0oKXtpZih0aGlzLmlzQWN0aXZlKXJldHVybiAwO2lmKHRoaXMuaXNCb3R0b20pcmV0dXJuIDEwMDtyZXR1cm4gdGhpcy5yaWdodD8xMDA6LTEwMDt9LGNvbXB1dGVkV2lkdGg6ZnVuY3Rpb24gY29tcHV0ZWRXaWR0aCgpe3JldHVybiB0aGlzLmlzTWluaVZhcmlhbnQ/dGhpcy5taW5pVmFyaWFudFdpZHRoOnRoaXMud2lkdGg7fSxoYXNBcHA6ZnVuY3Rpb24gaGFzQXBwKCl7cmV0dXJuIHRoaXMuYXBwJiYhdGhpcy5pc01vYmlsZSYmIXRoaXMudGVtcG9yYXJ5O30saXNCb3R0b206ZnVuY3Rpb24gaXNCb3R0b20oKXtyZXR1cm4gdGhpcy5ib3R0b20mJnRoaXMuaXNNb2JpbGU7fSxpc01pbmlWYXJpYW50OmZ1bmN0aW9uIGlzTWluaVZhcmlhbnQoKXtyZXR1cm4hdGhpcy5leHBhbmRPbkhvdmVyJiZ0aGlzLm1pbmlWYXJpYW50fHx0aGlzLmV4cGFuZE9uSG92ZXImJiF0aGlzLmlzTW91c2VvdmVyO30saXNNb2JpbGU6ZnVuY3Rpb24gaXNNb2JpbGUoKXtyZXR1cm4hdGhpcy5zdGF0ZWxlc3MmJiF0aGlzLnBlcm1hbmVudCYmdGhpcy4kdnVldGlmeS5icmVha3BvaW50LndpZHRoPHBhcnNlSW50KHRoaXMubW9iaWxlQnJlYWtQb2ludCwxMCk7fSxyZWFjdHNUb0NsaWNrOmZ1bmN0aW9uIHJlYWN0c1RvQ2xpY2soKXtyZXR1cm4hdGhpcy5zdGF0ZWxlc3MmJiF0aGlzLnBlcm1hbmVudCYmKHRoaXMuaXNNb2JpbGV8fHRoaXMudGVtcG9yYXJ5KTt9LHJlYWN0c1RvTW9iaWxlOmZ1bmN0aW9uIHJlYWN0c1RvTW9iaWxlKCl7cmV0dXJuIHRoaXMuYXBwJiYhdGhpcy5kaXNhYmxlUmVzaXplV2F0Y2hlciYmIXRoaXMucGVybWFuZW50JiYhdGhpcy5zdGF0ZWxlc3MmJiF0aGlzLnRlbXBvcmFyeTt9LHJlYWN0c1RvUmVzaXplOmZ1bmN0aW9uIHJlYWN0c1RvUmVzaXplKCl7cmV0dXJuIXRoaXMuZGlzYWJsZVJlc2l6ZVdhdGNoZXImJiF0aGlzLnN0YXRlbGVzczt9LHJlYWN0c1RvUm91dGU6ZnVuY3Rpb24gcmVhY3RzVG9Sb3V0ZSgpe3JldHVybiF0aGlzLmRpc2FibGVSb3V0ZVdhdGNoZXImJiF0aGlzLnN0YXRlbGVzcyYmKHRoaXMudGVtcG9yYXJ5fHx0aGlzLmlzTW9iaWxlKTt9LHNob3dPdmVybGF5OmZ1bmN0aW9uIHNob3dPdmVybGF5KCl7cmV0dXJuIHRoaXMuaXNBY3RpdmUmJih0aGlzLmlzTW9iaWxlfHx0aGlzLnRlbXBvcmFyeSk7fSxzdHlsZXM6ZnVuY3Rpb24gc3R5bGVzKCl7dmFyIHRyYW5zbGF0ZT10aGlzLmlzQm90dG9tPyd0cmFuc2xhdGVZJzondHJhbnNsYXRlWCc7dmFyIHN0eWxlcz17aGVpZ2h0Ok9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuaGVpZ2h0KSx0b3A6IXRoaXMuaXNCb3R0b20/T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5jb21wdXRlZFRvcCk6J2F1dG8nLG1heEhlaWdodDp0aGlzLmNvbXB1dGVkTWF4SGVpZ2h0IT1udWxsPyJjYWxjKDEwMCUgLSAiK09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuY29tcHV0ZWRNYXhIZWlnaHQpKyIpIjp1bmRlZmluZWQsdHJhbnNmb3JtOnRyYW5zbGF0ZSsiKCIrT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5jb21wdXRlZFRyYW5zZm9ybSwnJScpKyIpIix3aWR0aDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmNvbXB1dGVkV2lkdGgpfTtyZXR1cm4gc3R5bGVzO319LHdhdGNoOnskcm91dGU6J29uUm91dGVDaGFuZ2UnLGlzQWN0aXZlOmZ1bmN0aW9uIGlzQWN0aXZlKHZhbCl7dGhpcy4kZW1pdCgnaW5wdXQnLHZhbCk7fSwvKioKICAgICAqIFdoZW4gbW9iaWxlIGNoYW5nZXMsIGFkanVzdCB0aGUgYWN0aXZlIHN0YXRlCiAgICAgKiBvbmx5IHdoZW4gdGhlcmUgaGFzIGJlZW4gYSBwcmV2aW91cyB2YWx1ZQogICAgICovaXNNb2JpbGU6ZnVuY3Rpb24gaXNNb2JpbGUodmFsLHByZXYpeyF2YWwmJnRoaXMuaXNBY3RpdmUmJiF0aGlzLnRlbXBvcmFyeSYmdGhpcy5yZW1vdmVPdmVybGF5KCk7aWYocHJldj09bnVsbHx8IXRoaXMucmVhY3RzVG9SZXNpemV8fCF0aGlzLnJlYWN0c1RvTW9iaWxlKXJldHVybjt0aGlzLmlzQWN0aXZlPSF2YWw7fSxwZXJtYW5lbnQ6ZnVuY3Rpb24gcGVybWFuZW50KHZhbCl7Ly8gSWYgZW5hYmxpbmcgcHJvcCBlbmFibGUgdGhlIGRyYXdlcgppZih2YWwpdGhpcy5pc0FjdGl2ZT10cnVlO30sc2hvd092ZXJsYXk6ZnVuY3Rpb24gc2hvd092ZXJsYXkodmFsKXtpZih2YWwpdGhpcy5nZW5PdmVybGF5KCk7ZWxzZSB0aGlzLnJlbW92ZU92ZXJsYXkoKTt9LHZhbHVlOmZ1bmN0aW9uIHZhbHVlKHZhbCl7aWYodGhpcy5wZXJtYW5lbnQpcmV0dXJuO2lmKHZhbD09bnVsbCl7dGhpcy5pbml0KCk7cmV0dXJuO31pZih2YWwhPT10aGlzLmlzQWN0aXZlKXRoaXMuaXNBY3RpdmU9dmFsO30sZXhwYW5kT25Ib3ZlcjondXBkYXRlTWluaVZhcmlhbnQnLGlzTW91c2VvdmVyOmZ1bmN0aW9uIGlzTW91c2VvdmVyKHZhbCl7dGhpcy51cGRhdGVNaW5pVmFyaWFudCghdmFsKTt9fSxiZWZvcmVNb3VudDpmdW5jdGlvbiBiZWZvcmVNb3VudCgpe3RoaXMuaW5pdCgpO30sbWV0aG9kczp7Y2FsY3VsYXRlVG91Y2hBcmVhOmZ1bmN0aW9uIGNhbGN1bGF0ZVRvdWNoQXJlYSgpe3ZhciBwYXJlbnQ9dGhpcy4kZWwucGFyZW50Tm9kZTtpZighcGFyZW50KXJldHVybjt2YXIgcGFyZW50UmVjdD1wYXJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7dGhpcy50b3VjaEFyZWE9e2xlZnQ6cGFyZW50UmVjdC5sZWZ0KzUwLHJpZ2h0OnBhcmVudFJlY3QucmlnaHQtNTB9O30sY2xvc2VDb25kaXRpb25hbDpmdW5jdGlvbiBjbG9zZUNvbmRpdGlvbmFsKCl7cmV0dXJuIHRoaXMuaXNBY3RpdmUmJiF0aGlzLl9pc0Rlc3Ryb3llZCYmdGhpcy5yZWFjdHNUb0NsaWNrO30sZ2VuQXBwZW5kOmZ1bmN0aW9uIGdlbkFwcGVuZCgpe3JldHVybiB0aGlzLmdlblBvc2l0aW9uKCdhcHBlbmQnKTt9LGdlbkJhY2tncm91bmQ6ZnVuY3Rpb24gZ2VuQmFja2dyb3VuZCgpe3ZhciBwcm9wcz17aGVpZ2h0OicxMDAlJyx3aWR0aDonMTAwJScsc3JjOnRoaXMuc3JjfTt2YXIgaW1hZ2U9dGhpcy4kc2NvcGVkU2xvdHMuaW1nP3RoaXMuJHNjb3BlZFNsb3RzLmltZyhwcm9wcyk6dGhpcy4kY3JlYXRlRWxlbWVudChfVkltZ19WSW1nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSx7cHJvcHM6cHJvcHN9KTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtbmF2aWdhdGlvbi1kcmF3ZXJfX2ltYWdlJ30sW2ltYWdlXSk7fSxnZW5EaXJlY3RpdmVzOmZ1bmN0aW9uIGdlbkRpcmVjdGl2ZXMoKXt2YXIgX3RoaXM9dGhpczt2YXIgZGlyZWN0aXZlcz1be25hbWU6J2NsaWNrLW91dHNpZGUnLHZhbHVlOmZ1bmN0aW9uIHZhbHVlKCl7cmV0dXJuIF90aGlzLmlzQWN0aXZlPWZhbHNlO30sYXJnczp7Y2xvc2VDb25kaXRpb25hbDp0aGlzLmNsb3NlQ29uZGl0aW9uYWwsaW5jbHVkZTp0aGlzLmdldE9wZW5EZXBlbmRlbnRFbGVtZW50c319XTtpZighdGhpcy50b3VjaGxlc3MmJiF0aGlzLnN0YXRlbGVzcyl7ZGlyZWN0aXZlcy5wdXNoKHtuYW1lOid0b3VjaCcsdmFsdWU6e3BhcmVudDp0cnVlLGxlZnQ6dGhpcy5zd2lwZUxlZnQscmlnaHQ6dGhpcy5zd2lwZVJpZ2h0fX0pO31yZXR1cm4gZGlyZWN0aXZlczt9LGdlbkxpc3RlbmVyczpmdW5jdGlvbiBnZW5MaXN0ZW5lcnMoKXt2YXIgX3RoaXM9dGhpczt2YXIgb249e3RyYW5zaXRpb25lbmQ6ZnVuY3Rpb24gdHJhbnNpdGlvbmVuZChlKXtpZihlLnRhcmdldCE9PWUuY3VycmVudFRhcmdldClyZXR1cm47X3RoaXMuJGVtaXQoJ3RyYW5zaXRpb25lbmQnLGUpOy8vIElFMTEgZG9lcyBub3Qgc3VwcG9ydCBuZXcgRXZlbnQoJ3Jlc2l6ZScpCnZhciByZXNpemVFdmVudD1kb2N1bWVudC5jcmVhdGVFdmVudCgnVUlFdmVudHMnKTtyZXNpemVFdmVudC5pbml0VUlFdmVudCgncmVzaXplJyx0cnVlLGZhbHNlLHdpbmRvdywwKTt3aW5kb3cuZGlzcGF0Y2hFdmVudChyZXNpemVFdmVudCk7fX07aWYodGhpcy5taW5pVmFyaWFudCl7b24uY2xpY2s9ZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuJGVtaXQoJ3VwZGF0ZTptaW5pLXZhcmlhbnQnLGZhbHNlKTt9O31pZih0aGlzLmV4cGFuZE9uSG92ZXIpe29uLm1vdXNlZW50ZXI9ZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuaXNNb3VzZW92ZXI9dHJ1ZTt9O29uLm1vdXNlbGVhdmU9ZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuaXNNb3VzZW92ZXI9ZmFsc2U7fTt9cmV0dXJuIG9uO30sZ2VuUG9zaXRpb246ZnVuY3Rpb24gZ2VuUG9zaXRpb24obmFtZSl7dmFyIHNsb3Q9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19bImdldFNsb3QiXSkodGhpcyxuYW1lKTtpZighc2xvdClyZXR1cm4gc2xvdDtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6InYtbmF2aWdhdGlvbi1kcmF3ZXJfXyIrbmFtZX0sc2xvdCk7fSxnZW5QcmVwZW5kOmZ1bmN0aW9uIGdlblByZXBlbmQoKXtyZXR1cm4gdGhpcy5nZW5Qb3NpdGlvbigncHJlcGVuZCcpO30sZ2VuQ29udGVudDpmdW5jdGlvbiBnZW5Db250ZW50KCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LW5hdmlnYXRpb24tZHJhd2VyX19jb250ZW50J30sdGhpcy4kc2xvdHMuZGVmYXVsdCk7fSxnZW5Cb3JkZXI6ZnVuY3Rpb24gZ2VuQm9yZGVyKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LW5hdmlnYXRpb24tZHJhd2VyX19ib3JkZXInfSk7fSxpbml0OmZ1bmN0aW9uIGluaXQoKXtpZih0aGlzLnBlcm1hbmVudCl7dGhpcy5pc0FjdGl2ZT10cnVlO31lbHNlIGlmKHRoaXMuc3RhdGVsZXNzfHx0aGlzLnZhbHVlIT1udWxsKXt0aGlzLmlzQWN0aXZlPXRoaXMudmFsdWU7fWVsc2UgaWYoIXRoaXMudGVtcG9yYXJ5KXt0aGlzLmlzQWN0aXZlPSF0aGlzLmlzTW9iaWxlO319LG9uUm91dGVDaGFuZ2U6ZnVuY3Rpb24gb25Sb3V0ZUNoYW5nZSgpe2lmKHRoaXMucmVhY3RzVG9Sb3V0ZSYmdGhpcy5jbG9zZUNvbmRpdGlvbmFsKCkpe3RoaXMuaXNBY3RpdmU9ZmFsc2U7fX0sc3dpcGVMZWZ0OmZ1bmN0aW9uIHN3aXBlTGVmdChlKXtpZih0aGlzLmlzQWN0aXZlJiZ0aGlzLnJpZ2h0KXJldHVybjt0aGlzLmNhbGN1bGF0ZVRvdWNoQXJlYSgpO2lmKE1hdGguYWJzKGUudG91Y2hlbmRYLWUudG91Y2hzdGFydFgpPDEwMClyZXR1cm47aWYodGhpcy5yaWdodCYmZS50b3VjaHN0YXJ0WD49dGhpcy50b3VjaEFyZWEucmlnaHQpdGhpcy5pc0FjdGl2ZT10cnVlO2Vsc2UgaWYoIXRoaXMucmlnaHQmJnRoaXMuaXNBY3RpdmUpdGhpcy5pc0FjdGl2ZT1mYWxzZTt9LHN3aXBlUmlnaHQ6ZnVuY3Rpb24gc3dpcGVSaWdodChlKXtpZih0aGlzLmlzQWN0aXZlJiYhdGhpcy5yaWdodClyZXR1cm47dGhpcy5jYWxjdWxhdGVUb3VjaEFyZWEoKTtpZihNYXRoLmFicyhlLnRvdWNoZW5kWC1lLnRvdWNoc3RhcnRYKTwxMDApcmV0dXJuO2lmKCF0aGlzLnJpZ2h0JiZlLnRvdWNoc3RhcnRYPD10aGlzLnRvdWNoQXJlYS5sZWZ0KXRoaXMuaXNBY3RpdmU9dHJ1ZTtlbHNlIGlmKHRoaXMucmlnaHQmJnRoaXMuaXNBY3RpdmUpdGhpcy5pc0FjdGl2ZT1mYWxzZTt9LC8qKgogICAgICogVXBkYXRlIHRoZSBhcHBsaWNhdGlvbiBsYXlvdXQKICAgICAqL3VwZGF0ZUFwcGxpY2F0aW9uOmZ1bmN0aW9uIHVwZGF0ZUFwcGxpY2F0aW9uKCl7aWYoIXRoaXMuaXNBY3RpdmV8fHRoaXMuaXNNb2JpbGV8fHRoaXMudGVtcG9yYXJ5fHwhdGhpcy4kZWwpcmV0dXJuIDA7dmFyIHdpZHRoPU51bWJlcih0aGlzLmNvbXB1dGVkV2lkdGgpO3JldHVybiBpc05hTih3aWR0aCk/dGhpcy4kZWwuY2xpZW50V2lkdGg6d2lkdGg7fSx1cGRhdGVNaW5pVmFyaWFudDpmdW5jdGlvbiB1cGRhdGVNaW5pVmFyaWFudCh2YWwpe2lmKHRoaXMubWluaVZhcmlhbnQhPT12YWwpdGhpcy4kZW1pdCgndXBkYXRlOm1pbmktdmFyaWFudCcsdmFsKTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBjaGlsZHJlbj1bdGhpcy5nZW5QcmVwZW5kKCksdGhpcy5nZW5Db250ZW50KCksdGhpcy5nZW5BcHBlbmQoKSx0aGlzLmdlbkJvcmRlcigpXTtpZih0aGlzLnNyY3x8T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19bImdldFNsb3QiXSkodGhpcywnaW1nJykpY2hpbGRyZW4udW5zaGlmdCh0aGlzLmdlbkJhY2tncm91bmQoKSk7cmV0dXJuIGgodGhpcy50YWcsdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IodGhpcy5jb2xvcix7Y2xhc3M6dGhpcy5jbGFzc2VzLHN0eWxlOnRoaXMuc3R5bGVzLGRpcmVjdGl2ZXM6dGhpcy5nZW5EaXJlY3RpdmVzKCksb246dGhpcy5nZW5MaXN0ZW5lcnMoKX0pLGNoaWxkcmVuKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVk5hdmlnYXRpb25EcmF3ZXIvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WTmF2aWdhdGlvbkRyYXdlci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZOYXZpZ2F0aW9uRHJhd2VyLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZOYXZpZ2F0aW9uRHJhd2VySW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTmF2aWdhdGlvbkRyYXdlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVk5hdmlnYXRpb25EcmF3ZXIgKi8iLi9zcmMvY29tcG9uZW50cy9WTmF2aWdhdGlvbkRyYXdlci9WTmF2aWdhdGlvbkRyYXdlci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZOYXZpZ2F0aW9uRHJhd2VyIixmdW5jdGlvbigpe3JldHVybiBfVk5hdmlnYXRpb25EcmF3ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZOYXZpZ2F0aW9uRHJhd2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WT3ZlcmZsb3dCdG4vVk92ZXJmbG93QnRuLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVk92ZXJmbG93QnRuL1ZPdmVyZmxvd0J0bi5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZPdmVyZmxvd0J0blZPdmVyZmxvd0J0blNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZPdmVyZmxvd0J0bi9WT3ZlcmZsb3dCdG4udHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZPdmVyZmxvd0J0bi9WT3ZlcmZsb3dCdG4udHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVk92ZXJmbG93QnRuVk92ZXJmbG93QnRuVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVk92ZXJmbG93QnRuX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZPdmVyZmxvd0J0bi5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVk92ZXJmbG93QnRuL1ZPdmVyZmxvd0J0bi5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZPdmVyZmxvd0J0bl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WT3ZlcmZsb3dCdG5fc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNlbGVjdF9WU2VsZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVlNlbGVjdC9WU2VsZWN0ICovIi4vc3JjL2NvbXBvbmVudHMvVlNlbGVjdC9WU2VsZWN0LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZBdXRvY29tcGxldGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WQXV0b2NvbXBsZXRlICovIi4vc3JjL2NvbXBvbmVudHMvVkF1dG9jb21wbGV0ZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGV4dEZpZWxkX1ZUZXh0RmllbGRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WVGV4dEZpZWxkL1ZUZXh0RmllbGQgKi8iLi9zcmMvY29tcG9uZW50cy9WVGV4dEZpZWxkL1ZUZXh0RmllbGQudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJ0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZCdG4gKi8iLi9zcmMvY29tcG9uZW50cy9WQnRuL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvY29uc29sZSAqLyIuL3NyYy91dGlsL2NvbnNvbGUudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBFeHRlbnNpb25zCi8vIENvbXBvbmVudHMKLy8gVXRpbGl0aWVzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZBdXRvY29tcGxldGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLmV4dGVuZCh7bmFtZTondi1vdmVyZmxvdy1idG4nLHByb3BzOntlZGl0YWJsZTpCb29sZWFuLHNlZ21lbnRlZDpCb29sZWFufSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJuIF9fYXNzaWduKHt9LF9WQXV0b2NvbXBsZXRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSx7J3Ytb3ZlcmZsb3ctYnRuJzp0cnVlLCd2LW92ZXJmbG93LWJ0bi0tc2VnbWVudGVkJzp0aGlzLnNlZ21lbnRlZCwndi1vdmVyZmxvdy1idG4tLWVkaXRhYmxlJzp0aGlzLmVkaXRhYmxlfSk7fSxpc0FueVZhbHVlQWxsb3dlZDpmdW5jdGlvbiBpc0FueVZhbHVlQWxsb3dlZCgpe3JldHVybiB0aGlzLmVkaXRhYmxlfHxfVkF1dG9jb21wbGV0ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5pc0FueVZhbHVlQWxsb3dlZC5jYWxsKHRoaXMpO30saXNTaW5nbGU6ZnVuY3Rpb24gaXNTaW5nbGUoKXtyZXR1cm4gdHJ1ZTt9LGNvbXB1dGVkSXRlbXM6ZnVuY3Rpb24gY29tcHV0ZWRJdGVtcygpe3JldHVybiB0aGlzLnNlZ21lbnRlZD90aGlzLmFsbEl0ZW1zOnRoaXMuZmlsdGVyZWRJdGVtczt9fSxtZXRob2RzOntnZW5TZWxlY3Rpb25zOmZ1bmN0aW9uIGdlblNlbGVjdGlvbnMoKXtyZXR1cm4gdGhpcy5lZGl0YWJsZT9fVkF1dG9jb21wbGV0ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlblNlbGVjdGlvbnMuY2FsbCh0aGlzKTpfVlNlbGVjdF9WU2VsZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuZ2VuU2VsZWN0aW9ucy5jYWxsKHRoaXMpOy8vIE92ZXJyaWRlIHYtYXV0b2NvbXBsZXRlJ3Mgb3ZlcnJpZGUKfSxnZW5Db21tYVNlbGVjdGlvbjpmdW5jdGlvbiBnZW5Db21tYVNlbGVjdGlvbihpdGVtLGluZGV4LGxhc3Qpe3JldHVybiB0aGlzLnNlZ21lbnRlZD90aGlzLmdlblNlZ21lbnRlZEJ0bihpdGVtKTpfVlNlbGVjdF9WU2VsZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuZ2VuQ29tbWFTZWxlY3Rpb24uY2FsbCh0aGlzLGl0ZW0saW5kZXgsbGFzdCk7fSxnZW5JbnB1dDpmdW5jdGlvbiBnZW5JbnB1dCgpe3ZhciBpbnB1dD1fVlRleHRGaWVsZF9WVGV4dEZpZWxkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuZ2VuSW5wdXQuY2FsbCh0aGlzKTtpbnB1dC5kYXRhPWlucHV0LmRhdGF8fHt9O2lucHV0LmRhdGEuZG9tUHJvcHMudmFsdWU9dGhpcy5lZGl0YWJsZT90aGlzLmludGVybmFsU2VhcmNoOicnO2lucHV0LmRhdGEuYXR0cnMucmVhZG9ubHk9IXRoaXMuaXNBbnlWYWx1ZUFsbG93ZWQ7cmV0dXJuIGlucHV0O30sZ2VuTGFiZWw6ZnVuY3Rpb24gZ2VuTGFiZWwoKXtpZih0aGlzLmVkaXRhYmxlJiZ0aGlzLmlzRm9jdXNlZClyZXR1cm4gbnVsbDt2YXIgbGFiZWw9X1ZUZXh0RmllbGRfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlbkxhYmVsLmNhbGwodGhpcyk7aWYoIWxhYmVsKXJldHVybiBsYWJlbDtsYWJlbC5kYXRhPWxhYmVsLmRhdGF8fHt9Oy8vIFJlc2V0IHByZXZpb3VzbHkgc2V0IHN0eWxlcyBmcm9tIHBhcmVudApsYWJlbC5kYXRhLnN0eWxlPXt9O3JldHVybiBsYWJlbDt9LGdlblNlZ21lbnRlZEJ0bjpmdW5jdGlvbiBnZW5TZWdtZW50ZWRCdG4oaXRlbSl7dmFyIF90aGlzPXRoaXM7dmFyIGl0ZW1WYWx1ZT10aGlzLmdldFZhbHVlKGl0ZW0pO3ZhciBpdGVtT2JqPXRoaXMuY29tcHV0ZWRJdGVtcy5maW5kKGZ1bmN0aW9uKGkpe3JldHVybiBfdGhpcy5nZXRWYWx1ZShpKT09PWl0ZW1WYWx1ZTt9KXx8aXRlbTtpZighaXRlbU9iai50ZXh0fHwhaXRlbU9iai5jYWxsYmFjayl7T2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siY29uc29sZVdhcm4iXSkoJ1doZW4gdXNpbmcgXCdzZWdtZW50ZWRcJyBwcm9wIHdpdGhvdXQgYSBzZWxlY3Rpb24gc2xvdCwgaXRlbXMgbXVzdCBjb250YWluIGJvdGggYSB0ZXh0IGFuZCBjYWxsYmFjayBwcm9wZXJ0eScsdGhpcyk7cmV0dXJuIG51bGw7fXJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WQnRuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSx7cHJvcHM6e3RleHQ6dHJ1ZX0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKGUpe2Uuc3RvcFByb3BhZ2F0aW9uKCk7aXRlbU9iai5jYWxsYmFjayhlKTt9fX0sW2l0ZW1PYmoudGV4dF0pO319fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVk92ZXJmbG93QnRuL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZPdmVyZmxvd0J0bi9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWT3ZlcmZsb3dCdG4sIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVk92ZXJmbG93QnRuSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WT3ZlcmZsb3dCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZPdmVyZmxvd0J0biAqLyIuL3NyYy9jb21wb25lbnRzL1ZPdmVyZmxvd0J0bi9WT3ZlcmZsb3dCdG4udHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWT3ZlcmZsb3dCdG4iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WT3ZlcmZsb3dCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZPdmVyZmxvd0J0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVk92ZXJsYXkvVk92ZXJsYXkuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVk92ZXJsYXkvVk92ZXJsYXkuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVk92ZXJsYXlWT3ZlcmxheVNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZPdmVybGF5L1ZPdmVybGF5LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVk92ZXJsYXkvVk92ZXJsYXkudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZPdmVybGF5Vk92ZXJsYXlUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WT3ZlcmxheV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WT3ZlcmxheS5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVk92ZXJsYXkvVk92ZXJsYXkuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WT3ZlcmxheV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WT3ZlcmxheV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi8uLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy90aGVtZWFibGUgKi8iLi9zcmMvbWl4aW5zL3RoZW1lYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vLi4vLi4vbWl4aW5zL3RvZ2dsZWFibGUgKi8iLi9zcmMvbWl4aW5zL3RvZ2dsZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gU3R5bGVzCi8vIE1peGlucwovLyBVdGlsaXRpZXMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSkoX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxfbWl4aW5zX3RvZ2dsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3Ytb3ZlcmxheScscHJvcHM6e2Fic29sdXRlOkJvb2xlYW4sY29sb3I6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyMyMTIxMjEnfSxkYXJrOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxvcGFjaXR5Ont0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjAuNDZ9LHZhbHVlOntkZWZhdWx0OnRydWV9LHpJbmRleDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDo1fX0sY29tcHV0ZWQ6e19fc2NyaW06ZnVuY3Rpb24gX19zY3JpbSgpe3ZhciBkYXRhPXRoaXMuc2V0QmFja2dyb3VuZENvbG9yKHRoaXMuY29sb3Ise3N0YXRpY0NsYXNzOid2LW92ZXJsYXlfX3NjcmltJyxzdHlsZTp7b3BhY2l0eTp0aGlzLmNvbXB1dGVkT3BhY2l0eX19KTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2JyxkYXRhKTt9LGNsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7J3Ytb3ZlcmxheS0tYWJzb2x1dGUnOnRoaXMuYWJzb2x1dGUsJ3Ytb3ZlcmxheS0tYWN0aXZlJzp0aGlzLmlzQWN0aXZlfSx0aGlzLnRoZW1lQ2xhc3Nlcyk7fSxjb21wdXRlZE9wYWNpdHk6ZnVuY3Rpb24gY29tcHV0ZWRPcGFjaXR5KCl7cmV0dXJuIE51bWJlcih0aGlzLmlzQWN0aXZlP3RoaXMub3BhY2l0eTowKTt9LHN0eWxlczpmdW5jdGlvbiBzdHlsZXMoKXtyZXR1cm57ekluZGV4OnRoaXMuekluZGV4fTt9fSxtZXRob2RzOntnZW5Db250ZW50OmZ1bmN0aW9uIGdlbkNvbnRlbnQoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3Ytb3ZlcmxheV9fY29udGVudCd9LHRoaXMuJHNsb3RzLmRlZmF1bHQpO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGNoaWxkcmVuPVt0aGlzLl9fc2NyaW1dO2lmKHRoaXMuaXNBY3RpdmUpY2hpbGRyZW4ucHVzaCh0aGlzLmdlbkNvbnRlbnQoKSk7cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LW92ZXJsYXknLGNsYXNzOnRoaXMuY2xhc3NlcyxzdHlsZTp0aGlzLnN0eWxlc30sY2hpbGRyZW4pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WT3ZlcmxheS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZPdmVybGF5L2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVk92ZXJsYXksIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVk92ZXJsYXlJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZPdmVybGF5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WT3ZlcmxheSAqLyIuL3NyYy9jb21wb25lbnRzL1ZPdmVybGF5L1ZPdmVybGF5LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVk92ZXJsYXkiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WT3ZlcmxheV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVk92ZXJsYXlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZQYWdpbmF0aW9uL1ZQYWdpbmF0aW9uLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZQYWdpbmF0aW9uL1ZQYWdpbmF0aW9uLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZQYWdpbmF0aW9uVlBhZ2luYXRpb25TYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WUGFnaW5hdGlvbi9WUGFnaW5hdGlvbi50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZQYWdpbmF0aW9uL1ZQYWdpbmF0aW9uLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUGFnaW5hdGlvblZQYWdpbmF0aW9uVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlBhZ2luYXRpb25fc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlBhZ2luYXRpb24uc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZQYWdpbmF0aW9uL1ZQYWdpbmF0aW9uLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlBhZ2luYXRpb25fc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVlBhZ2luYXRpb25fc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfcmVzaXplX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vZGlyZWN0aXZlcy9yZXNpemUgKi8iLi9zcmMvZGlyZWN0aXZlcy9yZXNpemUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9O3ZhciBfX3JlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19yZWFkfHxmdW5jdGlvbihvLG4pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl07aWYoIW0pcmV0dXJuIG87dmFyIGk9bS5jYWxsKG8pLHIsYXI9W10sZTt0cnl7d2hpbGUoKG49PT12b2lkIDB8fG4tLT4wKSYmIShyPWkubmV4dCgpKS5kb25lKXthci5wdXNoKHIudmFsdWUpO319Y2F0Y2goZXJyb3Ipe2U9e2Vycm9yOmVycm9yfTt9ZmluYWxseXt0cnl7aWYociYmIXIuZG9uZSYmKG09aVsicmV0dXJuIl0pKW0uY2FsbChpKTt9ZmluYWxseXtpZihlKXRocm93IGUuZXJyb3I7fX1yZXR1cm4gYXI7fTt2YXIgX19zcHJlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19zcHJlYWR8fGZ1bmN0aW9uKCl7Zm9yKHZhciBhcj1bXSxpPTA7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7YXI9YXIuY29uY2F0KF9fcmVhZChhcmd1bWVudHNbaV0pKTt9cmV0dXJuIGFyO307Ly8gRGlyZWN0aXZlcwovLyBNaXhpbnMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOid2LXBhZ2luYXRpb24nLGRpcmVjdGl2ZXM6e1Jlc2l6ZTpfZGlyZWN0aXZlc19yZXNpemVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdfSxwcm9wczp7Y2lyY2xlOkJvb2xlYW4sZGlzYWJsZWQ6Qm9vbGVhbixsZW5ndGg6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MCx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7cmV0dXJuIHZhbCUxPT09MDt9fSxuZXh0SWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJG5leHQnfSxwcmV2SWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJHByZXYnfSx0b3RhbFZpc2libGU6W051bWJlcixTdHJpbmddLHZhbHVlOnt0eXBlOk51bWJlcixkZWZhdWx0OjB9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57bWF4QnV0dG9uczowLHNlbGVjdGVkOm51bGx9O30sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7J3YtcGFnaW5hdGlvbic6dHJ1ZSwndi1wYWdpbmF0aW9uLS1jaXJjbGUnOnRoaXMuY2lyY2xlLCd2LXBhZ2luYXRpb24tLWRpc2FibGVkJzp0aGlzLmRpc2FibGVkfSx0aGlzLnRoZW1lQ2xhc3Nlcyk7fSxpdGVtczpmdW5jdGlvbiBpdGVtcygpe3ZhciB0b3RhbFZpc2libGU9cGFyc2VJbnQodGhpcy50b3RhbFZpc2libGUsMTApO3ZhciBtYXhMZW5ndGg9TWF0aC5taW4oTWF0aC5tYXgoMCx0b3RhbFZpc2libGUpfHx0aGlzLmxlbmd0aCxNYXRoLm1heCgwLHRoaXMubWF4QnV0dG9ucyl8fHRoaXMubGVuZ3RoLHRoaXMubGVuZ3RoKTtpZih0aGlzLmxlbmd0aDw9bWF4TGVuZ3RoKXtyZXR1cm4gdGhpcy5yYW5nZSgxLHRoaXMubGVuZ3RoKTt9dmFyIGV2ZW49bWF4TGVuZ3RoJTI9PT0wPzE6MDt2YXIgbGVmdD1NYXRoLmZsb29yKG1heExlbmd0aC8yKTt2YXIgcmlnaHQ9dGhpcy5sZW5ndGgtbGVmdCsxK2V2ZW47aWYodGhpcy52YWx1ZT5sZWZ0JiZ0aGlzLnZhbHVlPHJpZ2h0KXt2YXIgc3RhcnQ9dGhpcy52YWx1ZS1sZWZ0KzI7dmFyIGVuZD10aGlzLnZhbHVlK2xlZnQtMi1ldmVuO3JldHVybiBfX3NwcmVhZChbMSwnLi4uJ10sdGhpcy5yYW5nZShzdGFydCxlbmQpLFsnLi4uJyx0aGlzLmxlbmd0aF0pO31lbHNlIGlmKHRoaXMudmFsdWU9PT1sZWZ0KXt2YXIgZW5kPXRoaXMudmFsdWUrbGVmdC0xLWV2ZW47cmV0dXJuIF9fc3ByZWFkKHRoaXMucmFuZ2UoMSxlbmQpLFsnLi4uJyx0aGlzLmxlbmd0aF0pO31lbHNlIGlmKHRoaXMudmFsdWU9PT1yaWdodCl7dmFyIHN0YXJ0PXRoaXMudmFsdWUtbGVmdCsxO3JldHVybiBfX3NwcmVhZChbMSwnLi4uJ10sdGhpcy5yYW5nZShzdGFydCx0aGlzLmxlbmd0aCkpO31lbHNle3JldHVybiBfX3NwcmVhZCh0aGlzLnJhbmdlKDEsbGVmdCksWycuLi4nXSx0aGlzLnJhbmdlKHJpZ2h0LHRoaXMubGVuZ3RoKSk7fX19LHdhdGNoOnt2YWx1ZTpmdW5jdGlvbiB2YWx1ZSgpe3RoaXMuaW5pdCgpO319LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3RoaXMuaW5pdCgpO30sbWV0aG9kczp7aW5pdDpmdW5jdGlvbiBpbml0KCl7dmFyIF90aGlzPXRoaXM7dGhpcy5zZWxlY3RlZD1udWxsO3RoaXMuJG5leHRUaWNrKHRoaXMub25SZXNpemUpOy8vIFRPRE86IENoYW5nZSB0aGlzIChmNzVkZWUzYSwgY2JkZjdjYWEpCnNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuc2VsZWN0ZWQ9X3RoaXMudmFsdWU7fSwxMDApO30sb25SZXNpemU6ZnVuY3Rpb24gb25SZXNpemUoKXt2YXIgd2lkdGg9dGhpcy4kZWwmJnRoaXMuJGVsLnBhcmVudEVsZW1lbnQ/dGhpcy4kZWwucGFyZW50RWxlbWVudC5jbGllbnRXaWR0aDp3aW5kb3cuaW5uZXJXaWR0aDt0aGlzLm1heEJ1dHRvbnM9TWF0aC5mbG9vcigod2lkdGgtOTYpLzQyKTt9LG5leHQ6ZnVuY3Rpb24gbmV4dChlKXtlLnByZXZlbnREZWZhdWx0KCk7dGhpcy4kZW1pdCgnaW5wdXQnLHRoaXMudmFsdWUrMSk7dGhpcy4kZW1pdCgnbmV4dCcpO30scHJldmlvdXM6ZnVuY3Rpb24gcHJldmlvdXMoZSl7ZS5wcmV2ZW50RGVmYXVsdCgpO3RoaXMuJGVtaXQoJ2lucHV0Jyx0aGlzLnZhbHVlLTEpO3RoaXMuJGVtaXQoJ3ByZXZpb3VzJyk7fSxyYW5nZTpmdW5jdGlvbiByYW5nZShmcm9tLHRvKXt2YXIgcmFuZ2U9W107ZnJvbT1mcm9tPjA/ZnJvbToxO2Zvcih2YXIgaT1mcm9tO2k8PXRvO2krKyl7cmFuZ2UucHVzaChpKTt9cmV0dXJuIHJhbmdlO30sZ2VuSWNvbjpmdW5jdGlvbiBnZW5JY29uKGgsaWNvbixkaXNhYmxlZCxmbil7cmV0dXJuIGgoJ2xpJyxbaCgnYnV0dG9uJyx7c3RhdGljQ2xhc3M6J3YtcGFnaW5hdGlvbl9fbmF2aWdhdGlvbicsY2xhc3M6eyd2LXBhZ2luYXRpb25fX25hdmlnYXRpb24tLWRpc2FibGVkJzpkaXNhYmxlZH0sYXR0cnM6e3R5cGU6J2J1dHRvbid9LG9uOmRpc2FibGVkP3t9OntjbGljazpmbn19LFtoKF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sW2ljb25dKV0pXSk7fSxnZW5JdGVtOmZ1bmN0aW9uIGdlbkl0ZW0oaCxpKXt2YXIgX3RoaXM9dGhpczt2YXIgY29sb3I9aT09PXRoaXMudmFsdWUmJih0aGlzLmNvbG9yfHwncHJpbWFyeScpO3JldHVybiBoKCdidXR0b24nLHRoaXMuc2V0QmFja2dyb3VuZENvbG9yKGNvbG9yLHtzdGF0aWNDbGFzczondi1wYWdpbmF0aW9uX19pdGVtJyxjbGFzczp7J3YtcGFnaW5hdGlvbl9faXRlbS0tYWN0aXZlJzppPT09dGhpcy52YWx1ZX0sYXR0cnM6e3R5cGU6J2J1dHRvbid9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygpe3JldHVybiBfdGhpcy4kZW1pdCgnaW5wdXQnLGkpO319fSksW2kudG9TdHJpbmcoKV0pO30sZ2VuSXRlbXM6ZnVuY3Rpb24gZ2VuSXRlbXMoaCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuaXRlbXMubWFwKGZ1bmN0aW9uKGksaW5kZXgpe3JldHVybiBoKCdsaScse2tleTppbmRleH0sW2lzTmFOKE51bWJlcihpKSk/aCgnc3Bhbicse2NsYXNzOid2LXBhZ2luYXRpb25fX21vcmUnfSxbaS50b1N0cmluZygpXSk6X3RoaXMuZ2VuSXRlbShoLGkpXSk7fSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgY2hpbGRyZW49W3RoaXMuZ2VuSWNvbihoLHRoaXMuJHZ1ZXRpZnkucnRsP3RoaXMubmV4dEljb246dGhpcy5wcmV2SWNvbix0aGlzLnZhbHVlPD0xLHRoaXMucHJldmlvdXMpLHRoaXMuZ2VuSXRlbXMoaCksdGhpcy5nZW5JY29uKGgsdGhpcy4kdnVldGlmeS5ydGw/dGhpcy5wcmV2SWNvbjp0aGlzLm5leHRJY29uLHRoaXMudmFsdWU+PXRoaXMubGVuZ3RoLHRoaXMubmV4dCldO3JldHVybiBoKCd1bCcse2RpcmVjdGl2ZXM6W3ttb2RpZmllcnM6e3F1aWV0OnRydWV9LG5hbWU6J3Jlc2l6ZScsdmFsdWU6dGhpcy5vblJlc2l6ZX1dLGNsYXNzOnRoaXMuY2xhc3Nlc30sY2hpbGRyZW4pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WUGFnaW5hdGlvbi9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZQYWdpbmF0aW9uL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVlBhZ2luYXRpb24sIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlBhZ2luYXRpb25JbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZQYWdpbmF0aW9uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WUGFnaW5hdGlvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZQYWdpbmF0aW9uL1ZQYWdpbmF0aW9uLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlBhZ2luYXRpb24iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WUGFnaW5hdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVlBhZ2luYXRpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZQYXJhbGxheC9WUGFyYWxsYXguc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WUGFyYWxsYXgvVlBhcmFsbGF4LnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlBhcmFsbGF4VlBhcmFsbGF4U2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlBhcmFsbGF4L1ZQYXJhbGxheC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlBhcmFsbGF4L1ZQYXJhbGxheC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUGFyYWxsYXhWUGFyYWxsYXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WUGFyYWxsYXhfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlBhcmFsbGF4LnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WUGFyYWxsYXgvVlBhcmFsbGF4LnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlBhcmFsbGF4X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZQYXJhbGxheF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdHJhbnNsYXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RyYW5zbGF0YWJsZSAqLyIuL3NyYy9taXhpbnMvdHJhbnNsYXRhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvLyBTdHlsZQovLyBNaXhpbnMKdmFyIGJhc2VNaXhpbnM9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pKF9taXhpbnNfdHJhbnNsYXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSk7LyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1iYXNlTWl4aW5zLmV4dGVuZCgpLmV4dGVuZCh7bmFtZTondi1wYXJhbGxheCcscHJvcHM6e2FsdDp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJ30saGVpZ2h0Ont0eXBlOltTdHJpbmcsTnVtYmVyXSxkZWZhdWx0OjUwMH0sc3JjOlN0cmluZ30sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2lzQm9vdGVkOmZhbHNlfTt9LGNvbXB1dGVkOntzdHlsZXM6ZnVuY3Rpb24gc3R5bGVzKCl7cmV0dXJue2Rpc3BsYXk6J2Jsb2NrJyxvcGFjaXR5OnRoaXMuaXNCb290ZWQ/MTowLHRyYW5zZm9ybToidHJhbnNsYXRlKC01MCUsICIrdGhpcy5wYXJhbGxheCsicHgpIn07fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dGhpcy5pbml0KCk7fSxtZXRob2RzOntpbml0OmZ1bmN0aW9uIGluaXQoKXt2YXIgX3RoaXM9dGhpczt2YXIgaW1nPXRoaXMuJHJlZnMuaW1nO2lmKCFpbWcpcmV0dXJuO2lmKGltZy5jb21wbGV0ZSl7dGhpcy50cmFuc2xhdGUoKTt0aGlzLmxpc3RlbmVycygpO31lbHNle2ltZy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJyxmdW5jdGlvbigpe190aGlzLnRyYW5zbGF0ZSgpO190aGlzLmxpc3RlbmVycygpO30sZmFsc2UpO310aGlzLmlzQm9vdGVkPXRydWU7fSxvYmpIZWlnaHQ6ZnVuY3Rpb24gb2JqSGVpZ2h0KCl7cmV0dXJuIHRoaXMuJHJlZnMuaW1nLm5hdHVyYWxIZWlnaHQ7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgaW1nRGF0YT17c3RhdGljQ2xhc3M6J3YtcGFyYWxsYXhfX2ltYWdlJyxzdHlsZTp0aGlzLnN0eWxlcyxhdHRyczp7c3JjOnRoaXMuc3JjLGFsdDp0aGlzLmFsdH0scmVmOidpbWcnfTt2YXIgY29udGFpbmVyPWgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXBhcmFsbGF4X19pbWFnZS1jb250YWluZXInfSxbaCgnaW1nJyxpbWdEYXRhKV0pO3ZhciBjb250ZW50PWgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXBhcmFsbGF4X19jb250ZW50J30sdGhpcy4kc2xvdHMuZGVmYXVsdCk7cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXBhcmFsbGF4JyxzdHlsZTp7aGVpZ2h0OnRoaXMuaGVpZ2h0KyJweCJ9LG9uOnRoaXMuJGxpc3RlbmVyc30sW2NvbnRhaW5lcixjb250ZW50XSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZQYXJhbGxheC9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WUGFyYWxsYXgvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVlBhcmFsbGF4LCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZQYXJhbGxheEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlBhcmFsbGF4X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WUGFyYWxsYXggKi8iLi9zcmMvY29tcG9uZW50cy9WUGFyYWxsYXgvVlBhcmFsbGF4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlBhcmFsbGF4IixmdW5jdGlvbigpe3JldHVybiBfVlBhcmFsbGF4X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WUGFyYWxsYXhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZQaWNrZXIvVlBpY2tlci5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlBpY2tlci9WUGlja2VyLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUGlja2VyVlBpY2tlclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZQaWNrZXIvVlBpY2tlci50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WUGlja2VyL1ZQaWNrZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUGlja2VyVlBpY2tlclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZQaWNrZXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlBpY2tlci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlBpY2tlci9WUGlja2VyLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlBpY2tlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WUGlja2VyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDYXJkX1ZDYXJkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WQ2FyZC9WQ2FyZC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkNhcmQvVkNhcmQuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2FyZF9WQ2FyZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WQ2FyZF9WQ2FyZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBNaXhpbnMKLy8gSGVscGVycwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdKShfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3YtcGlja2VyJyxwcm9wczp7ZnVsbFdpZHRoOkJvb2xlYW4sbGFuZHNjYXBlOkJvb2xlYW4sbm9UaXRsZTpCb29sZWFuLHRyYW5zaXRpb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2ZhZGUtdHJhbnNpdGlvbid9LHdpZHRoOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjI5MH19LGNvbXB1dGVkOntjb21wdXRlZFRpdGxlQ29sb3I6ZnVuY3Rpb24gY29tcHV0ZWRUaXRsZUNvbG9yKCl7dmFyIGRlZmF1bHRUaXRsZUNvbG9yPXRoaXMuaXNEYXJrP2ZhbHNlOnRoaXMuY29sb3J8fCdwcmltYXJ5JztyZXR1cm4gdGhpcy5jb2xvcnx8ZGVmYXVsdFRpdGxlQ29sb3I7fX0sbWV0aG9kczp7Z2VuVGl0bGU6ZnVuY3Rpb24gZ2VuVGl0bGUoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx0aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbXB1dGVkVGl0bGVDb2xvcix7c3RhdGljQ2xhc3M6J3YtcGlja2VyX190aXRsZScsY2xhc3M6eyd2LXBpY2tlcl9fdGl0bGUtLWxhbmRzY2FwZSc6dGhpcy5sYW5kc2NhcGV9fSksdGhpcy4kc2xvdHMudGl0bGUpO30sZ2VuQm9keVRyYW5zaXRpb246ZnVuY3Rpb24gZ2VuQm9keVRyYW5zaXRpb24oKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndHJhbnNpdGlvbicse3Byb3BzOntuYW1lOnRoaXMudHJhbnNpdGlvbn19LHRoaXMuJHNsb3RzLmRlZmF1bHQpO30sZ2VuQm9keTpmdW5jdGlvbiBnZW5Cb2R5KCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXBpY2tlcl9fYm9keScsY2xhc3M6X19hc3NpZ24oeyd2LXBpY2tlcl9fYm9keS0tbm8tdGl0bGUnOnRoaXMubm9UaXRsZX0sdGhpcy50aGVtZUNsYXNzZXMpLHN0eWxlOnRoaXMuZnVsbFdpZHRoP3VuZGVmaW5lZDp7d2lkdGg6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLndpZHRoKX19LFt0aGlzLmdlbkJvZHlUcmFuc2l0aW9uKCldKTt9LGdlbkFjdGlvbnM6ZnVuY3Rpb24gZ2VuQWN0aW9ucygpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1waWNrZXJfX2FjdGlvbnMgdi1jYXJkX19hY3Rpb25zJyxjbGFzczp7J3YtcGlja2VyX19hY3Rpb25zLS1uby10aXRsZSc6dGhpcy5ub1RpdGxlfX0sdGhpcy4kc2xvdHMuYWN0aW9ucyk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXtyZXR1cm4gaCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtcGlja2VyIHYtY2FyZCcsY2xhc3M6X19hc3NpZ24oeyd2LXBpY2tlci0tbGFuZHNjYXBlJzp0aGlzLmxhbmRzY2FwZSwndi1waWNrZXItLWZ1bGwtd2lkdGgnOnRoaXMuZnVsbFdpZHRofSx0aGlzLnRoZW1lQ2xhc3Nlcyl9LFt0aGlzLiRzbG90cy50aXRsZT90aGlzLmdlblRpdGxlKCk6bnVsbCx0aGlzLmdlbkJvZHkoKSx0aGlzLiRzbG90cy5hY3Rpb25zP3RoaXMuZ2VuQWN0aW9ucygpOm51bGxdKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlBpY2tlci9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlBpY2tlci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVlBpY2tlciwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUGlja2VySW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WUGlja2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WUGlja2VyICovIi4vc3JjL2NvbXBvbmVudHMvVlBpY2tlci9WUGlja2VyLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlBpY2tlciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZQcm9ncmVzc0NpcmN1bGFyL1ZQcm9ncmVzc0NpcmN1bGFyLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZQcm9ncmVzc0NpcmN1bGFyL1ZQcm9ncmVzc0NpcmN1bGFyLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZQcm9ncmVzc0NpcmN1bGFyVlByb2dyZXNzQ2lyY3VsYXJTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WUHJvZ3Jlc3NDaXJjdWxhci9WUHJvZ3Jlc3NDaXJjdWxhci50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZQcm9ncmVzc0NpcmN1bGFyL1ZQcm9ncmVzc0NpcmN1bGFyLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUHJvZ3Jlc3NDaXJjdWxhclZQcm9ncmVzc0NpcmN1bGFyVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlByb2dyZXNzQ2lyY3VsYXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlByb2dyZXNzQ2lyY3VsYXIuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZQcm9ncmVzc0NpcmN1bGFyL1ZQcm9ncmVzc0NpcmN1bGFyLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlByb2dyZXNzQ2lyY3VsYXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVlByb2dyZXNzQ2lyY3VsYXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9jb2xvcmFibGUgKi8iLi9zcmMvbWl4aW5zL2NvbG9yYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7Ly8gU3R5bGVzCi8vIE1peGlucwovLyBVdGlscwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5leHRlbmQoe25hbWU6J3YtcHJvZ3Jlc3MtY2lyY3VsYXInLHByb3BzOntidXR0b246Qm9vbGVhbixpbmRldGVybWluYXRlOkJvb2xlYW4scm90YXRlOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjB9LHNpemU6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MzJ9LHdpZHRoOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjR9LHZhbHVlOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjB9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57cmFkaXVzOjIwfTt9LGNvbXB1dGVkOntjYWxjdWxhdGVkU2l6ZTpmdW5jdGlvbiBjYWxjdWxhdGVkU2l6ZSgpe3JldHVybiBOdW1iZXIodGhpcy5zaXplKSsodGhpcy5idXR0b24/ODowKTt9LGNpcmN1bWZlcmVuY2U6ZnVuY3Rpb24gY2lyY3VtZmVyZW5jZSgpe3JldHVybiAyKk1hdGguUEkqdGhpcy5yYWRpdXM7fSxjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm57J3YtcHJvZ3Jlc3MtY2lyY3VsYXItLWluZGV0ZXJtaW5hdGUnOnRoaXMuaW5kZXRlcm1pbmF0ZSwndi1wcm9ncmVzcy1jaXJjdWxhci0tYnV0dG9uJzp0aGlzLmJ1dHRvbn07fSxub3JtYWxpemVkVmFsdWU6ZnVuY3Rpb24gbm9ybWFsaXplZFZhbHVlKCl7aWYodGhpcy52YWx1ZTwwKXtyZXR1cm4gMDt9aWYodGhpcy52YWx1ZT4xMDApe3JldHVybiAxMDA7fXJldHVybiBwYXJzZUZsb2F0KHRoaXMudmFsdWUpO30sc3Ryb2tlRGFzaEFycmF5OmZ1bmN0aW9uIHN0cm9rZURhc2hBcnJheSgpe3JldHVybiBNYXRoLnJvdW5kKHRoaXMuY2lyY3VtZmVyZW5jZSoxMDAwKS8xMDAwO30sc3Ryb2tlRGFzaE9mZnNldDpmdW5jdGlvbiBzdHJva2VEYXNoT2Zmc2V0KCl7cmV0dXJuKDEwMC10aGlzLm5vcm1hbGl6ZWRWYWx1ZSkvMTAwKnRoaXMuY2lyY3VtZmVyZW5jZSsncHgnO30sc3Ryb2tlV2lkdGg6ZnVuY3Rpb24gc3Ryb2tlV2lkdGgoKXtyZXR1cm4gTnVtYmVyKHRoaXMud2lkdGgpLyt0aGlzLnNpemUqdGhpcy52aWV3Qm94U2l6ZSoyO30sc3R5bGVzOmZ1bmN0aW9uIHN0eWxlcygpe3JldHVybntoZWlnaHQ6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmNhbGN1bGF0ZWRTaXplKSx3aWR0aDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuY2FsY3VsYXRlZFNpemUpfTt9LHN2Z1N0eWxlczpmdW5jdGlvbiBzdmdTdHlsZXMoKXtyZXR1cm57dHJhbnNmb3JtOiJyb3RhdGUoIitOdW1iZXIodGhpcy5yb3RhdGUpKyJkZWcpIn07fSx2aWV3Qm94U2l6ZTpmdW5jdGlvbiB2aWV3Qm94U2l6ZSgpe3JldHVybiB0aGlzLnJhZGl1cy8oMS1OdW1iZXIodGhpcy53aWR0aCkvK3RoaXMuc2l6ZSk7fX0sbWV0aG9kczp7Z2VuQ2lyY2xlOmZ1bmN0aW9uIGdlbkNpcmNsZShuYW1lLG9mZnNldCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2NpcmNsZScse2NsYXNzOiJ2LXByb2dyZXNzLWNpcmN1bGFyX18iK25hbWUsYXR0cnM6e2ZpbGw6J3RyYW5zcGFyZW50JyxjeDoyKnRoaXMudmlld0JveFNpemUsY3k6Mip0aGlzLnZpZXdCb3hTaXplLHI6dGhpcy5yYWRpdXMsJ3N0cm9rZS13aWR0aCc6dGhpcy5zdHJva2VXaWR0aCwnc3Ryb2tlLWRhc2hhcnJheSc6dGhpcy5zdHJva2VEYXNoQXJyYXksJ3N0cm9rZS1kYXNob2Zmc2V0JzpvZmZzZXR9fSk7fSxnZW5Tdmc6ZnVuY3Rpb24gZ2VuU3ZnKCl7dmFyIGNoaWxkcmVuPVt0aGlzLmluZGV0ZXJtaW5hdGV8fHRoaXMuZ2VuQ2lyY2xlKCd1bmRlcmxheScsMCksdGhpcy5nZW5DaXJjbGUoJ292ZXJsYXknLHRoaXMuc3Ryb2tlRGFzaE9mZnNldCldO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdzdmcnLHtzdHlsZTp0aGlzLnN2Z1N0eWxlcyxhdHRyczp7eG1sbnM6J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyx2aWV3Qm94OnRoaXMudmlld0JveFNpemUrIiAiK3RoaXMudmlld0JveFNpemUrIiAiKzIqdGhpcy52aWV3Qm94U2l6ZSsiICIrMip0aGlzLnZpZXdCb3hTaXplfX0sY2hpbGRyZW4pO30sZ2VuSW5mbzpmdW5jdGlvbiBnZW5JbmZvKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXByb2dyZXNzLWNpcmN1bGFyX19pbmZvJ30sdGhpcy4kc2xvdHMuZGVmYXVsdCk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXtyZXR1cm4gaCgnZGl2Jyx0aGlzLnNldFRleHRDb2xvcih0aGlzLmNvbG9yLHtzdGF0aWNDbGFzczondi1wcm9ncmVzcy1jaXJjdWxhcicsYXR0cnM6e3JvbGU6J3Byb2dyZXNzYmFyJywnYXJpYS12YWx1ZW1pbic6MCwnYXJpYS12YWx1ZW1heCc6MTAwLCdhcmlhLXZhbHVlbm93Jzp0aGlzLmluZGV0ZXJtaW5hdGU/dW5kZWZpbmVkOnRoaXMubm9ybWFsaXplZFZhbHVlfSxjbGFzczp0aGlzLmNsYXNzZXMsc3R5bGU6dGhpcy5zdHlsZXMsb246dGhpcy4kbGlzdGVuZXJzfSksW3RoaXMuZ2VuU3ZnKCksdGhpcy5nZW5JbmZvKCldKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlByb2dyZXNzQ2lyY3VsYXIvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WUHJvZ3Jlc3NDaXJjdWxhci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZQcm9ncmVzc0NpcmN1bGFyLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZQcm9ncmVzc0NpcmN1bGFySW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WUHJvZ3Jlc3NDaXJjdWxhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlByb2dyZXNzQ2lyY3VsYXIgKi8iLi9zcmMvY29tcG9uZW50cy9WUHJvZ3Jlc3NDaXJjdWxhci9WUHJvZ3Jlc3NDaXJjdWxhci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZQcm9ncmVzc0NpcmN1bGFyIixmdW5jdGlvbigpe3JldHVybiBfVlByb2dyZXNzQ2lyY3VsYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZQcm9ncmVzc0NpcmN1bGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WUHJvZ3Jlc3NMaW5lYXIvVlByb2dyZXNzTGluZWFyLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlByb2dyZXNzTGluZWFyL1ZQcm9ncmVzc0xpbmVhci5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZQcm9ncmVzc0xpbmVhclZQcm9ncmVzc0xpbmVhclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZQcm9ncmVzc0xpbmVhci9WUHJvZ3Jlc3NMaW5lYXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZQcm9ncmVzc0xpbmVhci9WUHJvZ3Jlc3NMaW5lYXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlByb2dyZXNzTGluZWFyVlByb2dyZXNzTGluZWFyVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlByb2dyZXNzTGluZWFyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZQcm9ncmVzc0xpbmVhci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlByb2dyZXNzTGluZWFyL1ZQcm9ncmVzc0xpbmVhci5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZQcm9ncmVzc0xpbmVhcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WUHJvZ3Jlc3NMaW5lYXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi90cmFuc2l0aW9ucyAqLyIuL3NyYy9jb21wb25lbnRzL3RyYW5zaXRpb25zL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3Bvc2l0aW9uYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9wb3NpdGlvbmFibGUgKi8iLi9zcmMvbWl4aW5zL3Bvc2l0aW9uYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfcHJveHlhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3Byb3h5YWJsZSAqLyIuL3NyYy9taXhpbnMvcHJveHlhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBDb21wb25lbnRzCi8vIE1peGlucwovLyBVdGlsaXRpZXMKdmFyIGJhc2VNaXhpbnM9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJkZWZhdWx0Il0pKF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxPYmplY3QoX21peGluc19wb3NpdGlvbmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZmFjdG9yeSJdKShbJ2Fic29sdXRlJywnZml4ZWQnLCd0b3AnLCdib3R0b20nXSksX21peGluc19wcm94eWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSk7LyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1iYXNlTWl4aW5zLmV4dGVuZCh7bmFtZTondi1wcm9ncmVzcy1saW5lYXInLHByb3BzOnthY3RpdmU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGJhY2tncm91bmRDb2xvcjp7dHlwZTpTdHJpbmcsZGVmYXVsdDpudWxsfSxiYWNrZ3JvdW5kT3BhY2l0eTp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDpudWxsfSxidWZmZXJWYWx1ZTp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDoxMDB9LGNvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OidwcmltYXJ5J30saGVpZ2h0Ont0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjR9LGluZGV0ZXJtaW5hdGU6Qm9vbGVhbixxdWVyeTpCb29sZWFuLHJvdW5kZWQ6Qm9vbGVhbixzdHJlYW06Qm9vbGVhbixzdHJpcGVkOkJvb2xlYW4sdmFsdWU6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MH19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntpbnRlcm5hbExhenlWYWx1ZTp0aGlzLnZhbHVlfHwwfTt9LGNvbXB1dGVkOntfX2NhY2hlZEJhY2tncm91bmQ6ZnVuY3Rpb24gX19jYWNoZWRCYWNrZ3JvdW5kKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IodGhpcy5iYWNrZ3JvdW5kQ29sb3J8fHRoaXMuY29sb3Ise3N0YXRpY0NsYXNzOid2LXByb2dyZXNzLWxpbmVhcl9fYmFja2dyb3VuZCcsc3R5bGU6dGhpcy5iYWNrZ3JvdW5kU3R5bGV9KSk7fSxfX2NhY2hlZEJhcjpmdW5jdGlvbiBfX2NhY2hlZEJhcigpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KHRoaXMuY29tcHV0ZWRUcmFuc2l0aW9uLFt0aGlzLl9fY2FjaGVkQmFyVHlwZV0pO30sX19jYWNoZWRCYXJUeXBlOmZ1bmN0aW9uIF9fY2FjaGVkQmFyVHlwZSgpe3JldHVybiB0aGlzLmluZGV0ZXJtaW5hdGU/dGhpcy5fX2NhY2hlZEluZGV0ZXJtaW5hdGU6dGhpcy5fX2NhY2hlZERldGVybWluYXRlO30sX19jYWNoZWRCdWZmZXI6ZnVuY3Rpb24gX19jYWNoZWRCdWZmZXIoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtcHJvZ3Jlc3MtbGluZWFyX19idWZmZXInLHN0eWxlOnRoaXMuc3R5bGVzfSk7fSxfX2NhY2hlZERldGVybWluYXRlOmZ1bmN0aW9uIF9fY2FjaGVkRGV0ZXJtaW5hdGUoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx0aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbG9yLHtzdGF0aWNDbGFzczoidi1wcm9ncmVzcy1saW5lYXJfX2RldGVybWluYXRlIixzdHlsZTp7d2lkdGg6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLm5vcm1hbGl6ZWRWYWx1ZSwnJScpfX0pKTt9LF9fY2FjaGVkSW5kZXRlcm1pbmF0ZTpmdW5jdGlvbiBfX2NhY2hlZEluZGV0ZXJtaW5hdGUoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtcHJvZ3Jlc3MtbGluZWFyX19pbmRldGVybWluYXRlJyxjbGFzczp7J3YtcHJvZ3Jlc3MtbGluZWFyX19pbmRldGVybWluYXRlLS1hY3RpdmUnOnRoaXMuYWN0aXZlfX0sW3RoaXMuZ2VuUHJvZ3Jlc3NCYXIoJ2xvbmcnKSx0aGlzLmdlblByb2dyZXNzQmFyKCdzaG9ydCcpXSk7fSxfX2NhY2hlZFN0cmVhbTpmdW5jdGlvbiBfX2NhY2hlZFN0cmVhbSgpe2lmKCF0aGlzLnN0cmVhbSlyZXR1cm4gbnVsbDtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx0aGlzLnNldFRleHRDb2xvcih0aGlzLmNvbG9yLHtzdGF0aWNDbGFzczondi1wcm9ncmVzcy1saW5lYXJfX3N0cmVhbScsc3R5bGU6e3dpZHRoOk9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImNvbnZlcnRUb1VuaXQiXSkoMTAwLXRoaXMubm9ybWFsaXplZEJ1ZmZlciwnJScpfX0pKTt9LGJhY2tncm91bmRTdHlsZTpmdW5jdGlvbiBiYWNrZ3JvdW5kU3R5bGUoKXt2YXIgX2E7dmFyIGJhY2tncm91bmRPcGFjaXR5PXRoaXMuYmFja2dyb3VuZE9wYWNpdHk9PW51bGw/dGhpcy5iYWNrZ3JvdW5kQ29sb3I/MTowLjM6cGFyc2VGbG9hdCh0aGlzLmJhY2tncm91bmRPcGFjaXR5KTtyZXR1cm4gX2E9e29wYWNpdHk6YmFja2dyb3VuZE9wYWNpdHl9LF9hW3RoaXMuJHZ1ZXRpZnkucnRsPydyaWdodCc6J2xlZnQnXT1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMubm9ybWFsaXplZFZhbHVlLCclJyksX2Eud2lkdGg9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLm5vcm1hbGl6ZWRCdWZmZXItdGhpcy5ub3JtYWxpemVkVmFsdWUsJyUnKSxfYTt9LGNsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7J3YtcHJvZ3Jlc3MtbGluZWFyLS1hYnNvbHV0ZSc6dGhpcy5hYnNvbHV0ZSwndi1wcm9ncmVzcy1saW5lYXItLWZpeGVkJzp0aGlzLmZpeGVkLCd2LXByb2dyZXNzLWxpbmVhci0tcXVlcnknOnRoaXMucXVlcnksJ3YtcHJvZ3Jlc3MtbGluZWFyLS1yZWFjdGl2ZSc6dGhpcy5yZWFjdGl2ZSwndi1wcm9ncmVzcy1saW5lYXItLXJvdW5kZWQnOnRoaXMucm91bmRlZCwndi1wcm9ncmVzcy1saW5lYXItLXN0cmlwZWQnOnRoaXMuc3RyaXBlZH0sdGhpcy50aGVtZUNsYXNzZXMpO30sY29tcHV0ZWRUcmFuc2l0aW9uOmZ1bmN0aW9uIGNvbXB1dGVkVHJhbnNpdGlvbigpe3JldHVybiB0aGlzLmluZGV0ZXJtaW5hdGU/X3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bIlZGYWRlVHJhbnNpdGlvbiJdOl90cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJWU2xpZGVYVHJhbnNpdGlvbiJdO30sbm9ybWFsaXplZEJ1ZmZlcjpmdW5jdGlvbiBub3JtYWxpemVkQnVmZmVyKCl7cmV0dXJuIHRoaXMubm9ybWFsaXplKHRoaXMuYnVmZmVyVmFsdWUpO30sbm9ybWFsaXplZFZhbHVlOmZ1bmN0aW9uIG5vcm1hbGl6ZWRWYWx1ZSgpe3JldHVybiB0aGlzLm5vcm1hbGl6ZSh0aGlzLmludGVybmFsTGF6eVZhbHVlKTt9LHJlYWN0aXZlOmZ1bmN0aW9uIHJlYWN0aXZlKCl7cmV0dXJuIEJvb2xlYW4odGhpcy4kbGlzdGVuZXJzLmNoYW5nZSk7fSxzdHlsZXM6ZnVuY3Rpb24gc3R5bGVzKCl7dmFyIHN0eWxlcz17fTtpZighdGhpcy5hY3RpdmUpe3N0eWxlcy5oZWlnaHQ9MDt9aWYoIXRoaXMuaW5kZXRlcm1pbmF0ZSYmcGFyc2VGbG9hdCh0aGlzLm5vcm1hbGl6ZWRCdWZmZXIpIT09MTAwKXtzdHlsZXMud2lkdGg9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLm5vcm1hbGl6ZWRCdWZmZXIsJyUnKTt9cmV0dXJuIHN0eWxlczt9fSxtZXRob2RzOntnZW5Db250ZW50OmZ1bmN0aW9uIGdlbkNvbnRlbnQoKXt2YXIgc2xvdD1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJnZXRTbG90Il0pKHRoaXMsJ2RlZmF1bHQnLHt2YWx1ZTp0aGlzLmludGVybmFsTGF6eVZhbHVlfSk7aWYoIXNsb3QpcmV0dXJuIG51bGw7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXByb2dyZXNzLWxpbmVhcl9fY29udGVudCd9LHNsb3QpO30sZ2VuTGlzdGVuZXJzOmZ1bmN0aW9uIGdlbkxpc3RlbmVycygpe3ZhciBsaXN0ZW5lcnM9dGhpcy4kbGlzdGVuZXJzO2lmKHRoaXMucmVhY3RpdmUpe2xpc3RlbmVycy5jbGljaz10aGlzLm9uQ2xpY2s7fXJldHVybiBsaXN0ZW5lcnM7fSxnZW5Qcm9ncmVzc0JhcjpmdW5jdGlvbiBnZW5Qcm9ncmVzc0JhcihuYW1lKXt2YXIgX2E7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IodGhpcy5jb2xvcix7c3RhdGljQ2xhc3M6J3YtcHJvZ3Jlc3MtbGluZWFyX19pbmRldGVybWluYXRlJyxjbGFzczooX2E9e30sX2FbbmFtZV09dHJ1ZSxfYSl9KSk7fSxvbkNsaWNrOmZ1bmN0aW9uIG9uQ2xpY2soZSl7aWYoIXRoaXMucmVhY3RpdmUpcmV0dXJuO3ZhciB3aWR0aD10aGlzLiRlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aDt0aGlzLmludGVybmFsVmFsdWU9ZS5vZmZzZXRYL3dpZHRoKjEwMDt9LG5vcm1hbGl6ZTpmdW5jdGlvbiBub3JtYWxpemUodmFsdWUpe2lmKHZhbHVlPDApcmV0dXJuIDA7aWYodmFsdWU+MTAwKXJldHVybiAxMDA7cmV0dXJuIHBhcnNlRmxvYXQodmFsdWUpO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGRhdGE9e3N0YXRpY0NsYXNzOid2LXByb2dyZXNzLWxpbmVhcicsYXR0cnM6e3JvbGU6J3Byb2dyZXNzYmFyJywnYXJpYS12YWx1ZW1pbic6MCwnYXJpYS12YWx1ZW1heCc6dGhpcy5ub3JtYWxpemVkQnVmZmVyLCdhcmlhLXZhbHVlbm93Jzp0aGlzLmluZGV0ZXJtaW5hdGU/dW5kZWZpbmVkOnRoaXMubm9ybWFsaXplZFZhbHVlfSxjbGFzczp0aGlzLmNsYXNzZXMsc3R5bGU6e2JvdHRvbTp0aGlzLmJvdHRvbT8wOnVuZGVmaW5lZCxoZWlnaHQ6dGhpcy5hY3RpdmU/T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmhlaWdodCk6MCx0b3A6dGhpcy50b3A/MDp1bmRlZmluZWR9LG9uOnRoaXMuZ2VuTGlzdGVuZXJzKCl9O3JldHVybiBoKCdkaXYnLGRhdGEsW3RoaXMuX19jYWNoZWRTdHJlYW0sdGhpcy5fX2NhY2hlZEJhY2tncm91bmQsdGhpcy5fX2NhY2hlZEJ1ZmZlcix0aGlzLl9fY2FjaGVkQmFyLHRoaXMuZ2VuQ29udGVudCgpXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZQcm9ncmVzc0xpbmVhci9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WUHJvZ3Jlc3NMaW5lYXIvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVlByb2dyZXNzTGluZWFyLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZQcm9ncmVzc0xpbmVhckluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlByb2dyZXNzTGluZWFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WUHJvZ3Jlc3NMaW5lYXIgKi8iLi9zcmMvY29tcG9uZW50cy9WUHJvZ3Jlc3NMaW5lYXIvVlByb2dyZXNzTGluZWFyLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlByb2dyZXNzTGluZWFyIixmdW5jdGlvbigpe3JldHVybiBfVlByb2dyZXNzTGluZWFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WUHJvZ3Jlc3NMaW5lYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZSYWRpb0dyb3VwL1ZSYWRpby5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlJhZGlvR3JvdXAvVlJhZGlvLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUmFkaW9Hcm91cFZSYWRpb1Nhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZSYWRpb0dyb3VwL1ZSYWRpby50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WUmFkaW9Hcm91cC9WUmFkaW8udHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUmFkaW9Hcm91cFZSYWRpb1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZSYWRpb19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WUmFkaW8uc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZSYWRpb0dyb3VwL1ZSYWRpby5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZSYWRpb19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WUmFkaW9fc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkxhYmVsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkxhYmVsICovIi4vc3JjL2NvbXBvbmVudHMvVkxhYmVsL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkljb24gKi8iLi9zcmMvY29tcG9uZW50cy9WSWNvbi9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WSW5wdXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSW5wdXQgKi8iLi9zcmMvY29tcG9uZW50cy9WSW5wdXQvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2JpbmRzX2F0dHJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2JpbmRzLWF0dHJzICovIi4vc3JjL21peGlucy9iaW5kcy1hdHRycy9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19ncm91cGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvZ3JvdXBhYmxlICovIi4vc3JjL21peGlucy9ncm91cGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3JpcHBsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvcmlwcGxlYWJsZSAqLyIuL3NyYy9taXhpbnMvcmlwcGxlYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19zZWxlY3RhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3NlbGVjdGFibGUgKi8iLi9zcmMvbWl4aW5zL3NlbGVjdGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBNaXhpbnMKLy8gVXRpbGl0aWVzCnZhciBiYXNlTWl4aW5zPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19bImRlZmF1bHQiXSkoX21peGluc19iaW5kc19hdHRyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdLF9taXhpbnNfcmlwcGxlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJkZWZhdWx0Il0sT2JqZWN0KF9taXhpbnNfZ3JvdXBhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImZhY3RvcnkiXSkoJ3JhZGlvR3JvdXAnKSxfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJkZWZhdWx0Il0pOy8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09YmFzZU1peGlucy5leHRlbmQoKS5leHRlbmQoe25hbWU6J3YtcmFkaW8nLGluaGVyaXRBdHRyczpmYWxzZSxwcm9wczp7ZGlzYWJsZWQ6Qm9vbGVhbixpZDpTdHJpbmcsbGFiZWw6U3RyaW5nLG5hbWU6U3RyaW5nLG9mZkljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRyYWRpb09mZid9LG9uSWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJHJhZGlvT24nfSxyZWFkb25seTpCb29sZWFuLHZhbHVlOntkZWZhdWx0Om51bGx9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aXNGb2N1c2VkOmZhbHNlfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LXJhZGlvLS1pcy1kaXNhYmxlZCc6dGhpcy5pc0Rpc2FibGVkLCd2LXJhZGlvLS1pcy1mb2N1c2VkJzp0aGlzLmlzRm9jdXNlZH0sdGhpcy50aGVtZUNsYXNzZXMsdGhpcy5ncm91cENsYXNzZXMpO30sY29tcHV0ZWRDb2xvcjpmdW5jdGlvbiBjb21wdXRlZENvbG9yKCl7cmV0dXJuIF9taXhpbnNfc2VsZWN0YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jb21wdXRlZENvbG9yLmNhbGwodGhpcyk7fSxjb21wdXRlZEljb246ZnVuY3Rpb24gY29tcHV0ZWRJY29uKCl7cmV0dXJuIHRoaXMuaXNBY3RpdmU/dGhpcy5vbkljb246dGhpcy5vZmZJY29uO30sY29tcHV0ZWRJZDpmdW5jdGlvbiBjb21wdXRlZElkKCl7cmV0dXJuIF9WSW5wdXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuY29tcHV0ZWRJZC5jYWxsKHRoaXMpO30saGFzTGFiZWw6X1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5oYXNMYWJlbCxoYXNTdGF0ZTpmdW5jdGlvbiBoYXNTdGF0ZSgpe3JldHVybih0aGlzLnJhZGlvR3JvdXB8fHt9KS5oYXNTdGF0ZTt9LGlzRGlzYWJsZWQ6ZnVuY3Rpb24gaXNEaXNhYmxlZCgpe3JldHVybiB0aGlzLmRpc2FibGVkfHwhISh0aGlzLnJhZGlvR3JvdXB8fHt9KS5kaXNhYmxlZDt9LGlzUmVhZG9ubHk6ZnVuY3Rpb24gaXNSZWFkb25seSgpe3JldHVybiB0aGlzLnJlYWRvbmx5fHwhISh0aGlzLnJhZGlvR3JvdXB8fHt9KS5yZWFkb25seTt9LGNvbXB1dGVkTmFtZTpmdW5jdGlvbiBjb21wdXRlZE5hbWUoKXtpZih0aGlzLm5hbWV8fCF0aGlzLnJhZGlvR3JvdXApe3JldHVybiB0aGlzLm5hbWU7fXJldHVybiB0aGlzLnJhZGlvR3JvdXAubmFtZXx8InJhZGlvLSIrdGhpcy5yYWRpb0dyb3VwLl91aWQ7fSx2YWxpZGF0aW9uU3RhdGU6ZnVuY3Rpb24gdmFsaWRhdGlvblN0YXRlKCl7cmV0dXJuKHRoaXMucmFkaW9Hcm91cHx8e30pLnZhbGlkYXRpb25TdGF0ZXx8dGhpcy5jb21wdXRlZENvbG9yO319LG1ldGhvZHM6e2dlbklucHV0OmZ1bmN0aW9uIGdlbklucHV0KGFyZ3Mpey8vIFdlIGNhbid0IGFjdHVhbGx5IHVzZSB0aGUgbWl4aW4gZGlyZWN0bHkgYmVjYXVzZQovLyBpdCdzIG1hZGUgZm9yIHN0YW5kYWxvbmUgY29tcG9uZW50cywgYnV0IGl0cwovLyBnZW5JbnB1dCBtZXRob2QgaXMgZXhhY3RseSB3aGF0IHdlIG5lZWQKcmV0dXJuIF9taXhpbnNfc2VsZWN0YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlbklucHV0LmNhbGwodGhpcywncmFkaW8nLGFyZ3MpO30sZ2VuTGFiZWw6ZnVuY3Rpb24gZ2VuTGFiZWwoKXt2YXIgX3RoaXM9dGhpcztpZighdGhpcy5oYXNMYWJlbClyZXR1cm4gbnVsbDtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkxhYmVsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSx7b246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKGUpey8vIFByZXZlbnQgbGFiZWwgZnJvbQovLyBjYXVzaW5nIHRoZSBpbnB1dAovLyB0byBmb2N1cwplLnByZXZlbnREZWZhdWx0KCk7X3RoaXMub25DaGFuZ2UoKTt9fSxhdHRyczp7Zm9yOnRoaXMuY29tcHV0ZWRJZH0scHJvcHM6e2NvbG9yOnRoaXMudmFsaWRhdGlvblN0YXRlLGZvY3VzZWQ6dGhpcy5oYXNTdGF0ZX19LE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fWyJnZXRTbG90Il0pKHRoaXMsJ2xhYmVsJyl8fHRoaXMubGFiZWwpO30sZ2VuUmFkaW86ZnVuY3Rpb24gZ2VuUmFkaW8oKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtaW5wdXQtLXNlbGVjdGlvbi1jb250cm9sc19faW5wdXQnfSxbdGhpcy5nZW5JbnB1dChfX2Fzc2lnbih7bmFtZTp0aGlzLmNvbXB1dGVkTmFtZSx2YWx1ZTp0aGlzLnZhbHVlfSx0aGlzLmF0dHJzJCkpLHRoaXMuZ2VuUmlwcGxlKHRoaXMuc2V0VGV4dENvbG9yKHRoaXMudmFsaWRhdGlvblN0YXRlKSksdGhpcy4kY3JlYXRlRWxlbWVudChfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLHRoaXMuc2V0VGV4dENvbG9yKHRoaXMudmFsaWRhdGlvblN0YXRlLHtwcm9wczp7ZGVuc2U6dGhpcy5yYWRpb0dyb3VwJiZ0aGlzLnJhZGlvR3JvdXAuZGVuc2V9fSksdGhpcy5jb21wdXRlZEljb24pXSk7fSxvbkZvY3VzOmZ1bmN0aW9uIG9uRm9jdXMoZSl7dGhpcy5pc0ZvY3VzZWQ9dHJ1ZTt0aGlzLiRlbWl0KCdmb2N1cycsZSk7fSxvbkJsdXI6ZnVuY3Rpb24gb25CbHVyKGUpe3RoaXMuaXNGb2N1c2VkPWZhbHNlO3RoaXMuJGVtaXQoJ2JsdXInLGUpO30sb25DaGFuZ2U6ZnVuY3Rpb24gb25DaGFuZ2UoKXtpZih0aGlzLmlzRGlzYWJsZWR8fHRoaXMuaXNSZWFkb25seXx8dGhpcy5pc0FjdGl2ZSlyZXR1cm47dGhpcy50b2dnbGUoKTt9LG9uS2V5ZG93bjpmdW5jdGlvbiBvbktleWRvd24oKXt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBkYXRhPXtzdGF0aWNDbGFzczondi1yYWRpbycsY2xhc3M6dGhpcy5jbGFzc2VzfTtyZXR1cm4gaCgnZGl2JyxkYXRhLFt0aGlzLmdlblJhZGlvKCksdGhpcy5nZW5MYWJlbCgpXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZSYWRpb0dyb3VwL1ZSYWRpb0dyb3VwLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZSYWRpb0dyb3VwL1ZSYWRpb0dyb3VwLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZSYWRpb0dyb3VwVlJhZGlvR3JvdXBTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WUmFkaW9Hcm91cC9WUmFkaW9Hcm91cC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZSYWRpb0dyb3VwL1ZSYWRpb0dyb3VwLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUmFkaW9Hcm91cFZSYWRpb0dyb3VwVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfc3R5bGVzX2NvbXBvbmVudHNfc2VsZWN0aW9uX2NvbnRyb2xzX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9zdHlsZXMvY29tcG9uZW50cy9fc2VsZWN0aW9uLWNvbnRyb2xzLnNhc3MgKi8iLi9zcmMvc3R5bGVzL2NvbXBvbmVudHMvX3NlbGVjdGlvbi1jb250cm9scy5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3N0eWxlc19jb21wb25lbnRzX3NlbGVjdGlvbl9jb250cm9sc19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9zdHlsZXNfY29tcG9uZW50c19zZWxlY3Rpb25fY29udHJvbHNfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJhZGlvR3JvdXBfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlJhZGlvR3JvdXAuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZSYWRpb0dyb3VwL1ZSYWRpb0dyb3VwLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJhZGlvR3JvdXBfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVlJhZGlvR3JvdXBfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVklucHV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVklucHV0ICovIi4vc3JjL2NvbXBvbmVudHMvVklucHV0L2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJdGVtR3JvdXBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJdGVtR3JvdXAvVkl0ZW1Hcm91cCAqLyIuL3NyYy9jb21wb25lbnRzL1ZJdGVtR3JvdXAvVkl0ZW1Hcm91cC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29tcGFyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9jb21wYXJhYmxlICovIi4vc3JjL21peGlucy9jb21wYXJhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBFeHRlbnNpb25zCi8vIE1peGlucwovLyBUeXBlcwp2YXIgYmFzZU1peGlucz1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSkoX21peGluc19jb21wYXJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSxfVkl0ZW1Hcm91cF9WSXRlbUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bIkJhc2VJdGVtR3JvdXAiXSxfVklucHV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSk7LyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1iYXNlTWl4aW5zLmV4dGVuZCh7bmFtZTondi1yYWRpby1ncm91cCcscHJvdmlkZTpmdW5jdGlvbiBwcm92aWRlKCl7cmV0dXJue3JhZGlvR3JvdXA6dGhpc307fSxwcm9wczp7Y29sdW1uOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxoZWlnaHQ6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6J2F1dG8nfSxuYW1lOlN0cmluZyxyb3c6Qm9vbGVhbiwvLyBJZiBubyB2YWx1ZSBzZXQgb24gVlJhZGlvCi8vIHdpbGwgbWF0Y2ggdmFsdWVDb21wYXJhdG9yCi8vIGZvcmNlIGRlZmF1bHQgdG8gbnVsbAp2YWx1ZTp7ZGVmYXVsdDpudWxsfX0sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7fSxfVklucHV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSx7J3YtaW5wdXQtLXNlbGVjdGlvbi1jb250cm9scyB2LWlucHV0LS1yYWRpby1ncm91cCc6dHJ1ZSwndi1pbnB1dC0tcmFkaW8tZ3JvdXAtLWNvbHVtbic6dGhpcy5jb2x1bW4mJiF0aGlzLnJvdywndi1pbnB1dC0tcmFkaW8tZ3JvdXAtLXJvdyc6dGhpcy5yb3d9KTt9fSxtZXRob2RzOntnZW5EZWZhdWx0U2xvdDpmdW5jdGlvbiBnZW5EZWZhdWx0U2xvdCgpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1pbnB1dC0tcmFkaW8tZ3JvdXBfX2lucHV0JyxhdHRyczp7aWQ6dGhpcy5pZCxyb2xlOidyYWRpb2dyb3VwJywnYXJpYS1sYWJlbGxlZGJ5Jzp0aGlzLmNvbXB1dGVkSWR9fSxfVklucHV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuZ2VuRGVmYXVsdFNsb3QuY2FsbCh0aGlzKSk7fSxnZW5JbnB1dFNsb3Q6ZnVuY3Rpb24gZ2VuSW5wdXRTbG90KCl7dmFyIHJlbmRlcj1fVklucHV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuZ2VuSW5wdXRTbG90LmNhbGwodGhpcyk7ZGVsZXRlIHJlbmRlci5kYXRhLm9uLmNsaWNrO3JldHVybiByZW5kZXI7fSxnZW5MYWJlbDpmdW5jdGlvbiBnZW5MYWJlbCgpe3ZhciBsYWJlbD1fVklucHV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuZ2VuTGFiZWwuY2FsbCh0aGlzKTtpZighbGFiZWwpcmV0dXJuIG51bGw7bGFiZWwuZGF0YS5hdHRycy5pZD10aGlzLmNvbXB1dGVkSWQ7Ly8gV0FJIGNvbnNpZGVycyB0aGlzIGFuIG9ycGhhbmVkIGxhYmVsCmRlbGV0ZSBsYWJlbC5kYXRhLmF0dHJzLmZvcjtsYWJlbC50YWc9J2Rpdic7cmV0dXJuIGxhYmVsO30sb25DbGljazpfVkl0ZW1Hcm91cF9WSXRlbUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bIkJhc2VJdGVtR3JvdXAiXS5vcHRpb25zLm1ldGhvZHMub25DbGlja319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WUmFkaW9Hcm91cC9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZSYWRpb0dyb3VwL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVlJhZGlvR3JvdXAsIFZSYWRpbywgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUmFkaW9Hcm91cEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJhZGlvR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZSYWRpb0dyb3VwICovIi4vc3JjL2NvbXBvbmVudHMvVlJhZGlvR3JvdXAvVlJhZGlvR3JvdXAudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWUmFkaW9Hcm91cCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZSYWRpb0dyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJhZGlvX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WUmFkaW8gKi8iLi9zcmMvY29tcG9uZW50cy9WUmFkaW9Hcm91cC9WUmFkaW8udHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWUmFkaW8iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WUmFkaW9fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09eyRfdnVldGlmeV9zdWJjb21wb25lbnRzOntWUmFkaW9Hcm91cDpfVlJhZGlvR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLFZSYWRpbzpfVlJhZGlvX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXX19Oy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZSYW5nZVNsaWRlci9WUmFuZ2VTbGlkZXIuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WUmFuZ2VTbGlkZXIvVlJhbmdlU2xpZGVyLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlJhbmdlU2xpZGVyVlJhbmdlU2xpZGVyU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlJhbmdlU2xpZGVyL1ZSYW5nZVNsaWRlci50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlJhbmdlU2xpZGVyL1ZSYW5nZVNsaWRlci50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUmFuZ2VTbGlkZXJWUmFuZ2VTbGlkZXJUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WUmFuZ2VTbGlkZXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlJhbmdlU2xpZGVyLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WUmFuZ2VTbGlkZXIvVlJhbmdlU2xpZGVyLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJhbmdlU2xpZGVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZSYW5nZVNsaWRlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2xpZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVlNsaWRlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZTbGlkZXIvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9O3ZhciBfX3NwcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3NwcmVhZHx8ZnVuY3Rpb24oKXtmb3IodmFyIGFyPVtdLGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXthcj1hci5jb25jYXQoX19yZWFkKGFyZ3VtZW50c1tpXSkpO31yZXR1cm4gYXI7fTsvLyBTdHlsZXMKLy8gQ29tcG9uZW50cwovLyBIZWxwZXJzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZTbGlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLmV4dGVuZCh7bmFtZTondi1yYW5nZS1zbGlkZXInLHByb3BzOnt2YWx1ZTp7dHlwZTpBcnJheSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuWzAsMF07fX19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnthY3RpdmVUaHVtYjpudWxsLGxhenlWYWx1ZTp0aGlzLnZhbHVlfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oe30sX1ZTbGlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuY2xhc3Nlcy5jYWxsKHRoaXMpLHsndi1pbnB1dC0tcmFuZ2Utc2xpZGVyJzp0cnVlfSk7fSxpbnRlcm5hbFZhbHVlOntnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIHRoaXMubGF6eVZhbHVlO30sc2V0OmZ1bmN0aW9uIHNldCh2YWwpe3ZhciBfdGhpcz10aGlzOy8vIFJvdW5kIHZhbHVlIHRvIGVuc3VyZSB0aGUKLy8gZW50aXJlIHNsaWRlciByYW5nZSBjYW4KLy8gYmUgc2VsZWN0ZWQgd2l0aCBzdGVwCnZhciB2YWx1ZT12YWwubWFwKGZ1bmN0aW9uKHYpe3JldHVybiBfdGhpcy5yb3VuZFZhbHVlKE1hdGgubWluKE1hdGgubWF4KHYsX3RoaXMubWluVmFsdWUpLF90aGlzLm1heFZhbHVlKSk7fSk7Ly8gU3dpdGNoIHZhbHVlcyBpZiByYW5nZSBhbmQgd3Jvbmcgb3JkZXIKaWYodmFsdWVbMF0+dmFsdWVbMV18fHZhbHVlWzFdPHZhbHVlWzBdKXtpZih0aGlzLmFjdGl2ZVRodW1iIT09bnVsbCl7dmFyIHRvRm9jdXM9dGhpcy5hY3RpdmVUaHVtYj09PTE/MDoxO3ZhciBlbD10aGlzLiRyZWZzWyJ0aHVtYl8iK3RvRm9jdXNdO2VsLmZvY3VzKCk7fXZhbHVlPVt2YWx1ZVsxXSx2YWx1ZVswXV07fXRoaXMubGF6eVZhbHVlPXZhbHVlO2lmKCFPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWVwRXF1YWwiXSkodmFsdWUsdGhpcy52YWx1ZSkpdGhpcy4kZW1pdCgnaW5wdXQnLHZhbHVlKTt0aGlzLnZhbGlkYXRlKCk7fX0saW5wdXRXaWR0aDpmdW5jdGlvbiBpbnB1dFdpZHRoKCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuaW50ZXJuYWxWYWx1ZS5tYXAoZnVuY3Rpb24odil7cmV0dXJuKF90aGlzLnJvdW5kVmFsdWUodiktX3RoaXMubWluVmFsdWUpLyhfdGhpcy5tYXhWYWx1ZS1fdGhpcy5taW5WYWx1ZSkqMTAwO30pO30sdHJhY2tGaWxsU3R5bGVzOmZ1bmN0aW9uIHRyYWNrRmlsbFN0eWxlcygpe3ZhciBzdHlsZXM9X1ZTbGlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQudHJhY2tGaWxsU3R5bGVzLmNhbGwodGhpcyk7dmFyIGZpbGxQZXJjZW50PU1hdGguYWJzKHRoaXMuaW5wdXRXaWR0aFswXS10aGlzLmlucHV0V2lkdGhbMV0pO3ZhciBkaXI9dGhpcy52ZXJ0aWNhbD8naGVpZ2h0Jzond2lkdGgnO3ZhciBzdGFydD10aGlzLnZlcnRpY2FsP3RoaXMuJHZ1ZXRpZnkucnRsPyd0b3AnOidib3R0b20nOnRoaXMuJHZ1ZXRpZnkucnRsPydyaWdodCc6J2xlZnQnO3N0eWxlc1tkaXJdPWZpbGxQZXJjZW50KyIlIjtzdHlsZXNbc3RhcnRdPXRoaXMuaW5wdXRXaWR0aFswXSsiJSI7cmV0dXJuIHN0eWxlczt9fSxtZXRob2RzOntnZXRUcmFja1N0eWxlOmZ1bmN0aW9uIGdldFRyYWNrU3R5bGUoc3RhcnRMZW5ndGgsZW5kTGVuZ3RoLHN0YXJ0UGFkZGluZyxlbmRQYWRkaW5nKXt2YXIgX2E7aWYoc3RhcnRQYWRkaW5nPT09dm9pZCAwKXtzdGFydFBhZGRpbmc9MDt9aWYoZW5kUGFkZGluZz09PXZvaWQgMCl7ZW5kUGFkZGluZz0wO312YXIgc3RhcnREaXI9dGhpcy52ZXJ0aWNhbD90aGlzLiR2dWV0aWZ5LnJ0bD8ndG9wJzonYm90dG9tJzp0aGlzLiR2dWV0aWZ5LnJ0bD8ncmlnaHQnOidsZWZ0Jzt2YXIgZW5kRGlyPXRoaXMudmVydGljYWw/J2hlaWdodCc6J3dpZHRoJzt2YXIgc3RhcnQ9ImNhbGMoIitzdGFydExlbmd0aCsiJSArICIrc3RhcnRQYWRkaW5nKyJweCkiO3ZhciBlbmQ9ImNhbGMoIitlbmRMZW5ndGgrIiUgKyAiK2VuZFBhZGRpbmcrInB4KSI7cmV0dXJuIF9hPXt0cmFuc2l0aW9uOnRoaXMudHJhY2tUcmFuc2l0aW9ufSxfYVtzdGFydERpcl09c3RhcnQsX2FbZW5kRGlyXT1lbmQsX2E7fSxnZXRJbmRleE9mQ2xvc2VzdFZhbHVlOmZ1bmN0aW9uIGdldEluZGV4T2ZDbG9zZXN0VmFsdWUoYXJyLHYpe2lmKE1hdGguYWJzKGFyclswXS12KTxNYXRoLmFicyhhcnJbMV0tdikpcmV0dXJuIDA7ZWxzZSByZXR1cm4gMTt9LGdlbklucHV0OmZ1bmN0aW9uIGdlbklucHV0KCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImNyZWF0ZVJhbmdlIl0pKDIpLm1hcChmdW5jdGlvbihpKXt2YXIgaW5wdXQ9X1ZTbGlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5nZW5JbnB1dC5jYWxsKF90aGlzKTtpbnB1dC5kYXRhPWlucHV0LmRhdGF8fHt9O2lucHV0LmRhdGEuYXR0cnM9aW5wdXQuZGF0YS5hdHRyc3x8e307aW5wdXQuZGF0YS5hdHRycy52YWx1ZT1fdGhpcy5pbnRlcm5hbFZhbHVlW2ldO3JldHVybiBpbnB1dDt9KTt9LGdlblRyYWNrQ29udGFpbmVyOmZ1bmN0aW9uIGdlblRyYWNrQ29udGFpbmVyKCl7dmFyIF90aGlzPXRoaXM7dmFyIGNoaWxkcmVuPVtdO2lmKHRoaXMuZGlzYWJsZWQpe3ZhciBkaXNhYmxlZFBhZGRpbmc9MTA7dmFyIHNlY3Rpb25zPVtbMCx0aGlzLmlucHV0V2lkdGhbMF0sMCwtZGlzYWJsZWRQYWRkaW5nXSxbdGhpcy5pbnB1dFdpZHRoWzBdLE1hdGguYWJzKHRoaXMuaW5wdXRXaWR0aFsxXS10aGlzLmlucHV0V2lkdGhbMF0pLGRpc2FibGVkUGFkZGluZyxkaXNhYmxlZFBhZGRpbmcqLTJdLFt0aGlzLmlucHV0V2lkdGhbMV0sTWF0aC5hYnMoMTAwLXRoaXMuaW5wdXRXaWR0aFsxXSksZGlzYWJsZWRQYWRkaW5nLDBdXTtpZih0aGlzLiR2dWV0aWZ5LnJ0bClzZWN0aW9ucy5yZXZlcnNlKCk7Y2hpbGRyZW4ucHVzaC5hcHBseShjaGlsZHJlbixfX3NwcmVhZChzZWN0aW9ucy5tYXAoZnVuY3Rpb24oc2VjdGlvbil7cmV0dXJuIF90aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLF90aGlzLnNldEJhY2tncm91bmRDb2xvcihfdGhpcy5jb21wdXRlZFRyYWNrQ29sb3Ise3N0YXRpY0NsYXNzOid2LXNsaWRlcl9fdHJhY2stYmFja2dyb3VuZCcsc3R5bGU6X3RoaXMuZ2V0VHJhY2tTdHlsZS5hcHBseShfdGhpcyxfX3NwcmVhZChzZWN0aW9uKSl9KSk7fSkpKTt9ZWxzZXtjaGlsZHJlbi5wdXNoKHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IodGhpcy5jb21wdXRlZFRyYWNrQ29sb3Ise3N0YXRpY0NsYXNzOid2LXNsaWRlcl9fdHJhY2stYmFja2dyb3VuZCcsc3R5bGU6dGhpcy5nZXRUcmFja1N0eWxlKDAsMTAwKX0pKSx0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHRoaXMuc2V0QmFja2dyb3VuZENvbG9yKHRoaXMuY29tcHV0ZWRDb2xvcix7c3RhdGljQ2xhc3M6J3Ytc2xpZGVyX190cmFjay1maWxsJyxzdHlsZTp0aGlzLnRyYWNrRmlsbFN0eWxlc30pKSk7fXJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1zbGlkZXJfX3RyYWNrLWNvbnRhaW5lcicscmVmOid0cmFjayd9LGNoaWxkcmVuKTt9LGdlbkNoaWxkcmVuOmZ1bmN0aW9uIGdlbkNoaWxkcmVuKCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuW3RoaXMuZ2VuSW5wdXQoKSx0aGlzLmdlblRyYWNrQ29udGFpbmVyKCksdGhpcy5nZW5TdGVwcygpLE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImNyZWF0ZVJhbmdlIl0pKDIpLm1hcChmdW5jdGlvbihpbmRleCl7dmFyIHZhbHVlPV90aGlzLmludGVybmFsVmFsdWVbaW5kZXhdO3ZhciBvbkRyYWc9ZnVuY3Rpb24gb25EcmFnKGUpe190aGlzLmlzQWN0aXZlPXRydWU7X3RoaXMuYWN0aXZlVGh1bWI9aW5kZXg7X3RoaXMub25UaHVtYk1vdXNlRG93bihlKTt9O3ZhciBvbkZvY3VzPWZ1bmN0aW9uIG9uRm9jdXMoZSl7X3RoaXMuaXNGb2N1c2VkPXRydWU7X3RoaXMuYWN0aXZlVGh1bWI9aW5kZXg7X3RoaXMuJGVtaXQoJ2ZvY3VzJyxlKTt9O3ZhciBvbkJsdXI9ZnVuY3Rpb24gb25CbHVyKGUpe190aGlzLmlzRm9jdXNlZD1mYWxzZTtfdGhpcy5hY3RpdmVUaHVtYj1udWxsO190aGlzLiRlbWl0KCdibHVyJyxlKTt9O3ZhciB2YWx1ZVdpZHRoPV90aGlzLmlucHV0V2lkdGhbaW5kZXhdO3ZhciBpc0FjdGl2ZT1fdGhpcy5pc0FjdGl2ZSYmX3RoaXMuYWN0aXZlVGh1bWI9PT1pbmRleDt2YXIgaXNGb2N1c2VkPV90aGlzLmlzRm9jdXNlZCYmX3RoaXMuYWN0aXZlVGh1bWI9PT1pbmRleDtyZXR1cm4gX3RoaXMuZ2VuVGh1bWJDb250YWluZXIodmFsdWUsdmFsdWVXaWR0aCxpc0FjdGl2ZSxpc0ZvY3VzZWQsb25EcmFnLG9uRm9jdXMsb25CbHVyLCJ0aHVtYl8iK2luZGV4KTt9KV07fSxvblNsaWRlckNsaWNrOmZ1bmN0aW9uIG9uU2xpZGVyQ2xpY2soZSl7aWYoIXRoaXMuaXNBY3RpdmUpe2lmKHRoaXMubm9DbGljayl7dGhpcy5ub0NsaWNrPWZhbHNlO3JldHVybjt9dmFyIF9hPXRoaXMucGFyc2VNb3VzZU1vdmUoZSksdmFsdWU9X2EudmFsdWUsaXNJbnNpZGVUcmFjaz1fYS5pc0luc2lkZVRyYWNrO2lmKGlzSW5zaWRlVHJhY2spe3RoaXMuYWN0aXZlVGh1bWI9dGhpcy5nZXRJbmRleE9mQ2xvc2VzdFZhbHVlKHRoaXMuaW50ZXJuYWxWYWx1ZSx2YWx1ZSk7dmFyIHJlZk5hbWU9InRodW1iXyIrdGhpcy5hY3RpdmVUaHVtYjt2YXIgdGh1bWJSZWY9dGhpcy4kcmVmc1tyZWZOYW1lXTt0aHVtYlJlZi5mb2N1cygpO310aGlzLnNldEludGVybmFsVmFsdWUodmFsdWUpO3RoaXMuJGVtaXQoJ2NoYW5nZScsdGhpcy5pbnRlcm5hbFZhbHVlKTt9fSxvbk1vdXNlTW92ZTpmdW5jdGlvbiBvbk1vdXNlTW92ZShlKXt2YXIgX2E9dGhpcy5wYXJzZU1vdXNlTW92ZShlKSx2YWx1ZT1fYS52YWx1ZSxpc0luc2lkZVRyYWNrPV9hLmlzSW5zaWRlVHJhY2s7aWYoaXNJbnNpZGVUcmFjayYmdGhpcy5hY3RpdmVUaHVtYj09PW51bGwpe3RoaXMuYWN0aXZlVGh1bWI9dGhpcy5nZXRJbmRleE9mQ2xvc2VzdFZhbHVlKHRoaXMuaW50ZXJuYWxWYWx1ZSx2YWx1ZSk7fXRoaXMuc2V0SW50ZXJuYWxWYWx1ZSh2YWx1ZSk7fSxvbktleURvd246ZnVuY3Rpb24gb25LZXlEb3duKGUpe2lmKHRoaXMuYWN0aXZlVGh1bWI9PT1udWxsKXJldHVybjt2YXIgdmFsdWU9dGhpcy5wYXJzZUtleURvd24oZSx0aGlzLmludGVybmFsVmFsdWVbdGhpcy5hY3RpdmVUaHVtYl0pO2lmKHZhbHVlPT1udWxsKXJldHVybjt0aGlzLnNldEludGVybmFsVmFsdWUodmFsdWUpO3RoaXMuJGVtaXQoJ2NoYW5nZScsdGhpcy5pbnRlcm5hbFZhbHVlKTt9LHNldEludGVybmFsVmFsdWU6ZnVuY3Rpb24gc2V0SW50ZXJuYWxWYWx1ZSh2YWx1ZSl7dmFyIF90aGlzPXRoaXM7dGhpcy5pbnRlcm5hbFZhbHVlPXRoaXMuaW50ZXJuYWxWYWx1ZS5tYXAoZnVuY3Rpb24odixpKXtpZihpPT09X3RoaXMuYWN0aXZlVGh1bWIpcmV0dXJuIHZhbHVlO2Vsc2UgcmV0dXJuIE51bWJlcih2KTt9KTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZSYW5nZVNsaWRlci9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WUmFuZ2VTbGlkZXIvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVlJhbmdlU2xpZGVyLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZSYW5nZVNsaWRlckluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJhbmdlU2xpZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WUmFuZ2VTbGlkZXIgKi8iLi9zcmMvY29tcG9uZW50cy9WUmFuZ2VTbGlkZXIvVlJhbmdlU2xpZGVyLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlJhbmdlU2xpZGVyIixmdW5jdGlvbigpe3JldHVybiBfVlJhbmdlU2xpZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WUmFuZ2VTbGlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZSYXRpbmcvVlJhdGluZy5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlJhdGluZy9WUmF0aW5nLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUmF0aW5nVlJhdGluZ1Nhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZSYXRpbmcvVlJhdGluZy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WUmF0aW5nL1ZSYXRpbmcudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUmF0aW5nVlJhdGluZ1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZSYXRpbmdfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlJhdGluZy5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlJhdGluZy9WUmF0aW5nLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJhdGluZ19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WUmF0aW5nX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkljb24gKi8iLi9zcmMvY29tcG9uZW50cy9WSWNvbi9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19kZWxheWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvZGVsYXlhYmxlICovIi4vc3JjL21peGlucy9kZWxheWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3NpemVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3NpemVhYmxlICovIi4vc3JjL21peGlucy9zaXplYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfcmlwcGxlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9yaXBwbGVhYmxlICovIi4vc3JjL21peGlucy9yaXBwbGVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7Ly8gU3R5bGVzCi8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8vIFV0aWxpdGllcwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZGVmYXVsdCJdKShfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sX21peGluc19kZWxheWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLF9taXhpbnNfcmlwcGxlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0sX21peGluc19zaXplYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3YtcmF0aW5nJyxwcm9wczp7YmFja2dyb3VuZENvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OidhY2NlbnQnfSxjb2xvcjp7dHlwZTpTdHJpbmcsZGVmYXVsdDoncHJpbWFyeSd9LGNsZWFyYWJsZTpCb29sZWFuLGRlbnNlOkJvb2xlYW4sZW1wdHlJY29uOnt0eXBlOlN0cmluZyxkZWZhdWx0OickcmF0aW5nRW1wdHknfSxmdWxsSWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJHJhdGluZ0Z1bGwnfSxoYWxmSWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJHJhdGluZ0hhbGYnfSxoYWxmSW5jcmVtZW50czpCb29sZWFuLGhvdmVyOkJvb2xlYW4sbGVuZ3RoOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjV9LHJlYWRvbmx5OkJvb2xlYW4sc2l6ZTpbTnVtYmVyLFN0cmluZ10sdmFsdWU6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MH19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntob3ZlckluZGV4Oi0xLGludGVybmFsVmFsdWU6dGhpcy52YWx1ZX07fSxjb21wdXRlZDp7ZGlyZWN0aXZlczpmdW5jdGlvbiBkaXJlY3RpdmVzKCl7aWYodGhpcy5yZWFkb25seXx8IXRoaXMucmlwcGxlKXJldHVybltdO3JldHVyblt7bmFtZToncmlwcGxlJyx2YWx1ZTp7Y2lyY2xlOnRydWV9fV07fSxpY29uUHJvcHM6ZnVuY3Rpb24gaWNvblByb3BzKCl7dmFyIF9hPXRoaXMuJHByb3BzLGRhcms9X2EuZGFyayxsYXJnZT1fYS5sYXJnZSxsaWdodD1fYS5saWdodCxtZWRpdW09X2EubWVkaXVtLHNtYWxsPV9hLnNtYWxsLHNpemU9X2Euc2l6ZSx4TGFyZ2U9X2EueExhcmdlLHhTbWFsbD1fYS54U21hbGw7cmV0dXJue2Rhcms6ZGFyayxsYXJnZTpsYXJnZSxsaWdodDpsaWdodCxtZWRpdW06bWVkaXVtLHNpemU6c2l6ZSxzbWFsbDpzbWFsbCx4TGFyZ2U6eExhcmdlLHhTbWFsbDp4U21hbGx9O30saXNIb3ZlcmluZzpmdW5jdGlvbiBpc0hvdmVyaW5nKCl7cmV0dXJuIHRoaXMuaG92ZXImJnRoaXMuaG92ZXJJbmRleD49MDt9fSx3YXRjaDp7aW50ZXJuYWxWYWx1ZTpmdW5jdGlvbiBpbnRlcm5hbFZhbHVlKHZhbCl7dmFsIT09dGhpcy52YWx1ZSYmdGhpcy4kZW1pdCgnaW5wdXQnLHZhbCk7fSx2YWx1ZTpmdW5jdGlvbiB2YWx1ZSh2YWwpe3RoaXMuaW50ZXJuYWxWYWx1ZT12YWw7fX0sbWV0aG9kczp7Y3JlYXRlQ2xpY2tGbjpmdW5jdGlvbiBjcmVhdGVDbGlja0ZuKGkpe3ZhciBfdGhpcz10aGlzO3JldHVybiBmdW5jdGlvbihlKXtpZihfdGhpcy5yZWFkb25seSlyZXR1cm47dmFyIG5ld1ZhbHVlPV90aGlzLmdlbkhvdmVySW5kZXgoZSxpKTtpZihfdGhpcy5jbGVhcmFibGUmJl90aGlzLmludGVybmFsVmFsdWU9PT1uZXdWYWx1ZSl7X3RoaXMuaW50ZXJuYWxWYWx1ZT0wO31lbHNle190aGlzLmludGVybmFsVmFsdWU9bmV3VmFsdWU7fX07fSxjcmVhdGVQcm9wczpmdW5jdGlvbiBjcmVhdGVQcm9wcyhpKXt2YXIgcHJvcHM9e2luZGV4OmksdmFsdWU6dGhpcy5pbnRlcm5hbFZhbHVlLGNsaWNrOnRoaXMuY3JlYXRlQ2xpY2tGbihpKSxpc0ZpbGxlZDpNYXRoLmZsb29yKHRoaXMuaW50ZXJuYWxWYWx1ZSk+aSxpc0hvdmVyZWQ6TWF0aC5mbG9vcih0aGlzLmhvdmVySW5kZXgpPml9O2lmKHRoaXMuaGFsZkluY3JlbWVudHMpe3Byb3BzLmlzSGFsZkhvdmVyZWQ9IXByb3BzLmlzSG92ZXJlZCYmKHRoaXMuaG92ZXJJbmRleC1pKSUxPjA7cHJvcHMuaXNIYWxmRmlsbGVkPSFwcm9wcy5pc0ZpbGxlZCYmKHRoaXMuaW50ZXJuYWxWYWx1ZS1pKSUxPjA7fXJldHVybiBwcm9wczt9LGdlbkhvdmVySW5kZXg6ZnVuY3Rpb24gZ2VuSG92ZXJJbmRleChlLGkpe3ZhciBpc0hhbGY9dGhpcy5pc0hhbGZFdmVudChlKTtpZih0aGlzLiR2dWV0aWZ5LnJ0bClpc0hhbGY9IWlzSGFsZjtyZXR1cm4gaSsoaXNIYWxmPzAuNToxKTt9LGdldEljb25OYW1lOmZ1bmN0aW9uIGdldEljb25OYW1lKHByb3BzKXt2YXIgaXNGdWxsPXRoaXMuaXNIb3ZlcmluZz9wcm9wcy5pc0hvdmVyZWQ6cHJvcHMuaXNGaWxsZWQ7dmFyIGlzSGFsZj10aGlzLmlzSG92ZXJpbmc/cHJvcHMuaXNIYWxmSG92ZXJlZDpwcm9wcy5pc0hhbGZGaWxsZWQ7cmV0dXJuIGlzRnVsbD90aGlzLmZ1bGxJY29uOmlzSGFsZj90aGlzLmhhbGZJY29uOnRoaXMuZW1wdHlJY29uO30sZ2V0Q29sb3I6ZnVuY3Rpb24gZ2V0Q29sb3IocHJvcHMpe2lmKHRoaXMuaXNIb3ZlcmluZyl7aWYocHJvcHMuaXNIb3ZlcmVkfHxwcm9wcy5pc0hhbGZIb3ZlcmVkKXJldHVybiB0aGlzLmNvbG9yO31lbHNle2lmKHByb3BzLmlzRmlsbGVkfHxwcm9wcy5pc0hhbGZGaWxsZWQpcmV0dXJuIHRoaXMuY29sb3I7fXJldHVybiB0aGlzLmJhY2tncm91bmRDb2xvcjt9LGlzSGFsZkV2ZW50OmZ1bmN0aW9uIGlzSGFsZkV2ZW50KGUpe2lmKHRoaXMuaGFsZkluY3JlbWVudHMpe3ZhciByZWN0PWUudGFyZ2V0JiZlLnRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtpZihyZWN0JiZlLnBhZ2VYLXJlY3QubGVmdDxyZWN0LndpZHRoLzIpcmV0dXJuIHRydWU7fXJldHVybiBmYWxzZTt9LG9uTW91c2VFbnRlcjpmdW5jdGlvbiBvbk1vdXNlRW50ZXIoZSxpKXt2YXIgX3RoaXM9dGhpczt0aGlzLnJ1bkRlbGF5KCdvcGVuJyxmdW5jdGlvbigpe190aGlzLmhvdmVySW5kZXg9X3RoaXMuZ2VuSG92ZXJJbmRleChlLGkpO30pO30sb25Nb3VzZUxlYXZlOmZ1bmN0aW9uIG9uTW91c2VMZWF2ZSgpe3ZhciBfdGhpcz10aGlzO3RoaXMucnVuRGVsYXkoJ2Nsb3NlJyxmdW5jdGlvbigpe3JldHVybiBfdGhpcy5ob3ZlckluZGV4PS0xO30pO30sZ2VuSXRlbTpmdW5jdGlvbiBnZW5JdGVtKGkpe3ZhciBfdGhpcz10aGlzO3ZhciBwcm9wcz10aGlzLmNyZWF0ZVByb3BzKGkpO2lmKHRoaXMuJHNjb3BlZFNsb3RzLml0ZW0pcmV0dXJuIHRoaXMuJHNjb3BlZFNsb3RzLml0ZW0ocHJvcHMpO3ZhciBsaXN0ZW5lcnM9e2NsaWNrOnByb3BzLmNsaWNrfTtpZih0aGlzLmhvdmVyKXtsaXN0ZW5lcnMubW91c2VlbnRlcj1mdW5jdGlvbihlKXtyZXR1cm4gX3RoaXMub25Nb3VzZUVudGVyKGUsaSk7fTtsaXN0ZW5lcnMubW91c2VsZWF2ZT10aGlzLm9uTW91c2VMZWF2ZTtpZih0aGlzLmhhbGZJbmNyZW1lbnRzKXtsaXN0ZW5lcnMubW91c2Vtb3ZlPWZ1bmN0aW9uKGUpe3JldHVybiBfdGhpcy5vbk1vdXNlRW50ZXIoZSxpKTt9O319cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSx0aGlzLnNldFRleHRDb2xvcih0aGlzLmdldENvbG9yKHByb3BzKSx7ZGlyZWN0aXZlczp0aGlzLmRpcmVjdGl2ZXMscHJvcHM6dGhpcy5pY29uUHJvcHMsb246bGlzdGVuZXJzfSksW3RoaXMuZ2V0SWNvbk5hbWUocHJvcHMpXSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgX3RoaXM9dGhpczt2YXIgY2hpbGRyZW49T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siY3JlYXRlUmFuZ2UiXSkoTnVtYmVyKHRoaXMubGVuZ3RoKSkubWFwKGZ1bmN0aW9uKGkpe3JldHVybiBfdGhpcy5nZW5JdGVtKGkpO30pO3JldHVybiBoKCdkaXYnLHtzdGF0aWNDbGFzczondi1yYXRpbmcnLGNsYXNzOnsndi1yYXRpbmctLXJlYWRvbmx5Jzp0aGlzLnJlYWRvbmx5LCd2LXJhdGluZy0tZGVuc2UnOnRoaXMuZGVuc2V9fSxjaGlsZHJlbik7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZSYXRpbmcvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZSYXRpbmcvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZSYXRpbmcsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlJhdGluZ0luZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJhdGluZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlJhdGluZyAqLyIuL3NyYy9jb21wb25lbnRzL1ZSYXRpbmcvVlJhdGluZy50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZSYXRpbmciLGZ1bmN0aW9uKCl7cmV0dXJuIF9WUmF0aW5nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WUmF0aW5nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WUmVzcG9uc2l2ZS9WUmVzcG9uc2l2ZS5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WUmVzcG9uc2l2ZS9WUmVzcG9uc2l2ZS5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUmVzcG9uc2l2ZVZSZXNwb25zaXZlU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlJlc3BvbnNpdmUvVlJlc3BvbnNpdmUudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WUmVzcG9uc2l2ZS9WUmVzcG9uc2l2ZS50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlJlc3BvbnNpdmVWUmVzcG9uc2l2ZVRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZSZXNwb25zaXZlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZSZXNwb25zaXZlLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WUmVzcG9uc2l2ZS9WUmVzcG9uc2l2ZS5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZSZXNwb25zaXZlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZSZXNwb25zaXZlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19tZWFzdXJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL21lYXN1cmFibGUgKi8iLi9zcmMvbWl4aW5zL21lYXN1cmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8vIE1peGlucwovLyBVdGlscwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKShfbWl4aW5zX21lYXN1cmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3YtcmVzcG9uc2l2ZScscHJvcHM6e2FzcGVjdFJhdGlvOltTdHJpbmcsTnVtYmVyXX0sY29tcHV0ZWQ6e2NvbXB1dGVkQXNwZWN0UmF0aW86ZnVuY3Rpb24gY29tcHV0ZWRBc3BlY3RSYXRpbygpe3JldHVybiBOdW1iZXIodGhpcy5hc3BlY3RSYXRpbyk7fSxhc3BlY3RTdHlsZTpmdW5jdGlvbiBhc3BlY3RTdHlsZSgpe3JldHVybiB0aGlzLmNvbXB1dGVkQXNwZWN0UmF0aW8/e3BhZGRpbmdCb3R0b206MS90aGlzLmNvbXB1dGVkQXNwZWN0UmF0aW8qMTAwKyclJ306dW5kZWZpbmVkO30sX19jYWNoZWRTaXplcjpmdW5jdGlvbiBfX2NhY2hlZFNpemVyKCl7aWYoIXRoaXMuYXNwZWN0U3R5bGUpcmV0dXJuW107cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0eWxlOnRoaXMuYXNwZWN0U3R5bGUsc3RhdGljQ2xhc3M6J3YtcmVzcG9uc2l2ZV9fc2l6ZXInfSk7fX0sbWV0aG9kczp7Z2VuQ29udGVudDpmdW5jdGlvbiBnZW5Db250ZW50KCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXJlc3BvbnNpdmVfX2NvbnRlbnQnfSx0aGlzLiRzbG90cy5kZWZhdWx0KTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3JldHVybiBoKCdkaXYnLHtzdGF0aWNDbGFzczondi1yZXNwb25zaXZlJyxzdHlsZTp0aGlzLm1lYXN1cmFibGVTdHlsZXMsb246dGhpcy4kbGlzdGVuZXJzfSxbdGhpcy5fX2NhY2hlZFNpemVyLHRoaXMuZ2VuQ29udGVudCgpXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZSZXNwb25zaXZlL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlJlc3BvbnNpdmUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWUmVzcG9uc2l2ZSwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWUmVzcG9uc2l2ZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJlc3BvbnNpdmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZSZXNwb25zaXZlICovIi4vc3JjL2NvbXBvbmVudHMvVlJlc3BvbnNpdmUvVlJlc3BvbnNpdmUudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWUmVzcG9uc2l2ZSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZSZXNwb25zaXZlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WUmVzcG9uc2l2ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlNlbGVjdC9WU2VsZWN0LnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WU2VsZWN0L1ZTZWxlY3Quc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTZWxlY3RWU2VsZWN0U2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlNlbGVjdC9WU2VsZWN0LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTZWxlY3QvVlNlbGVjdC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0TWVudVByb3BzLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTZWxlY3RWU2VsZWN0VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZGVmYXVsdE1lbnVQcm9wcyIsZnVuY3Rpb24oKXtyZXR1cm4gZGVmYXVsdE1lbnVQcm9wczt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRleHRGaWVsZF9WVGV4dEZpZWxkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WVGV4dEZpZWxkL1ZUZXh0RmllbGQuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZUZXh0RmllbGQvVlRleHRGaWVsZC5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUZXh0RmllbGRfVlRleHRGaWVsZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WVGV4dEZpZWxkX1ZUZXh0RmllbGRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNlbGVjdF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU2VsZWN0LnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WU2VsZWN0L1ZTZWxlY3Quc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2VsZWN0X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZTZWxlY3Rfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNoaXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WQ2hpcCAqLyIuL3NyYy9jb21wb25lbnRzL1ZDaGlwL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZNZW51X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVk1lbnUgKi8iLi9zcmMvY29tcG9uZW50cy9WTWVudS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2VsZWN0TGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlNlbGVjdExpc3QgKi8iLi9zcmMvY29tcG9uZW50cy9WU2VsZWN0L1ZTZWxlY3RMaXN0LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUZXh0RmllbGRfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZUZXh0RmllbGQvVlRleHRGaWVsZCAqLyIuL3NyYy9jb21wb25lbnRzL1ZUZXh0RmllbGQvVlRleHRGaWVsZC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29tcGFyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9jb21wYXJhYmxlICovIi4vc3JjL21peGlucy9jb21wYXJhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19maWx0ZXJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2ZpbHRlcmFibGUgKi8iLi9zcmMvbWl4aW5zL2ZpbHRlcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZGlyZWN0aXZlc19jbGlja19vdXRzaWRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vZGlyZWN0aXZlcy9jbGljay1vdXRzaWRlICovIi4vc3JjL2RpcmVjdGl2ZXMvY2xpY2stb3V0c2lkZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTt2YXIgX192YWx1ZXM9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX192YWx1ZXN8fGZ1bmN0aW9uKG8pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl0saT0wO2lmKG0pcmV0dXJuIG0uY2FsbChvKTtyZXR1cm57bmV4dDpmdW5jdGlvbiBuZXh0KCl7aWYobyYmaT49by5sZW5ndGgpbz12b2lkIDA7cmV0dXJue3ZhbHVlOm8mJm9baSsrXSxkb25lOiFvfTt9fTt9Oy8vIFN0eWxlcwovLyBDb21wb25lbnRzCi8vIEV4dGVuc2lvbnMKLy8gTWl4aW5zCi8vIERpcmVjdGl2ZXMKLy8gVXRpbGl0aWVzCi8vIFR5cGVzCnZhciBkZWZhdWx0TWVudVByb3BzPXtjbG9zZU9uQ2xpY2s6ZmFsc2UsY2xvc2VPbkNvbnRlbnRDbGljazpmYWxzZSxkaXNhYmxlS2V5czp0cnVlLG9wZW5PbkNsaWNrOmZhbHNlLG1heEhlaWdodDozMDR9O3ZhciBiYXNlTWl4aW5zPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19bImRlZmF1bHQiXSkoX1ZUZXh0RmllbGRfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0sX21peGluc19jb21wYXJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXSxfbWl4aW5zX2ZpbHRlcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siZGVmYXVsdCJdKTsvKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPWJhc2VNaXhpbnMuZXh0ZW5kKCkuZXh0ZW5kKHtuYW1lOid2LXNlbGVjdCcsZGlyZWN0aXZlczp7Q2xpY2tPdXRzaWRlOl9kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZGVmYXVsdCJdfSxwcm9wczp7YXBwZW5kSWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJGRyb3Bkb3duJ30sYXR0YWNoOntkZWZhdWx0OmZhbHNlfSxjYWNoZUl0ZW1zOkJvb2xlYW4sY2hpcHM6Qm9vbGVhbixjbGVhcmFibGU6Qm9vbGVhbixkZWxldGFibGVDaGlwczpCb29sZWFuLGVhZ2VyOkJvb2xlYW4saGlkZVNlbGVjdGVkOkJvb2xlYW4saXRlbXM6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LGl0ZW1Db2xvcjp7dHlwZTpTdHJpbmcsZGVmYXVsdDoncHJpbWFyeSd9LGl0ZW1EaXNhYmxlZDp7dHlwZTpbU3RyaW5nLEFycmF5LEZ1bmN0aW9uXSxkZWZhdWx0OidkaXNhYmxlZCd9LGl0ZW1UZXh0Ont0eXBlOltTdHJpbmcsQXJyYXksRnVuY3Rpb25dLGRlZmF1bHQ6J3RleHQnfSxpdGVtVmFsdWU6e3R5cGU6W1N0cmluZyxBcnJheSxGdW5jdGlvbl0sZGVmYXVsdDondmFsdWUnfSxtZW51UHJvcHM6e3R5cGU6W1N0cmluZyxBcnJheSxPYmplY3RdLGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm4gZGVmYXVsdE1lbnVQcm9wczt9fSxtdWx0aXBsZTpCb29sZWFuLG9wZW5PbkNsZWFyOkJvb2xlYW4scmV0dXJuT2JqZWN0OkJvb2xlYW4sc21hbGxDaGlwczpCb29sZWFufSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57Y2FjaGVkSXRlbXM6dGhpcy5jYWNoZUl0ZW1zP3RoaXMuaXRlbXM6W10sY29udGVudDpudWxsLGlzQm9vdGVkOmZhbHNlLGlzTWVudUFjdGl2ZTpmYWxzZSxsYXN0SXRlbToyMCwvLyBBcyBsb25nIGFzIGEgdmFsdWUgaXMgZGVmaW5lZCwgc2hvdyBpdAovLyBPdGhlcndpc2UsIGNoZWNrIGlmIG11bHRpcGxlCi8vIHRvIGRldGVybWluZSB3aGljaCBkZWZhdWx0IHRvIHByb3ZpZGUKbGF6eVZhbHVlOnRoaXMudmFsdWUhPT11bmRlZmluZWQ/dGhpcy52YWx1ZTp0aGlzLm11bHRpcGxlP1tdOnVuZGVmaW5lZCxzZWxlY3RlZEluZGV4Oi0xLHNlbGVjdGVkSXRlbXM6W10sa2V5Ym9hcmRMb29rdXBQcmVmaXg6Jycsa2V5Ym9hcmRMb29rdXBMYXN0VGltZTowfTt9LGNvbXB1dGVkOnsvKiBBbGwgaXRlbXMgdGhhdCB0aGUgc2VsZWN0IGhhcyAqL2FsbEl0ZW1zOmZ1bmN0aW9uIGFsbEl0ZW1zKCl7cmV0dXJuIHRoaXMuZmlsdGVyRHVwbGljYXRlcyh0aGlzLmNhY2hlZEl0ZW1zLmNvbmNhdCh0aGlzLml0ZW1zKSk7fSxjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oe30sX1ZUZXh0RmllbGRfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LXNlbGVjdCc6dHJ1ZSwndi1zZWxlY3QtLWNoaXBzJzp0aGlzLmhhc0NoaXBzLCd2LXNlbGVjdC0tY2hpcHMtLXNtYWxsJzp0aGlzLnNtYWxsQ2hpcHMsJ3Ytc2VsZWN0LS1pcy1tZW51LWFjdGl2ZSc6dGhpcy5pc01lbnVBY3RpdmUsJ3Ytc2VsZWN0LS1pcy1tdWx0aSc6dGhpcy5tdWx0aXBsZX0pO30sLyogVXNlZCBieSBvdGhlciBjb21wb25lbnRzIHRvIG92ZXJ3cml0ZSAqL2NvbXB1dGVkSXRlbXM6ZnVuY3Rpb24gY29tcHV0ZWRJdGVtcygpe3JldHVybiB0aGlzLmFsbEl0ZW1zO30sY29tcHV0ZWRPd25zOmZ1bmN0aW9uIGNvbXB1dGVkT3ducygpe3JldHVybiJsaXN0LSIrdGhpcy5fdWlkO30sY291bnRlclZhbHVlOmZ1bmN0aW9uIGNvdW50ZXJWYWx1ZSgpe3JldHVybiB0aGlzLm11bHRpcGxlP3RoaXMuc2VsZWN0ZWRJdGVtcy5sZW5ndGg6KHRoaXMuZ2V0VGV4dCh0aGlzLnNlbGVjdGVkSXRlbXNbMF0pfHwnJykudG9TdHJpbmcoKS5sZW5ndGg7fSxkaXJlY3RpdmVzOmZ1bmN0aW9uIGRpcmVjdGl2ZXMoKXtyZXR1cm4gdGhpcy5pc0ZvY3VzZWQ/W3tuYW1lOidjbGljay1vdXRzaWRlJyx2YWx1ZTp0aGlzLmJsdXIsYXJnczp7Y2xvc2VDb25kaXRpb25hbDp0aGlzLmNsb3NlQ29uZGl0aW9uYWx9fV06dW5kZWZpbmVkO30sZHluYW1pY0hlaWdodDpmdW5jdGlvbiBkeW5hbWljSGVpZ2h0KCl7cmV0dXJuJ2F1dG8nO30saGFzQ2hpcHM6ZnVuY3Rpb24gaGFzQ2hpcHMoKXtyZXR1cm4gdGhpcy5jaGlwc3x8dGhpcy5zbWFsbENoaXBzO30saGFzU2xvdDpmdW5jdGlvbiBoYXNTbG90KCl7cmV0dXJuIEJvb2xlYW4odGhpcy5oYXNDaGlwc3x8dGhpcy4kc2NvcGVkU2xvdHMuc2VsZWN0aW9uKTt9LGlzRGlydHk6ZnVuY3Rpb24gaXNEaXJ0eSgpe3JldHVybiB0aGlzLnNlbGVjdGVkSXRlbXMubGVuZ3RoPjA7fSxsaXN0RGF0YTpmdW5jdGlvbiBsaXN0RGF0YSgpe3ZhciBfYTt2YXIgc2NvcGVJZD10aGlzLiR2bm9kZSYmdGhpcy4kdm5vZGUuY29udGV4dC4kb3B0aW9ucy5fc2NvcGVJZDt2YXIgYXR0cnM9c2NvcGVJZD8oX2E9e30sX2Fbc2NvcGVJZF09dHJ1ZSxfYSk6e307cmV0dXJue2F0dHJzOl9fYXNzaWduKHt9LGF0dHJzLHtpZDp0aGlzLmNvbXB1dGVkT3duc30pLHByb3BzOnthY3Rpb246dGhpcy5tdWx0aXBsZSxjb2xvcjp0aGlzLml0ZW1Db2xvcixkZW5zZTp0aGlzLmRlbnNlLGhpZGVTZWxlY3RlZDp0aGlzLmhpZGVTZWxlY3RlZCxpdGVtczp0aGlzLnZpcnR1YWxpemVkSXRlbXMsaXRlbURpc2FibGVkOnRoaXMuaXRlbURpc2FibGVkLGl0ZW1UZXh0OnRoaXMuaXRlbVRleHQsaXRlbVZhbHVlOnRoaXMuaXRlbVZhbHVlLG5vRGF0YVRleHQ6dGhpcy4kdnVldGlmeS5sYW5nLnQodGhpcy5ub0RhdGFUZXh0KSxzZWxlY3RlZEl0ZW1zOnRoaXMuc2VsZWN0ZWRJdGVtc30sb246e3NlbGVjdDp0aGlzLnNlbGVjdEl0ZW19LHNjb3BlZFNsb3RzOntpdGVtOnRoaXMuJHNjb3BlZFNsb3RzLml0ZW19fTt9LHN0YXRpY0xpc3Q6ZnVuY3Rpb24gc3RhdGljTGlzdCgpe2lmKHRoaXMuJHNsb3RzWyduby1kYXRhJ118fHRoaXMuJHNsb3RzWydwcmVwZW5kLWl0ZW0nXXx8dGhpcy4kc2xvdHNbJ2FwcGVuZC1pdGVtJ10pe09iamVjdChfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fWyJjb25zb2xlRXJyb3IiXSkoJ2Fzc2VydDogc3RhdGljTGlzdCBzaG91bGQgbm90IGJlIGNhbGxlZCBpZiBzbG90cyBhcmUgdXNlZCcpO31yZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVlNlbGVjdExpc3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLHRoaXMubGlzdERhdGEpO30sdmlydHVhbGl6ZWRJdGVtczpmdW5jdGlvbiB2aXJ0dWFsaXplZEl0ZW1zKCl7cmV0dXJuIHRoaXMuJF9tZW51UHJvcHMuYXV0bz90aGlzLmNvbXB1dGVkSXRlbXM6dGhpcy5jb21wdXRlZEl0ZW1zLnNsaWNlKDAsdGhpcy5sYXN0SXRlbSk7fSxtZW51Q2FuU2hvdzpmdW5jdGlvbiBtZW51Q2FuU2hvdygpe3JldHVybiB0cnVlO30sJF9tZW51UHJvcHM6ZnVuY3Rpb24gJF9tZW51UHJvcHMoKXt2YXIgbm9ybWFsaXNlZFByb3BzPXR5cGVvZiB0aGlzLm1lbnVQcm9wcz09PSdzdHJpbmcnP3RoaXMubWVudVByb3BzLnNwbGl0KCcsJyk6dGhpcy5tZW51UHJvcHM7aWYoQXJyYXkuaXNBcnJheShub3JtYWxpc2VkUHJvcHMpKXtub3JtYWxpc2VkUHJvcHM9bm9ybWFsaXNlZFByb3BzLnJlZHVjZShmdW5jdGlvbihhY2MscCl7YWNjW3AudHJpbSgpXT10cnVlO3JldHVybiBhY2M7fSx7fSk7fXJldHVybiBfX2Fzc2lnbih7fSxkZWZhdWx0TWVudVByb3BzLHtlYWdlcjp0aGlzLmVhZ2VyLHZhbHVlOnRoaXMubWVudUNhblNob3cmJnRoaXMuaXNNZW51QWN0aXZlLG51ZGdlQm90dG9tOm5vcm1hbGlzZWRQcm9wcy5vZmZzZXRZPzE6MH0sbm9ybWFsaXNlZFByb3BzKTt9fSx3YXRjaDp7aW50ZXJuYWxWYWx1ZTpmdW5jdGlvbiBpbnRlcm5hbFZhbHVlKHZhbCl7dGhpcy5pbml0aWFsVmFsdWU9dmFsO3RoaXMuc2V0U2VsZWN0ZWRJdGVtcygpO30saXNCb290ZWQ6ZnVuY3Rpb24gaXNCb290ZWQoKXt2YXIgX3RoaXM9dGhpczt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe2lmKF90aGlzLmNvbnRlbnQmJl90aGlzLmNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcil7X3RoaXMuY29udGVudC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLF90aGlzLm9uU2Nyb2xsLGZhbHNlKTt9fSk7fSxpc01lbnVBY3RpdmU6ZnVuY3Rpb24gaXNNZW51QWN0aXZlKHZhbCl7dmFyIF90aGlzPXRoaXM7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMub25NZW51QWN0aXZlQ2hhbmdlKHZhbCk7fSk7aWYoIXZhbClyZXR1cm47dGhpcy5pc0Jvb3RlZD10cnVlO30saXRlbXM6e2ltbWVkaWF0ZTp0cnVlLGhhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcih2YWwpe3ZhciBfdGhpcz10aGlzO2lmKHRoaXMuY2FjaGVJdGVtcyl7Ly8gQnJlYWtzIHZ1ZS10ZXN0LXV0aWxzIGlmCi8vIHRoaXMgaXNuJ3QgY2FsY3VsYXRlZAovLyBvbiB0aGUgbmV4dCB0aWNrCnRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7X3RoaXMuY2FjaGVkSXRlbXM9X3RoaXMuZmlsdGVyRHVwbGljYXRlcyhfdGhpcy5jYWNoZWRJdGVtcy5jb25jYXQodmFsKSk7fSk7fXRoaXMuc2V0U2VsZWN0ZWRJdGVtcygpO319fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLmNvbnRlbnQ9dGhpcy4kcmVmcy5tZW51JiZ0aGlzLiRyZWZzLm1lbnUuJHJlZnMuY29udGVudDt9LG1ldGhvZHM6ey8qKiBAcHVibGljICovYmx1cjpmdW5jdGlvbiBibHVyKGUpe19WVGV4dEZpZWxkX1ZUZXh0RmllbGRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5ibHVyLmNhbGwodGhpcyxlKTt0aGlzLmlzTWVudUFjdGl2ZT1mYWxzZTt0aGlzLmlzRm9jdXNlZD1mYWxzZTt0aGlzLnNlbGVjdGVkSW5kZXg9LTE7fSwvKiogQHB1YmxpYyAqL2FjdGl2YXRlTWVudTpmdW5jdGlvbiBhY3RpdmF0ZU1lbnUoKXtpZih0aGlzLmRpc2FibGVkfHx0aGlzLnJlYWRvbmx5fHx0aGlzLmlzTWVudUFjdGl2ZSlyZXR1cm47dGhpcy5pc01lbnVBY3RpdmU9dHJ1ZTt9LGNsZWFyYWJsZUNhbGxiYWNrOmZ1bmN0aW9uIGNsZWFyYWJsZUNhbGxiYWNrKCl7dmFyIF90aGlzPXRoaXM7dGhpcy5zZXRWYWx1ZSh0aGlzLm11bHRpcGxlP1tdOnVuZGVmaW5lZCk7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuJHJlZnMuaW5wdXQmJl90aGlzLiRyZWZzLmlucHV0LmZvY3VzKCk7fSk7aWYodGhpcy5vcGVuT25DbGVhcil0aGlzLmlzTWVudUFjdGl2ZT10cnVlO30sY2xvc2VDb25kaXRpb25hbDpmdW5jdGlvbiBjbG9zZUNvbmRpdGlvbmFsKGUpe3JldHVybiF0aGlzLl9pc0Rlc3Ryb3llZCYmLy8gQ2xpY2sgb3JpZ2luYXRlcyBmcm9tIG91dHNpZGUgdGhlIG1lbnUgY29udGVudAp0aGlzLmNvbnRlbnQmJiF0aGlzLmNvbnRlbnQuY29udGFpbnMoZS50YXJnZXQpJiYvLyBDbGljayBvcmlnaW5hdGVzIGZyb20gb3V0c2lkZSB0aGUgZWxlbWVudAp0aGlzLiRlbCYmIXRoaXMuJGVsLmNvbnRhaW5zKGUudGFyZ2V0KSYmZS50YXJnZXQhPT10aGlzLiRlbDt9LGZpbHRlckR1cGxpY2F0ZXM6ZnVuY3Rpb24gZmlsdGVyRHVwbGljYXRlcyhhcnIpe3ZhciB1bmlxdWVWYWx1ZXM9bmV3IE1hcCgpO2Zvcih2YXIgaW5kZXg9MDtpbmRleDxhcnIubGVuZ3RoOysraW5kZXgpe3ZhciBpdGVtPWFycltpbmRleF07dmFyIHZhbD10aGlzLmdldFZhbHVlKGl0ZW0pOy8vIFRPRE86IGNvbXBhcmF0b3IKIXVuaXF1ZVZhbHVlcy5oYXModmFsKSYmdW5pcXVlVmFsdWVzLnNldCh2YWwsaXRlbSk7fXJldHVybiBBcnJheS5mcm9tKHVuaXF1ZVZhbHVlcy52YWx1ZXMoKSk7fSxmaW5kRXhpc3RpbmdJbmRleDpmdW5jdGlvbiBmaW5kRXhpc3RpbmdJbmRleChpdGVtKXt2YXIgX3RoaXM9dGhpczt2YXIgaXRlbVZhbHVlPXRoaXMuZ2V0VmFsdWUoaXRlbSk7cmV0dXJuKHRoaXMuaW50ZXJuYWxWYWx1ZXx8W10pLmZpbmRJbmRleChmdW5jdGlvbihpKXtyZXR1cm4gX3RoaXMudmFsdWVDb21wYXJhdG9yKF90aGlzLmdldFZhbHVlKGkpLGl0ZW1WYWx1ZSk7fSk7fSxnZW5DaGlwU2VsZWN0aW9uOmZ1bmN0aW9uIGdlbkNoaXBTZWxlY3Rpb24oaXRlbSxpbmRleCl7dmFyIF90aGlzPXRoaXM7dmFyIGlzRGlzYWJsZWQ9dGhpcy5kaXNhYmxlZHx8dGhpcy5yZWFkb25seXx8dGhpcy5nZXREaXNhYmxlZChpdGVtKTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkNoaXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLHtzdGF0aWNDbGFzczondi1jaGlwLS1zZWxlY3QnLGF0dHJzOnt0YWJpbmRleDotMX0scHJvcHM6e2Nsb3NlOnRoaXMuZGVsZXRhYmxlQ2hpcHMmJiFpc0Rpc2FibGVkLGRpc2FibGVkOmlzRGlzYWJsZWQsaW5wdXRWYWx1ZTppbmRleD09PXRoaXMuc2VsZWN0ZWRJbmRleCxzbWFsbDp0aGlzLnNtYWxsQ2hpcHN9LG9uOntjbGljazpmdW5jdGlvbiBjbGljayhlKXtpZihpc0Rpc2FibGVkKXJldHVybjtlLnN0b3BQcm9wYWdhdGlvbigpO190aGlzLnNlbGVjdGVkSW5kZXg9aW5kZXg7fSwnY2xpY2s6Y2xvc2UnOmZ1bmN0aW9uIGNsaWNrQ2xvc2UoKXtyZXR1cm4gX3RoaXMub25DaGlwSW5wdXQoaXRlbSk7fX0sa2V5OkpTT04uc3RyaW5naWZ5KHRoaXMuZ2V0VmFsdWUoaXRlbSkpfSx0aGlzLmdldFRleHQoaXRlbSkpO30sZ2VuQ29tbWFTZWxlY3Rpb246ZnVuY3Rpb24gZ2VuQ29tbWFTZWxlY3Rpb24oaXRlbSxpbmRleCxsYXN0KXt2YXIgY29sb3I9aW5kZXg9PT10aGlzLnNlbGVjdGVkSW5kZXgmJnRoaXMuY29tcHV0ZWRDb2xvcjt2YXIgaXNEaXNhYmxlZD10aGlzLmRpc2FibGVkfHx0aGlzLmdldERpc2FibGVkKGl0ZW0pO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHRoaXMuc2V0VGV4dENvbG9yKGNvbG9yLHtzdGF0aWNDbGFzczondi1zZWxlY3RfX3NlbGVjdGlvbiB2LXNlbGVjdF9fc2VsZWN0aW9uLS1jb21tYScsY2xhc3M6eyd2LXNlbGVjdF9fc2VsZWN0aW9uLS1kaXNhYmxlZCc6aXNEaXNhYmxlZH0sa2V5OkpTT04uc3RyaW5naWZ5KHRoaXMuZ2V0VmFsdWUoaXRlbSkpfSksIiIrdGhpcy5nZXRUZXh0KGl0ZW0pKyhsYXN0PycnOicsICcpKTt9LGdlbkRlZmF1bHRTbG90OmZ1bmN0aW9uIGdlbkRlZmF1bHRTbG90KCl7dmFyIHNlbGVjdGlvbnM9dGhpcy5nZW5TZWxlY3Rpb25zKCk7dmFyIGlucHV0PXRoaXMuZ2VuSW5wdXQoKTsvLyBJZiB0aGUgcmV0dXJuIGlzIGFuIGVtcHR5IGFycmF5Ci8vIHB1c2ggdGhlIGlucHV0CmlmKEFycmF5LmlzQXJyYXkoc2VsZWN0aW9ucykpe3NlbGVjdGlvbnMucHVzaChpbnB1dCk7Ly8gT3RoZXJ3aXNlIHB1c2ggaXQgaW50byBjaGlsZHJlbgp9ZWxzZXtzZWxlY3Rpb25zLmNoaWxkcmVuPXNlbGVjdGlvbnMuY2hpbGRyZW58fFtdO3NlbGVjdGlvbnMuY2hpbGRyZW4ucHVzaChpbnB1dCk7fXJldHVyblt0aGlzLmdlbkZpZWxkc2V0KCksdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3Ytc2VsZWN0X19zbG90JyxkaXJlY3RpdmVzOnRoaXMuZGlyZWN0aXZlc30sW3RoaXMuZ2VuTGFiZWwoKSx0aGlzLnByZWZpeD90aGlzLmdlbkFmZml4KCdwcmVmaXgnKTpudWxsLHNlbGVjdGlvbnMsdGhpcy5zdWZmaXg/dGhpcy5nZW5BZmZpeCgnc3VmZml4Jyk6bnVsbCx0aGlzLmdlbkNsZWFySWNvbigpLHRoaXMuZ2VuSWNvblNsb3QoKV0pLHRoaXMuZ2VuTWVudSgpLHRoaXMuZ2VuUHJvZ3Jlc3MoKV07fSxnZW5JbnB1dDpmdW5jdGlvbiBnZW5JbnB1dCgpe3ZhciBpbnB1dD1fVlRleHRGaWVsZF9WVGV4dEZpZWxkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuZ2VuSW5wdXQuY2FsbCh0aGlzKTtpbnB1dC5kYXRhLmRvbVByb3BzLnZhbHVlPW51bGw7aW5wdXQuZGF0YS5hdHRycy5yZWFkb25seT10cnVlO2lucHV0LmRhdGEuYXR0cnMudHlwZT0ndGV4dCc7aW5wdXQuZGF0YS5hdHRyc1snYXJpYS1yZWFkb25seSddPXRydWU7aW5wdXQuZGF0YS5vbi5rZXlwcmVzcz10aGlzLm9uS2V5UHJlc3M7cmV0dXJuIGlucHV0O30sZ2VuSW5wdXRTbG90OmZ1bmN0aW9uIGdlbklucHV0U2xvdCgpe3ZhciByZW5kZXI9X1ZUZXh0RmllbGRfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlbklucHV0U2xvdC5jYWxsKHRoaXMpO3JlbmRlci5kYXRhLmF0dHJzPV9fYXNzaWduKHt9LHJlbmRlci5kYXRhLmF0dHJzLHtyb2xlOididXR0b24nLCdhcmlhLWhhc3BvcHVwJzonbGlzdGJveCcsJ2FyaWEtZXhwYW5kZWQnOlN0cmluZyh0aGlzLmlzTWVudUFjdGl2ZSksJ2FyaWEtb3ducyc6dGhpcy5jb21wdXRlZE93bnN9KTtyZXR1cm4gcmVuZGVyO30sZ2VuTGlzdDpmdW5jdGlvbiBnZW5MaXN0KCl7Ly8gSWYgdGhlcmUncyBubyBzbG90cywgd2UgY2FuIHVzZSBhIGNhY2hlZCBWTm9kZSB0byBpbXByb3ZlIHBlcmZvcm1hbmNlCmlmKHRoaXMuJHNsb3RzWyduby1kYXRhJ118fHRoaXMuJHNsb3RzWydwcmVwZW5kLWl0ZW0nXXx8dGhpcy4kc2xvdHNbJ2FwcGVuZC1pdGVtJ10pe3JldHVybiB0aGlzLmdlbkxpc3RXaXRoU2xvdCgpO31lbHNle3JldHVybiB0aGlzLnN0YXRpY0xpc3Q7fX0sZ2VuTGlzdFdpdGhTbG90OmZ1bmN0aW9uIGdlbkxpc3RXaXRoU2xvdCgpe3ZhciBfdGhpcz10aGlzO3ZhciBzbG90cz1bJ3ByZXBlbmQtaXRlbScsJ25vLWRhdGEnLCdhcHBlbmQtaXRlbSddLmZpbHRlcihmdW5jdGlvbihzbG90TmFtZSl7cmV0dXJuIF90aGlzLiRzbG90c1tzbG90TmFtZV07fSkubWFwKGZ1bmN0aW9uKHNsb3ROYW1lKXtyZXR1cm4gX3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RlbXBsYXRlJyx7c2xvdDpzbG90TmFtZX0sX3RoaXMuJHNsb3RzW3Nsb3ROYW1lXSk7fSk7Ly8gUmVxdWlyZXMgZGVzdHJ1Y3R1cmluZyBkdWUgdG8gVnVlCi8vIG1vZGlmeWluZyB0aGUgYG9uYCBwcm9wZXJ0eSB3aGVuIHBhc3NlZAovLyBhcyBhIHJlZmVyZW5jZWQgb2JqZWN0CnJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WU2VsZWN0TGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sX19hc3NpZ24oe30sdGhpcy5saXN0RGF0YSksc2xvdHMpO30sZ2VuTWVudTpmdW5jdGlvbiBnZW5NZW51KCl7dmFyIF90aGlzPXRoaXM7dmFyIHByb3BzPXRoaXMuJF9tZW51UHJvcHM7cHJvcHMuYWN0aXZhdG9yPXRoaXMuJHJlZnNbJ2lucHV0LXNsb3QnXTsvLyBBdHRhY2ggdG8gcm9vdCBlbCBzbyB0aGF0Ci8vIG1lbnUgY292ZXJzIHByZXBlbmQvYXBwZW5kIGljb25zCmlmKC8vIFRPRE86IG1ha2UgdGhpcyBhIGNvbXB1dGVkIHByb3BlcnR5IG9yIGhlbHBlciBvciBzb21ldGhpbmcKdGhpcy5hdHRhY2g9PT0nJ3x8Ly8gSWYgdXNlZCBhcyBhIGJvb2xlYW4gcHJvcCAoPHYtbWVudSBhdHRhY2g+KQp0aGlzLmF0dGFjaD09PXRydWV8fC8vIElmIGJvdW5kIHRvIGEgYm9vbGVhbiAoPHYtbWVudSA6YXR0YWNoPSJ0cnVlIj4pCnRoaXMuYXR0YWNoPT09J2F0dGFjaCcvLyBJZiBib3VuZCBhcyBib29sZWFuIHByb3AgaW4gcHVnICh2LW1lbnUoYXR0YWNoKSkKKXtwcm9wcy5hdHRhY2g9dGhpcy4kZWw7fWVsc2V7cHJvcHMuYXR0YWNoPXRoaXMuYXR0YWNoO31yZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVk1lbnVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLHthdHRyczp7cm9sZTp1bmRlZmluZWR9LHByb3BzOnByb3BzLG9uOntpbnB1dDpmdW5jdGlvbiBpbnB1dCh2YWwpe190aGlzLmlzTWVudUFjdGl2ZT12YWw7X3RoaXMuaXNGb2N1c2VkPXZhbDt9fSxyZWY6J21lbnUnfSxbdGhpcy5nZW5MaXN0KCldKTt9LGdlblNlbGVjdGlvbnM6ZnVuY3Rpb24gZ2VuU2VsZWN0aW9ucygpe3ZhciBsZW5ndGg9dGhpcy5zZWxlY3RlZEl0ZW1zLmxlbmd0aDt2YXIgY2hpbGRyZW49bmV3IEFycmF5KGxlbmd0aCk7dmFyIGdlblNlbGVjdGlvbjtpZih0aGlzLiRzY29wZWRTbG90cy5zZWxlY3Rpb24pe2dlblNlbGVjdGlvbj10aGlzLmdlblNsb3RTZWxlY3Rpb247fWVsc2UgaWYodGhpcy5oYXNDaGlwcyl7Z2VuU2VsZWN0aW9uPXRoaXMuZ2VuQ2hpcFNlbGVjdGlvbjt9ZWxzZXtnZW5TZWxlY3Rpb249dGhpcy5nZW5Db21tYVNlbGVjdGlvbjt9d2hpbGUobGVuZ3RoLS0pe2NoaWxkcmVuW2xlbmd0aF09Z2VuU2VsZWN0aW9uKHRoaXMuc2VsZWN0ZWRJdGVtc1tsZW5ndGhdLGxlbmd0aCxsZW5ndGg9PT1jaGlsZHJlbi5sZW5ndGgtMSk7fXJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1zZWxlY3RfX3NlbGVjdGlvbnMnfSxjaGlsZHJlbik7fSxnZW5TbG90U2VsZWN0aW9uOmZ1bmN0aW9uIGdlblNsb3RTZWxlY3Rpb24oaXRlbSxpbmRleCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuJHNjb3BlZFNsb3RzLnNlbGVjdGlvbih7YXR0cnM6e2NsYXNzOid2LWNoaXAtLXNlbGVjdCd9LHBhcmVudDp0aGlzLGl0ZW06aXRlbSxpbmRleDppbmRleCxzZWxlY3Q6ZnVuY3Rpb24gc2VsZWN0KGUpe2Uuc3RvcFByb3BhZ2F0aW9uKCk7X3RoaXMuc2VsZWN0ZWRJbmRleD1pbmRleDt9LHNlbGVjdGVkOmluZGV4PT09dGhpcy5zZWxlY3RlZEluZGV4LGRpc2FibGVkOnRoaXMuZGlzYWJsZWR8fHRoaXMucmVhZG9ubHl9KTt9LGdldE1lbnVJbmRleDpmdW5jdGlvbiBnZXRNZW51SW5kZXgoKXtyZXR1cm4gdGhpcy4kcmVmcy5tZW51P3RoaXMuJHJlZnMubWVudS5saXN0SW5kZXg6LTE7fSxnZXREaXNhYmxlZDpmdW5jdGlvbiBnZXREaXNhYmxlZChpdGVtKXtyZXR1cm4gT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siZ2V0UHJvcGVydHlGcm9tSXRlbSJdKShpdGVtLHRoaXMuaXRlbURpc2FibGVkLGZhbHNlKTt9LGdldFRleHQ6ZnVuY3Rpb24gZ2V0VGV4dChpdGVtKXtyZXR1cm4gT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siZ2V0UHJvcGVydHlGcm9tSXRlbSJdKShpdGVtLHRoaXMuaXRlbVRleHQsaXRlbSk7fSxnZXRWYWx1ZTpmdW5jdGlvbiBnZXRWYWx1ZShpdGVtKXtyZXR1cm4gT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siZ2V0UHJvcGVydHlGcm9tSXRlbSJdKShpdGVtLHRoaXMuaXRlbVZhbHVlLHRoaXMuZ2V0VGV4dChpdGVtKSk7fSxvbkJsdXI6ZnVuY3Rpb24gb25CbHVyKGUpe2UmJnRoaXMuJGVtaXQoJ2JsdXInLGUpO30sb25DaGlwSW5wdXQ6ZnVuY3Rpb24gb25DaGlwSW5wdXQoaXRlbSl7aWYodGhpcy5tdWx0aXBsZSl0aGlzLnNlbGVjdEl0ZW0oaXRlbSk7ZWxzZSB0aGlzLnNldFZhbHVlKG51bGwpOy8vIElmIGFsbCBpdGVtcyBoYXZlIGJlZW4gZGVsZXRlZCwKLy8gb3BlbiBgdi1tZW51YAppZih0aGlzLnNlbGVjdGVkSXRlbXMubGVuZ3RoPT09MCl7dGhpcy5pc01lbnVBY3RpdmU9dHJ1ZTt9ZWxzZXt0aGlzLmlzTWVudUFjdGl2ZT1mYWxzZTt9dGhpcy5zZWxlY3RlZEluZGV4PS0xO30sb25DbGljazpmdW5jdGlvbiBvbkNsaWNrKCl7aWYodGhpcy5pc0Rpc2FibGVkKXJldHVybjt0aGlzLmlzTWVudUFjdGl2ZT10cnVlO2lmKCF0aGlzLmlzRm9jdXNlZCl7dGhpcy5pc0ZvY3VzZWQ9dHJ1ZTt0aGlzLiRlbWl0KCdmb2N1cycpO319LG9uRXNjRG93bjpmdW5jdGlvbiBvbkVzY0Rvd24oZSl7ZS5wcmV2ZW50RGVmYXVsdCgpO2lmKHRoaXMuaXNNZW51QWN0aXZlKXtlLnN0b3BQcm9wYWdhdGlvbigpO3RoaXMuaXNNZW51QWN0aXZlPWZhbHNlO319LG9uS2V5UHJlc3M6ZnVuY3Rpb24gb25LZXlQcmVzcyhlKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLm11bHRpcGxlfHx0aGlzLnJlYWRvbmx5KXJldHVybjt2YXIgS0VZQk9BUkRfTE9PS1VQX1RIUkVTSE9MRD0xMDAwOy8vIG1pbGxpc2Vjb25kcwp2YXIgbm93PXBlcmZvcm1hbmNlLm5vdygpO2lmKG5vdy10aGlzLmtleWJvYXJkTG9va3VwTGFzdFRpbWU+S0VZQk9BUkRfTE9PS1VQX1RIUkVTSE9MRCl7dGhpcy5rZXlib2FyZExvb2t1cFByZWZpeD0nJzt9dGhpcy5rZXlib2FyZExvb2t1cFByZWZpeCs9ZS5rZXkudG9Mb3dlckNhc2UoKTt0aGlzLmtleWJvYXJkTG9va3VwTGFzdFRpbWU9bm93O3ZhciBpbmRleD10aGlzLmFsbEl0ZW1zLmZpbmRJbmRleChmdW5jdGlvbihpdGVtKXt2YXIgdGV4dD0oX3RoaXMuZ2V0VGV4dChpdGVtKXx8JycpLnRvU3RyaW5nKCk7cmV0dXJuIHRleHQudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKF90aGlzLmtleWJvYXJkTG9va3VwUHJlZml4KTt9KTt2YXIgaXRlbT10aGlzLmFsbEl0ZW1zW2luZGV4XTtpZihpbmRleCE9PS0xKXt0aGlzLnNldFZhbHVlKHRoaXMucmV0dXJuT2JqZWN0P2l0ZW06dGhpcy5nZXRWYWx1ZShpdGVtKSk7c2V0VGltZW91dChmdW5jdGlvbigpe3JldHVybiBfdGhpcy5zZXRNZW51SW5kZXgoaW5kZXgpO30pO319LG9uS2V5RG93bjpmdW5jdGlvbiBvbktleURvd24oZSl7dmFyIF90aGlzPXRoaXM7dmFyIGtleUNvZGU9ZS5rZXlDb2RlO3ZhciBtZW51PXRoaXMuJHJlZnMubWVudTsvLyBJZiBlbnRlciwgc3BhY2UsIG9wZW4gbWVudQppZihbX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fWyJrZXlDb2RlcyJdLmVudGVyLF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1sia2V5Q29kZXMiXS5zcGFjZV0uaW5jbHVkZXMoa2V5Q29kZSkpdGhpcy5hY3RpdmF0ZU1lbnUoKTtpZighbWVudSlyZXR1cm47Ly8gSWYgbWVudSBpcyBhY3RpdmUsIGFsbG93IGRlZmF1bHQKLy8gbGlzdEluZGV4IGNoYW5nZSBmcm9tIG1lbnUKaWYodGhpcy5pc01lbnVBY3RpdmUmJmtleUNvZGUhPT1fdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19bImtleUNvZGVzIl0udGFiKXt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe21lbnUuY2hhbmdlTGlzdEluZGV4KGUpO190aGlzLiRlbWl0KCd1cGRhdGU6bGlzdC1pbmRleCcsbWVudS5saXN0SW5kZXgpO30pO30vLyBJZiBtZW51IGlzIG5vdCBhY3RpdmUsIHVwIGFuZCBkb3duIGNhbiBkbwovLyBvbmUgb2YgMiB0aGluZ3MuIElmIG11bHRpcGxlLCBvcGVucyB0aGUKLy8gbWVudSwgaWYgbm90LCB3aWxsIGN5Y2xlIHRocm91Z2ggYWxsCi8vIGF2YWlsYWJsZSBvcHRpb25zCmlmKCF0aGlzLmlzTWVudUFjdGl2ZSYmW191dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1sia2V5Q29kZXMiXS51cCxfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19bImtleUNvZGVzIl0uZG93bl0uaW5jbHVkZXMoa2V5Q29kZSkpcmV0dXJuIHRoaXMub25VcERvd24oZSk7Ly8gSWYgZXNjYXBlIGRlYWN0aXZhdGUgdGhlIG1lbnUKaWYoa2V5Q29kZT09PV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1sia2V5Q29kZXMiXS5lc2MpcmV0dXJuIHRoaXMub25Fc2NEb3duKGUpOy8vIElmIHRhYiAtIHNlbGVjdCBpdGVtIG9yIGNsb3NlIG1lbnUKaWYoa2V5Q29kZT09PV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1sia2V5Q29kZXMiXS50YWIpcmV0dXJuIHRoaXMub25UYWJEb3duKGUpOy8vIElmIHNwYWNlIHByZXZlbnREZWZhdWx0CmlmKGtleUNvZGU9PT1fdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19bImtleUNvZGVzIl0uc3BhY2UpcmV0dXJuIHRoaXMub25TcGFjZURvd24oZSk7fSxvbk1lbnVBY3RpdmVDaGFuZ2U6ZnVuY3Rpb24gb25NZW51QWN0aXZlQ2hhbmdlKHZhbCl7Ly8gSWYgbWVudSBpcyBjbG9zaW5nIGFuZCBtdWxpdHBsZQovLyBvciBtZW51SW5kZXggaXMgYWxyZWFkeSBzZXQKLy8gc2tpcCBtZW51IGluZGV4IHJlY2FsY3VsYXRpb24KaWYodGhpcy5tdWx0aXBsZSYmIXZhbHx8dGhpcy5nZXRNZW51SW5kZXgoKT4tMSlyZXR1cm47dmFyIG1lbnU9dGhpcy4kcmVmcy5tZW51O2lmKCFtZW51fHwhdGhpcy5pc0RpcnR5KXJldHVybjsvLyBXaGVuIG1lbnUgb3BlbnMsIHNldCBpbmRleCBvZiBmaXJzdCBhY3RpdmUgaXRlbQpmb3IodmFyIGk9MDtpPG1lbnUudGlsZXMubGVuZ3RoO2krKyl7aWYobWVudS50aWxlc1tpXS5nZXRBdHRyaWJ1dGUoJ2FyaWEtc2VsZWN0ZWQnKT09PSd0cnVlJyl7dGhpcy5zZXRNZW51SW5kZXgoaSk7YnJlYWs7fX19LG9uTW91c2VVcDpmdW5jdGlvbiBvbk1vdXNlVXAoZSl7dmFyIF90aGlzPXRoaXM7aWYodGhpcy5oYXNNb3VzZURvd24mJmUud2hpY2ghPT0zKXt2YXIgYXBwZW5kSW5uZXI9dGhpcy4kcmVmc1snYXBwZW5kLWlubmVyJ107Ly8gSWYgYXBwZW5kIGlubmVyIGlzIHByZXNlbnQKLy8gYW5kIHRoZSB0YXJnZXQgaXMgaXRzZWxmCi8vIG9yIGluc2lkZSwgdG9nZ2xlIG1lbnUKaWYodGhpcy5pc01lbnVBY3RpdmUmJmFwcGVuZElubmVyJiYoYXBwZW5kSW5uZXI9PT1lLnRhcmdldHx8YXBwZW5kSW5uZXIuY29udGFpbnMoZS50YXJnZXQpKSl7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuaXNNZW51QWN0aXZlPSFfdGhpcy5pc01lbnVBY3RpdmU7fSk7Ly8gSWYgdXNlciBpcyBjbGlja2luZyBpbiB0aGUgY29udGFpbmVyCi8vIGFuZCBmaWVsZCBpcyBlbmNsb3NlZCwgYWN0aXZhdGUgaXQKfWVsc2UgaWYodGhpcy5pc0VuY2xvc2VkJiYhdGhpcy5pc0Rpc2FibGVkKXt0aGlzLmlzTWVudUFjdGl2ZT10cnVlO319X1ZUZXh0RmllbGRfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLm9uTW91c2VVcC5jYWxsKHRoaXMsZSk7fSxvblNjcm9sbDpmdW5jdGlvbiBvblNjcm9sbCgpe3ZhciBfdGhpcz10aGlzO2lmKCF0aGlzLmlzTWVudUFjdGl2ZSl7cmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLmNvbnRlbnQuc2Nyb2xsVG9wPTA7fSk7fWVsc2V7aWYodGhpcy5sYXN0SXRlbT49dGhpcy5jb21wdXRlZEl0ZW1zLmxlbmd0aClyZXR1cm47dmFyIHNob3dNb3JlSXRlbXM9dGhpcy5jb250ZW50LnNjcm9sbEhlaWdodC0odGhpcy5jb250ZW50LnNjcm9sbFRvcCt0aGlzLmNvbnRlbnQuY2xpZW50SGVpZ2h0KTwyMDA7aWYoc2hvd01vcmVJdGVtcyl7dGhpcy5sYXN0SXRlbSs9MjA7fX19LG9uU3BhY2VEb3duOmZ1bmN0aW9uIG9uU3BhY2VEb3duKGUpe2UucHJldmVudERlZmF1bHQoKTt9LG9uVGFiRG93bjpmdW5jdGlvbiBvblRhYkRvd24oZSl7dmFyIG1lbnU9dGhpcy4kcmVmcy5tZW51O2lmKCFtZW51KXJldHVybjt2YXIgYWN0aXZlVGlsZT1tZW51LmFjdGl2ZVRpbGU7Ly8gQW4gaXRlbSB0aGF0IGlzIHNlbGVjdGVkIGJ5Ci8vIG1lbnUtaW5kZXggc2hvdWxkIHRvZ2dsZWQKaWYoIXRoaXMubXVsdGlwbGUmJmFjdGl2ZVRpbGUmJnRoaXMuaXNNZW51QWN0aXZlKXtlLnByZXZlbnREZWZhdWx0KCk7ZS5zdG9wUHJvcGFnYXRpb24oKTthY3RpdmVUaWxlLmNsaWNrKCk7fWVsc2V7Ly8gSWYgd2UgbWFrZSBpdCBoZXJlLAovLyB0aGUgdXNlciBoYXMgbm8gc2VsZWN0ZWQgaW5kZXhlcwovLyBhbmQgaXMgcHJvYmFibHkgdGFiYmluZyBvdXQKdGhpcy5ibHVyKGUpO319LG9uVXBEb3duOmZ1bmN0aW9uIG9uVXBEb3duKGUpe3ZhciBtZW51PXRoaXMuJHJlZnMubWVudTtpZighbWVudSlyZXR1cm47ZS5wcmV2ZW50RGVmYXVsdCgpOy8vIE11bHRpcGxlIHNlbGVjdHMgZG8gbm90IGN5Y2xlIHRoZWlyIHZhbHVlCi8vIHdoZW4gcHJlc3NpbmcgdXAgb3IgZG93biwgaW5zdGVhZCBhY3RpdmF0ZQovLyB0aGUgbWVudQppZih0aGlzLm11bHRpcGxlKXJldHVybiB0aGlzLmFjdGl2YXRlTWVudSgpO3ZhciBrZXlDb2RlPWUua2V5Q29kZTsvLyBDeWNsZSB0aHJvdWdoIGF2YWlsYWJsZSB2YWx1ZXMgdG8gYWNoaWV2ZQovLyBzZWxlY3QgbmF0aXZlIGJlaGF2aW9yCm1lbnUuZ2V0VGlsZXMoKTtfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19bImtleUNvZGVzIl0udXA9PT1rZXlDb2RlP21lbnUucHJldlRpbGUoKTptZW51Lm5leHRUaWxlKCk7bWVudS5hY3RpdmVUaWxlJiZtZW51LmFjdGl2ZVRpbGUuY2xpY2soKTt9LHNlbGVjdEl0ZW06ZnVuY3Rpb24gc2VsZWN0SXRlbShpdGVtKXt2YXIgX3RoaXM9dGhpcztpZighdGhpcy5tdWx0aXBsZSl7dGhpcy5zZXRWYWx1ZSh0aGlzLnJldHVybk9iamVjdD9pdGVtOnRoaXMuZ2V0VmFsdWUoaXRlbSkpO3RoaXMuaXNNZW51QWN0aXZlPWZhbHNlO31lbHNle3ZhciBpbnRlcm5hbFZhbHVlPSh0aGlzLmludGVybmFsVmFsdWV8fFtdKS5zbGljZSgpO3ZhciBpPXRoaXMuZmluZEV4aXN0aW5nSW5kZXgoaXRlbSk7aSE9PS0xP2ludGVybmFsVmFsdWUuc3BsaWNlKGksMSk6aW50ZXJuYWxWYWx1ZS5wdXNoKGl0ZW0pO3RoaXMuc2V0VmFsdWUoaW50ZXJuYWxWYWx1ZS5tYXAoZnVuY3Rpb24oaSl7cmV0dXJuIF90aGlzLnJldHVybk9iamVjdD9pOl90aGlzLmdldFZhbHVlKGkpO30pKTsvLyBXaGVuIHNlbGVjdGluZyBtdWx0aXBsZQovLyBhZGp1c3QgbWVudSBhZnRlciBlYWNoCi8vIHNlbGVjdGlvbgp0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe190aGlzLiRyZWZzLm1lbnUmJl90aGlzLiRyZWZzLm1lbnUudXBkYXRlRGltZW5zaW9ucygpO30pOy8vIFdlIG9ubHkgbmVlZCB0byByZXNldCBsaXN0IGluZGV4IGZvciBtdWx0aXBsZQovLyB0byBrZWVwIGhpZ2hsaWdodCB3aGVuIGFuIGl0ZW0gaXMgdG9nZ2xlZAovLyBvbiBhbmQgb2ZmCmlmKCF0aGlzLm11bHRpcGxlKXJldHVybjt2YXIgbGlzdEluZGV4XzE9dGhpcy5nZXRNZW51SW5kZXgoKTt0aGlzLnNldE1lbnVJbmRleCgtMSk7Ly8gVGhlcmUgaXMgbm8gaXRlbSB0byByZS1oaWdobGlnaHQKLy8gd2hlbiBzZWxlY3Rpb25zIGFyZSBoaWRkZW4KaWYodGhpcy5oaWRlU2VsZWN0ZWQpcmV0dXJuO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLnNldE1lbnVJbmRleChsaXN0SW5kZXhfMSk7fSk7fX0sc2V0TWVudUluZGV4OmZ1bmN0aW9uIHNldE1lbnVJbmRleChpbmRleCl7dGhpcy4kcmVmcy5tZW51JiYodGhpcy4kcmVmcy5tZW51Lmxpc3RJbmRleD1pbmRleCk7fSxzZXRTZWxlY3RlZEl0ZW1zOmZ1bmN0aW9uIHNldFNlbGVjdGVkSXRlbXMoKXt2YXIgZV8xLF9hO3ZhciBfdGhpcz10aGlzO3ZhciBzZWxlY3RlZEl0ZW1zPVtdO3ZhciB2YWx1ZXM9IXRoaXMubXVsdGlwbGV8fCFBcnJheS5pc0FycmF5KHRoaXMuaW50ZXJuYWxWYWx1ZSk/W3RoaXMuaW50ZXJuYWxWYWx1ZV06dGhpcy5pbnRlcm5hbFZhbHVlO3ZhciBfbG9vcF8xPWZ1bmN0aW9uIF9sb29wXzEodmFsdWUpe3ZhciBpbmRleD10aGlzXzEuYWxsSXRlbXMuZmluZEluZGV4KGZ1bmN0aW9uKHYpe3JldHVybiBfdGhpcy52YWx1ZUNvbXBhcmF0b3IoX3RoaXMuZ2V0VmFsdWUodiksX3RoaXMuZ2V0VmFsdWUodmFsdWUpKTt9KTtpZihpbmRleD4tMSl7c2VsZWN0ZWRJdGVtcy5wdXNoKHRoaXNfMS5hbGxJdGVtc1tpbmRleF0pO319O3ZhciB0aGlzXzE9dGhpczt0cnl7Zm9yKHZhciB2YWx1ZXNfMT1fX3ZhbHVlcyh2YWx1ZXMpLHZhbHVlc18xXzE9dmFsdWVzXzEubmV4dCgpOyF2YWx1ZXNfMV8xLmRvbmU7dmFsdWVzXzFfMT12YWx1ZXNfMS5uZXh0KCkpe3ZhciB2YWx1ZT12YWx1ZXNfMV8xLnZhbHVlO19sb29wXzEodmFsdWUpO319Y2F0Y2goZV8xXzEpe2VfMT17ZXJyb3I6ZV8xXzF9O31maW5hbGx5e3RyeXtpZih2YWx1ZXNfMV8xJiYhdmFsdWVzXzFfMS5kb25lJiYoX2E9dmFsdWVzXzEucmV0dXJuKSlfYS5jYWxsKHZhbHVlc18xKTt9ZmluYWxseXtpZihlXzEpdGhyb3cgZV8xLmVycm9yO319dGhpcy5zZWxlY3RlZEl0ZW1zPXNlbGVjdGVkSXRlbXM7fSxzZXRWYWx1ZTpmdW5jdGlvbiBzZXRWYWx1ZSh2YWx1ZSl7dmFyIG9sZFZhbHVlPXRoaXMuaW50ZXJuYWxWYWx1ZTt0aGlzLmludGVybmFsVmFsdWU9dmFsdWU7dmFsdWUhPT1vbGRWYWx1ZSYmdGhpcy4kZW1pdCgnY2hhbmdlJyx2YWx1ZSk7fX19KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU2VsZWN0L1ZTZWxlY3RMaXN0LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WU2VsZWN0L1ZTZWxlY3RMaXN0LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTZWxlY3RWU2VsZWN0TGlzdFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDYXJkX1ZDYXJkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WQ2FyZC9WQ2FyZC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVkNhcmQvVkNhcmQuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2FyZF9WQ2FyZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WQ2FyZF9WQ2FyZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2hlY2tib3hfVlNpbXBsZUNoZWNrYm94X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkNoZWNrYm94L1ZTaW1wbGVDaGVja2JveCAqLyIuL3NyYy9jb21wb25lbnRzL1ZDaGVja2JveC9WU2ltcGxlQ2hlY2tib3gudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRpdmlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WRGl2aWRlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZEaXZpZGVyL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTdWJoZWFkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WU3ViaGVhZGVyICovIi4vc3JjL2NvbXBvbmVudHMvVlN1YmhlYWRlci9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZMaXN0ICovIi4vc3JjL2NvbXBvbmVudHMvVkxpc3QvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZGlyZWN0aXZlc19yaXBwbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9kaXJlY3RpdmVzL3JpcHBsZSAqLyIuL3NyYy9kaXJlY3RpdmVzL3JpcHBsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTt2YXIgX192YWx1ZXM9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX192YWx1ZXN8fGZ1bmN0aW9uKG8pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl0saT0wO2lmKG0pcmV0dXJuIG0uY2FsbChvKTtyZXR1cm57bmV4dDpmdW5jdGlvbiBuZXh0KCl7aWYobyYmaT49by5sZW5ndGgpbz12b2lkIDA7cmV0dXJue3ZhbHVlOm8mJm9baSsrXSxkb25lOiFvfTt9fTt9Oy8vIFN0eWxlcwovLyBDb21wb25lbnRzCi8vIERpcmVjdGl2ZXMKLy8gTWl4aW5zCi8vIEhlbHBlcnMKLy8gVHlwZXMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19bImRlZmF1bHQiXSkoX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOid2LXNlbGVjdC1saXN0JywvLyBodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlL2lzc3Vlcy82ODcyCmRpcmVjdGl2ZXM6e3JpcHBsZTpfZGlyZWN0aXZlc19yaXBwbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdfSxwcm9wczp7YWN0aW9uOkJvb2xlYW4sZGVuc2U6Qm9vbGVhbixoaWRlU2VsZWN0ZWQ6Qm9vbGVhbixpdGVtczp7dHlwZTpBcnJheSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuW107fX0saXRlbURpc2FibGVkOnt0eXBlOltTdHJpbmcsQXJyYXksRnVuY3Rpb25dLGRlZmF1bHQ6J2Rpc2FibGVkJ30saXRlbVRleHQ6e3R5cGU6W1N0cmluZyxBcnJheSxGdW5jdGlvbl0sZGVmYXVsdDondGV4dCd9LGl0ZW1WYWx1ZTp7dHlwZTpbU3RyaW5nLEFycmF5LEZ1bmN0aW9uXSxkZWZhdWx0Oid2YWx1ZSd9LG5vRGF0YVRleHQ6U3RyaW5nLG5vRmlsdGVyOkJvb2xlYW4sc2VhcmNoSW5wdXQ6e2RlZmF1bHQ6bnVsbH0sc2VsZWN0ZWRJdGVtczp7dHlwZTpBcnJheSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuW107fX19LGNvbXB1dGVkOntwYXJzZWRJdGVtczpmdW5jdGlvbiBwYXJzZWRJdGVtcygpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0aGlzLnNlbGVjdGVkSXRlbXMubWFwKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBfdGhpcy5nZXRWYWx1ZShpdGVtKTt9KTt9LHRpbGVBY3RpdmVDbGFzczpmdW5jdGlvbiB0aWxlQWN0aXZlQ2xhc3MoKXtyZXR1cm4gT2JqZWN0LmtleXModGhpcy5zZXRUZXh0Q29sb3IodGhpcy5jb2xvcikuY2xhc3N8fHt9KS5qb2luKCcgJyk7fSxzdGF0aWNOb0RhdGFUaWxlOmZ1bmN0aW9uIHN0YXRpY05vRGF0YVRpbGUoKXt2YXIgdGlsZT17YXR0cnM6e3JvbGU6dW5kZWZpbmVkfSxvbjp7bW91c2Vkb3duOmZ1bmN0aW9uIG1vdXNlZG93bihlKXtyZXR1cm4gZS5wcmV2ZW50RGVmYXVsdCgpO319fTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkxpc3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siVkxpc3RJdGVtIl0sdGlsZSxbdGhpcy5nZW5UaWxlQ29udGVudCh0aGlzLm5vRGF0YVRleHQpXSk7fX0sbWV0aG9kczp7Z2VuQWN0aW9uOmZ1bmN0aW9uIGdlbkFjdGlvbihpdGVtLGlucHV0VmFsdWUpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WTGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJWTGlzdEl0ZW1BY3Rpb24iXSxbdGhpcy4kY3JlYXRlRWxlbWVudChfVkNoZWNrYm94X1ZTaW1wbGVDaGVja2JveF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0se3Byb3BzOntjb2xvcjp0aGlzLmNvbG9yLHZhbHVlOmlucHV0VmFsdWV9LG9uOntpbnB1dDpmdW5jdGlvbiBpbnB1dCgpe3JldHVybiBfdGhpcy4kZW1pdCgnc2VsZWN0JyxpdGVtKTt9fX0pXSk7fSxnZW5EaXZpZGVyOmZ1bmN0aW9uIGdlbkRpdmlkZXIocHJvcHMpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WRGl2aWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0se3Byb3BzOnByb3BzfSk7fSxnZW5GaWx0ZXJlZFRleHQ6ZnVuY3Rpb24gZ2VuRmlsdGVyZWRUZXh0KHRleHQpe3RleHQ9dGV4dHx8Jyc7aWYoIXRoaXMuc2VhcmNoSW5wdXR8fHRoaXMubm9GaWx0ZXIpcmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImVzY2FwZUhUTUwiXSkodGV4dCk7dmFyIF9hPXRoaXMuZ2V0TWFza2VkQ2hhcmFjdGVycyh0ZXh0KSxzdGFydD1fYS5zdGFydCxtaWRkbGU9X2EubWlkZGxlLGVuZD1fYS5lbmQ7cmV0dXJuIiIrT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZXNjYXBlSFRNTCJdKShzdGFydCkrdGhpcy5nZW5IaWdobGlnaHQobWlkZGxlKStPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJlc2NhcGVIVE1MIl0pKGVuZCk7fSxnZW5IZWFkZXI6ZnVuY3Rpb24gZ2VuSGVhZGVyKHByb3BzKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVlN1YmhlYWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0se3Byb3BzOnByb3BzfSxwcm9wcy5oZWFkZXIpO30sZ2VuSGlnaGxpZ2h0OmZ1bmN0aW9uIGdlbkhpZ2hsaWdodCh0ZXh0KXtyZXR1cm4iPHNwYW4gY2xhc3M9XCJ2LWxpc3QtaXRlbV9fbWFza1wiPiIrT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZXNjYXBlSFRNTCJdKSh0ZXh0KSsiPC9zcGFuPiI7fSxnZW5MYWJlbGxlZEJ5OmZ1bmN0aW9uIGdlbkxhYmVsbGVkQnkoaXRlbSl7dmFyIHRleHQ9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZXNjYXBlSFRNTCJdKSh0aGlzLmdldFRleHQoaXRlbSkuc3BsaXQoJyAnKS5qb2luKCctJykudG9Mb3dlckNhc2UoKSk7cmV0dXJuIHRleHQrIi1saXN0LWl0ZW0tIit0aGlzLl91aWQ7fSxnZXRNYXNrZWRDaGFyYWN0ZXJzOmZ1bmN0aW9uIGdldE1hc2tlZENoYXJhY3RlcnModGV4dCl7dmFyIHNlYXJjaElucHV0PSh0aGlzLnNlYXJjaElucHV0fHwnJykudG9TdHJpbmcoKS50b0xvY2FsZUxvd2VyQ2FzZSgpO3ZhciBpbmRleD10ZXh0LnRvTG9jYWxlTG93ZXJDYXNlKCkuaW5kZXhPZihzZWFyY2hJbnB1dCk7aWYoaW5kZXg8MClyZXR1cm57c3RhcnQ6JycsbWlkZGxlOnRleHQsZW5kOicnfTt2YXIgc3RhcnQ9dGV4dC5zbGljZSgwLGluZGV4KTt2YXIgbWlkZGxlPXRleHQuc2xpY2UoaW5kZXgsaW5kZXgrc2VhcmNoSW5wdXQubGVuZ3RoKTt2YXIgZW5kPXRleHQuc2xpY2UoaW5kZXgrc2VhcmNoSW5wdXQubGVuZ3RoKTtyZXR1cm57c3RhcnQ6c3RhcnQsbWlkZGxlOm1pZGRsZSxlbmQ6ZW5kfTt9LGdlblRpbGU6ZnVuY3Rpb24gZ2VuVGlsZShpdGVtLGRpc2FibGVkLHZhbHVlKXt2YXIgX3RoaXM9dGhpcztpZihkaXNhYmxlZD09PXZvaWQgMCl7ZGlzYWJsZWQ9bnVsbDt9aWYodmFsdWU9PT12b2lkIDApe3ZhbHVlPWZhbHNlO31pZighdmFsdWUpdmFsdWU9dGhpcy5oYXNJdGVtKGl0ZW0pO2lmKGl0ZW09PT1PYmplY3QoaXRlbSkpe2Rpc2FibGVkPWRpc2FibGVkIT09bnVsbD9kaXNhYmxlZDp0aGlzLmdldERpc2FibGVkKGl0ZW0pO312YXIgdGlsZT17YXR0cnM6ey8vIERlZmF1bHQgYmVoYXZpb3IgaW4gbGlzdCBkb2VzIG5vdAovLyBjb250YWluIGFyaWEtc2VsZWN0ZWQgYnkgZGVmYXVsdAonYXJpYS1zZWxlY3RlZCc6U3RyaW5nKHZhbHVlKSwnYXJpYS1sYWJlbGxlZGJ5Jzp0aGlzLmdlbkxhYmVsbGVkQnkoaXRlbSkscm9sZTonb3B0aW9uJ30sb246e21vdXNlZG93bjpmdW5jdGlvbiBtb3VzZWRvd24oZSl7Ly8gUHJldmVudCBvbkJsdXIgZnJvbSBiZWluZyBjYWxsZWQKZS5wcmV2ZW50RGVmYXVsdCgpO30sY2xpY2s6ZnVuY3Rpb24gY2xpY2soKXtyZXR1cm4gZGlzYWJsZWR8fF90aGlzLiRlbWl0KCdzZWxlY3QnLGl0ZW0pO319LHByb3BzOnthY3RpdmVDbGFzczp0aGlzLnRpbGVBY3RpdmVDbGFzcyxkaXNhYmxlZDpkaXNhYmxlZCxyaXBwbGU6dHJ1ZSxpbnB1dFZhbHVlOnZhbHVlfX07aWYoIXRoaXMuJHNjb3BlZFNsb3RzLml0ZW0pe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WTGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJWTGlzdEl0ZW0iXSx0aWxlLFt0aGlzLmFjdGlvbiYmIXRoaXMuaGlkZVNlbGVjdGVkJiZ0aGlzLml0ZW1zLmxlbmd0aD4wP3RoaXMuZ2VuQWN0aW9uKGl0ZW0sdmFsdWUpOm51bGwsdGhpcy5nZW5UaWxlQ29udGVudChpdGVtKV0pO312YXIgcGFyZW50PXRoaXM7dmFyIHNjb3BlZFNsb3Q9dGhpcy4kc2NvcGVkU2xvdHMuaXRlbSh7cGFyZW50OnBhcmVudCxpdGVtOml0ZW0sYXR0cnM6X19hc3NpZ24oe30sdGlsZS5hdHRycyx0aWxlLnByb3BzKSxvbjp0aWxlLm9ufSk7cmV0dXJuIHRoaXMubmVlZHNUaWxlKHNjb3BlZFNsb3QpP3RoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZMaXN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bIlZMaXN0SXRlbSJdLHRpbGUsc2NvcGVkU2xvdCk6c2NvcGVkU2xvdDt9LGdlblRpbGVDb250ZW50OmZ1bmN0aW9uIGdlblRpbGVDb250ZW50KGl0ZW0pe3ZhciBpbm5lckhUTUw9dGhpcy5nZW5GaWx0ZXJlZFRleHQodGhpcy5nZXRUZXh0KGl0ZW0pKTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkxpc3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siVkxpc3RJdGVtQ29udGVudCJdLFt0aGlzLiRjcmVhdGVFbGVtZW50KF9WTGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJWTGlzdEl0ZW1UaXRsZSJdLHthdHRyczp7aWQ6dGhpcy5nZW5MYWJlbGxlZEJ5KGl0ZW0pfSxkb21Qcm9wczp7aW5uZXJIVE1MOmlubmVySFRNTH19KV0pO30saGFzSXRlbTpmdW5jdGlvbiBoYXNJdGVtKGl0ZW0pe3JldHVybiB0aGlzLnBhcnNlZEl0ZW1zLmluZGV4T2YodGhpcy5nZXRWYWx1ZShpdGVtKSk+LTE7fSxuZWVkc1RpbGU6ZnVuY3Rpb24gbmVlZHNUaWxlKHNsb3Qpe3JldHVybiBzbG90Lmxlbmd0aCE9PTF8fHNsb3RbMF0uY29tcG9uZW50T3B0aW9ucz09bnVsbHx8c2xvdFswXS5jb21wb25lbnRPcHRpb25zLkN0b3Iub3B0aW9ucy5uYW1lIT09J3YtbGlzdC1pdGVtJzt9LGdldERpc2FibGVkOmZ1bmN0aW9uIGdldERpc2FibGVkKGl0ZW0pe3JldHVybiBCb29sZWFuKE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImdldFByb3BlcnR5RnJvbUl0ZW0iXSkoaXRlbSx0aGlzLml0ZW1EaXNhYmxlZCxmYWxzZSkpO30sZ2V0VGV4dDpmdW5jdGlvbiBnZXRUZXh0KGl0ZW0pe3JldHVybiBTdHJpbmcoT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZ2V0UHJvcGVydHlGcm9tSXRlbSJdKShpdGVtLHRoaXMuaXRlbVRleHQsaXRlbSkpO30sZ2V0VmFsdWU6ZnVuY3Rpb24gZ2V0VmFsdWUoaXRlbSl7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImdldFByb3BlcnR5RnJvbUl0ZW0iXSkoaXRlbSx0aGlzLml0ZW1WYWx1ZSx0aGlzLmdldFRleHQoaXRlbSkpO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoKXt2YXIgZV8xLF9hO3ZhciBjaGlsZHJlbj1bXTt0cnl7Zm9yKHZhciBfYj1fX3ZhbHVlcyh0aGlzLml0ZW1zKSxfYz1fYi5uZXh0KCk7IV9jLmRvbmU7X2M9X2IubmV4dCgpKXt2YXIgaXRlbT1fYy52YWx1ZTtpZih0aGlzLmhpZGVTZWxlY3RlZCYmdGhpcy5oYXNJdGVtKGl0ZW0pKWNvbnRpbnVlO2lmKGl0ZW09PW51bGwpY2hpbGRyZW4ucHVzaCh0aGlzLmdlblRpbGUoaXRlbSkpO2Vsc2UgaWYoaXRlbS5oZWFkZXIpY2hpbGRyZW4ucHVzaCh0aGlzLmdlbkhlYWRlcihpdGVtKSk7ZWxzZSBpZihpdGVtLmRpdmlkZXIpY2hpbGRyZW4ucHVzaCh0aGlzLmdlbkRpdmlkZXIoaXRlbSkpO2Vsc2UgY2hpbGRyZW4ucHVzaCh0aGlzLmdlblRpbGUoaXRlbSkpO319Y2F0Y2goZV8xXzEpe2VfMT17ZXJyb3I6ZV8xXzF9O31maW5hbGx5e3RyeXtpZihfYyYmIV9jLmRvbmUmJihfYT1fYi5yZXR1cm4pKV9hLmNhbGwoX2IpO31maW5hbGx5e2lmKGVfMSl0aHJvdyBlXzEuZXJyb3I7fX1jaGlsZHJlbi5sZW5ndGh8fGNoaWxkcmVuLnB1c2godGhpcy4kc2xvdHNbJ25vLWRhdGEnXXx8dGhpcy5zdGF0aWNOb0RhdGFUaWxlKTt0aGlzLiRzbG90c1sncHJlcGVuZC1pdGVtJ10mJmNoaWxkcmVuLnVuc2hpZnQodGhpcy4kc2xvdHNbJ3ByZXBlbmQtaXRlbSddKTt0aGlzLiRzbG90c1snYXBwZW5kLWl0ZW0nXSYmY2hpbGRyZW4ucHVzaCh0aGlzLiRzbG90c1snYXBwZW5kLWl0ZW0nXSk7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXNlbGVjdC1saXN0IHYtY2FyZCcsY2xhc3M6dGhpcy50aGVtZUNsYXNzZXN9LFt0aGlzLiRjcmVhdGVFbGVtZW50KF9WTGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJWTGlzdCJdLHthdHRyczp7aWQ6dGhpcy4kYXR0cnMuaWQscm9sZTonbGlzdGJveCcsdGFiaW5kZXg6LTF9LHByb3BzOntkZW5zZTp0aGlzLmRlbnNlfX0sY2hpbGRyZW4pXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTZWxlY3QvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTZWxlY3QvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZTZWxlY3QsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNlbGVjdEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlNlbGVjdCAqLyIuL3NyYy9jb21wb25lbnRzL1ZTZWxlY3QvVlNlbGVjdC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTZWxlY3QiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU2VsZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WU2VsZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU2hlZXQvVlNoZWV0LnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlNoZWV0L1ZTaGVldC5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTaGVldFZTaGVldFNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTaGVldC9WU2hlZXQudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTaGVldC9WU2hlZXQudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNoZWV0VlNoZWV0VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNoZWV0X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTaGVldC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlNoZWV0L1ZTaGVldC5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTaGVldF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WU2hlZXRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2JpbmRzX2F0dHJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2JpbmRzLWF0dHJzICovIi4vc3JjL21peGlucy9iaW5kcy1hdHRycy9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2NvbG9yYWJsZSAqLyIuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19lbGV2YXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2VsZXZhdGFibGUgKi8iLi9zcmMvbWl4aW5zL2VsZXZhdGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX21lYXN1cmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvbWVhc3VyYWJsZSAqLyIuL3NyYy9taXhpbnMvbWVhc3VyYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBNaXhpbnMKLy8gSGVscGVycwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdKShfbWl4aW5zX2JpbmRzX2F0dHJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sX21peGluc19lbGV2YXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSxfbWl4aW5zX21lYXN1cmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOid2LXNoZWV0Jyxwcm9wczp7dGFnOnt0eXBlOlN0cmluZyxkZWZhdWx0OidkaXYnfSx0aWxlOkJvb2xlYW59LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LXNoZWV0Jzp0cnVlLCd2LXNoZWV0LS10aWxlJzp0aGlzLnRpbGV9LHRoaXMudGhlbWVDbGFzc2VzLHRoaXMuZWxldmF0aW9uQ2xhc3Nlcyk7fSxzdHlsZXM6ZnVuY3Rpb24gc3R5bGVzKCl7cmV0dXJuIHRoaXMubWVhc3VyYWJsZVN0eWxlczt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBkYXRhPXtjbGFzczp0aGlzLmNsYXNzZXMsc3R5bGU6dGhpcy5zdHlsZXMsb246dGhpcy5saXN0ZW5lcnMkfTtyZXR1cm4gaCh0aGlzLnRhZyx0aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbG9yLGRhdGEpLHRoaXMuJHNsb3RzLmRlZmF1bHQpO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU2hlZXQvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlNoZWV0L2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZTaGVldCwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWU2hlZXRJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlNoZWV0ICovIi4vc3JjL2NvbXBvbmVudHMvVlNoZWV0L1ZTaGVldC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTaGVldCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZTaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVlNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU2tlbGV0b25Mb2FkZXIvVlNrZWxldG9uTG9hZGVyLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlNrZWxldG9uTG9hZGVyL1ZTa2VsZXRvbkxvYWRlci5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTa2VsZXRvbkxvYWRlclZTa2VsZXRvbkxvYWRlclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTa2VsZXRvbkxvYWRlci9WU2tlbGV0b25Mb2FkZXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTa2VsZXRvbkxvYWRlci9WU2tlbGV0b25Mb2FkZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNrZWxldG9uTG9hZGVyVlNrZWxldG9uTG9hZGVyVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNrZWxldG9uTG9hZGVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTa2VsZXRvbkxvYWRlci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlNrZWxldG9uTG9hZGVyL1ZTa2VsZXRvbkxvYWRlci5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTa2VsZXRvbkxvYWRlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WU2tlbGV0b25Mb2FkZXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2VsZXZhdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvZWxldmF0YWJsZSAqLyIuL3NyYy9taXhpbnMvZWxldmF0YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfbWVhc3VyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9tZWFzdXJhYmxlICovIi4vc3JjL21peGlucy9tZWFzdXJhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTt2YXIgX19yZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fcmVhZHx8ZnVuY3Rpb24obyxuKXt2YXIgbT10eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb1tTeW1ib2wuaXRlcmF0b3JdO2lmKCFtKXJldHVybiBvO3ZhciBpPW0uY2FsbChvKSxyLGFyPVtdLGU7dHJ5e3doaWxlKChuPT09dm9pZCAwfHxuLS0+MCkmJiEocj1pLm5leHQoKSkuZG9uZSl7YXIucHVzaChyLnZhbHVlKTt9fWNhdGNoKGVycm9yKXtlPXtlcnJvcjplcnJvcn07fWZpbmFsbHl7dHJ5e2lmKHImJiFyLmRvbmUmJihtPWlbInJldHVybiJdKSltLmNhbGwoaSk7fWZpbmFsbHl7aWYoZSl0aHJvdyBlLmVycm9yO319cmV0dXJuIGFyO307Ly8gU3R5bGVzCi8vIE1peGlucwovLyBVdGlsaXRpZXMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSkoX21peGluc19lbGV2YXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxfbWl4aW5zX21lYXN1cmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOidWU2tlbGV0b25Mb2FkZXInLHByb3BzOntib2lsZXJwbGF0ZTpCb29sZWFuLGxvYWRpbmc6Qm9vbGVhbix0aWxlOkJvb2xlYW4sdHJhbnNpdGlvbjpTdHJpbmcsdHlwZTpTdHJpbmcsdHlwZXM6e3R5cGU6T2JqZWN0LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm57fTt9fX0sY29tcHV0ZWQ6e2F0dHJzOmZ1bmN0aW9uIGF0dHJzKCl7aWYoIXRoaXMuaXNMb2FkaW5nKXJldHVybiB0aGlzLiRhdHRycztyZXR1cm4hdGhpcy5ib2lsZXJwbGF0ZT9fX2Fzc2lnbih7J2FyaWEtYnVzeSc6dHJ1ZSwnYXJpYS1saXZlJzoncG9saXRlJyxyb2xlOidhbGVydCd9LHRoaXMuJGF0dHJzKTp7fTt9LGNsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7J3Ytc2tlbGV0b24tbG9hZGVyLS1ib2lsZXJwbGF0ZSc6dGhpcy5ib2lsZXJwbGF0ZSwndi1za2VsZXRvbi1sb2FkZXItLWlzLWxvYWRpbmcnOnRoaXMuaXNMb2FkaW5nLCd2LXNrZWxldG9uLWxvYWRlci0tdGlsZSc6dGhpcy50aWxlfSx0aGlzLnRoZW1lQ2xhc3Nlcyx0aGlzLmVsZXZhdGlvbkNsYXNzZXMpO30saXNMb2FkaW5nOmZ1bmN0aW9uIGlzTG9hZGluZygpe3JldHVybiBCb29sZWFuKCFPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJnZXRTbG90Il0pKHRoaXMpfHx0aGlzLmxvYWRpbmcpO30scm9vdFR5cGVzOmZ1bmN0aW9uIHJvb3RUeXBlcygpe3JldHVybiBfX2Fzc2lnbih7YWN0aW9uczonYnV0dG9uQDInLGFydGljbGU6J2hlYWRpbmcsIHBhcmFncmFwaCcsYXZhdGFyOidhdmF0YXInLGJ1dHRvbjonYnV0dG9uJyxjYXJkOidpbWFnZSwgY2FyZC1oZWFkaW5nJywnY2FyZC1hdmF0YXInOidpbWFnZSwgbGlzdC1pdGVtLWF2YXRhcicsJ2NhcmQtaGVhZGluZyc6J2hlYWRpbmcnLGNoaXA6J2NoaXAnLCdkYXRlLXBpY2tlcic6J2xpc3QtaXRlbSwgY2FyZC1oZWFkaW5nLCBkaXZpZGVyLCBkYXRlLXBpY2tlci1vcHRpb25zLCBkYXRlLXBpY2tlci1kYXlzLCBhY3Rpb25zJywnZGF0ZS1waWNrZXItb3B0aW9ucyc6J3RleHQsIGF2YXRhckAyJywnZGF0ZS1waWNrZXItZGF5cyc6J2F2YXRhckAyOCcsaGVhZGluZzonaGVhZGluZycsaW1hZ2U6J2ltYWdlJywnbGlzdC1pdGVtJzondGV4dCcsJ2xpc3QtaXRlbS1hdmF0YXInOidhdmF0YXIsIHRleHQnLCdsaXN0LWl0ZW0tdHdvLWxpbmUnOidzZW50ZW5jZXMnLCdsaXN0LWl0ZW0tYXZhdGFyLXR3by1saW5lJzonYXZhdGFyLCBzZW50ZW5jZXMnLCdsaXN0LWl0ZW0tdGhyZWUtbGluZSc6J3BhcmFncmFwaCcsJ2xpc3QtaXRlbS1hdmF0YXItdGhyZWUtbGluZSc6J2F2YXRhciwgcGFyYWdyYXBoJyxwYXJhZ3JhcGg6J3RleHRAMycsc2VudGVuY2VzOid0ZXh0QDInLHRhYmxlOid0YWJsZS1oZWFkaW5nLCB0YWJsZS10aGVhZCwgdGFibGUtdGJvZHksIHRhYmxlLXRmb290JywndGFibGUtaGVhZGluZyc6J2hlYWRpbmcsIHRleHQnLCd0YWJsZS10aGVhZCc6J2hlYWRpbmdANicsJ3RhYmxlLXRib2R5JzondGFibGUtcm93LWRpdmlkZXJANicsJ3RhYmxlLXJvdy1kaXZpZGVyJzondGFibGUtcm93LCBkaXZpZGVyJywndGFibGUtcm93JzondGFibGUtY2VsbEA2JywndGFibGUtY2VsbCc6J3RleHQnLCd0YWJsZS10Zm9vdCc6J3RleHRAMiwgYXZhdGFyQDInLHRleHQ6J3RleHQnfSx0aGlzLnR5cGVzKTt9fSxtZXRob2RzOntnZW5Cb25lOmZ1bmN0aW9uIGdlbkJvbmUodGV4dCxjaGlsZHJlbil7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOiJ2LXNrZWxldG9uLWxvYWRlcl9fIit0ZXh0KyIgdi1za2VsZXRvbi1sb2FkZXJfX2JvbmUifSxjaGlsZHJlbik7fSxnZW5Cb25lczpmdW5jdGlvbiBnZW5Cb25lcyhib25lKXt2YXIgX3RoaXM9dGhpczsvLyBlLmcuICd0ZXh0QDMnCnZhciBfYT1fX3JlYWQoYm9uZS5zcGxpdCgnQCcpLDIpLHR5cGU9X2FbMF0sbGVuZ3RoPV9hWzFdO3ZhciBnZW5lcmF0b3I9ZnVuY3Rpb24gZ2VuZXJhdG9yKCl7cmV0dXJuIF90aGlzLmdlblN0cnVjdHVyZSh0eXBlKTt9Oy8vIEdlbmVyYXRlIGEgbGVuZ3RoIGFycmF5IGJhc2VkIHVwb24KLy8gdmFsdWUgYWZ0ZXIgQCBpbiB0aGUgYm9uZSBzdHJpbmcKcmV0dXJuIEFycmF5LmZyb20oe2xlbmd0aDpsZW5ndGh9KS5tYXAoZ2VuZXJhdG9yKTt9LC8vIEZpeCB0eXBlIHdoZW4gdGhpcyBpcyBtZXJnZWQKLy8gaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9UeXBlU2NyaXB0L3B1bGwvMzMwNTAKZ2VuU3RydWN0dXJlOmZ1bmN0aW9uIGdlblN0cnVjdHVyZSh0eXBlKXt2YXIgY2hpbGRyZW49W107dHlwZT10eXBlfHx0aGlzLnR5cGV8fCcnO3ZhciBib25lPXRoaXMucm9vdFR5cGVzW3R5cGVdfHwnJzsvLyBFbmQgb2YgcmVjdXJzaW9uLCBkbyBub3RoaW5nCi8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eSwgYnJhY2Utc3R5bGUgKi9pZih0eXBlPT09Ym9uZSl7fS8vIEFycmF5IG9mIHZhbHVlcyAtIGUuZy4gJ2hlYWRpbmcsIHBhcmFncmFwaCwgdGV4dEAyJwplbHNlIGlmKHR5cGUuaW5kZXhPZignLCcpPi0xKXJldHVybiB0aGlzLm1hcEJvbmVzKHR5cGUpOy8vIEFycmF5IG9mIHZhbHVlcyAtIGUuZy4gJ3BhcmFncmFwaEA0JwplbHNlIGlmKHR5cGUuaW5kZXhPZignQCcpPi0xKXJldHVybiB0aGlzLmdlbkJvbmVzKHR5cGUpOy8vIEFycmF5IG9mIHZhbHVlcyAtIGUuZy4gJ2NhcmRAMicKZWxzZSBpZihib25lLmluZGV4T2YoJywnKT4tMSljaGlsZHJlbj10aGlzLm1hcEJvbmVzKGJvbmUpOy8vIEFycmF5IG9mIHZhbHVlcyAtIGUuZy4gJ2xpc3QtaXRlbUAyJwplbHNlIGlmKGJvbmUuaW5kZXhPZignQCcpPi0xKWNoaWxkcmVuPXRoaXMuZ2VuQm9uZXMoYm9uZSk7Ly8gU2luZ2xlIHZhbHVlIC0gZS5nLiAnY2FyZC1oZWFkaW5nJwplbHNlIGlmKGJvbmUpY2hpbGRyZW4ucHVzaCh0aGlzLmdlblN0cnVjdHVyZShib25lKSk7cmV0dXJuW3RoaXMuZ2VuQm9uZSh0eXBlLGNoaWxkcmVuKV07fSxnZW5Ta2VsZXRvbjpmdW5jdGlvbiBnZW5Ta2VsZXRvbigpe3ZhciBfdGhpcz10aGlzO3ZhciBjaGlsZHJlbj1bXTt2YXIgc2xvdD1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJnZXRTbG90Il0pKHRoaXMpO2lmKCF0aGlzLmlzTG9hZGluZyljaGlsZHJlbi5wdXNoKHNsb3QpO2Vsc2UgY2hpbGRyZW4ucHVzaCh0aGlzLmdlblN0cnVjdHVyZSgpKTsvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL2lmKCF0aGlzLnRyYW5zaXRpb24pcmV0dXJuIGNoaWxkcmVuOy8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RyYW5zaXRpb24nLHtwcm9wczp7bmFtZTp0aGlzLnRyYW5zaXRpb259LC8vIE9ubHkgc2hvdyB0cmFuc2l0aW9uIHdoZW4KLy8gY29udGVudCBoYXMgYmVlbiBsb2FkZWQKb246e2VudGVyOmZ1bmN0aW9uIGVudGVyKGVsKXtpZihfdGhpcy5pc0xvYWRpbmcpZWwuc3R5bGUudHJhbnNpdGlvbj0nbm9uZSc7fSxiZWZvcmVMZWF2ZTpmdW5jdGlvbiBiZWZvcmVMZWF2ZShlbCl7ZWwuc3R5bGUuZGlzcGxheT0nbm9uZSc7fX19LGNoaWxkcmVuKTt9LG1hcEJvbmVzOmZ1bmN0aW9uIG1hcEJvbmVzKGJvbmVzKXsvLyBSZW1vdmUgc3BhY2VzIGFuZCByZXR1cm4gYXJyYXkgb2Ygc3RydWN0dXJlcwpyZXR1cm4gYm9uZXMucmVwbGFjZSgvXHMvZywnJykuc3BsaXQoJywnKS5tYXAodGhpcy5nZW5TdHJ1Y3R1cmUpO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXNrZWxldG9uLWxvYWRlcicsYXR0cnM6dGhpcy5hdHRycyxvbjp0aGlzLiRsaXN0ZW5lcnMsY2xhc3M6dGhpcy5jbGFzc2VzLHN0eWxlOnRoaXMuaXNMb2FkaW5nP3RoaXMubWVhc3VyYWJsZVN0eWxlczp1bmRlZmluZWR9LFt0aGlzLmdlblNrZWxldG9uKCldKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlNrZWxldG9uTG9hZGVyL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTa2VsZXRvbkxvYWRlci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWU2tlbGV0b25Mb2FkZXIsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNrZWxldG9uTG9hZGVySW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2tlbGV0b25Mb2FkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTa2VsZXRvbkxvYWRlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZTa2VsZXRvbkxvYWRlci9WU2tlbGV0b25Mb2FkZXIudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWU2tlbGV0b25Mb2FkZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU2tlbGV0b25Mb2FkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZTa2VsZXRvbkxvYWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlNsaWRlR3JvdXAvVlNsaWRlR3JvdXAuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlNsaWRlR3JvdXAvVlNsaWRlR3JvdXAuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNsaWRlR3JvdXBWU2xpZGVHcm91cFNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTbGlkZUdyb3VwL1ZTbGlkZUdyb3VwLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlNsaWRlR3JvdXAvVlNsaWRlR3JvdXAudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBCYXNlU2xpZGVHcm91cCwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWU2xpZGVHcm91cFZTbGlkZUdyb3VwVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiQmFzZVNsaWRlR3JvdXAiLGZ1bmN0aW9uKCl7cmV0dXJuIEJhc2VTbGlkZUdyb3VwO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2xpZGVHcm91cF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU2xpZGVHcm91cC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlNsaWRlR3JvdXAvVlNsaWRlR3JvdXAuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2xpZGVHcm91cF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WU2xpZGVHcm91cF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJY29uICovIi4vc3JjL2NvbXBvbmVudHMvVkljb24vaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi90cmFuc2l0aW9ucyAqLyIuL3NyYy9jb21wb25lbnRzL3RyYW5zaXRpb25zL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJdGVtR3JvdXBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJdGVtR3JvdXAvVkl0ZW1Hcm91cCAqLyIuL3NyYy9jb21wb25lbnRzL1ZJdGVtR3JvdXAvVkl0ZW1Hcm91cC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX3Jlc2l6ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL2RpcmVjdGl2ZXMvcmVzaXplICovIi4vc3JjL2RpcmVjdGl2ZXMvcmVzaXplL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfdG91Y2hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9kaXJlY3RpdmVzL3RvdWNoICovIi4vc3JjL2RpcmVjdGl2ZXMvdG91Y2gvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gU3R5bGVzCi8vIENvbXBvbmVudHMKLy8gRXh0ZW5zaW9ucwovLyBEaXJlY3RpdmVzCi8vIFV0aWxpdGllcwp2YXIgQmFzZVNsaWRlR3JvdXA9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJkZWZhdWx0Il0pKF9WSXRlbUdyb3VwX1ZJdGVtR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siQmFzZUl0ZW1Hcm91cCJdLyogQHZ1ZS9jb21wb25lbnQgKi8pLmV4dGVuZCh7bmFtZTonYmFzZS1zbGlkZS1ncm91cCcsZGlyZWN0aXZlczp7UmVzaXplOl9kaXJlY3RpdmVzX3Jlc2l6ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sVG91Y2g6X2RpcmVjdGl2ZXNfdG91Y2hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdfSxwcm9wczp7YWN0aXZlQ2xhc3M6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J3Ytc2xpZGUtaXRlbS0tYWN0aXZlJ30sY2VudGVyQWN0aXZlOkJvb2xlYW4sbmV4dEljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRuZXh0J30sbW9iaWxlQnJlYWtQb2ludDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDoxMjY0LHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3Iodil7cmV0dXJuIWlzTmFOKHBhcnNlSW50KHYpKTt9fSxwcmV2SWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJHByZXYnfSxzaG93QXJyb3dzOkJvb2xlYW59LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntpbnRlcm5hbEl0ZW1zTGVuZ3RoOjAsaXNPdmVyZmxvd2luZzpmYWxzZSxyZXNpemVUaW1lb3V0OjAsc3RhcnRYOjAsc2Nyb2xsT2Zmc2V0OjAsd2lkdGhzOntjb250ZW50OjAsd3JhcHBlcjowfX07fSxjb21wdXRlZDp7X19jYWNoZWROZXh0OmZ1bmN0aW9uIF9fY2FjaGVkTmV4dCgpe3JldHVybiB0aGlzLmdlblRyYW5zaXRpb24oJ25leHQnKTt9LF9fY2FjaGVkUHJldjpmdW5jdGlvbiBfX2NhY2hlZFByZXYoKXtyZXR1cm4gdGhpcy5nZW5UcmFuc2l0aW9uKCdwcmV2Jyk7fSxjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oe30sX1ZJdGVtR3JvdXBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJCYXNlSXRlbUdyb3VwIl0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LXNsaWRlLWdyb3VwJzp0cnVlLCd2LXNsaWRlLWdyb3VwLS1oYXMtYWZmaXhlcyc6dGhpcy5oYXNBZmZpeGVzLCd2LXNsaWRlLWdyb3VwLS1pcy1vdmVyZmxvd2luZyc6dGhpcy5pc092ZXJmbG93aW5nfSk7fSxoYXNBZmZpeGVzOmZ1bmN0aW9uIGhhc0FmZml4ZXMoKXtyZXR1cm4odGhpcy5zaG93QXJyb3dzfHwhdGhpcy5pc01vYmlsZSkmJnRoaXMuaXNPdmVyZmxvd2luZzt9LGhhc05leHQ6ZnVuY3Rpb24gaGFzTmV4dCgpe2lmKCF0aGlzLmhhc0FmZml4ZXMpcmV0dXJuIGZhbHNlO3ZhciBfYT10aGlzLndpZHRocyxjb250ZW50PV9hLmNvbnRlbnQsd3JhcHBlcj1fYS53cmFwcGVyOy8vIENoZWNrIG9uZSBzY3JvbGwgYWhlYWQgdG8ga25vdyB0aGUgd2lkdGggb2YgcmlnaHQtbW9zdCBpdGVtCnJldHVybiBjb250ZW50Pk1hdGguYWJzKHRoaXMuc2Nyb2xsT2Zmc2V0KSt3cmFwcGVyO30saGFzUHJldjpmdW5jdGlvbiBoYXNQcmV2KCl7cmV0dXJuIHRoaXMuaGFzQWZmaXhlcyYmdGhpcy5zY3JvbGxPZmZzZXQhPT0wO30saXNNb2JpbGU6ZnVuY3Rpb24gaXNNb2JpbGUoKXtyZXR1cm4gdGhpcy4kdnVldGlmeS5icmVha3BvaW50LndpZHRoPHRoaXMubW9iaWxlQnJlYWtQb2ludDt9fSx3YXRjaDp7aW50ZXJuYWxWYWx1ZTonc2V0V2lkdGhzJywvLyBXaGVuIG92ZXJmbG93IGNoYW5nZXMsIHRoZSBhcnJvd3MgYWx0ZXIKLy8gdGhlIHdpZHRocyBvZiB0aGUgY29udGVudCBhbmQgd3JhcHBlcgovLyBhbmQgbmVlZCB0byBiZSByZWNhbGN1bGF0ZWQKaXNPdmVyZmxvd2luZzonc2V0V2lkdGhzJyxzY3JvbGxPZmZzZXQ6ZnVuY3Rpb24gc2Nyb2xsT2Zmc2V0KHZhbCl7dGhpcy4kcmVmcy5jb250ZW50LnN0eWxlLnRyYW5zZm9ybT0idHJhbnNsYXRlWCgiKy12YWwrInB4KSI7fX0sYmVmb3JlVXBkYXRlOmZ1bmN0aW9uIGJlZm9yZVVwZGF0ZSgpe3RoaXMuaW50ZXJuYWxJdGVtc0xlbmd0aD0odGhpcy4kY2hpbGRyZW58fFtdKS5sZW5ndGg7fSx1cGRhdGVkOmZ1bmN0aW9uIHVwZGF0ZWQoKXtpZih0aGlzLmludGVybmFsSXRlbXNMZW5ndGg9PT0odGhpcy4kY2hpbGRyZW58fFtdKS5sZW5ndGgpcmV0dXJuO3RoaXMuc2V0V2lkdGhzKCk7fSxtZXRob2RzOntnZW5OZXh0OmZ1bmN0aW9uIGdlbk5leHQoKXt2YXIgX3RoaXM9dGhpcztpZighdGhpcy5oYXNBZmZpeGVzKXJldHVybiBudWxsO3ZhciBzbG90PXRoaXMuJHNjb3BlZFNsb3RzLm5leHQ/dGhpcy4kc2NvcGVkU2xvdHMubmV4dCh7fSk6dGhpcy4kc2xvdHMubmV4dHx8dGhpcy5fX2NhY2hlZE5leHQ7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXNsaWRlLWdyb3VwX19uZXh0JyxjbGFzczp7J3Ytc2xpZGUtZ3JvdXBfX25leHQtLWRpc2FibGVkJzohdGhpcy5oYXNOZXh0fSxvbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soKXtyZXR1cm4gX3RoaXMub25BZmZpeENsaWNrKCduZXh0Jyk7fX0sa2V5OiduZXh0J30sW3Nsb3RdKTt9LGdlbkNvbnRlbnQ6ZnVuY3Rpb24gZ2VuQ29udGVudCgpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1zbGlkZS1ncm91cF9fY29udGVudCcscmVmOidjb250ZW50J30sdGhpcy4kc2xvdHMuZGVmYXVsdCk7fSxnZW5EYXRhOmZ1bmN0aW9uIGdlbkRhdGEoKXtyZXR1cm57Y2xhc3M6dGhpcy5jbGFzc2VzLGRpcmVjdGl2ZXM6W3tuYW1lOidyZXNpemUnLHZhbHVlOnRoaXMub25SZXNpemV9XX07fSxnZW5JY29uOmZ1bmN0aW9uIGdlbkljb24obG9jYXRpb24pe3ZhciBpY29uPWxvY2F0aW9uO2lmKHRoaXMuJHZ1ZXRpZnkucnRsJiZsb2NhdGlvbj09PSdwcmV2Jyl7aWNvbj0nbmV4dCc7fWVsc2UgaWYodGhpcy4kdnVldGlmeS5ydGwmJmxvY2F0aW9uPT09J25leHQnKXtpY29uPSdwcmV2Jzt9dmFyIHVwcGVyTG9jYXRpb249IiIrbG9jYXRpb25bMF0udG9VcHBlckNhc2UoKStsb2NhdGlvbi5zbGljZSgxKTt2YXIgaGFzQWZmaXg9dGhpc1siaGFzIit1cHBlckxvY2F0aW9uXTtpZighdGhpcy5zaG93QXJyb3dzJiYhaGFzQWZmaXgpcmV0dXJuIG51bGw7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSx7cHJvcHM6e2Rpc2FibGVkOiFoYXNBZmZpeH19LHRoaXNbaWNvbisiSWNvbiJdKTt9LC8vIEFsd2F5cyBnZW5lcmF0ZSBwcmV2IGZvciBzY3JvbGxhYmxlIGhpbnQKZ2VuUHJldjpmdW5jdGlvbiBnZW5QcmV2KCl7dmFyIF90aGlzPXRoaXM7dmFyIHNsb3Q9dGhpcy4kc2NvcGVkU2xvdHMucHJldj90aGlzLiRzY29wZWRTbG90cy5wcmV2KHt9KTp0aGlzLiRzbG90cy5wcmV2fHx0aGlzLl9fY2FjaGVkUHJldjtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3Ytc2xpZGUtZ3JvdXBfX3ByZXYnLGNsYXNzOnsndi1zbGlkZS1ncm91cF9fcHJldi0tZGlzYWJsZWQnOiF0aGlzLmhhc1ByZXZ9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygpe3JldHVybiBfdGhpcy5vbkFmZml4Q2xpY2soJ3ByZXYnKTt9fSxrZXk6J3ByZXYnfSxbc2xvdF0pO30sZ2VuVHJhbnNpdGlvbjpmdW5jdGlvbiBnZW5UcmFuc2l0aW9uKGxvY2F0aW9uKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siVkZhZGVUcmFuc2l0aW9uIl0sW3RoaXMuZ2VuSWNvbihsb2NhdGlvbildKTt9LGdlbldyYXBwZXI6ZnVuY3Rpb24gZ2VuV3JhcHBlcigpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi1zbGlkZS1ncm91cF9fd3JhcHBlcicsZGlyZWN0aXZlczpbe25hbWU6J3RvdWNoJyx2YWx1ZTp7c3RhcnQ6ZnVuY3Rpb24gc3RhcnQoZSl7cmV0dXJuIF90aGlzLm92ZXJmbG93Q2hlY2soZSxfdGhpcy5vblRvdWNoU3RhcnQpO30sbW92ZTpmdW5jdGlvbiBtb3ZlKGUpe3JldHVybiBfdGhpcy5vdmVyZmxvd0NoZWNrKGUsX3RoaXMub25Ub3VjaE1vdmUpO30sZW5kOmZ1bmN0aW9uIGVuZChlKXtyZXR1cm4gX3RoaXMub3ZlcmZsb3dDaGVjayhlLF90aGlzLm9uVG91Y2hFbmQpO319fV0scmVmOid3cmFwcGVyJ30sW3RoaXMuZ2VuQ29udGVudCgpXSk7fSxjYWxjdWxhdGVOZXdPZmZzZXQ6ZnVuY3Rpb24gY2FsY3VsYXRlTmV3T2Zmc2V0KGRpcmVjdGlvbix3aWR0aHMscnRsLGN1cnJlbnRTY3JvbGxPZmZzZXQpe3ZhciBzaWduPXJ0bD8tMToxO3ZhciBuZXdBYm9zbHV0ZU9mZnNldD1zaWduKmN1cnJlbnRTY3JvbGxPZmZzZXQrKGRpcmVjdGlvbj09PSdwcmV2Jz8tMToxKSp3aWR0aHMud3JhcHBlcjtyZXR1cm4gc2lnbipNYXRoLm1heChNYXRoLm1pbihuZXdBYm9zbHV0ZU9mZnNldCx3aWR0aHMuY29udGVudC13aWR0aHMud3JhcHBlciksMCk7fSxvbkFmZml4Q2xpY2s6ZnVuY3Rpb24gb25BZmZpeENsaWNrKGxvY2F0aW9uKXt0aGlzLiRlbWl0KCJjbGljazoiK2xvY2F0aW9uKTt0aGlzLnNjcm9sbFRvKGxvY2F0aW9uKTt9LG9uUmVzaXplOmZ1bmN0aW9uIG9uUmVzaXplKCl7LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9pZih0aGlzLl9pc0Rlc3Ryb3llZClyZXR1cm47dGhpcy5zZXRXaWR0aHMoKTt9LG9uVG91Y2hTdGFydDpmdW5jdGlvbiBvblRvdWNoU3RhcnQoZSl7dmFyIGNvbnRlbnQ9dGhpcy4kcmVmcy5jb250ZW50O3RoaXMuc3RhcnRYPXRoaXMuc2Nyb2xsT2Zmc2V0K2UudG91Y2hzdGFydFg7Y29udGVudC5zdHlsZS5zZXRQcm9wZXJ0eSgndHJhbnNpdGlvbicsJ25vbmUnKTtjb250ZW50LnN0eWxlLnNldFByb3BlcnR5KCd3aWxsQ2hhbmdlJywndHJhbnNmb3JtJyk7fSxvblRvdWNoTW92ZTpmdW5jdGlvbiBvblRvdWNoTW92ZShlKXt0aGlzLnNjcm9sbE9mZnNldD10aGlzLnN0YXJ0WC1lLnRvdWNobW92ZVg7fSxvblRvdWNoRW5kOmZ1bmN0aW9uIG9uVG91Y2hFbmQoKXt2YXIgX2E9dGhpcy4kcmVmcyxjb250ZW50PV9hLmNvbnRlbnQsd3JhcHBlcj1fYS53cmFwcGVyO3ZhciBtYXhTY3JvbGxPZmZzZXQ9Y29udGVudC5jbGllbnRXaWR0aC13cmFwcGVyLmNsaWVudFdpZHRoO2NvbnRlbnQuc3R5bGUuc2V0UHJvcGVydHkoJ3RyYW5zaXRpb24nLG51bGwpO2NvbnRlbnQuc3R5bGUuc2V0UHJvcGVydHkoJ3dpbGxDaGFuZ2UnLG51bGwpO2lmKHRoaXMuJHZ1ZXRpZnkucnRsKXsvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL2lmKHRoaXMuc2Nyb2xsT2Zmc2V0PjB8fCF0aGlzLmlzT3ZlcmZsb3dpbmcpe3RoaXMuc2Nyb2xsT2Zmc2V0PTA7fWVsc2UgaWYodGhpcy5zY3JvbGxPZmZzZXQ8PS1tYXhTY3JvbGxPZmZzZXQpe3RoaXMuc2Nyb2xsT2Zmc2V0PS1tYXhTY3JvbGxPZmZzZXQ7fX1lbHNley8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovaWYodGhpcy5zY3JvbGxPZmZzZXQ8MHx8IXRoaXMuaXNPdmVyZmxvd2luZyl7dGhpcy5zY3JvbGxPZmZzZXQ9MDt9ZWxzZSBpZih0aGlzLnNjcm9sbE9mZnNldD49bWF4U2Nyb2xsT2Zmc2V0KXt0aGlzLnNjcm9sbE9mZnNldD1tYXhTY3JvbGxPZmZzZXQ7fX19LG92ZXJmbG93Q2hlY2s6ZnVuY3Rpb24gb3ZlcmZsb3dDaGVjayhlLGZuKXtlLnN0b3BQcm9wYWdhdGlvbigpO3RoaXMuaXNPdmVyZmxvd2luZyYmZm4oZSk7fSxzY3JvbGxJbnRvVmlldy8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovOmZ1bmN0aW9uIHNjcm9sbEludG9WaWV3KCl7aWYoIXRoaXMuc2VsZWN0ZWRJdGVtKXtyZXR1cm47fWlmKHRoaXMuc2VsZWN0ZWRJbmRleD09PTB8fCF0aGlzLmNlbnRlckFjdGl2ZSYmIXRoaXMuaXNPdmVyZmxvd2luZyl7dGhpcy5zY3JvbGxPZmZzZXQ9MDt9ZWxzZSBpZih0aGlzLmNlbnRlckFjdGl2ZSl7dGhpcy5zY3JvbGxPZmZzZXQ9dGhpcy5jYWxjdWxhdGVDZW50ZXJlZE9mZnNldCh0aGlzLnNlbGVjdGVkSXRlbS4kZWwsdGhpcy53aWR0aHMsdGhpcy4kdnVldGlmeS5ydGwpO31lbHNlIGlmKHRoaXMuaXNPdmVyZmxvd2luZyl7dGhpcy5zY3JvbGxPZmZzZXQ9dGhpcy5jYWxjdWxhdGVVcGRhdGVkT2Zmc2V0KHRoaXMuc2VsZWN0ZWRJdGVtLiRlbCx0aGlzLndpZHRocyx0aGlzLiR2dWV0aWZ5LnJ0bCx0aGlzLnNjcm9sbE9mZnNldCk7fX0sY2FsY3VsYXRlVXBkYXRlZE9mZnNldDpmdW5jdGlvbiBjYWxjdWxhdGVVcGRhdGVkT2Zmc2V0KHNlbGVjdGVkRWxlbWVudCx3aWR0aHMscnRsLGN1cnJlbnRTY3JvbGxPZmZzZXQpe3ZhciBjbGllbnRXaWR0aD1zZWxlY3RlZEVsZW1lbnQuY2xpZW50V2lkdGg7dmFyIG9mZnNldExlZnQ9cnRsP3dpZHRocy5jb250ZW50LXNlbGVjdGVkRWxlbWVudC5vZmZzZXRMZWZ0LWNsaWVudFdpZHRoOnNlbGVjdGVkRWxlbWVudC5vZmZzZXRMZWZ0O2lmKHJ0bCl7Y3VycmVudFNjcm9sbE9mZnNldD0tY3VycmVudFNjcm9sbE9mZnNldDt9dmFyIHRvdGFsV2lkdGg9d2lkdGhzLndyYXBwZXIrY3VycmVudFNjcm9sbE9mZnNldDt2YXIgaXRlbU9mZnNldD1jbGllbnRXaWR0aCtvZmZzZXRMZWZ0O3ZhciBhZGRpdGlvbmFsT2Zmc2V0PWNsaWVudFdpZHRoKjAuNDtpZihvZmZzZXRMZWZ0PGN1cnJlbnRTY3JvbGxPZmZzZXQpe2N1cnJlbnRTY3JvbGxPZmZzZXQ9TWF0aC5tYXgob2Zmc2V0TGVmdC1hZGRpdGlvbmFsT2Zmc2V0LDApO31lbHNlIGlmKHRvdGFsV2lkdGg8aXRlbU9mZnNldCl7Y3VycmVudFNjcm9sbE9mZnNldD1NYXRoLm1pbihjdXJyZW50U2Nyb2xsT2Zmc2V0LSh0b3RhbFdpZHRoLWl0ZW1PZmZzZXQtYWRkaXRpb25hbE9mZnNldCksd2lkdGhzLmNvbnRlbnQtd2lkdGhzLndyYXBwZXIpO31yZXR1cm4gcnRsPy1jdXJyZW50U2Nyb2xsT2Zmc2V0OmN1cnJlbnRTY3JvbGxPZmZzZXQ7fSxjYWxjdWxhdGVDZW50ZXJlZE9mZnNldDpmdW5jdGlvbiBjYWxjdWxhdGVDZW50ZXJlZE9mZnNldChzZWxlY3RlZEVsZW1lbnQsd2lkdGhzLHJ0bCl7dmFyIG9mZnNldExlZnQ9c2VsZWN0ZWRFbGVtZW50Lm9mZnNldExlZnQsY2xpZW50V2lkdGg9c2VsZWN0ZWRFbGVtZW50LmNsaWVudFdpZHRoO2lmKHJ0bCl7dmFyIG9mZnNldENlbnRlcmVkPXdpZHRocy5jb250ZW50LW9mZnNldExlZnQtY2xpZW50V2lkdGgvMi13aWR0aHMud3JhcHBlci8yO3JldHVybi1NYXRoLm1pbih3aWR0aHMuY29udGVudC13aWR0aHMud3JhcHBlcixNYXRoLm1heCgwLG9mZnNldENlbnRlcmVkKSk7fWVsc2V7dmFyIG9mZnNldENlbnRlcmVkPW9mZnNldExlZnQrY2xpZW50V2lkdGgvMi13aWR0aHMud3JhcHBlci8yO3JldHVybiBNYXRoLm1pbih3aWR0aHMuY29udGVudC13aWR0aHMud3JhcHBlcixNYXRoLm1heCgwLG9mZnNldENlbnRlcmVkKSk7fX0sc2Nyb2xsVG8vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLzpmdW5jdGlvbiBzY3JvbGxUbyhsb2NhdGlvbil7dGhpcy5zY3JvbGxPZmZzZXQ9dGhpcy5jYWxjdWxhdGVOZXdPZmZzZXQobG9jYXRpb24sey8vIEZvcmNlIHJlZmxvdwpjb250ZW50OnRoaXMuJHJlZnMuY29udGVudD90aGlzLiRyZWZzLmNvbnRlbnQuY2xpZW50V2lkdGg6MCx3cmFwcGVyOnRoaXMuJHJlZnMud3JhcHBlcj90aGlzLiRyZWZzLndyYXBwZXIuY2xpZW50V2lkdGg6MH0sdGhpcy4kdnVldGlmeS5ydGwsdGhpcy5zY3JvbGxPZmZzZXQpO30sc2V0V2lkdGhzLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi86ZnVuY3Rpb24gc2V0V2lkdGhzKCl7dmFyIF90aGlzPXRoaXM7d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpe3ZhciBfYT1fdGhpcy4kcmVmcyxjb250ZW50PV9hLmNvbnRlbnQsd3JhcHBlcj1fYS53cmFwcGVyO190aGlzLndpZHRocz17Y29udGVudDpjb250ZW50P2NvbnRlbnQuY2xpZW50V2lkdGg6MCx3cmFwcGVyOndyYXBwZXI/d3JhcHBlci5jbGllbnRXaWR0aDowfTtfdGhpcy5pc092ZXJmbG93aW5nPV90aGlzLndpZHRocy53cmFwcGVyPF90aGlzLndpZHRocy5jb250ZW50O190aGlzLnNjcm9sbEludG9WaWV3KCk7fSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXtyZXR1cm4gaCgnZGl2Jyx0aGlzLmdlbkRhdGEoKSxbdGhpcy5nZW5QcmV2KCksdGhpcy5nZW5XcmFwcGVyKCksdGhpcy5nZW5OZXh0KCldKTt9fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1CYXNlU2xpZGVHcm91cC5leHRlbmQoe25hbWU6J3Ytc2xpZGUtZ3JvdXAnLHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybntzbGlkZUdyb3VwOnRoaXN9O319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU2xpZGVHcm91cC9WU2xpZGVJdGVtLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WU2xpZGVHcm91cC9WU2xpZGVJdGVtLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTbGlkZUdyb3VwVlNsaWRlSXRlbVRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJdGVtR3JvdXBfVkl0ZW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSXRlbUdyb3VwL1ZJdGVtICovIi4vc3JjL2NvbXBvbmVudHMvVkl0ZW1Hcm91cC9WSXRlbS50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfZ3JvdXBhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2dyb3VwYWJsZSAqLyIuL3NyYy9taXhpbnMvZ3JvdXBhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvLyBFeHRlbnNpb25zCi8vIE1peGlucwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKShfVkl0ZW1Hcm91cF9WSXRlbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJCYXNlSXRlbSJdLE9iamVjdChfbWl4aW5zX2dyb3VwYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJmYWN0b3J5Il0pKCdzbGlkZUdyb3VwJykvKiBAdnVlL2NvbXBvbmVudCAqLykuZXh0ZW5kKHtuYW1lOid2LXNsaWRlLWl0ZW0nfSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlNsaWRlR3JvdXAvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WU2xpZGVHcm91cC9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZTbGlkZUdyb3VwLCBWU2xpZGVJdGVtLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTbGlkZUdyb3VwSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2xpZGVHcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlNsaWRlR3JvdXAgKi8iLi9zcmMvY29tcG9uZW50cy9WU2xpZGVHcm91cC9WU2xpZGVHcm91cC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTbGlkZUdyb3VwIixmdW5jdGlvbigpe3JldHVybiBfVlNsaWRlR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2xpZGVJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU2xpZGVJdGVtICovIi4vc3JjL2NvbXBvbmVudHMvVlNsaWRlR3JvdXAvVlNsaWRlSXRlbS50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTbGlkZUl0ZW0iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU2xpZGVJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXskX3Z1ZXRpZnlfc3ViY29tcG9uZW50czp7VlNsaWRlR3JvdXA6X1ZTbGlkZUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSxWU2xpZGVJdGVtOl9WU2xpZGVJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXX19Oy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTbGlkZXIvVlNsaWRlci5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlNsaWRlci9WU2xpZGVyLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWU2xpZGVyVlNsaWRlclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTbGlkZXIvVlNsaWRlci50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WU2xpZGVyL1ZTbGlkZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWU2xpZGVyVlNsaWRlclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTbGlkZXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlNsaWRlci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlNsaWRlci9WU2xpZGVyLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNsaWRlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WU2xpZGVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJbnB1dCAqLyIuL3NyYy9jb21wb25lbnRzL1ZJbnB1dC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF90cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3RyYW5zaXRpb25zICovIi4vc3JjL2NvbXBvbmVudHMvdHJhbnNpdGlvbnMvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfbG9hZGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvbG9hZGFibGUgKi8iLi9zcmMvbWl4aW5zL2xvYWRhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfY2xpY2tfb3V0c2lkZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL2RpcmVjdGl2ZXMvY2xpY2stb3V0c2lkZSAqLyIuL3NyYy9kaXJlY3RpdmVzL2NsaWNrLW91dHNpZGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBDb21wb25lbnRzCi8vIE1peGlucwovLyBEaXJlY3RpdmVzCi8vIEhlbHBlcnMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sX21peGluc19sb2FkYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0vKiBAdnVlL2NvbXBvbmVudCAqLykuZXh0ZW5kKHtuYW1lOid2LXNsaWRlcicsZGlyZWN0aXZlczp7Q2xpY2tPdXRzaWRlOl9kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdfSxtaXhpbnM6W19taXhpbnNfbG9hZGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdXSxwcm9wczp7ZGlzYWJsZWQ6Qm9vbGVhbixpbnZlcnNlTGFiZWw6Qm9vbGVhbixtYXg6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MTAwfSxtaW46e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MH0sc3RlcDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDoxfSx0aHVtYkNvbG9yOlN0cmluZyx0aHVtYkxhYmVsOnt0eXBlOltCb29sZWFuLFN0cmluZ10sZGVmYXVsdDpudWxsLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3Iodil7cmV0dXJuIHR5cGVvZiB2PT09J2Jvb2xlYW4nfHx2PT09J2Fsd2F5cyc7fX0sdGh1bWJTaXplOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjMyfSx0aWNrTGFiZWxzOnt0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bXTt9fSx0aWNrczp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6ZmFsc2UsdmFsaWRhdG9yOmZ1bmN0aW9uIHZhbGlkYXRvcih2KXtyZXR1cm4gdHlwZW9mIHY9PT0nYm9vbGVhbid8fHY9PT0nYWx3YXlzJzt9fSx0aWNrU2l6ZTp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDoyfSx0cmFja0NvbG9yOlN0cmluZyx0cmFja0ZpbGxDb2xvcjpTdHJpbmcsdmFsdWU6W051bWJlcixTdHJpbmddLHZlcnRpY2FsOkJvb2xlYW59LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnthcHA6bnVsbCxvbGRWYWx1ZTpudWxsLGtleVByZXNzZWQ6MCxpc0ZvY3VzZWQ6ZmFsc2UsaXNBY3RpdmU6ZmFsc2UsbGF6eVZhbHVlOjAsbm9DbGljazpmYWxzZX07fSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJuIF9fYXNzaWduKHt9LF9WSW5wdXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMuY29tcHV0ZWQuY2xhc3Nlcy5jYWxsKHRoaXMpLHsndi1pbnB1dF9fc2xpZGVyJzp0cnVlLCd2LWlucHV0X19zbGlkZXItLXZlcnRpY2FsJzp0aGlzLnZlcnRpY2FsLCd2LWlucHV0X19zbGlkZXItLWludmVyc2UtbGFiZWwnOnRoaXMuaW52ZXJzZUxhYmVsfSk7fSxpbnRlcm5hbFZhbHVlOntnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIHRoaXMubGF6eVZhbHVlO30sc2V0OmZ1bmN0aW9uIHNldCh2YWwpe3ZhbD1pc05hTih2YWwpP3RoaXMubWluVmFsdWU6dmFsOy8vIFJvdW5kIHZhbHVlIHRvIGVuc3VyZSB0aGUKLy8gZW50aXJlIHNsaWRlciByYW5nZSBjYW4KLy8gYmUgc2VsZWN0ZWQgd2l0aCBzdGVwCnZhciB2YWx1ZT10aGlzLnJvdW5kVmFsdWUoTWF0aC5taW4oTWF0aC5tYXgodmFsLHRoaXMubWluVmFsdWUpLHRoaXMubWF4VmFsdWUpKTtpZih2YWx1ZT09PXRoaXMubGF6eVZhbHVlKXJldHVybjt0aGlzLmxhenlWYWx1ZT12YWx1ZTt0aGlzLiRlbWl0KCdpbnB1dCcsdmFsdWUpO319LHRyYWNrVHJhbnNpdGlvbjpmdW5jdGlvbiB0cmFja1RyYW5zaXRpb24oKXtyZXR1cm4gdGhpcy5rZXlQcmVzc2VkPj0yPydub25lJzonJzt9LG1pblZhbHVlOmZ1bmN0aW9uIG1pblZhbHVlKCl7cmV0dXJuIHBhcnNlRmxvYXQodGhpcy5taW4pO30sbWF4VmFsdWU6ZnVuY3Rpb24gbWF4VmFsdWUoKXtyZXR1cm4gcGFyc2VGbG9hdCh0aGlzLm1heCk7fSxzdGVwTnVtZXJpYzpmdW5jdGlvbiBzdGVwTnVtZXJpYygpe3JldHVybiB0aGlzLnN0ZXA+MD9wYXJzZUZsb2F0KHRoaXMuc3RlcCk6MDt9LGlucHV0V2lkdGg6ZnVuY3Rpb24gaW5wdXRXaWR0aCgpe3ZhciB2YWx1ZT0odGhpcy5yb3VuZFZhbHVlKHRoaXMuaW50ZXJuYWxWYWx1ZSktdGhpcy5taW5WYWx1ZSkvKHRoaXMubWF4VmFsdWUtdGhpcy5taW5WYWx1ZSkqMTAwO3JldHVybiB2YWx1ZTt9LHRyYWNrRmlsbFN0eWxlczpmdW5jdGlvbiB0cmFja0ZpbGxTdHlsZXMoKXt2YXIgX2E7dmFyIHN0YXJ0RGlyPXRoaXMudmVydGljYWw/J2JvdHRvbSc6J2xlZnQnO3ZhciBlbmREaXI9dGhpcy52ZXJ0aWNhbD8ndG9wJzoncmlnaHQnO3ZhciB2YWx1ZURpcj10aGlzLnZlcnRpY2FsPydoZWlnaHQnOid3aWR0aCc7dmFyIHN0YXJ0PXRoaXMuJHZ1ZXRpZnkucnRsPydhdXRvJzonMCc7dmFyIGVuZD10aGlzLiR2dWV0aWZ5LnJ0bD8nMCc6J2F1dG8nO3ZhciB2YWx1ZT10aGlzLmRpc2FibGVkPyJjYWxjKCIrdGhpcy5pbnB1dFdpZHRoKyIlIC0gMTBweCkiOnRoaXMuaW5wdXRXaWR0aCsiJSI7cmV0dXJuIF9hPXt0cmFuc2l0aW9uOnRoaXMudHJhY2tUcmFuc2l0aW9ufSxfYVtzdGFydERpcl09c3RhcnQsX2FbZW5kRGlyXT1lbmQsX2FbdmFsdWVEaXJdPXZhbHVlLF9hO30sdHJhY2tTdHlsZXM6ZnVuY3Rpb24gdHJhY2tTdHlsZXMoKXt2YXIgX2E7dmFyIHN0YXJ0RGlyPXRoaXMudmVydGljYWw/dGhpcy4kdnVldGlmeS5ydGw/J2JvdHRvbSc6J3RvcCc6dGhpcy4kdnVldGlmeS5ydGw/J2xlZnQnOidyaWdodCc7dmFyIGVuZERpcj10aGlzLnZlcnRpY2FsPydoZWlnaHQnOid3aWR0aCc7dmFyIHN0YXJ0PScwcHgnO3ZhciBlbmQ9dGhpcy5kaXNhYmxlZD8iY2FsYygiKygxMDAtdGhpcy5pbnB1dFdpZHRoKSsiJSAtIDEwcHgpIjoiY2FsYygiKygxMDAtdGhpcy5pbnB1dFdpZHRoKSsiJSkiO3JldHVybiBfYT17dHJhbnNpdGlvbjp0aGlzLnRyYWNrVHJhbnNpdGlvbn0sX2Fbc3RhcnREaXJdPXN0YXJ0LF9hW2VuZERpcl09ZW5kLF9hO30sc2hvd1RpY2tzOmZ1bmN0aW9uIHNob3dUaWNrcygpe3JldHVybiB0aGlzLnRpY2tMYWJlbHMubGVuZ3RoPjB8fCEhKCF0aGlzLmRpc2FibGVkJiZ0aGlzLnN0ZXBOdW1lcmljJiZ0aGlzLnRpY2tzKTt9LG51bVRpY2tzOmZ1bmN0aW9uIG51bVRpY2tzKCl7cmV0dXJuIE1hdGguY2VpbCgodGhpcy5tYXhWYWx1ZS10aGlzLm1pblZhbHVlKS90aGlzLnN0ZXBOdW1lcmljKTt9LHNob3dUaHVtYkxhYmVsOmZ1bmN0aW9uIHNob3dUaHVtYkxhYmVsKCl7cmV0dXJuIXRoaXMuZGlzYWJsZWQmJiEhKHRoaXMudGh1bWJMYWJlbHx8dGhpcy4kc2NvcGVkU2xvdHNbJ3RodW1iLWxhYmVsJ10pO30sY29tcHV0ZWRUcmFja0NvbG9yOmZ1bmN0aW9uIGNvbXB1dGVkVHJhY2tDb2xvcigpe2lmKHRoaXMuZGlzYWJsZWQpcmV0dXJuIHVuZGVmaW5lZDtpZih0aGlzLnRyYWNrQ29sb3IpcmV0dXJuIHRoaXMudHJhY2tDb2xvcjtpZih0aGlzLmlzRGFyaylyZXR1cm4gdGhpcy52YWxpZGF0aW9uU3RhdGU7cmV0dXJuIHRoaXMudmFsaWRhdGlvblN0YXRlfHwncHJpbWFyeSBsaWdodGVuLTMnO30sY29tcHV0ZWRUcmFja0ZpbGxDb2xvcjpmdW5jdGlvbiBjb21wdXRlZFRyYWNrRmlsbENvbG9yKCl7aWYodGhpcy5kaXNhYmxlZClyZXR1cm4gdW5kZWZpbmVkO2lmKHRoaXMudHJhY2tGaWxsQ29sb3IpcmV0dXJuIHRoaXMudHJhY2tGaWxsQ29sb3I7cmV0dXJuIHRoaXMudmFsaWRhdGlvblN0YXRlfHx0aGlzLmNvbXB1dGVkQ29sb3I7fSxjb21wdXRlZFRodW1iQ29sb3I6ZnVuY3Rpb24gY29tcHV0ZWRUaHVtYkNvbG9yKCl7aWYodGhpcy50aHVtYkNvbG9yKXJldHVybiB0aGlzLnRodW1iQ29sb3I7cmV0dXJuIHRoaXMudmFsaWRhdGlvblN0YXRlfHx0aGlzLmNvbXB1dGVkQ29sb3I7fX0sd2F0Y2g6e21pbjpmdW5jdGlvbiBtaW4odmFsKXt2YXIgcGFyc2VkPXBhcnNlRmxvYXQodmFsKTtwYXJzZWQ+dGhpcy5pbnRlcm5hbFZhbHVlJiZ0aGlzLiRlbWl0KCdpbnB1dCcscGFyc2VkKTt9LG1heDpmdW5jdGlvbiBtYXgodmFsKXt2YXIgcGFyc2VkPXBhcnNlRmxvYXQodmFsKTtwYXJzZWQ8dGhpcy5pbnRlcm5hbFZhbHVlJiZ0aGlzLiRlbWl0KCdpbnB1dCcscGFyc2VkKTt9LHZhbHVlOntoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIodil7dGhpcy5pbnRlcm5hbFZhbHVlPXY7fX19LC8vIElmIGRvbmUgaW4gYXMgaW1tZWRpYXRlIGluCi8vIHZhbHVlIHdhdGNoZXIsIGNhdXNlcyBpc3N1ZXMKLy8gd2l0aCB2dWUtdGVzdC11dGlscwpiZWZvcmVNb3VudDpmdW5jdGlvbiBiZWZvcmVNb3VudCgpe3RoaXMuaW50ZXJuYWxWYWx1ZT10aGlzLnZhbHVlO30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7Ly8gV2l0aG91dCBhIHYtYXBwLCBpT1MgZG9lcyBub3Qgd29yayB3aXRoIGJvZHkgc2VsZWN0b3JzCnRoaXMuYXBwPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWFwcF0nKXx8T2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siY29uc29sZVdhcm4iXSkoJ01pc3Npbmcgdi1hcHAgb3IgYSBub24tYm9keSB3cmFwcGluZyBlbGVtZW50IHdpdGggdGhlIFtkYXRhLWFwcF0gYXR0cmlidXRlJyx0aGlzKTt9LG1ldGhvZHM6e2dlbkRlZmF1bHRTbG90OmZ1bmN0aW9uIGdlbkRlZmF1bHRTbG90KCl7dmFyIGNoaWxkcmVuPVt0aGlzLmdlbkxhYmVsKCldO3ZhciBzbGlkZXI9dGhpcy5nZW5TbGlkZXIoKTt0aGlzLmludmVyc2VMYWJlbD9jaGlsZHJlbi51bnNoaWZ0KHNsaWRlcik6Y2hpbGRyZW4ucHVzaChzbGlkZXIpO2NoaWxkcmVuLnB1c2godGhpcy5nZW5Qcm9ncmVzcygpKTtyZXR1cm4gY2hpbGRyZW47fSxnZW5TbGlkZXI6ZnVuY3Rpb24gZ2VuU2xpZGVyKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse2NsYXNzOl9fYXNzaWduKHsndi1zbGlkZXInOnRydWUsJ3Ytc2xpZGVyLS1ob3Jpem9udGFsJzohdGhpcy52ZXJ0aWNhbCwndi1zbGlkZXItLXZlcnRpY2FsJzp0aGlzLnZlcnRpY2FsLCd2LXNsaWRlci0tZm9jdXNlZCc6dGhpcy5pc0ZvY3VzZWQsJ3Ytc2xpZGVyLS1hY3RpdmUnOnRoaXMuaXNBY3RpdmUsJ3Ytc2xpZGVyLS1kaXNhYmxlZCc6dGhpcy5kaXNhYmxlZCwndi1zbGlkZXItLXJlYWRvbmx5Jzp0aGlzLnJlYWRvbmx5fSx0aGlzLnRoZW1lQ2xhc3NlcyksZGlyZWN0aXZlczpbe25hbWU6J2NsaWNrLW91dHNpZGUnLHZhbHVlOnRoaXMub25CbHVyfV0sb246e2NsaWNrOnRoaXMub25TbGlkZXJDbGlja319LHRoaXMuZ2VuQ2hpbGRyZW4oKSk7fSxnZW5DaGlsZHJlbjpmdW5jdGlvbiBnZW5DaGlsZHJlbigpe3JldHVyblt0aGlzLmdlbklucHV0KCksdGhpcy5nZW5UcmFja0NvbnRhaW5lcigpLHRoaXMuZ2VuU3RlcHMoKSx0aGlzLmdlblRodW1iQ29udGFpbmVyKHRoaXMuaW50ZXJuYWxWYWx1ZSx0aGlzLmlucHV0V2lkdGgsdGhpcy5pc0FjdGl2ZSx0aGlzLmlzRm9jdXNlZCx0aGlzLm9uVGh1bWJNb3VzZURvd24sdGhpcy5vbkZvY3VzLHRoaXMub25CbHVyKV07fSxnZW5JbnB1dDpmdW5jdGlvbiBnZW5JbnB1dCgpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdpbnB1dCcse2F0dHJzOl9fYXNzaWduKHt2YWx1ZTp0aGlzLmludGVybmFsVmFsdWUsaWQ6dGhpcy5jb21wdXRlZElkLGRpc2FibGVkOnRoaXMuZGlzYWJsZWQscmVhZG9ubHk6dHJ1ZSx0YWJpbmRleDotMX0sdGhpcy4kYXR0cnMpfSk7fSxnZW5UcmFja0NvbnRhaW5lcjpmdW5jdGlvbiBnZW5UcmFja0NvbnRhaW5lcigpe3ZhciBjaGlsZHJlbj1bdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx0aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbXB1dGVkVHJhY2tDb2xvcix7c3RhdGljQ2xhc3M6J3Ytc2xpZGVyX190cmFjay1iYWNrZ3JvdW5kJyxzdHlsZTp0aGlzLnRyYWNrU3R5bGVzfSkpLHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IodGhpcy5jb21wdXRlZFRyYWNrRmlsbENvbG9yLHtzdGF0aWNDbGFzczondi1zbGlkZXJfX3RyYWNrLWZpbGwnLHN0eWxlOnRoaXMudHJhY2tGaWxsU3R5bGVzfSkpXTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3Ytc2xpZGVyX190cmFjay1jb250YWluZXInLHJlZjondHJhY2snfSxjaGlsZHJlbik7fSxnZW5TdGVwczpmdW5jdGlvbiBnZW5TdGVwcygpe3ZhciBfdGhpcz10aGlzO2lmKCF0aGlzLnN0ZXB8fCF0aGlzLnNob3dUaWNrcylyZXR1cm4gbnVsbDt2YXIgdGlja1NpemU9cGFyc2VGbG9hdCh0aGlzLnRpY2tTaXplKTt2YXIgcmFuZ2U9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siY3JlYXRlUmFuZ2UiXSkodGhpcy5udW1UaWNrcysxKTt2YXIgZGlyZWN0aW9uPXRoaXMudmVydGljYWw/J2JvdHRvbSc6J2xlZnQnO3ZhciBvZmZzZXREaXJlY3Rpb249dGhpcy52ZXJ0aWNhbD8ncmlnaHQnOid0b3AnO2lmKHRoaXMudmVydGljYWwpcmFuZ2UucmV2ZXJzZSgpO3ZhciB0aWNrcz1yYW5nZS5tYXAoZnVuY3Rpb24oaSl7dmFyIF9hO3ZhciBpbmRleD1fdGhpcy4kdnVldGlmeS5ydGw/X3RoaXMubWF4VmFsdWUtaTppO3ZhciBjaGlsZHJlbj1bXTtpZihfdGhpcy50aWNrTGFiZWxzW2luZGV4XSl7Y2hpbGRyZW4ucHVzaChfdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3Ytc2xpZGVyX190aWNrLWxhYmVsJ30sX3RoaXMudGlja0xhYmVsc1tpbmRleF0pKTt9dmFyIHdpZHRoPWkqKDEwMC9fdGhpcy5udW1UaWNrcyk7dmFyIGZpbGxlZD1fdGhpcy4kdnVldGlmeS5ydGw/MTAwLV90aGlzLmlucHV0V2lkdGg8d2lkdGg6d2lkdGg8X3RoaXMuaW5wdXRXaWR0aDtyZXR1cm4gX3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLHtrZXk6aSxzdGF0aWNDbGFzczondi1zbGlkZXJfX3RpY2snLGNsYXNzOnsndi1zbGlkZXJfX3RpY2stLWZpbGxlZCc6ZmlsbGVkfSxzdHlsZTooX2E9e3dpZHRoOnRpY2tTaXplKyJweCIsaGVpZ2h0OnRpY2tTaXplKyJweCJ9LF9hW2RpcmVjdGlvbl09ImNhbGMoIit3aWR0aCsiJSAtICIrdGlja1NpemUvMisicHgpIixfYVtvZmZzZXREaXJlY3Rpb25dPSJjYWxjKDUwJSAtICIrdGlja1NpemUvMisicHgpIixfYSl9LGNoaWxkcmVuKTt9KTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3Ytc2xpZGVyX190aWNrcy1jb250YWluZXInLGNsYXNzOnsndi1zbGlkZXJfX3RpY2tzLWNvbnRhaW5lci0tYWx3YXlzLXNob3cnOnRoaXMudGlja3M9PT0nYWx3YXlzJ3x8dGhpcy50aWNrTGFiZWxzLmxlbmd0aD4wfX0sdGlja3MpO30sZ2VuVGh1bWJDb250YWluZXI6ZnVuY3Rpb24gZ2VuVGh1bWJDb250YWluZXIodmFsdWUsdmFsdWVXaWR0aCxpc0FjdGl2ZSxpc0ZvY3VzZWQsb25EcmFnLG9uRm9jdXMsb25CbHVyLHJlZil7aWYocmVmPT09dm9pZCAwKXtyZWY9J3RodW1iJzt9dmFyIGNoaWxkcmVuPVt0aGlzLmdlblRodW1iKCldO3ZhciB0aHVtYkxhYmVsQ29udGVudD10aGlzLmdlblRodW1iTGFiZWxDb250ZW50KHZhbHVlKTt0aGlzLnNob3dUaHVtYkxhYmVsJiZjaGlsZHJlbi5wdXNoKHRoaXMuZ2VuVGh1bWJMYWJlbCh0aHVtYkxhYmVsQ29udGVudCkpO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHRoaXMuc2V0VGV4dENvbG9yKHRoaXMuY29tcHV0ZWRUaHVtYkNvbG9yLHtyZWY6cmVmLHN0YXRpY0NsYXNzOid2LXNsaWRlcl9fdGh1bWItY29udGFpbmVyJyxjbGFzczp7J3Ytc2xpZGVyX190aHVtYi1jb250YWluZXItLWFjdGl2ZSc6aXNBY3RpdmUsJ3Ytc2xpZGVyX190aHVtYi1jb250YWluZXItLWZvY3VzZWQnOmlzRm9jdXNlZCwndi1zbGlkZXJfX3RodW1iLWNvbnRhaW5lci0tc2hvdy1sYWJlbCc6dGhpcy5zaG93VGh1bWJMYWJlbH0sc3R5bGU6dGhpcy5nZXRUaHVtYkNvbnRhaW5lclN0eWxlcyh2YWx1ZVdpZHRoKSxhdHRyczpfX2Fzc2lnbih7cm9sZTonc2xpZGVyJyx0YWJpbmRleDp0aGlzLmRpc2FibGVkfHx0aGlzLnJlYWRvbmx5Py0xOnRoaXMuJGF0dHJzLnRhYmluZGV4P3RoaXMuJGF0dHJzLnRhYmluZGV4OjAsJ2FyaWEtbGFiZWwnOnRoaXMubGFiZWwsJ2FyaWEtdmFsdWVtaW4nOnRoaXMubWluLCdhcmlhLXZhbHVlbWF4Jzp0aGlzLm1heCwnYXJpYS12YWx1ZW5vdyc6dGhpcy5pbnRlcm5hbFZhbHVlLCdhcmlhLXJlYWRvbmx5JzpTdHJpbmcodGhpcy5yZWFkb25seSksJ2FyaWEtb3JpZW50YXRpb24nOnRoaXMudmVydGljYWw/J3ZlcnRpY2FsJzonaG9yaXpvbnRhbCd9LHRoaXMuJGF0dHJzKSxvbjp7Zm9jdXM6b25Gb2N1cyxibHVyOm9uQmx1cixrZXlkb3duOnRoaXMub25LZXlEb3duLGtleXVwOnRoaXMub25LZXlVcCx0b3VjaHN0YXJ0Om9uRHJhZyxtb3VzZWRvd246b25EcmFnfX0pLGNoaWxkcmVuKTt9LGdlblRodW1iTGFiZWxDb250ZW50OmZ1bmN0aW9uIGdlblRodW1iTGFiZWxDb250ZW50KHZhbHVlKXtyZXR1cm4gdGhpcy4kc2NvcGVkU2xvdHNbJ3RodW1iLWxhYmVsJ10/dGhpcy4kc2NvcGVkU2xvdHNbJ3RodW1iLWxhYmVsJ10oe3ZhbHVlOnZhbHVlfSk6W3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLFtTdHJpbmcodmFsdWUpXSldO30sZ2VuVGh1bWJMYWJlbDpmdW5jdGlvbiBnZW5UaHVtYkxhYmVsKGNvbnRlbnQpe3ZhciBzaXplPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy50aHVtYlNpemUpO3ZhciB0cmFuc2Zvcm09dGhpcy52ZXJ0aWNhbD8idHJhbnNsYXRlWSgyMCUpIHRyYW5zbGF0ZVkoIisoTnVtYmVyKHRoaXMudGh1bWJTaXplKS8zLTEpKyJweCkgdHJhbnNsYXRlWCg1NSUpIHJvdGF0ZSgxMzVkZWcpIjoidHJhbnNsYXRlWSgtMjAlKSB0cmFuc2xhdGVZKC0xMnB4KSB0cmFuc2xhdGVYKC01MCUpIHJvdGF0ZSg0NWRlZykiO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF90cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJWU2NhbGVUcmFuc2l0aW9uIl0se3Byb3BzOntvcmlnaW46J2JvdHRvbSBjZW50ZXInfX0sW3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXNsaWRlcl9fdGh1bWItbGFiZWwtY29udGFpbmVyJyxkaXJlY3RpdmVzOlt7bmFtZTonc2hvdycsdmFsdWU6dGhpcy5pc0ZvY3VzZWR8fHRoaXMuaXNBY3RpdmV8fHRoaXMudGh1bWJMYWJlbD09PSdhbHdheXMnfV19LFt0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHRoaXMuc2V0QmFja2dyb3VuZENvbG9yKHRoaXMuY29tcHV0ZWRUaHVtYkNvbG9yLHtzdGF0aWNDbGFzczondi1zbGlkZXJfX3RodW1iLWxhYmVsJyxzdHlsZTp7aGVpZ2h0OnNpemUsd2lkdGg6c2l6ZSx0cmFuc2Zvcm06dHJhbnNmb3JtfX0pLFt0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLGNvbnRlbnQpXSldKV0pO30sZ2VuVGh1bWI6ZnVuY3Rpb24gZ2VuVGh1bWIoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx0aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbXB1dGVkVGh1bWJDb2xvcix7c3RhdGljQ2xhc3M6J3Ytc2xpZGVyX190aHVtYid9KSk7fSxnZXRUaHVtYkNvbnRhaW5lclN0eWxlczpmdW5jdGlvbiBnZXRUaHVtYkNvbnRhaW5lclN0eWxlcyh3aWR0aCl7dmFyIF9hO3ZhciBkaXJlY3Rpb249dGhpcy52ZXJ0aWNhbD8ndG9wJzonbGVmdCc7dmFyIHZhbHVlPXRoaXMuJHZ1ZXRpZnkucnRsPzEwMC13aWR0aDp3aWR0aDt2YWx1ZT10aGlzLnZlcnRpY2FsPzEwMC12YWx1ZTp2YWx1ZTtyZXR1cm4gX2E9e3RyYW5zaXRpb246dGhpcy50cmFja1RyYW5zaXRpb259LF9hW2RpcmVjdGlvbl09dmFsdWUrIiUiLF9hO30sb25UaHVtYk1vdXNlRG93bjpmdW5jdGlvbiBvblRodW1iTW91c2VEb3duKGUpe3RoaXMub2xkVmFsdWU9dGhpcy5pbnRlcm5hbFZhbHVlO3RoaXMua2V5UHJlc3NlZD0yO3RoaXMuaXNBY3RpdmU9dHJ1ZTt2YXIgbW91c2VVcE9wdGlvbnM9X3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJwYXNzaXZlU3VwcG9ydGVkIl0/e3Bhc3NpdmU6dHJ1ZSxjYXB0dXJlOnRydWV9OnRydWU7dmFyIG1vdXNlTW92ZU9wdGlvbnM9X3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJwYXNzaXZlU3VwcG9ydGVkIl0/e3Bhc3NpdmU6dHJ1ZX06ZmFsc2U7aWYoJ3RvdWNoZXMnaW4gZSl7dGhpcy5hcHAuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJyx0aGlzLm9uTW91c2VNb3ZlLG1vdXNlTW92ZU9wdGlvbnMpO09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImFkZE9uY2VFdmVudExpc3RlbmVyIl0pKHRoaXMuYXBwLCd0b3VjaGVuZCcsdGhpcy5vblNsaWRlck1vdXNlVXAsbW91c2VVcE9wdGlvbnMpO31lbHNle3RoaXMuYXBwLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsdGhpcy5vbk1vdXNlTW92ZSxtb3VzZU1vdmVPcHRpb25zKTtPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJhZGRPbmNlRXZlbnRMaXN0ZW5lciJdKSh0aGlzLmFwcCwnbW91c2V1cCcsdGhpcy5vblNsaWRlck1vdXNlVXAsbW91c2VVcE9wdGlvbnMpO310aGlzLiRlbWl0KCdzdGFydCcsdGhpcy5pbnRlcm5hbFZhbHVlKTt9LG9uU2xpZGVyTW91c2VVcDpmdW5jdGlvbiBvblNsaWRlck1vdXNlVXAoZSl7ZS5zdG9wUHJvcGFnYXRpb24oKTt0aGlzLmtleVByZXNzZWQ9MDt2YXIgbW91c2VNb3ZlT3B0aW9ucz1fdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bInBhc3NpdmVTdXBwb3J0ZWQiXT97cGFzc2l2ZTp0cnVlfTpmYWxzZTt0aGlzLmFwcC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLHRoaXMub25Nb3VzZU1vdmUsbW91c2VNb3ZlT3B0aW9ucyk7dGhpcy5hcHAucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJyx0aGlzLm9uTW91c2VNb3ZlLG1vdXNlTW92ZU9wdGlvbnMpO3RoaXMuJGVtaXQoJ2VuZCcsdGhpcy5pbnRlcm5hbFZhbHVlKTtpZighT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVlcEVxdWFsIl0pKHRoaXMub2xkVmFsdWUsdGhpcy5pbnRlcm5hbFZhbHVlKSl7dGhpcy4kZW1pdCgnY2hhbmdlJyx0aGlzLmludGVybmFsVmFsdWUpO3RoaXMubm9DbGljaz10cnVlO310aGlzLmlzQWN0aXZlPWZhbHNlO30sb25Nb3VzZU1vdmU6ZnVuY3Rpb24gb25Nb3VzZU1vdmUoZSl7dmFyIHZhbHVlPXRoaXMucGFyc2VNb3VzZU1vdmUoZSkudmFsdWU7dGhpcy5pbnRlcm5hbFZhbHVlPXZhbHVlO30sb25LZXlEb3duOmZ1bmN0aW9uIG9uS2V5RG93bihlKXtpZih0aGlzLmRpc2FibGVkfHx0aGlzLnJlYWRvbmx5KXJldHVybjt2YXIgdmFsdWU9dGhpcy5wYXJzZUtleURvd24oZSx0aGlzLmludGVybmFsVmFsdWUpO2lmKHZhbHVlPT1udWxsKXJldHVybjt0aGlzLmludGVybmFsVmFsdWU9dmFsdWU7dGhpcy4kZW1pdCgnY2hhbmdlJyx2YWx1ZSk7fSxvbktleVVwOmZ1bmN0aW9uIG9uS2V5VXAoKXt0aGlzLmtleVByZXNzZWQ9MDt9LG9uU2xpZGVyQ2xpY2s6ZnVuY3Rpb24gb25TbGlkZXJDbGljayhlKXtpZih0aGlzLm5vQ2xpY2spe3RoaXMubm9DbGljaz1mYWxzZTtyZXR1cm47fXZhciB0aHVtYj10aGlzLiRyZWZzLnRodW1iO3RodW1iLmZvY3VzKCk7dGhpcy5vbk1vdXNlTW92ZShlKTt0aGlzLiRlbWl0KCdjaGFuZ2UnLHRoaXMuaW50ZXJuYWxWYWx1ZSk7fSxvbkJsdXI6ZnVuY3Rpb24gb25CbHVyKGUpe3RoaXMuaXNGb2N1c2VkPWZhbHNlO3RoaXMuJGVtaXQoJ2JsdXInLGUpO30sb25Gb2N1czpmdW5jdGlvbiBvbkZvY3VzKGUpe3RoaXMuaXNGb2N1c2VkPXRydWU7dGhpcy4kZW1pdCgnZm9jdXMnLGUpO30scGFyc2VNb3VzZU1vdmU6ZnVuY3Rpb24gcGFyc2VNb3VzZU1vdmUoZSl7dmFyIHN0YXJ0PXRoaXMudmVydGljYWw/J3RvcCc6J2xlZnQnO3ZhciBsZW5ndGg9dGhpcy52ZXJ0aWNhbD8naGVpZ2h0Jzond2lkdGgnO3ZhciBjbGljaz10aGlzLnZlcnRpY2FsPydjbGllbnRZJzonY2xpZW50WCc7dmFyIF9hPXRoaXMuJHJlZnMudHJhY2suZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksX2I9c3RhcnQsdHJhY2tTdGFydD1fYVtfYl0sX2M9bGVuZ3RoLHRyYWNrTGVuZ3RoPV9hW19jXTt2YXIgY2xpY2tPZmZzZXQ9J3RvdWNoZXMnaW4gZT9lLnRvdWNoZXNbMF1bY2xpY2tdOmVbY2xpY2tdOy8vIENhbiB3ZSBnZXQgcmlkIG9mIGFueSBoZXJlPwovLyBJdCBpcyBwb3NzaWJsZSBmb3IgbGVmdCB0byBiZSBOYU4sIGZvcmNlIHRvIG51bWJlcgp2YXIgY2xpY2tQb3M9TWF0aC5taW4oTWF0aC5tYXgoKGNsaWNrT2Zmc2V0LXRyYWNrU3RhcnQpL3RyYWNrTGVuZ3RoLDApLDEpfHwwO2lmKHRoaXMudmVydGljYWwpY2xpY2tQb3M9MS1jbGlja1BvcztpZih0aGlzLiR2dWV0aWZ5LnJ0bCljbGlja1Bvcz0xLWNsaWNrUG9zO3ZhciBpc0luc2lkZVRyYWNrPWNsaWNrT2Zmc2V0Pj10cmFja1N0YXJ0JiZjbGlja09mZnNldDw9dHJhY2tTdGFydCt0cmFja0xlbmd0aDt2YXIgdmFsdWU9cGFyc2VGbG9hdCh0aGlzLm1pbikrY2xpY2tQb3MqKHRoaXMubWF4VmFsdWUtdGhpcy5taW5WYWx1ZSk7cmV0dXJue3ZhbHVlOnZhbHVlLGlzSW5zaWRlVHJhY2s6aXNJbnNpZGVUcmFja307fSxwYXJzZUtleURvd246ZnVuY3Rpb24gcGFyc2VLZXlEb3duKGUsdmFsdWUpe2lmKHRoaXMuZGlzYWJsZWQpcmV0dXJuO3ZhciBwYWdldXA9X3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJrZXlDb2RlcyJdLnBhZ2V1cCxwYWdlZG93bj1fdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImtleUNvZGVzIl0ucGFnZWRvd24sZW5kPV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1sia2V5Q29kZXMiXS5lbmQsaG9tZT1fdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImtleUNvZGVzIl0uaG9tZSxsZWZ0PV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1sia2V5Q29kZXMiXS5sZWZ0LHJpZ2h0PV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1sia2V5Q29kZXMiXS5yaWdodCxkb3duPV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1sia2V5Q29kZXMiXS5kb3duLHVwPV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1sia2V5Q29kZXMiXS51cDtpZighW3BhZ2V1cCxwYWdlZG93bixlbmQsaG9tZSxsZWZ0LHJpZ2h0LGRvd24sdXBdLmluY2x1ZGVzKGUua2V5Q29kZSkpcmV0dXJuO2UucHJldmVudERlZmF1bHQoKTt2YXIgc3RlcD10aGlzLnN0ZXBOdW1lcmljfHwxO3ZhciBzdGVwcz0odGhpcy5tYXhWYWx1ZS10aGlzLm1pblZhbHVlKS9zdGVwO2lmKFtsZWZ0LHJpZ2h0LGRvd24sdXBdLmluY2x1ZGVzKGUua2V5Q29kZSkpe3RoaXMua2V5UHJlc3NlZCs9MTt2YXIgaW5jcmVhc2U9dGhpcy4kdnVldGlmeS5ydGw/W2xlZnQsdXBdOltyaWdodCx1cF07dmFyIGRpcmVjdGlvbj1pbmNyZWFzZS5pbmNsdWRlcyhlLmtleUNvZGUpPzE6LTE7dmFyIG11bHRpcGxpZXI9ZS5zaGlmdEtleT8zOmUuY3RybEtleT8yOjE7dmFsdWU9dmFsdWUrZGlyZWN0aW9uKnN0ZXAqbXVsdGlwbGllcjt9ZWxzZSBpZihlLmtleUNvZGU9PT1ob21lKXt2YWx1ZT10aGlzLm1pblZhbHVlO31lbHNlIGlmKGUua2V5Q29kZT09PWVuZCl7dmFsdWU9dGhpcy5tYXhWYWx1ZTt9ZWxzZXt2YXIgZGlyZWN0aW9uPWUua2V5Q29kZT09PXBhZ2Vkb3duPzE6LTE7dmFsdWU9dmFsdWUtZGlyZWN0aW9uKnN0ZXAqKHN0ZXBzPjEwMD9zdGVwcy8xMDoxMCk7fXJldHVybiB2YWx1ZTt9LHJvdW5kVmFsdWU6ZnVuY3Rpb24gcm91bmRWYWx1ZSh2YWx1ZSl7aWYoIXRoaXMuc3RlcE51bWVyaWMpcmV0dXJuIHZhbHVlOy8vIEZvcm1hdCBpbnB1dCB2YWx1ZSB1c2luZyB0aGUgc2FtZSBudW1iZXIKLy8gb2YgZGVjaW1hbHMgcGxhY2VzIGFzIGluIHRoZSBzdGVwIHByb3AKdmFyIHRyaW1tZWRTdGVwPXRoaXMuc3RlcC50b1N0cmluZygpLnRyaW0oKTt2YXIgZGVjaW1hbHM9dHJpbW1lZFN0ZXAuaW5kZXhPZignLicpPi0xP3RyaW1tZWRTdGVwLmxlbmd0aC10cmltbWVkU3RlcC5pbmRleE9mKCcuJyktMTowO3ZhciBvZmZzZXQ9dGhpcy5taW5WYWx1ZSV0aGlzLnN0ZXBOdW1lcmljO3ZhciBuZXdWYWx1ZT1NYXRoLnJvdW5kKCh2YWx1ZS1vZmZzZXQpL3RoaXMuc3RlcE51bWVyaWMpKnRoaXMuc3RlcE51bWVyaWMrb2Zmc2V0O3JldHVybiBwYXJzZUZsb2F0KE1hdGgubWluKG5ld1ZhbHVlLHRoaXMubWF4VmFsdWUpLnRvRml4ZWQoZGVjaW1hbHMpKTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTbGlkZXIvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTbGlkZXIvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZTbGlkZXIsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNsaWRlckluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNsaWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlNsaWRlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZTbGlkZXIvVlNsaWRlci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTbGlkZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU2xpZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WU2xpZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU25hY2tiYXIvVlNuYWNrYmFyLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlNuYWNrYmFyL1ZTbmFja2Jhci5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTbmFja2JhclZTbmFja2JhclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTbmFja2Jhci9WU25hY2tiYXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTbmFja2Jhci9WU25hY2tiYXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNuYWNrYmFyVlNuYWNrYmFyVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNuYWNrYmFyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTbmFja2Jhci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlNuYWNrYmFyL1ZTbmFja2Jhci5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTbmFja2Jhcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WU25hY2tiYXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9jb2xvcmFibGUgKi8iLi9zcmMvbWl4aW5zL2NvbG9yYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy90b2dnbGVhYmxlICovIi4vc3JjL21peGlucy90b2dnbGVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19wb3NpdGlvbmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvcG9zaXRpb25hYmxlICovIi4vc3JjL21peGlucy9wb3NpdGlvbmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7Ly8gU3R5bGVzCi8vIE1peGlucwovLyBUeXBlcwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdKShfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sX21peGluc190b2dnbGVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxPYmplY3QoX21peGluc19wb3NpdGlvbmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZmFjdG9yeSJdKShbJ2Fic29sdXRlJywndG9wJywnYm90dG9tJywnbGVmdCcsJ3JpZ2h0J10pLyogQHZ1ZS9jb21wb25lbnQgKi8pLmV4dGVuZCh7bmFtZTondi1zbmFja2JhcicscHJvcHM6e211bHRpTGluZTpCb29sZWFuLC8vIFRPRE86IGNoYW5nZSB0aGlzIHRvIGNsb3NlRGVsYXkgdG8gbWF0Y2ggb3RoZXIgQVBJIGluIGRlbGF5YWJsZS5qcwp0aW1lb3V0Ont0eXBlOk51bWJlcixkZWZhdWx0OjYwMDB9LHZlcnRpY2FsOkJvb2xlYW59LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnthY3RpdmVUaW1lb3V0Oi0xfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm57J3Ytc25hY2stLWFjdGl2ZSc6dGhpcy5pc0FjdGl2ZSwndi1zbmFjay0tYWJzb2x1dGUnOnRoaXMuYWJzb2x1dGUsJ3Ytc25hY2stLWJvdHRvbSc6dGhpcy5ib3R0b218fCF0aGlzLnRvcCwndi1zbmFjay0tbGVmdCc6dGhpcy5sZWZ0LCd2LXNuYWNrLS1tdWx0aS1saW5lJzp0aGlzLm11bHRpTGluZSYmIXRoaXMudmVydGljYWwsJ3Ytc25hY2stLXJpZ2h0Jzp0aGlzLnJpZ2h0LCd2LXNuYWNrLS10b3AnOnRoaXMudG9wLCd2LXNuYWNrLS12ZXJ0aWNhbCc6dGhpcy52ZXJ0aWNhbH07fX0sd2F0Y2g6e2lzQWN0aXZlOmZ1bmN0aW9uIGlzQWN0aXZlKCl7dGhpcy5zZXRUaW1lb3V0KCk7fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7aWYodGhpcy4kYXR0cnMuaGFzT3duUHJvcGVydHkoJ2F1dG8taGVpZ2h0Jykpe09iamVjdChfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bInJlbW92ZWQiXSkoJ2F1dG8taGVpZ2h0Jyx0aGlzKTt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLnNldFRpbWVvdXQoKTt9LG1ldGhvZHM6e3NldFRpbWVvdXQ6ZnVuY3Rpb24gc2V0VGltZW91dCgpe3ZhciBfdGhpcz10aGlzO3dpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5hY3RpdmVUaW1lb3V0KTtpZih0aGlzLmlzQWN0aXZlJiZ0aGlzLnRpbWVvdXQpe3RoaXMuYWN0aXZlVGltZW91dD13aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpe190aGlzLmlzQWN0aXZlPWZhbHNlO30sdGhpcy50aW1lb3V0KTt9fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXtyZXR1cm4gaCgndHJhbnNpdGlvbicse2F0dHJzOntuYW1lOid2LXNuYWNrLXRyYW5zaXRpb24nfX0sW3RoaXMuaXNBY3RpdmUmJmgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXNuYWNrJyxjbGFzczp0aGlzLmNsYXNzZXMsb246dGhpcy4kbGlzdGVuZXJzfSxbaCgnZGl2Jyx0aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbG9yLHtzdGF0aWNDbGFzczondi1zbmFja19fd3JhcHBlcid9KSxbaCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3Ytc25hY2tfX2NvbnRlbnQnfSx0aGlzLiRzbG90cy5kZWZhdWx0KV0pXSldKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlNuYWNrYmFyL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTbmFja2Jhci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWU25hY2tiYXIsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNuYWNrYmFySW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU25hY2tiYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTbmFja2JhciAqLyIuL3NyYy9jb21wb25lbnRzL1ZTbmFja2Jhci9WU25hY2tiYXIudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWU25hY2tiYXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU25hY2tiYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZTbmFja2Jhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlNwYXJrbGluZS9WU3BhcmtsaW5lLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WU3BhcmtsaW5lL1ZTcGFya2xpbmUuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTcGFya2xpbmVWU3BhcmtsaW5lU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlNwYXJrbGluZS9WU3BhcmtsaW5lLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTcGFya2xpbmUvVlNwYXJrbGluZS50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTcGFya2xpbmVWU3BhcmtsaW5lVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNwYXJrbGluZV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU3BhcmtsaW5lLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WU3BhcmtsaW5lL1ZTcGFya2xpbmUuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU3BhcmtsaW5lX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZTcGFya2xpbmVfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9jb2xvcmFibGUgKi8iLi9zcmMvbWl4aW5zL2NvbG9yYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfaGVscGVyc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9oZWxwZXJzL2NvcmUgKi8iLi9zcmMvY29tcG9uZW50cy9WU3BhcmtsaW5lL2hlbHBlcnMvY29yZS50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9oZWxwZXJzX3BhdGhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2hlbHBlcnMvcGF0aCAqLyIuL3NyYy9jb21wb25lbnRzL1ZTcGFya2xpbmUvaGVscGVycy9wYXRoLnRzIik7ZnVuY3Rpb24gX3R5cGVvZihvYmope2lmKHR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZfdHlwZW9mMihTeW1ib2wuaXRlcmF0b3IpPT09InN5bWJvbCIpe190eXBlb2Y9ZnVuY3Rpb24gX3R5cGVvZihvYmope3JldHVybiBfdHlwZW9mMihvYmopO307fWVsc2V7X3R5cGVvZj1mdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIG9iaiYmdHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9iai5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmb2JqIT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjpfdHlwZW9mMihvYmopO307fXJldHVybiBfdHlwZW9mKG9iaik7fXZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gU3R5bGVzCi8vIE1peGlucwovLyBVdGlsaXRpZXMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOidWU3BhcmtsaW5lJyxpbmhlcml0QXR0cnM6ZmFsc2UscHJvcHM6e2F1dG9EcmF3OkJvb2xlYW4sYXV0b0RyYXdEdXJhdGlvbjp7dHlwZTpOdW1iZXIsZGVmYXVsdDoyMDAwfSxhdXRvRHJhd0Vhc2luZzp7dHlwZTpTdHJpbmcsZGVmYXVsdDonZWFzZSd9LGF1dG9MaW5lV2lkdGg6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSxjb2xvcjp7dHlwZTpTdHJpbmcsZGVmYXVsdDoncHJpbWFyeSd9LGZpbGw6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSxncmFkaWVudDp7dHlwZTpBcnJheSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuW107fX0sZ3JhZGllbnREaXJlY3Rpb246e3R5cGU6U3RyaW5nLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsKXtyZXR1cm5bJ3RvcCcsJ2JvdHRvbScsJ2xlZnQnLCdyaWdodCddLmluY2x1ZGVzKHZhbCk7fSxkZWZhdWx0Oid0b3AnfSxoZWlnaHQ6e3R5cGU6W1N0cmluZyxOdW1iZXJdLGRlZmF1bHQ6NzV9LGxhYmVsczp7dHlwZTpBcnJheSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuW107fX0sbGFiZWxTaXplOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0Ojd9LGxpbmVXaWR0aDp7dHlwZTpbU3RyaW5nLE51bWJlcl0sZGVmYXVsdDo0fSxwYWRkaW5nOnt0eXBlOltTdHJpbmcsTnVtYmVyXSxkZWZhdWx0Ojh9LHNob3dMYWJlbHM6Qm9vbGVhbixzbW9vdGg6e3R5cGU6W0Jvb2xlYW4sTnVtYmVyLFN0cmluZ10sZGVmYXVsdDpmYWxzZX0sdHlwZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDondHJlbmQnLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsKXtyZXR1cm5bJ3RyZW5kJywnYmFyJ10uaW5jbHVkZXModmFsKTt9fSx2YWx1ZTp7dHlwZTpBcnJheSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuW107fX0sd2lkdGg6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MzAwfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2xhc3RMZW5ndGg6MH07fSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJuIF9fYXNzaWduKHsndi1zcGFya2xpbmUnOnRydWV9LHRoaXMudGhlbWVDbGFzc2VzKTt9LHBhcnNlZFBhZGRpbmc6ZnVuY3Rpb24gcGFyc2VkUGFkZGluZygpe3JldHVybiBOdW1iZXIodGhpcy5wYWRkaW5nKTt9LHBhcnNlZFdpZHRoOmZ1bmN0aW9uIHBhcnNlZFdpZHRoKCl7cmV0dXJuIE51bWJlcih0aGlzLndpZHRoKTt9LHBhcnNlZEhlaWdodDpmdW5jdGlvbiBwYXJzZWRIZWlnaHQoKXtyZXR1cm4gcGFyc2VJbnQodGhpcy5oZWlnaHQsMTApO30scGFyc2VkTGFiZWxTaXplOmZ1bmN0aW9uIHBhcnNlZExhYmVsU2l6ZSgpe3JldHVybiBwYXJzZUludCh0aGlzLmxhYmVsU2l6ZSwxMCl8fDc7fSx0b3RhbEhlaWdodDpmdW5jdGlvbiB0b3RhbEhlaWdodCgpe3ZhciBoZWlnaHQ9dGhpcy5wYXJzZWRIZWlnaHQ7aWYodGhpcy5oYXNMYWJlbHMpaGVpZ2h0Kz1wYXJzZUludCh0aGlzLmxhYmVsU2l6ZSwxMCkqMS41O3JldHVybiBoZWlnaHQ7fSx0b3RhbFdpZHRoOmZ1bmN0aW9uIHRvdGFsV2lkdGgoKXt2YXIgd2lkdGg9dGhpcy5wYXJzZWRXaWR0aDtpZih0aGlzLnR5cGU9PT0nYmFyJyl3aWR0aD1NYXRoLm1heCh0aGlzLnZhbHVlLmxlbmd0aCp0aGlzLl9saW5lV2lkdGgsd2lkdGgpO3JldHVybiB3aWR0aDt9LHRvdGFsVmFsdWVzOmZ1bmN0aW9uIHRvdGFsVmFsdWVzKCl7cmV0dXJuIHRoaXMudmFsdWUubGVuZ3RoO30sX2xpbmVXaWR0aDpmdW5jdGlvbiBfbGluZVdpZHRoKCl7aWYodGhpcy5hdXRvTGluZVdpZHRoJiZ0aGlzLnR5cGUhPT0ndHJlbmQnKXt2YXIgdG90YWxQYWRkaW5nPXRoaXMucGFyc2VkUGFkZGluZyoodGhpcy50b3RhbFZhbHVlcysxKTtyZXR1cm4odGhpcy5wYXJzZWRXaWR0aC10b3RhbFBhZGRpbmcpL3RoaXMudG90YWxWYWx1ZXM7fWVsc2V7cmV0dXJuIHBhcnNlRmxvYXQodGhpcy5saW5lV2lkdGgpfHw0O319LGJvdW5kYXJ5OmZ1bmN0aW9uIGJvdW5kYXJ5KCl7aWYodGhpcy50eXBlPT09J2JhcicpcmV0dXJue21pblg6MCxtYXhYOnRoaXMudG90YWxXaWR0aCxtaW5ZOjAsbWF4WTp0aGlzLnBhcnNlZEhlaWdodH07dmFyIHBhZGRpbmc9dGhpcy5wYXJzZWRQYWRkaW5nO3JldHVybnttaW5YOnBhZGRpbmcsbWF4WDp0aGlzLnRvdGFsV2lkdGgtcGFkZGluZyxtaW5ZOnBhZGRpbmcsbWF4WTp0aGlzLnBhcnNlZEhlaWdodC1wYWRkaW5nfTt9LGhhc0xhYmVsczpmdW5jdGlvbiBoYXNMYWJlbHMoKXtyZXR1cm4gQm9vbGVhbih0aGlzLnNob3dMYWJlbHN8fHRoaXMubGFiZWxzLmxlbmd0aD4wfHx0aGlzLiRzY29wZWRTbG90cy5sYWJlbCk7fSxwYXJzZWRMYWJlbHM6ZnVuY3Rpb24gcGFyc2VkTGFiZWxzKCl7dmFyIGxhYmVscz1bXTt2YXIgcG9pbnRzPXRoaXMuX3ZhbHVlczt2YXIgbGVuPXBvaW50cy5sZW5ndGg7Zm9yKHZhciBpPTA7bGFiZWxzLmxlbmd0aDxsZW47aSsrKXt2YXIgaXRlbT1wb2ludHNbaV07dmFyIHZhbHVlPXRoaXMubGFiZWxzW2ldO2lmKCF2YWx1ZSl7dmFsdWU9X3R5cGVvZihpdGVtKT09PSdvYmplY3QnP2l0ZW0udmFsdWU6aXRlbTt9bGFiZWxzLnB1c2goe3g6aXRlbS54LHZhbHVlOlN0cmluZyh2YWx1ZSl9KTt9cmV0dXJuIGxhYmVsczt9LG5vcm1hbGl6ZWRWYWx1ZXM6ZnVuY3Rpb24gbm9ybWFsaXplZFZhbHVlcygpe3JldHVybiB0aGlzLnZhbHVlLm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gdHlwZW9mIGl0ZW09PT0nbnVtYmVyJz9pdGVtOml0ZW0udmFsdWU7fSk7fSxfdmFsdWVzOmZ1bmN0aW9uIF92YWx1ZXMoKXtyZXR1cm4gdGhpcy50eXBlPT09J3RyZW5kJz9PYmplY3QoX2hlbHBlcnNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJnZW5Qb2ludHMiXSkodGhpcy5ub3JtYWxpemVkVmFsdWVzLHRoaXMuYm91bmRhcnkpOk9iamVjdChfaGVscGVyc19jb3JlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImdlbkJhcnMiXSkodGhpcy5ub3JtYWxpemVkVmFsdWVzLHRoaXMuYm91bmRhcnkpO30sdGV4dFk6ZnVuY3Rpb24gdGV4dFkoKXt2YXIgeT10aGlzLnBhcnNlZEhlaWdodDtpZih0aGlzLnR5cGU9PT0ndHJlbmQnKXktPTQ7cmV0dXJuIHk7fSxfcmFkaXVzOmZ1bmN0aW9uIF9yYWRpdXMoKXtyZXR1cm4gdGhpcy5zbW9vdGg9PT10cnVlPzg6TnVtYmVyKHRoaXMuc21vb3RoKTt9fSx3YXRjaDp7dmFsdWU6e2ltbWVkaWF0ZTp0cnVlLGhhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcigpe3ZhciBfdGhpcz10aGlzO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7aWYoIV90aGlzLmF1dG9EcmF3fHxfdGhpcy50eXBlPT09J2JhcicpcmV0dXJuO3ZhciBwYXRoPV90aGlzLiRyZWZzLnBhdGg7dmFyIGxlbmd0aD1wYXRoLmdldFRvdGFsTGVuZ3RoKCk7aWYoIV90aGlzLmZpbGwpe3BhdGguc3R5bGUudHJhbnNpdGlvbj0nbm9uZSc7cGF0aC5zdHlsZS5zdHJva2VEYXNoYXJyYXk9bGVuZ3RoKycgJytsZW5ndGg7cGF0aC5zdHlsZS5zdHJva2VEYXNob2Zmc2V0PU1hdGguYWJzKGxlbmd0aC0oX3RoaXMubGFzdExlbmd0aHx8MCkpLnRvU3RyaW5nKCk7cGF0aC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtwYXRoLnN0eWxlLnRyYW5zaXRpb249InN0cm9rZS1kYXNob2Zmc2V0ICIrX3RoaXMuYXV0b0RyYXdEdXJhdGlvbisibXMgIitfdGhpcy5hdXRvRHJhd0Vhc2luZztwYXRoLnN0eWxlLnN0cm9rZURhc2hvZmZzZXQ9JzAnO31lbHNle3BhdGguc3R5bGUudHJhbnNmb3JtT3JpZ2luPSdib3R0b20gY2VudGVyJztwYXRoLnN0eWxlLnRyYW5zaXRpb249J25vbmUnO3BhdGguc3R5bGUudHJhbnNmb3JtPSJzY2FsZVkoMCkiO3BhdGguZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7cGF0aC5zdHlsZS50cmFuc2l0aW9uPSJ0cmFuc2Zvcm0gIitfdGhpcy5hdXRvRHJhd0R1cmF0aW9uKyJtcyAiK190aGlzLmF1dG9EcmF3RWFzaW5nO3BhdGguc3R5bGUudHJhbnNmb3JtPSJzY2FsZVkoMSkiO31fdGhpcy5sYXN0TGVuZ3RoPWxlbmd0aDt9KTt9fX0sbWV0aG9kczp7Z2VuR3JhZGllbnQ6ZnVuY3Rpb24gZ2VuR3JhZGllbnQoKXt2YXIgX3RoaXM9dGhpczt2YXIgZ3JhZGllbnREaXJlY3Rpb249dGhpcy5ncmFkaWVudERpcmVjdGlvbjt2YXIgZ3JhZGllbnQ9dGhpcy5ncmFkaWVudC5zbGljZSgpOy8vIFB1c2hlcyBlbXB0eSBzdHJpbmcgdG8gZm9yY2UKLy8gYSBmYWxsYmFjayB0byBjdXJyZW50Q29sb3IKaWYoIWdyYWRpZW50Lmxlbmd0aClncmFkaWVudC5wdXNoKCcnKTt2YXIgbGVuPU1hdGgubWF4KGdyYWRpZW50Lmxlbmd0aC0xLDEpO3ZhciBzdG9wcz1ncmFkaWVudC5yZXZlcnNlKCkubWFwKGZ1bmN0aW9uKGNvbG9yLGluZGV4KXtyZXR1cm4gX3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ3N0b3AnLHthdHRyczp7b2Zmc2V0OmluZGV4L2xlbiwnc3RvcC1jb2xvcic6Y29sb3J8fF90aGlzLmNvbG9yfHwnY3VycmVudENvbG9yJ319KTt9KTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGVmcycsW3RoaXMuJGNyZWF0ZUVsZW1lbnQoJ2xpbmVhckdyYWRpZW50Jyx7YXR0cnM6e2lkOnRoaXMuX3VpZCx4MTorKGdyYWRpZW50RGlyZWN0aW9uPT09J2xlZnQnKSx5MTorKGdyYWRpZW50RGlyZWN0aW9uPT09J3RvcCcpLHgyOisoZ3JhZGllbnREaXJlY3Rpb249PT0ncmlnaHQnKSx5MjorKGdyYWRpZW50RGlyZWN0aW9uPT09J2JvdHRvbScpfX0sc3RvcHMpXSk7fSxnZW5HOmZ1bmN0aW9uIGdlbkcoY2hpbGRyZW4pe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdnJyx7c3R5bGU6e2ZvbnRTaXplOic4Jyx0ZXh0QW5jaG9yOidtaWRkbGUnLGRvbWluYW50QmFzZWxpbmU6J21hdGhlbWF0aWNhbCcsZmlsbDp0aGlzLmNvbG9yfHwnY3VycmVudENvbG9yJ319LGNoaWxkcmVuKTt9LGdlblBhdGg6ZnVuY3Rpb24gZ2VuUGF0aCgpe3ZhciBwb2ludHM9T2JqZWN0KF9oZWxwZXJzX2NvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZ2VuUG9pbnRzIl0pKHRoaXMubm9ybWFsaXplZFZhbHVlcyx0aGlzLmJvdW5kYXJ5KTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgncGF0aCcse2F0dHJzOntpZDp0aGlzLl91aWQsZDpPYmplY3QoX2hlbHBlcnNfcGF0aF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJnZW5QYXRoIl0pKHBvaW50cyx0aGlzLl9yYWRpdXMsdGhpcy5maWxsLHRoaXMucGFyc2VkSGVpZ2h0KSxmaWxsOnRoaXMuZmlsbD8idXJsKCMiK3RoaXMuX3VpZCsiKSI6J25vbmUnLHN0cm9rZTp0aGlzLmZpbGw/J25vbmUnOiJ1cmwoIyIrdGhpcy5fdWlkKyIpIn0scmVmOidwYXRoJ30pO30sZ2VuTGFiZWxzOmZ1bmN0aW9uIGdlbkxhYmVscyhvZmZzZXRYKXt2YXIgX3RoaXM9dGhpczt2YXIgY2hpbGRyZW49dGhpcy5wYXJzZWRMYWJlbHMubWFwKGZ1bmN0aW9uKGl0ZW0saSl7cmV0dXJuIF90aGlzLiRjcmVhdGVFbGVtZW50KCd0ZXh0Jyx7YXR0cnM6e3g6aXRlbS54K29mZnNldFgrX3RoaXMuX2xpbmVXaWR0aC8yLHk6X3RoaXMudGV4dFkrX3RoaXMucGFyc2VkTGFiZWxTaXplKjAuNzUsJ2ZvbnQtc2l6ZSc6TnVtYmVyKF90aGlzLmxhYmVsU2l6ZSl8fDd9fSxbX3RoaXMuZ2VuTGFiZWwoaXRlbSxpKV0pO30pO3JldHVybiB0aGlzLmdlbkcoY2hpbGRyZW4pO30sZ2VuTGFiZWw6ZnVuY3Rpb24gZ2VuTGFiZWwoaXRlbSxpbmRleCl7cmV0dXJuIHRoaXMuJHNjb3BlZFNsb3RzLmxhYmVsP3RoaXMuJHNjb3BlZFNsb3RzLmxhYmVsKHtpbmRleDppbmRleCx2YWx1ZTppdGVtLnZhbHVlfSk6aXRlbS52YWx1ZTt9LGdlbkJhcnM6ZnVuY3Rpb24gZ2VuQmFycygpe2lmKCF0aGlzLnZhbHVlfHx0aGlzLnRvdGFsVmFsdWVzPDIpcmV0dXJuIHVuZGVmaW5lZDt2YXIgYmFycz1PYmplY3QoX2hlbHBlcnNfY29yZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJnZW5CYXJzIl0pKHRoaXMubm9ybWFsaXplZFZhbHVlcyx0aGlzLmJvdW5kYXJ5KTt2YXIgb2Zmc2V0WD0oTWF0aC5hYnMoYmFyc1swXS54LWJhcnNbMV0ueCktdGhpcy5fbGluZVdpZHRoKS8yO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdzdmcnLHthdHRyczp7ZGlzcGxheTonYmxvY2snLHZpZXdCb3g6IjAgMCAiK3RoaXMudG90YWxXaWR0aCsiICIrdGhpcy50b3RhbEhlaWdodH0sY2xhc3M6dGhpcy5jbGFzc2VzfSxbdGhpcy5nZW5HcmFkaWVudCgpLHRoaXMuZ2VuQ2xpcFBhdGgoYmFycyxvZmZzZXRYLHRoaXMuX2xpbmVXaWR0aCwnc3BhcmtsaW5lLWJhci0nK3RoaXMuX3VpZCksdGhpcy5oYXNMYWJlbHM/dGhpcy5nZW5MYWJlbHMob2Zmc2V0WCk6dW5kZWZpbmVkLHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2cnLHthdHRyczp7J2NsaXAtcGF0aCc6InVybCgjc3BhcmtsaW5lLWJhci0iK3RoaXMuX3VpZCsiLWNsaXApIixmaWxsOiJ1cmwoIyIrdGhpcy5fdWlkKyIpIn19LFt0aGlzLiRjcmVhdGVFbGVtZW50KCdyZWN0Jyx7YXR0cnM6e3g6MCx5OjAsd2lkdGg6dGhpcy50b3RhbFdpZHRoLGhlaWdodDp0aGlzLmhlaWdodH19KV0pXSk7fSxnZW5DbGlwUGF0aDpmdW5jdGlvbiBnZW5DbGlwUGF0aChiYXJzLG9mZnNldFgsbGluZVdpZHRoLGlkKXt2YXIgX3RoaXM9dGhpczt2YXIgcm91bmRpbmc9dHlwZW9mIHRoaXMuc21vb3RoPT09J251bWJlcic/dGhpcy5zbW9vdGg6dGhpcy5zbW9vdGg/MjowO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdjbGlwUGF0aCcse2F0dHJzOntpZDppZCsiLWNsaXAifX0sYmFycy5tYXAoZnVuY3Rpb24oaXRlbSl7cmV0dXJuIF90aGlzLiRjcmVhdGVFbGVtZW50KCdyZWN0Jyx7YXR0cnM6e3g6aXRlbS54K29mZnNldFgseTppdGVtLnksd2lkdGg6bGluZVdpZHRoLGhlaWdodDppdGVtLmhlaWdodCxyeDpyb3VuZGluZyxyeTpyb3VuZGluZ319LFtfdGhpcy5hdXRvRHJhdz9fdGhpcy4kY3JlYXRlRWxlbWVudCgnYW5pbWF0ZScse2F0dHJzOnthdHRyaWJ1dGVOYW1lOidoZWlnaHQnLGZyb206MCx0bzppdGVtLmhlaWdodCxkdXI6X3RoaXMuYXV0b0RyYXdEdXJhdGlvbisibXMiLGZpbGw6J2ZyZWV6ZSd9fSk6dW5kZWZpbmVkXSk7fSkpO30sZ2VuVHJlbmQ6ZnVuY3Rpb24gZ2VuVHJlbmQoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnc3ZnJyx0aGlzLnNldFRleHRDb2xvcih0aGlzLmNvbG9yLHthdHRyczpfX2Fzc2lnbih7fSx0aGlzLiRhdHRycyx7ZGlzcGxheTonYmxvY2snLCdzdHJva2Utd2lkdGgnOnRoaXMuX2xpbmVXaWR0aHx8MSx2aWV3Qm94OiIwIDAgIit0aGlzLndpZHRoKyIgIit0aGlzLnRvdGFsSGVpZ2h0fSksY2xhc3M6dGhpcy5jbGFzc2VzfSksW3RoaXMuZ2VuR3JhZGllbnQoKSx0aGlzLmhhc0xhYmVscyYmdGhpcy5nZW5MYWJlbHMoLSh0aGlzLl9saW5lV2lkdGgvMikpLHRoaXMuZ2VuUGF0aCgpXSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXtpZih0aGlzLnRvdGFsVmFsdWVzPDIpcmV0dXJuIHVuZGVmaW5lZDtyZXR1cm4gdGhpcy50eXBlPT09J3RyZW5kJz90aGlzLmdlblRyZW5kKCk6dGhpcy5nZW5CYXJzKCk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTcGFya2xpbmUvaGVscGVycy9jb3JlLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlNwYXJrbGluZS9oZWxwZXJzL2NvcmUudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBnZW5Qb2ludHMsIGdlbkJhcnMgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNwYXJrbGluZUhlbHBlcnNDb3JlVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZ2VuUG9pbnRzIixmdW5jdGlvbigpe3JldHVybiBnZW5Qb2ludHM7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdlbkJhcnMiLGZ1bmN0aW9uKCl7cmV0dXJuIGdlbkJhcnM7fSk7dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9O3ZhciBfX3NwcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3NwcmVhZHx8ZnVuY3Rpb24oKXtmb3IodmFyIGFyPVtdLGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXthcj1hci5jb25jYXQoX19yZWFkKGFyZ3VtZW50c1tpXSkpO31yZXR1cm4gYXI7fTtmdW5jdGlvbiBnZW5Qb2ludHModmFsdWVzLGJvdW5kYXJ5KXt2YXIgbWluWD1ib3VuZGFyeS5taW5YLG1heFg9Ym91bmRhcnkubWF4WCxtaW5ZPWJvdW5kYXJ5Lm1pblksbWF4WT1ib3VuZGFyeS5tYXhZO3ZhciB0b3RhbFZhbHVlcz12YWx1ZXMubGVuZ3RoO3ZhciBtYXhWYWx1ZT1NYXRoLm1heC5hcHBseShNYXRoLF9fc3ByZWFkKHZhbHVlcykpO3ZhciBtaW5WYWx1ZT1NYXRoLm1pbi5hcHBseShNYXRoLF9fc3ByZWFkKHZhbHVlcykpO3ZhciBncmlkWD0obWF4WC1taW5YKS8odG90YWxWYWx1ZXMtMSk7dmFyIGdyaWRZPShtYXhZLW1pblkpLyhtYXhWYWx1ZS1taW5WYWx1ZXx8MSk7cmV0dXJuIHZhbHVlcy5tYXAoZnVuY3Rpb24odmFsdWUsaW5kZXgpe3JldHVybnt4Om1pblgraW5kZXgqZ3JpZFgseTptYXhZLSh2YWx1ZS1taW5WYWx1ZSkqZ3JpZFkrICsoaW5kZXg9PT10b3RhbFZhbHVlcy0xKSowLjAwMDAxLSsoaW5kZXg9PT0wKSowLjAwMDAxLHZhbHVlOnZhbHVlfTt9KTt9ZnVuY3Rpb24gZ2VuQmFycyh2YWx1ZXMsYm91bmRhcnkpe3ZhciBtaW5YPWJvdW5kYXJ5Lm1pblgsbWF4WD1ib3VuZGFyeS5tYXhYLG1pblk9Ym91bmRhcnkubWluWSxtYXhZPWJvdW5kYXJ5Lm1heFk7dmFyIHRvdGFsVmFsdWVzPXZhbHVlcy5sZW5ndGg7dmFyIG1heFZhbHVlPU1hdGgubWF4LmFwcGx5KE1hdGgsX19zcHJlYWQodmFsdWVzKSk7dmFyIG1pblZhbHVlPU1hdGgubWluLmFwcGx5KE1hdGgsX19zcHJlYWQodmFsdWVzKSk7aWYobWluVmFsdWU+MCltaW5WYWx1ZT0wO2lmKG1heFZhbHVlPDApbWF4VmFsdWU9MDt2YXIgZ3JpZFg9bWF4WC90b3RhbFZhbHVlczt2YXIgZ3JpZFk9KG1heFktbWluWSkvKG1heFZhbHVlLW1pblZhbHVlKTt2YXIgaG9yaXpvblk9bWF4WS1NYXRoLmFicyhtaW5WYWx1ZSpncmlkWSk7cmV0dXJuIHZhbHVlcy5tYXAoZnVuY3Rpb24odmFsdWUsaW5kZXgpe3ZhciBoZWlnaHQ9TWF0aC5hYnMoZ3JpZFkqdmFsdWUpO3JldHVybnt4Om1pblgraW5kZXgqZ3JpZFgseTpob3Jpem9uWS1oZWlnaHQrICsodmFsdWU8MCkqaGVpZ2h0LGhlaWdodDpoZWlnaHQsdmFsdWU6dmFsdWV9O30pO30vKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU3BhcmtsaW5lL2hlbHBlcnMvbWF0aC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTcGFya2xpbmUvaGVscGVycy9tYXRoLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogY2hlY2tDb2xsaW5lYXIsIGdldERpc3RhbmNlLCBtb3ZlVG8gKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNwYXJrbGluZUhlbHBlcnNNYXRoVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiY2hlY2tDb2xsaW5lYXIiLGZ1bmN0aW9uKCl7cmV0dXJuIGNoZWNrQ29sbGluZWFyO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJnZXREaXN0YW5jZSIsZnVuY3Rpb24oKXtyZXR1cm4gZ2V0RGlzdGFuY2U7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIm1vdmVUbyIsZnVuY3Rpb24oKXtyZXR1cm4gbW92ZVRvO30pO2Z1bmN0aW9uIGludCh2YWx1ZSl7cmV0dXJuIHBhcnNlSW50KHZhbHVlLDEwKTt9LyoqCiAqIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0NvbGxpbmVhcml0eQogKiB4PSh4MSt4MikvMgogKiB5PSh5MSt5MikvMgogKi9mdW5jdGlvbiBjaGVja0NvbGxpbmVhcihwMCxwMSxwMil7cmV0dXJuIGludChwMC54K3AyLngpPT09aW50KDIqcDEueCkmJmludChwMC55K3AyLnkpPT09aW50KDIqcDEueSk7fWZ1bmN0aW9uIGdldERpc3RhbmNlKHAxLHAyKXtyZXR1cm4gTWF0aC5zcXJ0KE1hdGgucG93KHAyLngtcDEueCwyKStNYXRoLnBvdyhwMi55LXAxLnksMikpO31mdW5jdGlvbiBtb3ZlVG8odG8sZnJvbSxyYWRpdXMpe3ZhciB2ZWN0b3I9e3g6dG8ueC1mcm9tLngseTp0by55LWZyb20ueX07dmFyIGxlbmd0aD1NYXRoLnNxcnQodmVjdG9yLngqdmVjdG9yLngrdmVjdG9yLnkqdmVjdG9yLnkpO3ZhciB1bml0VmVjdG9yPXt4OnZlY3Rvci54L2xlbmd0aCx5OnZlY3Rvci55L2xlbmd0aH07cmV0dXJue3g6ZnJvbS54K3VuaXRWZWN0b3IueCpyYWRpdXMseTpmcm9tLnkrdW5pdFZlY3Rvci55KnJhZGl1c307fS8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTcGFya2xpbmUvaGVscGVycy9wYXRoLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlNwYXJrbGluZS9oZWxwZXJzL3BhdGgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBnZW5QYXRoICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTcGFya2xpbmVIZWxwZXJzUGF0aFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdlblBhdGgiLGZ1bmN0aW9uKCl7cmV0dXJuIGdlblBhdGg7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21hdGhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL21hdGggKi8iLi9zcmMvY29tcG9uZW50cy9WU3BhcmtsaW5lL2hlbHBlcnMvbWF0aC50cyIpOy8qKgogKiBGcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS91bnNwbGFzaC9yZWFjdC10cmVuZC9ibG9iL21hc3Rlci9zcmMvaGVscGVycy9ET00uaGVscGVycy5qcyNMMTgKICovZnVuY3Rpb24gZ2VuUGF0aChwb2ludHMscmFkaXVzLGZpbGwsaGVpZ2h0KXtpZihmaWxsPT09dm9pZCAwKXtmaWxsPWZhbHNlO31pZihoZWlnaHQ9PT12b2lkIDApe2hlaWdodD03NTt9dmFyIHN0YXJ0PXBvaW50cy5zaGlmdCgpO3ZhciBlbmQ9cG9pbnRzW3BvaW50cy5sZW5ndGgtMV07cmV0dXJuKGZpbGw/Ik0iK3N0YXJ0LngrIiAiKyhoZWlnaHQtc3RhcnQueCsyKSsiIEwiK3N0YXJ0LngrIiAiK3N0YXJ0Lnk6Ik0iK3N0YXJ0LngrIiAiK3N0YXJ0LnkpK3BvaW50cy5tYXAoZnVuY3Rpb24ocG9pbnQsaW5kZXgpe3ZhciBuZXh0PXBvaW50c1tpbmRleCsxXTt2YXIgcHJldj1wb2ludHNbaW5kZXgtMV18fHN0YXJ0O3ZhciBpc0NvbGxpbmVhcj1uZXh0JiZPYmplY3QoX21hdGhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siY2hlY2tDb2xsaW5lYXIiXSkobmV4dCxwb2ludCxwcmV2KTtpZighbmV4dHx8aXNDb2xsaW5lYXIpe3JldHVybiJMIitwb2ludC54KyIgIitwb2ludC55O312YXIgdGhyZXNob2xkPU1hdGgubWluKE9iamVjdChfbWF0aF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJnZXREaXN0YW5jZSJdKShwcmV2LHBvaW50KSxPYmplY3QoX21hdGhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZ2V0RGlzdGFuY2UiXSkobmV4dCxwb2ludCkpO3ZhciBpc1Rvb0Nsb3NlRm9yUmFkaXVzPXRocmVzaG9sZC8yPHJhZGl1czt2YXIgcmFkaXVzRm9yUG9pbnQ9aXNUb29DbG9zZUZvclJhZGl1cz90aHJlc2hvbGQvMjpyYWRpdXM7dmFyIGJlZm9yZT1PYmplY3QoX21hdGhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1sibW92ZVRvIl0pKHByZXYscG9pbnQscmFkaXVzRm9yUG9pbnQpO3ZhciBhZnRlcj1PYmplY3QoX21hdGhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1sibW92ZVRvIl0pKG5leHQscG9pbnQscmFkaXVzRm9yUG9pbnQpO3JldHVybiJMIitiZWZvcmUueCsiICIrYmVmb3JlLnkrIlMiK3BvaW50LngrIiAiK3BvaW50LnkrIiAiK2FmdGVyLngrIiAiK2FmdGVyLnk7fSkuam9pbignJykrKGZpbGw/IkwiK2VuZC54KyIgIisoaGVpZ2h0LXN0YXJ0LngrMikrIiBaIjonJyk7fS8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTcGFya2xpbmUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTcGFya2xpbmUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZTcGFya2xpbmUsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNwYXJrbGluZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNwYXJrbGluZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlNwYXJrbGluZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZTcGFya2xpbmUvVlNwYXJrbGluZS50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTcGFya2xpbmUiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU3BhcmtsaW5lX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WU3BhcmtsaW5lX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU3BlZWREaWFsL1ZTcGVlZERpYWwuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTcGVlZERpYWwvVlNwZWVkRGlhbC5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNwZWVkRGlhbFZTcGVlZERpYWxTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU3BlZWREaWFsL1ZTcGVlZERpYWwudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlNwZWVkRGlhbC9WU3BlZWREaWFsLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNwZWVkRGlhbFZTcGVlZERpYWxUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU3BlZWREaWFsX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTcGVlZERpYWwuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZTcGVlZERpYWwvVlNwZWVkRGlhbC5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTcGVlZERpYWxfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVlNwZWVkRGlhbF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy90b2dnbGVhYmxlICovIi4vc3JjL21peGlucy90b2dnbGVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19wb3NpdGlvbmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvcG9zaXRpb25hYmxlICovIi4vc3JjL21peGlucy9wb3NpdGlvbmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RyYW5zaXRpb25hYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RyYW5zaXRpb25hYmxlICovIi4vc3JjL21peGlucy90cmFuc2l0aW9uYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX2NsaWNrX291dHNpZGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9kaXJlY3RpdmVzL2NsaWNrLW91dHNpZGUgKi8iLi9zcmMvZGlyZWN0aXZlcy9jbGljay1vdXRzaWRlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvLyBTdHlsZXMKLy8gTWl4aW5zCi8vIERpcmVjdGl2ZXMKLy8gVHlwZXMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSkoX21peGluc19wb3NpdGlvbmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sX21peGluc190cmFuc2l0aW9uYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pLmV4dGVuZCh7bmFtZTondi1zcGVlZC1kaWFsJyxkaXJlY3RpdmVzOntDbGlja091dHNpZGU6X2RpcmVjdGl2ZXNfY2xpY2tfb3V0c2lkZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il19LHByb3BzOntkaXJlY3Rpb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J3RvcCcsdmFsaWRhdG9yOmZ1bmN0aW9uIHZhbGlkYXRvcih2YWwpe3JldHVyblsndG9wJywncmlnaHQnLCdib3R0b20nLCdsZWZ0J10uaW5jbHVkZXModmFsKTt9fSxvcGVuT25Ib3ZlcjpCb29sZWFuLHRyYW5zaXRpb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J3NjYWxlLXRyYW5zaXRpb24nfX0sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3ZhciBfYTtyZXR1cm4gX2E9eyd2LXNwZWVkLWRpYWwnOnRydWUsJ3Ytc3BlZWQtZGlhbC0tdG9wJzp0aGlzLnRvcCwndi1zcGVlZC1kaWFsLS1yaWdodCc6dGhpcy5yaWdodCwndi1zcGVlZC1kaWFsLS1ib3R0b20nOnRoaXMuYm90dG9tLCd2LXNwZWVkLWRpYWwtLWxlZnQnOnRoaXMubGVmdCwndi1zcGVlZC1kaWFsLS1hYnNvbHV0ZSc6dGhpcy5hYnNvbHV0ZSwndi1zcGVlZC1kaWFsLS1maXhlZCc6dGhpcy5maXhlZH0sX2FbInYtc3BlZWQtZGlhbC0tZGlyZWN0aW9uLSIrdGhpcy5kaXJlY3Rpb25dPXRydWUsX2FbJ3Ytc3BlZWQtZGlhbC0taXMtYWN0aXZlJ109dGhpcy5pc0FjdGl2ZSxfYTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBfdGhpcz10aGlzO3ZhciBjaGlsZHJlbj1bXTt2YXIgZGF0YT17Y2xhc3M6dGhpcy5jbGFzc2VzLGRpcmVjdGl2ZXM6W3tuYW1lOidjbGljay1vdXRzaWRlJyx2YWx1ZTpmdW5jdGlvbiB2YWx1ZSgpe3JldHVybiBfdGhpcy5pc0FjdGl2ZT1mYWxzZTt9fV0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCl7cmV0dXJuIF90aGlzLmlzQWN0aXZlPSFfdGhpcy5pc0FjdGl2ZTt9fX07aWYodGhpcy5vcGVuT25Ib3Zlcil7ZGF0YS5vbi5tb3VzZWVudGVyPWZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLmlzQWN0aXZlPXRydWU7fTtkYXRhLm9uLm1vdXNlbGVhdmU9ZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuaXNBY3RpdmU9ZmFsc2U7fTt9aWYodGhpcy5pc0FjdGl2ZSl7dmFyIGJ0bkNvdW50XzE9MDtjaGlsZHJlbj0odGhpcy4kc2xvdHMuZGVmYXVsdHx8W10pLm1hcChmdW5jdGlvbihiLGkpe2lmKGIudGFnJiZ0eXBlb2YgYi5jb21wb25lbnRPcHRpb25zIT09J3VuZGVmaW5lZCcmJihiLmNvbXBvbmVudE9wdGlvbnMuQ3Rvci5vcHRpb25zLm5hbWU9PT0ndi1idG4nfHxiLmNvbXBvbmVudE9wdGlvbnMuQ3Rvci5vcHRpb25zLm5hbWU9PT0ndi10b29sdGlwJykpe2J0bkNvdW50XzErKztyZXR1cm4gaCgnZGl2Jyx7c3R5bGU6e3RyYW5zaXRpb25EZWxheTpidG5Db3VudF8xKjAuMDUrJ3MnfSxrZXk6aX0sW2JdKTt9ZWxzZXtiLmtleT1pO3JldHVybiBiO319KTt9dmFyIGxpc3Q9aCgndHJhbnNpdGlvbi1ncm91cCcse2NsYXNzOid2LXNwZWVkLWRpYWxfX2xpc3QnLHByb3BzOntuYW1lOnRoaXMudHJhbnNpdGlvbixtb2RlOnRoaXMubW9kZSxvcmlnaW46dGhpcy5vcmlnaW4sdGFnOidkaXYnfX0sY2hpbGRyZW4pO3JldHVybiBoKCdkaXYnLGRhdGEsW3RoaXMuJHNsb3RzLmFjdGl2YXRvcixsaXN0XSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTcGVlZERpYWwvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTcGVlZERpYWwvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZTcGVlZERpYWwsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlNwZWVkRGlhbEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNwZWVkRGlhbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlNwZWVkRGlhbCAqLyIuL3NyYy9jb21wb25lbnRzL1ZTcGVlZERpYWwvVlNwZWVkRGlhbC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTcGVlZERpYWwiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU3BlZWREaWFsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WU3BlZWREaWFsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU3RlcHBlci9WU3RlcHBlci5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WU3RlcHBlci9WU3RlcHBlci5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWU3RlcHBlclZTdGVwcGVyU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlN0ZXBwZXIvVlN0ZXBwZXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WU3RlcHBlci9WU3RlcHBlci50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlN0ZXBwZXJWU3RlcHBlclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTdGVwcGVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTdGVwcGVyLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WU3RlcHBlci9WU3RlcHBlci5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTdGVwcGVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZTdGVwcGVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19yZWdpc3RyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9yZWdpc3RyYWJsZSAqLyIuL3NyYy9taXhpbnMvcmVnaXN0cmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3Byb3h5YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9wcm94eWFibGUgKi8iLi9zcmMvbWl4aW5zL3Byb3h5YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gU3R5bGVzCi8vIE1peGlucwovLyBVdGlsaXRpZXMKdmFyIGJhc2VNaXhpbnM9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0pKE9iamVjdChfbWl4aW5zX3JlZ2lzdHJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bInByb3ZpZGUiXSkoJ3N0ZXBwZXInKSxfbWl4aW5zX3Byb3h5YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKTsvKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPWJhc2VNaXhpbnMuZXh0ZW5kKHtuYW1lOid2LXN0ZXBwZXInLHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybntzdGVwQ2xpY2s6dGhpcy5zdGVwQ2xpY2ssaXNWZXJ0aWNhbDp0aGlzLnZlcnRpY2FsfTt9LHByb3BzOnthbHRMYWJlbHM6Qm9vbGVhbixub25MaW5lYXI6Qm9vbGVhbix2ZXJ0aWNhbDpCb29sZWFufSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aXNCb290ZWQ6ZmFsc2Usc3RlcHM6W10sY29udGVudDpbXSxpc1JldmVyc2U6ZmFsc2V9O30sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7J3Ytc3RlcHBlci0taXMtYm9vdGVkJzp0aGlzLmlzQm9vdGVkLCd2LXN0ZXBwZXItLXZlcnRpY2FsJzp0aGlzLnZlcnRpY2FsLCd2LXN0ZXBwZXItLWFsdC1sYWJlbHMnOnRoaXMuYWx0TGFiZWxzLCd2LXN0ZXBwZXItLW5vbi1saW5lYXInOnRoaXMubm9uTGluZWFyfSx0aGlzLnRoZW1lQ2xhc3Nlcyk7fX0sd2F0Y2g6e2ludGVybmFsVmFsdWU6ZnVuY3Rpb24gaW50ZXJuYWxWYWx1ZSh2YWwsb2xkVmFsKXt0aGlzLmlzUmV2ZXJzZT1OdW1iZXIodmFsKTxOdW1iZXIob2xkVmFsKTtvbGRWYWwmJih0aGlzLmlzQm9vdGVkPXRydWUpO3RoaXMudXBkYXRlVmlldygpO319LGNyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpey8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovaWYodGhpcy4kbGlzdGVuZXJzLmlucHV0KXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJicmVha2luZyJdKSgnQGlucHV0JywnQGNoYW5nZScsdGhpcyk7fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dGhpcy5pbnRlcm5hbExhenlWYWx1ZT10aGlzLnZhbHVlfHwodGhpcy5zdGVwc1swXXx8e30pLnN0ZXB8fDE7dGhpcy51cGRhdGVWaWV3KCk7fSxtZXRob2RzOntyZWdpc3RlcjpmdW5jdGlvbiByZWdpc3RlcihpdGVtKXtpZihpdGVtLiRvcHRpb25zLm5hbWU9PT0ndi1zdGVwcGVyLXN0ZXAnKXt0aGlzLnN0ZXBzLnB1c2goaXRlbSk7fWVsc2UgaWYoaXRlbS4kb3B0aW9ucy5uYW1lPT09J3Ytc3RlcHBlci1jb250ZW50Jyl7aXRlbS5pc1ZlcnRpY2FsPXRoaXMudmVydGljYWw7dGhpcy5jb250ZW50LnB1c2goaXRlbSk7fX0sdW5yZWdpc3RlcjpmdW5jdGlvbiB1bnJlZ2lzdGVyKGl0ZW0pe2lmKGl0ZW0uJG9wdGlvbnMubmFtZT09PSd2LXN0ZXBwZXItc3RlcCcpe3RoaXMuc3RlcHM9dGhpcy5zdGVwcy5maWx0ZXIoZnVuY3Rpb24oaSl7cmV0dXJuIGkhPT1pdGVtO30pO31lbHNlIGlmKGl0ZW0uJG9wdGlvbnMubmFtZT09PSd2LXN0ZXBwZXItY29udGVudCcpe2l0ZW0uaXNWZXJ0aWNhbD10aGlzLnZlcnRpY2FsO3RoaXMuY29udGVudD10aGlzLmNvbnRlbnQuZmlsdGVyKGZ1bmN0aW9uKGkpe3JldHVybiBpIT09aXRlbTt9KTt9fSxzdGVwQ2xpY2s6ZnVuY3Rpb24gc3RlcENsaWNrKHN0ZXApe3ZhciBfdGhpcz10aGlzO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLmludGVybmFsVmFsdWU9c3RlcDt9KTt9LHVwZGF0ZVZpZXc6ZnVuY3Rpb24gdXBkYXRlVmlldygpe2Zvcih2YXIgaW5kZXg9dGhpcy5zdGVwcy5sZW5ndGg7LS1pbmRleD49MDspe3RoaXMuc3RlcHNbaW5kZXhdLnRvZ2dsZSh0aGlzLmludGVybmFsVmFsdWUpO31mb3IodmFyIGluZGV4PXRoaXMuY29udGVudC5sZW5ndGg7LS1pbmRleD49MDspe3RoaXMuY29udGVudFtpbmRleF0udG9nZ2xlKHRoaXMuaW50ZXJuYWxWYWx1ZSx0aGlzLmlzUmV2ZXJzZSk7fX19LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXN0ZXBwZXInLGNsYXNzOnRoaXMuY2xhc3Nlc30sdGhpcy4kc2xvdHMuZGVmYXVsdCk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTdGVwcGVyL1ZTdGVwcGVyQ29udGVudC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WU3RlcHBlci9WU3RlcHBlckNvbnRlbnQudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWU3RlcHBlclZTdGVwcGVyQ29udGVudFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdHJhbnNpdGlvbnMgKi8iLi9zcmMvY29tcG9uZW50cy90cmFuc2l0aW9ucy9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfcmVnaXN0cmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvcmVnaXN0cmFibGUgKi8iLi9zcmMvbWl4aW5zL3JlZ2lzdHJhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8vIEhlbHBlcnMKLy8gVXRpbGl0aWVzCnZhciBiYXNlTWl4aW5zPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKShPYmplY3QoX21peGluc19yZWdpc3RyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJpbmplY3QiXSkoJ3N0ZXBwZXInLCd2LXN0ZXBwZXItY29udGVudCcsJ3Ytc3RlcHBlcicpKTsvKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPWJhc2VNaXhpbnMuZXh0ZW5kKCkuZXh0ZW5kKHtuYW1lOid2LXN0ZXBwZXItY29udGVudCcsaW5qZWN0Ontpc1ZlcnRpY2FsUHJvdmlkZWQ6e2Zyb206J2lzVmVydGljYWwnfX0scHJvcHM6e3N0ZXA6e3R5cGU6W051bWJlcixTdHJpbmddLHJlcXVpcmVkOnRydWV9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aGVpZ2h0OjAsLy8gTXVzdCBiZSBudWxsIHRvIGFsbG93Ci8vIHByZXZpb3VzIGNvbXBhcmlzb24KaXNBY3RpdmU6bnVsbCxpc1JldmVyc2U6ZmFsc2UsaXNWZXJ0aWNhbDp0aGlzLmlzVmVydGljYWxQcm92aWRlZH07fSxjb21wdXRlZDp7Y29tcHV0ZWRUcmFuc2l0aW9uOmZ1bmN0aW9uIGNvbXB1dGVkVHJhbnNpdGlvbigpey8vIEZpeCBmb3IgIzg5NzgKdmFyIHJldmVyc2U9dGhpcy4kdnVldGlmeS5ydGw/IXRoaXMuaXNSZXZlcnNlOnRoaXMuaXNSZXZlcnNlO3JldHVybiByZXZlcnNlP190cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJWVGFiUmV2ZXJzZVRyYW5zaXRpb24iXTpfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siVlRhYlRyYW5zaXRpb24iXTt9LHN0eWxlczpmdW5jdGlvbiBzdHlsZXMoKXtpZighdGhpcy5pc1ZlcnRpY2FsKXJldHVybnt9O3JldHVybntoZWlnaHQ6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmhlaWdodCl9O319LHdhdGNoOntpc0FjdGl2ZTpmdW5jdGlvbiBpc0FjdGl2ZShjdXJyZW50LHByZXZpb3VzKXsvLyBJZiBhY3RpdmUgYW5kIHRoZSBwcmV2aW91cyBzdGF0ZQovLyB3YXMgbnVsbCwgaXMganVzdCBib290aW5nIHVwCmlmKGN1cnJlbnQmJnByZXZpb3VzPT1udWxsKXt0aGlzLmhlaWdodD0nYXV0byc7cmV0dXJuO31pZighdGhpcy5pc1ZlcnRpY2FsKXJldHVybjtpZih0aGlzLmlzQWN0aXZlKXRoaXMuZW50ZXIoKTtlbHNlIHRoaXMubGVhdmUoKTt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLiRyZWZzLndyYXBwZXIuYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsdGhpcy5vblRyYW5zaXRpb24sZmFsc2UpO3RoaXMuc3RlcHBlciYmdGhpcy5zdGVwcGVyLnJlZ2lzdGVyKHRoaXMpO30sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7dGhpcy4kcmVmcy53cmFwcGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLHRoaXMub25UcmFuc2l0aW9uLGZhbHNlKTt0aGlzLnN0ZXBwZXImJnRoaXMuc3RlcHBlci51bnJlZ2lzdGVyKHRoaXMpO30sbWV0aG9kczp7b25UcmFuc2l0aW9uOmZ1bmN0aW9uIG9uVHJhbnNpdGlvbihlKXtpZighdGhpcy5pc0FjdGl2ZXx8ZS5wcm9wZXJ0eU5hbWUhPT0naGVpZ2h0JylyZXR1cm47dGhpcy5oZWlnaHQ9J2F1dG8nO30sZW50ZXI6ZnVuY3Rpb24gZW50ZXIoKXt2YXIgX3RoaXM9dGhpczt2YXIgc2Nyb2xsSGVpZ2h0PTA7Ly8gUmVuZGVyIGJ1ZyB3aXRoIGhlaWdodApyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKXtzY3JvbGxIZWlnaHQ9X3RoaXMuJHJlZnMud3JhcHBlci5zY3JvbGxIZWlnaHQ7fSk7dGhpcy5oZWlnaHQ9MDsvLyBHaXZlIHRoZSBjb2xsYXBzaW5nIGVsZW1lbnQgdGltZSB0byBjb2xsYXBzZQpzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLmlzQWN0aXZlJiYoX3RoaXMuaGVpZ2h0PXNjcm9sbEhlaWdodHx8J2F1dG8nKTt9LDQ1MCk7fSxsZWF2ZTpmdW5jdGlvbiBsZWF2ZSgpe3ZhciBfdGhpcz10aGlzO3RoaXMuaGVpZ2h0PXRoaXMuJHJlZnMud3JhcHBlci5jbGllbnRIZWlnaHQ7c2V0VGltZW91dChmdW5jdGlvbigpe3JldHVybiBfdGhpcy5oZWlnaHQ9MDt9LDEwKTt9LHRvZ2dsZTpmdW5jdGlvbiB0b2dnbGUoc3RlcCxyZXZlcnNlKXt0aGlzLmlzQWN0aXZlPXN0ZXAudG9TdHJpbmcoKT09PXRoaXMuc3RlcC50b1N0cmluZygpO3RoaXMuaXNSZXZlcnNlPXJldmVyc2U7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgY29udGVudERhdGE9e3N0YXRpY0NsYXNzOid2LXN0ZXBwZXJfX2NvbnRlbnQnfTt2YXIgd3JhcHBlckRhdGE9e3N0YXRpY0NsYXNzOid2LXN0ZXBwZXJfX3dyYXBwZXInLHN0eWxlOnRoaXMuc3R5bGVzLHJlZjond3JhcHBlcid9O2lmKCF0aGlzLmlzVmVydGljYWwpe2NvbnRlbnREYXRhLmRpcmVjdGl2ZXM9W3tuYW1lOidzaG93Jyx2YWx1ZTp0aGlzLmlzQWN0aXZlfV07fXZhciB3cmFwcGVyPWgoJ2Rpdicsd3JhcHBlckRhdGEsW3RoaXMuJHNsb3RzLmRlZmF1bHRdKTt2YXIgY29udGVudD1oKCdkaXYnLGNvbnRlbnREYXRhLFt3cmFwcGVyXSk7cmV0dXJuIGgodGhpcy5jb21wdXRlZFRyYW5zaXRpb24se29uOnRoaXMuJGxpc3RlbmVyc30sW2NvbnRlbnRdKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlN0ZXBwZXIvVlN0ZXBwZXJTdGVwLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTdGVwcGVyL1ZTdGVwcGVyU3RlcC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTdGVwcGVyVlN0ZXBwZXJTdGVwVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3JlZ2lzdHJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3JlZ2lzdHJhYmxlICovIi4vc3JjL21peGlucy9yZWdpc3RyYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX3JpcHBsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL2RpcmVjdGl2ZXMvcmlwcGxlICovIi4vc3JjL2RpcmVjdGl2ZXMvcmlwcGxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvLyBDb21wb25lbnRzCi8vIE1peGlucwovLyBEaXJlY3RpdmVzCi8vIFV0aWxpdGllcwp2YXIgYmFzZU1peGlucz1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSkoX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLE9iamVjdChfbWl4aW5zX3JlZ2lzdHJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImluamVjdCJdKSgnc3RlcHBlcicsJ3Ytc3RlcHBlci1zdGVwJywndi1zdGVwcGVyJykpOy8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09YmFzZU1peGlucy5leHRlbmQoKS5leHRlbmQoe25hbWU6J3Ytc3RlcHBlci1zdGVwJyxkaXJlY3RpdmVzOntyaXBwbGU6X2RpcmVjdGl2ZXNfcmlwcGxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXX0saW5qZWN0Olsnc3RlcENsaWNrJ10scHJvcHM6e2NvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OidwcmltYXJ5J30sY29tcGxldGU6Qm9vbGVhbixjb21wbGV0ZUljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRjb21wbGV0ZSd9LGVkaXRhYmxlOkJvb2xlYW4sZWRpdEljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRlZGl0J30sZXJyb3JJY29uOnt0eXBlOlN0cmluZyxkZWZhdWx0OickZXJyb3InfSxydWxlczp7dHlwZTpBcnJheSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuW107fX0sc3RlcDpbTnVtYmVyLFN0cmluZ119LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntpc0FjdGl2ZTpmYWxzZSxpc0luYWN0aXZlOnRydWV9O30sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybnsndi1zdGVwcGVyX19zdGVwLS1hY3RpdmUnOnRoaXMuaXNBY3RpdmUsJ3Ytc3RlcHBlcl9fc3RlcC0tZWRpdGFibGUnOnRoaXMuZWRpdGFibGUsJ3Ytc3RlcHBlcl9fc3RlcC0taW5hY3RpdmUnOnRoaXMuaXNJbmFjdGl2ZSwndi1zdGVwcGVyX19zdGVwLS1lcnJvciBlcnJvci0tdGV4dCc6dGhpcy5oYXNFcnJvciwndi1zdGVwcGVyX19zdGVwLS1jb21wbGV0ZSc6dGhpcy5jb21wbGV0ZX07fSxoYXNFcnJvcjpmdW5jdGlvbiBoYXNFcnJvcigpe3JldHVybiB0aGlzLnJ1bGVzLnNvbWUoZnVuY3Rpb24odmFsaWRhdGUpe3JldHVybiB2YWxpZGF0ZSgpIT09dHJ1ZTt9KTt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLnN0ZXBwZXImJnRoaXMuc3RlcHBlci5yZWdpc3Rlcih0aGlzKTt9LGJlZm9yZURlc3Ryb3k6ZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpe3RoaXMuc3RlcHBlciYmdGhpcy5zdGVwcGVyLnVucmVnaXN0ZXIodGhpcyk7fSxtZXRob2RzOntjbGljazpmdW5jdGlvbiBjbGljayhlKXtlLnN0b3BQcm9wYWdhdGlvbigpO3RoaXMuJGVtaXQoJ2NsaWNrJyxlKTtpZih0aGlzLmVkaXRhYmxlKXt0aGlzLnN0ZXBDbGljayh0aGlzLnN0ZXApO319LGdlbkljb246ZnVuY3Rpb24gZ2VuSWNvbihpY29uKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLGljb24pO30sZ2VuTGFiZWw6ZnVuY3Rpb24gZ2VuTGFiZWwoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3Ytc3RlcHBlcl9fbGFiZWwnfSx0aGlzLiRzbG90cy5kZWZhdWx0KTt9LGdlblN0ZXA6ZnVuY3Rpb24gZ2VuU3RlcCgpe3ZhciBjb2xvcj0hdGhpcy5oYXNFcnJvciYmKHRoaXMuY29tcGxldGV8fHRoaXMuaXNBY3RpdmUpP3RoaXMuY29sb3I6ZmFsc2U7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLHRoaXMuc2V0QmFja2dyb3VuZENvbG9yKGNvbG9yLHtzdGF0aWNDbGFzczondi1zdGVwcGVyX19zdGVwX19zdGVwJ30pLHRoaXMuZ2VuU3RlcENvbnRlbnQoKSk7fSxnZW5TdGVwQ29udGVudDpmdW5jdGlvbiBnZW5TdGVwQ29udGVudCgpe3ZhciBjaGlsZHJlbj1bXTtpZih0aGlzLmhhc0Vycm9yKXtjaGlsZHJlbi5wdXNoKHRoaXMuZ2VuSWNvbih0aGlzLmVycm9ySWNvbikpO31lbHNlIGlmKHRoaXMuY29tcGxldGUpe2lmKHRoaXMuZWRpdGFibGUpe2NoaWxkcmVuLnB1c2godGhpcy5nZW5JY29uKHRoaXMuZWRpdEljb24pKTt9ZWxzZXtjaGlsZHJlbi5wdXNoKHRoaXMuZ2VuSWNvbih0aGlzLmNvbXBsZXRlSWNvbikpO319ZWxzZXtjaGlsZHJlbi5wdXNoKFN0cmluZyh0aGlzLnN0ZXApKTt9cmV0dXJuIGNoaWxkcmVuO30sdG9nZ2xlOmZ1bmN0aW9uIHRvZ2dsZShzdGVwKXt0aGlzLmlzQWN0aXZlPXN0ZXAudG9TdHJpbmcoKT09PXRoaXMuc3RlcC50b1N0cmluZygpO3RoaXMuaXNJbmFjdGl2ZT1OdW1iZXIoc3RlcCk8TnVtYmVyKHRoaXMuc3RlcCk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXtyZXR1cm4gaCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3Ytc3RlcHBlcl9fc3RlcCcsY2xhc3M6dGhpcy5jbGFzc2VzLGRpcmVjdGl2ZXM6W3tuYW1lOidyaXBwbGUnLHZhbHVlOnRoaXMuZWRpdGFibGV9XSxvbjp7Y2xpY2s6dGhpcy5jbGlja319LFt0aGlzLmdlblN0ZXAoKSx0aGlzLmdlbkxhYmVsKCldKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlN0ZXBwZXIvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WU3RlcHBlci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZTdGVwcGVyLCBWU3RlcHBlckNvbnRlbnQsIFZTdGVwcGVyU3RlcCwgVlN0ZXBwZXJIZWFkZXIsIFZTdGVwcGVySXRlbXMsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlN0ZXBwZXJJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTdGVwcGVySGVhZGVyIixmdW5jdGlvbigpe3JldHVybiBWU3RlcHBlckhlYWRlcjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlN0ZXBwZXJJdGVtcyIsZnVuY3Rpb24oKXtyZXR1cm4gVlN0ZXBwZXJJdGVtczt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU3RlcHBlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlN0ZXBwZXIgKi8iLi9zcmMvY29tcG9uZW50cy9WU3RlcHBlci9WU3RlcHBlci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTdGVwcGVyIixmdW5jdGlvbigpe3JldHVybiBfVlN0ZXBwZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU3RlcHBlclN0ZXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTdGVwcGVyU3RlcCAqLyIuL3NyYy9jb21wb25lbnRzL1ZTdGVwcGVyL1ZTdGVwcGVyU3RlcC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTdGVwcGVyU3RlcCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZTdGVwcGVyU3RlcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTdGVwcGVyQ29udGVudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlN0ZXBwZXJDb250ZW50ICovIi4vc3JjL2NvbXBvbmVudHMvVlN0ZXBwZXIvVlN0ZXBwZXJDb250ZW50LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlN0ZXBwZXJDb250ZW50IixmdW5jdGlvbigpe3JldHVybiBfVlN0ZXBwZXJDb250ZW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXTt9KTt2YXIgVlN0ZXBwZXJIZWFkZXI9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siY3JlYXRlU2ltcGxlRnVuY3Rpb25hbCJdKSgndi1zdGVwcGVyX19oZWFkZXInKTt2YXIgVlN0ZXBwZXJJdGVtcz1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjcmVhdGVTaW1wbGVGdW5jdGlvbmFsIl0pKCd2LXN0ZXBwZXJfX2l0ZW1zJyk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT17JF92dWV0aWZ5X3N1YmNvbXBvbmVudHM6e1ZTdGVwcGVyOl9WU3RlcHBlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sVlN0ZXBwZXJDb250ZW50Ol9WU3RlcHBlckNvbnRlbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLFZTdGVwcGVyU3RlcDpfVlN0ZXBwZXJTdGVwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxWU3RlcHBlckhlYWRlcjpWU3RlcHBlckhlYWRlcixWU3RlcHBlckl0ZW1zOlZTdGVwcGVySXRlbXN9fTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU3ViaGVhZGVyL1ZTdWJoZWFkZXIuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTdWJoZWFkZXIvVlN1YmhlYWRlci5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlN1YmhlYWRlclZTdWJoZWFkZXJTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU3ViaGVhZGVyL1ZTdWJoZWFkZXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlN1YmhlYWRlci9WU3ViaGVhZGVyLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlN1YmhlYWRlclZTdWJoZWFkZXJUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU3ViaGVhZGVyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTdWJoZWFkZXIuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZTdWJoZWFkZXIvVlN1YmhlYWRlci5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTdWJoZWFkZXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVlN1YmhlYWRlcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBNaXhpbnMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLyogQHZ1ZS9jb21wb25lbnQgKi8pLmV4dGVuZCh7bmFtZTondi1zdWJoZWFkZXInLHByb3BzOntpbnNldDpCb29sZWFufSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3JldHVybiBoKCdkaXYnLHtzdGF0aWNDbGFzczondi1zdWJoZWFkZXInLGNsYXNzOl9fYXNzaWduKHsndi1zdWJoZWFkZXItLWluc2V0Jzp0aGlzLmluc2V0fSx0aGlzLnRoZW1lQ2xhc3NlcyksYXR0cnM6dGhpcy4kYXR0cnMsb246dGhpcy4kbGlzdGVuZXJzfSx0aGlzLiRzbG90cy5kZWZhdWx0KTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlN1YmhlYWRlci9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlN1YmhlYWRlci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVlN1YmhlYWRlciwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWU3ViaGVhZGVySW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU3ViaGVhZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU3ViaGVhZGVyICovIi4vc3JjL2NvbXBvbmVudHMvVlN1YmhlYWRlci9WU3ViaGVhZGVyLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlN1YmhlYWRlciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZTdWJoZWFkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZTdWJoZWFkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTd2l0Y2gvVlN3aXRjaC5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlN3aXRjaC9WU3dpdGNoLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWU3dpdGNoVlN3aXRjaFNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTd2l0Y2gvVlN3aXRjaC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WU3dpdGNoL1ZTd2l0Y2gudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWU3dpdGNoVlN3aXRjaFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3N0eWxlc19jb21wb25lbnRzX3NlbGVjdGlvbl9jb250cm9sc19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vc3R5bGVzL2NvbXBvbmVudHMvX3NlbGVjdGlvbi1jb250cm9scy5zYXNzICovIi4vc3JjL3N0eWxlcy9jb21wb25lbnRzL19zZWxlY3Rpb24tY29udHJvbHMuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9zdHlsZXNfY29tcG9uZW50c19zZWxlY3Rpb25fY29udHJvbHNfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfc3R5bGVzX2NvbXBvbmVudHNfc2VsZWN0aW9uX2NvbnRyb2xzX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTd2l0Y2hfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlN3aXRjaC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlN3aXRjaC9WU3dpdGNoLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlN3aXRjaF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WU3dpdGNoX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19zZWxlY3RhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3NlbGVjdGFibGUgKi8iLi9zcmMvbWl4aW5zL3NlbGVjdGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVklucHV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVklucHV0ICovIi4vc3JjL2NvbXBvbmVudHMvVklucHV0L2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfdG91Y2hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9kaXJlY3RpdmVzL3RvdWNoICovIi4vc3JjL2RpcmVjdGl2ZXMvdG91Y2gvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi90cmFuc2l0aW9ucyAqLyIuL3NyYy9jb21wb25lbnRzL3RyYW5zaXRpb25zL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZQcm9ncmVzc0NpcmN1bGFyX1ZQcm9ncmVzc0NpcmN1bGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVlByb2dyZXNzQ2lyY3VsYXIvVlByb2dyZXNzQ2lyY3VsYXIgKi8iLi9zcmMvY29tcG9uZW50cy9WUHJvZ3Jlc3NDaXJjdWxhci9WUHJvZ3Jlc3NDaXJjdWxhci50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gTWl4aW5zCi8vIERpcmVjdGl2ZXMKLy8gQ29tcG9uZW50cwovLyBIZWxwZXJzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X21peGluc19zZWxlY3RhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5leHRlbmQoe25hbWU6J3Ytc3dpdGNoJyxkaXJlY3RpdmVzOntUb3VjaDpfZGlyZWN0aXZlc190b3VjaF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il19LHByb3BzOntpbnNldDpCb29sZWFuLGxvYWRpbmc6e3R5cGU6W0Jvb2xlYW4sU3RyaW5nXSxkZWZhdWx0OmZhbHNlfSxmbGF0Ont0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX19LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oe30sX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LWlucHV0LS1zZWxlY3Rpb24tY29udHJvbHMgdi1pbnB1dC0tc3dpdGNoJzp0cnVlLCd2LWlucHV0LS1zd2l0Y2gtLWZsYXQnOnRoaXMuZmxhdCwndi1pbnB1dC0tc3dpdGNoLS1pbnNldCc6dGhpcy5pbnNldH0pO30sYXR0cnM6ZnVuY3Rpb24gYXR0cnMoKXtyZXR1cm57J2FyaWEtY2hlY2tlZCc6U3RyaW5nKHRoaXMuaXNBY3RpdmUpLCdhcmlhLWRpc2FibGVkJzpTdHJpbmcodGhpcy5kaXNhYmxlZCkscm9sZTonc3dpdGNoJ307fSwvLyBEbyBub3QgcmV0dXJuIHVuZGVmaW5lZCBpZiBkaXNhYmxlZCwKLy8gYWNjb3JkaW5nIHRvIHNwZWMsIHNob3VsZCBzdGlsbCBzaG93Ci8vIGEgY29sb3Igd2hlbiBkaXNhYmxlZCBhbmQgYWN0aXZlCnZhbGlkYXRpb25TdGF0ZTpmdW5jdGlvbiB2YWxpZGF0aW9uU3RhdGUoKXtpZih0aGlzLmhhc0Vycm9yJiZ0aGlzLnNob3VsZFZhbGlkYXRlKXJldHVybidlcnJvcic7aWYodGhpcy5oYXNTdWNjZXNzKXJldHVybidzdWNjZXNzJztpZih0aGlzLmhhc0NvbG9yIT09bnVsbClyZXR1cm4gdGhpcy5jb21wdXRlZENvbG9yO3JldHVybiB1bmRlZmluZWQ7fSxzd2l0Y2hEYXRhOmZ1bmN0aW9uIHN3aXRjaERhdGEoKXtyZXR1cm4gdGhpcy5zZXRUZXh0Q29sb3IodGhpcy5sb2FkaW5nP3VuZGVmaW5lZDp0aGlzLnZhbGlkYXRpb25TdGF0ZSx7Y2xhc3M6dGhpcy50aGVtZUNsYXNzZXN9KTt9fSxtZXRob2RzOntnZW5EZWZhdWx0U2xvdDpmdW5jdGlvbiBnZW5EZWZhdWx0U2xvdCgpe3JldHVyblt0aGlzLmdlblN3aXRjaCgpLHRoaXMuZ2VuTGFiZWwoKV07fSxnZW5Td2l0Y2g6ZnVuY3Rpb24gZ2VuU3dpdGNoKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LWlucHV0LS1zZWxlY3Rpb24tY29udHJvbHNfX2lucHV0J30sW3RoaXMuZ2VuSW5wdXQoJ2NoZWNrYm94JyxfX2Fzc2lnbih7fSx0aGlzLmF0dHJzLHRoaXMuYXR0cnMkKSksdGhpcy5nZW5SaXBwbGUodGhpcy5zZXRUZXh0Q29sb3IodGhpcy52YWxpZGF0aW9uU3RhdGUse2RpcmVjdGl2ZXM6W3tuYW1lOid0b3VjaCcsdmFsdWU6e2xlZnQ6dGhpcy5vblN3aXBlTGVmdCxyaWdodDp0aGlzLm9uU3dpcGVSaWdodH19XX0pKSx0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLF9fYXNzaWduKHtzdGF0aWNDbGFzczondi1pbnB1dC0tc3dpdGNoX190cmFjayd9LHRoaXMuc3dpdGNoRGF0YSkpLHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsX19hc3NpZ24oe3N0YXRpY0NsYXNzOid2LWlucHV0LS1zd2l0Y2hfX3RodW1iJ30sdGhpcy5zd2l0Y2hEYXRhKSxbdGhpcy5nZW5Qcm9ncmVzcygpXSldKTt9LGdlblByb2dyZXNzOmZ1bmN0aW9uIGdlblByb2dyZXNzKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bIlZGYWJUcmFuc2l0aW9uIl0se30sW3RoaXMubG9hZGluZz09PWZhbHNlP251bGw6dGhpcy4kc2xvdHMucHJvZ3Jlc3N8fHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZQcm9ncmVzc0NpcmN1bGFyX1ZQcm9ncmVzc0NpcmN1bGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXSx7cHJvcHM6e2NvbG9yOnRoaXMubG9hZGluZz09PXRydWV8fHRoaXMubG9hZGluZz09PScnP3RoaXMuY29sb3J8fCdwcmltYXJ5Jzp0aGlzLmxvYWRpbmcsc2l6ZToxNix3aWR0aDoyLGluZGV0ZXJtaW5hdGU6dHJ1ZX19KV0pO30sb25Td2lwZUxlZnQ6ZnVuY3Rpb24gb25Td2lwZUxlZnQoKXtpZih0aGlzLmlzQWN0aXZlKXRoaXMub25DaGFuZ2UoKTt9LG9uU3dpcGVSaWdodDpmdW5jdGlvbiBvblN3aXBlUmlnaHQoKXtpZighdGhpcy5pc0FjdGl2ZSl0aGlzLm9uQ2hhbmdlKCk7fSxvbktleWRvd246ZnVuY3Rpb24gb25LZXlkb3duKGUpe2lmKGUua2V5Q29kZT09PV91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1sia2V5Q29kZXMiXS5sZWZ0JiZ0aGlzLmlzQWN0aXZlfHxlLmtleUNvZGU9PT1fdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImtleUNvZGVzIl0ucmlnaHQmJiF0aGlzLmlzQWN0aXZlKXRoaXMub25DaGFuZ2UoKTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZTd2l0Y2gvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTd2l0Y2gvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZTd2l0Y2gsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlN3aXRjaEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlN3aXRjaF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlN3aXRjaCAqLyIuL3NyYy9jb21wb25lbnRzL1ZTd2l0Y2gvVlN3aXRjaC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTd2l0Y2giLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU3dpdGNoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WU3dpdGNoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU3lzdGVtQmFyL1ZTeXN0ZW1CYXIuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZTeXN0ZW1CYXIvVlN5c3RlbUJhci5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlN5c3RlbUJhclZTeXN0ZW1CYXJTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU3lzdGVtQmFyL1ZTeXN0ZW1CYXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlN5c3RlbUJhci9WU3lzdGVtQmFyLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlN5c3RlbUJhclZTeXN0ZW1CYXJUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU3lzdGVtQmFyX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTeXN0ZW1CYXIuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZTeXN0ZW1CYXIvVlN5c3RlbUJhci5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTeXN0ZW1CYXJfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVlN5c3RlbUJhcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfYXBwbGljYXRpb25hYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2FwcGxpY2F0aW9uYWJsZSAqLyIuL3NyYy9taXhpbnMvYXBwbGljYXRpb25hYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy90aGVtZWFibGUgKi8iLi9zcmMvbWl4aW5zL3RoZW1lYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBNaXhpbnMKLy8gVXRpbGl0aWVzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0pKE9iamVjdChfbWl4aW5zX2FwcGxpY2F0aW9uYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0pKCdiYXInLFsnaGVpZ2h0Jywnd2luZG93J10pLF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSxfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0vKiBAdnVlL2NvbXBvbmVudCAqLykuZXh0ZW5kKHtuYW1lOid2LXN5c3RlbS1iYXInLHByb3BzOntoZWlnaHQ6W051bWJlcixTdHJpbmddLGxpZ2h0c091dDpCb29sZWFuLHdpbmRvdzpCb29sZWFufSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJuIF9fYXNzaWduKHsndi1zeXN0ZW0tYmFyLS1saWdodHMtb3V0Jzp0aGlzLmxpZ2h0c091dCwndi1zeXN0ZW0tYmFyLS1hYnNvbHV0ZSc6dGhpcy5hYnNvbHV0ZSwndi1zeXN0ZW0tYmFyLS1maXhlZCc6IXRoaXMuYWJzb2x1dGUmJih0aGlzLmFwcHx8dGhpcy5maXhlZCksJ3Ytc3lzdGVtLWJhci0td2luZG93Jzp0aGlzLndpbmRvd30sdGhpcy50aGVtZUNsYXNzZXMpO30sY29tcHV0ZWRIZWlnaHQ6ZnVuY3Rpb24gY29tcHV0ZWRIZWlnaHQoKXtpZih0aGlzLmhlaWdodCl7cmV0dXJuIGlzTmFOKHBhcnNlSW50KHRoaXMuaGVpZ2h0KSk/dGhpcy5oZWlnaHQ6cGFyc2VJbnQodGhpcy5oZWlnaHQpO31yZXR1cm4gdGhpcy53aW5kb3c/MzI6MjQ7fSxzdHlsZXM6ZnVuY3Rpb24gc3R5bGVzKCl7cmV0dXJue2hlaWdodDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuY29tcHV0ZWRIZWlnaHQpfTt9fSxtZXRob2RzOnt1cGRhdGVBcHBsaWNhdGlvbjpmdW5jdGlvbiB1cGRhdGVBcHBsaWNhdGlvbigpe3JldHVybiB0aGlzLiRlbD90aGlzLiRlbC5jbGllbnRIZWlnaHQ6dGhpcy5jb21wdXRlZEhlaWdodDt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBkYXRhPXtzdGF0aWNDbGFzczondi1zeXN0ZW0tYmFyJyxjbGFzczp0aGlzLmNsYXNzZXMsc3R5bGU6dGhpcy5zdHlsZXMsb246dGhpcy4kbGlzdGVuZXJzfTtyZXR1cm4gaCgnZGl2Jyx0aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbG9yLGRhdGEpLE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImdldFNsb3QiXSkodGhpcykpO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WU3lzdGVtQmFyL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WU3lzdGVtQmFyL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWU3lzdGVtQmFyLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZTeXN0ZW1CYXJJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTeXN0ZW1CYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTeXN0ZW1CYXIgKi8iLi9zcmMvY29tcG9uZW50cy9WU3lzdGVtQmFyL1ZTeXN0ZW1CYXIudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWU3lzdGVtQmFyIixmdW5jdGlvbigpe3JldHVybiBfVlN5c3RlbUJhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVlN5c3RlbUJhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRhYnMvVlRhYi50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRhYnMvVlRhYi50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVGFic1ZUYWJUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfZ3JvdXBhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2dyb3VwYWJsZSAqLyIuL3NyYy9taXhpbnMvZ3JvdXBhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19yb3V0YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9yb3V0YWJsZSAqLyIuL3NyYy9taXhpbnMvcm91dGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy90aGVtZWFibGUgKi8iLi9zcmMvbWl4aW5zL3RoZW1lYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLy4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gTWl4aW5zCi8vIFV0aWxpdGllcwp2YXIgYmFzZU1peGlucz1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSkoX21peGluc19yb3V0YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sLy8gTXVzdCBiZSBhZnRlciByb3V0YWJsZQovLyB0byBvdmVyd3JpdGUgYWN0aXZlQ2xhc3MKT2JqZWN0KF9taXhpbnNfZ3JvdXBhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImZhY3RvcnkiXSkoJ3RhYnNCYXInKSxfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09YmFzZU1peGlucy5leHRlbmQoKS5leHRlbmQoKS5leHRlbmQoe25hbWU6J3YtdGFiJyxwcm9wczp7cmlwcGxlOnt0eXBlOltCb29sZWFuLE9iamVjdF0sZGVmYXVsdDp0cnVlfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3Byb3h5Q2xhc3M6J3YtdGFiLS1hY3RpdmUnfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LXRhYic6dHJ1ZX0sX21peGluc19yb3V0YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LXRhYi0tZGlzYWJsZWQnOnRoaXMuZGlzYWJsZWR9LHRoaXMuZ3JvdXBDbGFzc2VzKTt9LHZhbHVlOmZ1bmN0aW9uIHZhbHVlKCl7dmFyIHRvPXRoaXMudG98fHRoaXMuaHJlZnx8Jyc7aWYodGhpcy4kcm91dGVyJiZ0aGlzLnRvPT09T2JqZWN0KHRoaXMudG8pKXt2YXIgcmVzb2x2ZT10aGlzLiRyb3V0ZXIucmVzb2x2ZSh0aGlzLnRvLHRoaXMuJHJvdXRlLHRoaXMuYXBwZW5kKTt0bz1yZXNvbHZlLmhyZWY7fXJldHVybiB0by5yZXBsYWNlKCcjJywnJyk7fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dGhpcy5vblJvdXRlQ2hhbmdlKCk7fSxtZXRob2RzOntjbGljazpmdW5jdGlvbiBjbGljayhlKXsvLyBJZiB1c2VyIHByb3ZpZGVzIGFuCi8vIGFjdHVhbCBsaW5rLCBkbyBub3QKLy8gcHJldmVudCBkZWZhdWx0CmlmKHRoaXMuaHJlZiYmdGhpcy5ocmVmLmluZGV4T2YoJyMnKT4tMSllLnByZXZlbnREZWZhdWx0KCk7aWYoZS5kZXRhaWwpdGhpcy4kZWwuYmx1cigpO3RoaXMuJGVtaXQoJ2NsaWNrJyxlKTt0aGlzLnRvfHx0aGlzLnRvZ2dsZSgpO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIF90aGlzPXRoaXM7dmFyIF9hPXRoaXMuZ2VuZXJhdGVSb3V0ZUxpbmsoKSx0YWc9X2EudGFnLGRhdGE9X2EuZGF0YTtkYXRhLmF0dHJzPV9fYXNzaWduKHt9LGRhdGEuYXR0cnMseydhcmlhLXNlbGVjdGVkJzpTdHJpbmcodGhpcy5pc0FjdGl2ZSkscm9sZTondGFiJyx0YWJpbmRleDowfSk7ZGF0YS5vbj1fX2Fzc2lnbih7fSxkYXRhLm9uLHtrZXlkb3duOmZ1bmN0aW9uIGtleWRvd24oZSl7aWYoZS5rZXlDb2RlPT09X3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJrZXlDb2RlcyJdLmVudGVyKV90aGlzLmNsaWNrKGUpO190aGlzLiRlbWl0KCdrZXlkb3duJyxlKTt9fSk7cmV0dXJuIGgodGFnLGRhdGEsdGhpcy4kc2xvdHMuZGVmYXVsdCk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUYWJzL1ZUYWJJdGVtLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRhYnMvVlRhYkl0ZW0udHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZUYWJzVlRhYkl0ZW1Ucyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WV2luZG93X1ZXaW5kb3dJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVldpbmRvdy9WV2luZG93SXRlbSAqLyIuL3NyYy9jb21wb25lbnRzL1ZXaW5kb3cvVldpbmRvd0l0ZW0udHMiKTsvLyBFeHRlbnNpb25zCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZXaW5kb3dfVldpbmRvd0l0ZW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLmV4dGVuZCh7bmFtZTondi10YWItaXRlbScscHJvcHM6e2lkOlN0cmluZ30sbWV0aG9kczp7Z2VuV2luZG93SXRlbTpmdW5jdGlvbiBnZW5XaW5kb3dJdGVtKCl7dmFyIGl0ZW09X1ZXaW5kb3dfVldpbmRvd0l0ZW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5nZW5XaW5kb3dJdGVtLmNhbGwodGhpcyk7aXRlbS5kYXRhLmRvbVByb3BzPWl0ZW0uZGF0YS5kb21Qcm9wc3x8e307aXRlbS5kYXRhLmRvbVByb3BzLmlkPXRoaXMuaWR8fHRoaXMudmFsdWU7cmV0dXJuIGl0ZW07fX19KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WVGFicy9WVGFicy5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVGFicy9WVGFicy5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVGFic1ZUYWJzU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRhYnMvVlRhYnMudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVGFicy9WVGFicy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRhYnNWVGFic1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUYWJzX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZUYWJzLnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WVGFicy9WVGFicy5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUYWJzX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZUYWJzX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUYWJzQmFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVGFic0JhciAqLyIuL3NyYy9jb21wb25lbnRzL1ZUYWJzL1ZUYWJzQmFyLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUYWJzSXRlbXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZUYWJzSXRlbXMgKi8iLi9zcmMvY29tcG9uZW50cy9WVGFicy9WVGFic0l0ZW1zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUYWJzU2xpZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVGFic1NsaWRlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZUYWJzL1ZUYWJzU2xpZGVyLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3Byb3h5YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9wcm94eWFibGUgKi8iLi9zcmMvbWl4aW5zL3Byb3h5YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfcmVzaXplX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vZGlyZWN0aXZlcy9yZXNpemUgKi8iLi9zcmMvZGlyZWN0aXZlcy9yZXNpemUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gQ29tcG9uZW50cwovLyBNaXhpbnMKLy8gRGlyZWN0aXZlcwovLyBVdGlsaXRpZXMKdmFyIGJhc2VNaXhpbnM9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fWyJkZWZhdWx0Il0pKF9taXhpbnNfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSxfbWl4aW5zX3Byb3h5YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0sX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPWJhc2VNaXhpbnMuZXh0ZW5kKCkuZXh0ZW5kKHtuYW1lOid2LXRhYnMnLGRpcmVjdGl2ZXM6e1Jlc2l6ZTpfZGlyZWN0aXZlc19yZXNpemVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siZGVmYXVsdCJdfSxwcm9wczp7YWN0aXZlQ2xhc3M6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6Jyd9LGFsaWduV2l0aFRpdGxlOkJvb2xlYW4sYmFja2dyb3VuZENvbG9yOlN0cmluZyxjZW50ZXJBY3RpdmU6Qm9vbGVhbixjZW50ZXJlZDpCb29sZWFuLGZpeGVkVGFiczpCb29sZWFuLGdyb3c6Qm9vbGVhbixoZWlnaHQ6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6dW5kZWZpbmVkfSxoaWRlU2xpZGVyOkJvb2xlYW4saWNvbnNBbmRUZXh0OkJvb2xlYW4sbW9iaWxlQnJlYWtQb2ludDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDoxMjY0fSxuZXh0SWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJG5leHQnfSxvcHRpb25hbDpCb29sZWFuLHByZXZJY29uOnt0eXBlOlN0cmluZyxkZWZhdWx0OickcHJldid9LHJpZ2h0OkJvb2xlYW4sc2hvd0Fycm93czpCb29sZWFuLHNsaWRlckNvbG9yOlN0cmluZyxzbGlkZXJTaXplOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjJ9LHZlcnRpY2FsOkJvb2xlYW59LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntyZXNpemVUaW1lb3V0OjAsc2xpZGVyOntoZWlnaHQ6bnVsbCxsZWZ0Om51bGwscmlnaHQ6bnVsbCx0b3A6bnVsbCx3aWR0aDpudWxsfSx0cmFuc2l0aW9uVGltZTozMDB9O30sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7J3YtdGFicy0tYWxpZ24td2l0aC10aXRsZSc6dGhpcy5hbGlnbldpdGhUaXRsZSwndi10YWJzLS1jZW50ZXJlZCc6dGhpcy5jZW50ZXJlZCwndi10YWJzLS1maXhlZC10YWJzJzp0aGlzLmZpeGVkVGFicywndi10YWJzLS1ncm93Jzp0aGlzLmdyb3csJ3YtdGFicy0taWNvbnMtYW5kLXRleHQnOnRoaXMuaWNvbnNBbmRUZXh0LCd2LXRhYnMtLXJpZ2h0Jzp0aGlzLnJpZ2h0LCd2LXRhYnMtLXZlcnRpY2FsJzp0aGlzLnZlcnRpY2FsfSx0aGlzLnRoZW1lQ2xhc3Nlcyk7fSxpc1JldmVyc2VkOmZ1bmN0aW9uIGlzUmV2ZXJzZWQoKXtyZXR1cm4gdGhpcy4kdnVldGlmeS5ydGwmJnRoaXMudmVydGljYWw7fSxzbGlkZXJTdHlsZXM6ZnVuY3Rpb24gc2xpZGVyU3R5bGVzKCl7cmV0dXJue2hlaWdodDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuc2xpZGVyLmhlaWdodCksbGVmdDp0aGlzLmlzUmV2ZXJzZWQ/dW5kZWZpbmVkOk9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5zbGlkZXIubGVmdCkscmlnaHQ6dGhpcy5pc1JldmVyc2VkP09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5zbGlkZXIucmlnaHQpOnVuZGVmaW5lZCx0b3A6dGhpcy52ZXJ0aWNhbD9PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuc2xpZGVyLnRvcCk6dW5kZWZpbmVkLHRyYW5zaXRpb246dGhpcy5zbGlkZXIubGVmdCE9bnVsbD9udWxsOidub25lJyx3aWR0aDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuc2xpZGVyLndpZHRoKX07fSxjb21wdXRlZENvbG9yOmZ1bmN0aW9uIGNvbXB1dGVkQ29sb3IoKXtpZih0aGlzLmNvbG9yKXJldHVybiB0aGlzLmNvbG9yO2Vsc2UgaWYodGhpcy5pc0RhcmsmJiF0aGlzLmFwcElzRGFyaylyZXR1cm4nd2hpdGUnO2Vsc2UgcmV0dXJuJ3ByaW1hcnknO319LHdhdGNoOnthbGlnbldpdGhUaXRsZTonY2FsbFNsaWRlcicsY2VudGVyZWQ6J2NhbGxTbGlkZXInLGNlbnRlckFjdGl2ZTonY2FsbFNsaWRlcicsZml4ZWRUYWJzOidjYWxsU2xpZGVyJyxncm93OidjYWxsU2xpZGVyJyxyaWdodDonY2FsbFNsaWRlcicsc2hvd0Fycm93czonY2FsbFNsaWRlcicsdmVydGljYWw6J2NhbGxTbGlkZXInLCckdnVldGlmeS5hcHBsaWNhdGlvbi5sZWZ0Jzonb25SZXNpemUnLCckdnVldGlmeS5hcHBsaWNhdGlvbi5yaWdodCc6J29uUmVzaXplJywnJHZ1ZXRpZnkucnRsJzonb25SZXNpemUnfSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt2YXIgX3RoaXM9dGhpczt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe3dpbmRvdy5zZXRUaW1lb3V0KF90aGlzLmNhbGxTbGlkZXIsMzApO30pO30sbWV0aG9kczp7Y2FsbFNsaWRlcjpmdW5jdGlvbiBjYWxsU2xpZGVyKCl7dmFyIF90aGlzPXRoaXM7aWYodGhpcy5oaWRlU2xpZGVyfHwhdGhpcy4kcmVmcy5pdGVtc3x8IXRoaXMuJHJlZnMuaXRlbXMuc2VsZWN0ZWRJdGVtcy5sZW5ndGgpe3RoaXMuc2xpZGVyLndpZHRoPTA7cmV0dXJuIGZhbHNlO310aGlzLiRuZXh0VGljayhmdW5jdGlvbigpey8vIEdpdmUgc2NyZWVuIHRpbWUgdG8gcGFpbnQKdmFyIGFjdGl2ZVRhYj1fdGhpcy4kcmVmcy5pdGVtcy5zZWxlY3RlZEl0ZW1zWzBdOy8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL2lmKCFhY3RpdmVUYWJ8fCFhY3RpdmVUYWIuJGVsKXtfdGhpcy5zbGlkZXIud2lkdGg9MDtfdGhpcy5zbGlkZXIubGVmdD0wO3JldHVybjt9dmFyIGVsPWFjdGl2ZVRhYi4kZWw7X3RoaXMuc2xpZGVyPXtoZWlnaHQ6IV90aGlzLnZlcnRpY2FsP051bWJlcihfdGhpcy5zbGlkZXJTaXplKTplbC5zY3JvbGxIZWlnaHQsbGVmdDpfdGhpcy52ZXJ0aWNhbD8wOmVsLm9mZnNldExlZnQscmlnaHQ6X3RoaXMudmVydGljYWw/MDplbC5vZmZzZXRMZWZ0K2VsLm9mZnNldFdpZHRoLHRvcDplbC5vZmZzZXRUb3Asd2lkdGg6X3RoaXMudmVydGljYWw/TnVtYmVyKF90aGlzLnNsaWRlclNpemUpOmVsLnNjcm9sbFdpZHRofTt9KTtyZXR1cm4gdHJ1ZTt9LGdlbkJhcjpmdW5jdGlvbiBnZW5CYXIoaXRlbXMsc2xpZGVyKXt2YXIgX3RoaXM9dGhpczt2YXIgZGF0YT17c3R5bGU6e2hlaWdodDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuaGVpZ2h0KX0scHJvcHM6e2FjdGl2ZUNsYXNzOnRoaXMuYWN0aXZlQ2xhc3MsY2VudGVyQWN0aXZlOnRoaXMuY2VudGVyQWN0aXZlLGRhcms6dGhpcy5kYXJrLGxpZ2h0OnRoaXMubGlnaHQsbWFuZGF0b3J5OiF0aGlzLm9wdGlvbmFsLG1vYmlsZUJyZWFrUG9pbnQ6dGhpcy5tb2JpbGVCcmVha1BvaW50LG5leHRJY29uOnRoaXMubmV4dEljb24scHJldkljb246dGhpcy5wcmV2SWNvbixzaG93QXJyb3dzOnRoaXMuc2hvd0Fycm93cyx2YWx1ZTp0aGlzLmludGVybmFsVmFsdWV9LG9uOnsnY2FsbDpzbGlkZXInOnRoaXMuY2FsbFNsaWRlcixjaGFuZ2U6ZnVuY3Rpb24gY2hhbmdlKHZhbCl7X3RoaXMuaW50ZXJuYWxWYWx1ZT12YWw7fX0scmVmOidpdGVtcyd9O3RoaXMuc2V0VGV4dENvbG9yKHRoaXMuY29tcHV0ZWRDb2xvcixkYXRhKTt0aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmJhY2tncm91bmRDb2xvcixkYXRhKTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVlRhYnNCYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLGRhdGEsW3RoaXMuZ2VuU2xpZGVyKHNsaWRlciksaXRlbXNdKTt9LGdlbkl0ZW1zOmZ1bmN0aW9uIGdlbkl0ZW1zKGl0ZW1zLGl0ZW0pe3ZhciBfdGhpcz10aGlzOy8vIElmIHVzZXIgcHJvdmlkZXMgaXRlbXMKLy8gb3B0IHRvIHVzZSB0aGVpcnMKaWYoaXRlbXMpcmV0dXJuIGl0ZW1zOy8vIElmIG5vIHRhYnMgYXJlIHByb3ZpZGVkCi8vIHJlbmRlciBub3RoaW5nCmlmKCFpdGVtLmxlbmd0aClyZXR1cm4gbnVsbDtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVlRhYnNJdGVtc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0se3Byb3BzOnt2YWx1ZTp0aGlzLmludGVybmFsVmFsdWV9LG9uOntjaGFuZ2U6ZnVuY3Rpb24gY2hhbmdlKHZhbCl7X3RoaXMuaW50ZXJuYWxWYWx1ZT12YWw7fX19LGl0ZW0pO30sZ2VuU2xpZGVyOmZ1bmN0aW9uIGdlblNsaWRlcihzbGlkZXIpe2lmKHRoaXMuaGlkZVNsaWRlcilyZXR1cm4gbnVsbDtpZighc2xpZGVyKXtzbGlkZXI9dGhpcy4kY3JlYXRlRWxlbWVudChfVlRhYnNTbGlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLHtwcm9wczp7Y29sb3I6dGhpcy5zbGlkZXJDb2xvcn19KTt9cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXRhYnMtc2xpZGVyLXdyYXBwZXInLHN0eWxlOnRoaXMuc2xpZGVyU3R5bGVzfSxbc2xpZGVyXSk7fSxvblJlc2l6ZTpmdW5jdGlvbiBvblJlc2l6ZSgpe2lmKHRoaXMuX2lzRGVzdHJveWVkKXJldHVybjtjbGVhclRpbWVvdXQodGhpcy5yZXNpemVUaW1lb3V0KTt0aGlzLnJlc2l6ZVRpbWVvdXQ9d2luZG93LnNldFRpbWVvdXQodGhpcy5jYWxsU2xpZGVyLDApO30scGFyc2VOb2RlczpmdW5jdGlvbiBwYXJzZU5vZGVzKCl7dmFyIGl0ZW1zPW51bGw7dmFyIHNsaWRlcj1udWxsO3ZhciBpdGVtPVtdO3ZhciB0YWI9W107dmFyIHNsb3Q9dGhpcy4kc2xvdHMuZGVmYXVsdHx8W107dmFyIGxlbmd0aD1zbG90Lmxlbmd0aDtmb3IodmFyIGk9MDtpPGxlbmd0aDtpKyspe3ZhciB2bm9kZT1zbG90W2ldO2lmKHZub2RlLmNvbXBvbmVudE9wdGlvbnMpe3N3aXRjaCh2bm9kZS5jb21wb25lbnRPcHRpb25zLkN0b3Iub3B0aW9ucy5uYW1lKXtjYXNlJ3YtdGFicy1zbGlkZXInOnNsaWRlcj12bm9kZTticmVhaztjYXNlJ3YtdGFicy1pdGVtcyc6aXRlbXM9dm5vZGU7YnJlYWs7Y2FzZSd2LXRhYi1pdGVtJzppdGVtLnB1c2godm5vZGUpO2JyZWFrOy8vIGNhc2UgJ3YtdGFiJyAtIGludGVudGlvbmFsbHkgb21pdHRlZApkZWZhdWx0OnRhYi5wdXNoKHZub2RlKTt9fWVsc2V7dGFiLnB1c2godm5vZGUpO319LyoqCiAgICAgICAqIHRhYjogYXJyYXkgb2YgYHYtdGFiYAogICAgICAgKiBzbGlkZXI6IHNpbmdsZSBgdi10YWJzLXNsaWRlcmAKICAgICAgICogaXRlbXM6IHNpbmdsZSBgdi10YWJzLWl0ZW1zYAogICAgICAgKiBpdGVtOiBhcnJheSBvZiBgdi10YWItaXRlbWAKICAgICAgICovcmV0dXJue3RhYjp0YWIsc2xpZGVyOnNsaWRlcixpdGVtczppdGVtcyxpdGVtOml0ZW19O319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIF9hPXRoaXMucGFyc2VOb2RlcygpLHRhYj1fYS50YWIsc2xpZGVyPV9hLnNsaWRlcixpdGVtcz1fYS5pdGVtcyxpdGVtPV9hLml0ZW07cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXRhYnMnLGNsYXNzOnRoaXMuY2xhc3NlcyxkaXJlY3RpdmVzOlt7bmFtZToncmVzaXplJyxtb2RpZmllcnM6e3F1aWV0OnRydWV9LHZhbHVlOnRoaXMub25SZXNpemV9XX0sW3RoaXMuZ2VuQmFyKHRhYixzbGlkZXIpLHRoaXMuZ2VuSXRlbXMoaXRlbXMsaXRlbSldKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRhYnMvVlRhYnNCYXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVGFicy9WVGFic0Jhci50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRhYnNWVGFic0JhclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTbGlkZUdyb3VwX1ZTbGlkZUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVlNsaWRlR3JvdXAvVlNsaWRlR3JvdXAgKi8iLi9zcmMvY29tcG9uZW50cy9WU2xpZGVHcm91cC9WU2xpZGVHcm91cC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19zc3JfYm9vdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvc3NyLWJvb3RhYmxlICovIi4vc3JjL21peGlucy9zc3ItYm9vdGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307dmFyIF9fdmFsdWVzPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fdmFsdWVzfHxmdW5jdGlvbihvKXt2YXIgbT10eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb1tTeW1ib2wuaXRlcmF0b3JdLGk9MDtpZihtKXJldHVybiBtLmNhbGwobyk7cmV0dXJue25leHQ6ZnVuY3Rpb24gbmV4dCgpe2lmKG8mJmk+PW8ubGVuZ3RoKW89dm9pZCAwO3JldHVybnt2YWx1ZTpvJiZvW2krK10sZG9uZTohb307fX07fTsvLyBFeHRlbnNpb25zCi8vIE1peGlucwovLyBVdGlsaXRpZXMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoX1ZTbGlkZUdyb3VwX1ZTbGlkZUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIkJhc2VTbGlkZUdyb3VwIl0sX21peGluc19zc3JfYm9vdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS8qIEB2dWUvY29tcG9uZW50ICovKS5leHRlbmQoe25hbWU6J3YtdGFicy1iYXInLHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybnt0YWJzQmFyOnRoaXN9O30sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7fSxfVlNsaWRlR3JvdXBfVlNsaWRlR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siQmFzZVNsaWRlR3JvdXAiXS5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSx7J3YtdGFicy1iYXInOnRydWUsJ3YtdGFicy1iYXItLWlzLW1vYmlsZSc6dGhpcy5pc01vYmlsZSwvLyBUT0RPOiBSZW1vdmUgdGhpcyBhbmQgbW92ZSB0byB2LXNsaWRlLWdyb3VwCid2LXRhYnMtYmFyLS1zaG93LWFycm93cyc6dGhpcy5zaG93QXJyb3dzfSx0aGlzLnRoZW1lQ2xhc3Nlcyk7fX0sd2F0Y2g6e2l0ZW1zOidjYWxsU2xpZGVyJyxpbnRlcm5hbFZhbHVlOidjYWxsU2xpZGVyJywkcm91dGU6J29uUm91dGVDaGFuZ2UnfSxtZXRob2RzOntjYWxsU2xpZGVyOmZ1bmN0aW9uIGNhbGxTbGlkZXIoKXtpZighdGhpcy5pc0Jvb3RlZClyZXR1cm47dGhpcy4kZW1pdCgnY2FsbDpzbGlkZXInKTt9LGdlbkNvbnRlbnQ6ZnVuY3Rpb24gZ2VuQ29udGVudCgpe3ZhciByZW5kZXI9X1ZTbGlkZUdyb3VwX1ZTbGlkZUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIkJhc2VTbGlkZUdyb3VwIl0ub3B0aW9ucy5tZXRob2RzLmdlbkNvbnRlbnQuY2FsbCh0aGlzKTtyZW5kZXIuZGF0YT1yZW5kZXIuZGF0YXx8e307cmVuZGVyLmRhdGEuc3RhdGljQ2xhc3MrPScgdi10YWJzLWJhcl9fY29udGVudCc7cmV0dXJuIHJlbmRlcjt9LG9uUm91dGVDaGFuZ2U6ZnVuY3Rpb24gb25Sb3V0ZUNoYW5nZSh2YWwsb2xkVmFsKXt2YXIgZV8xLF9hOy8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovaWYodGhpcy5tYW5kYXRvcnkpcmV0dXJuO3ZhciBpdGVtcz10aGlzLml0ZW1zO3ZhciBuZXdQYXRoPXZhbC5wYXRoO3ZhciBvbGRQYXRoPW9sZFZhbC5wYXRoO3ZhciBoYXNOZXc9ZmFsc2U7dmFyIGhhc09sZD1mYWxzZTt0cnl7Zm9yKHZhciBpdGVtc18xPV9fdmFsdWVzKGl0ZW1zKSxpdGVtc18xXzE9aXRlbXNfMS5uZXh0KCk7IWl0ZW1zXzFfMS5kb25lO2l0ZW1zXzFfMT1pdGVtc18xLm5leHQoKSl7dmFyIGl0ZW09aXRlbXNfMV8xLnZhbHVlO2lmKGl0ZW0udG89PT1uZXdQYXRoKWhhc05ldz10cnVlO2Vsc2UgaWYoaXRlbS50bz09PW9sZFBhdGgpaGFzT2xkPXRydWU7aWYoaGFzTmV3JiZoYXNPbGQpYnJlYWs7fX1jYXRjaChlXzFfMSl7ZV8xPXtlcnJvcjplXzFfMX07fWZpbmFsbHl7dHJ5e2lmKGl0ZW1zXzFfMSYmIWl0ZW1zXzFfMS5kb25lJiYoX2E9aXRlbXNfMS5yZXR1cm4pKV9hLmNhbGwoaXRlbXNfMSk7fWZpbmFsbHl7aWYoZV8xKXRocm93IGVfMS5lcnJvcjt9fS8vIElmIHdlIGhhdmUgYW4gb2xkIGl0ZW0gYW5kIG5vdCBhIG5ldyBvbmUKLy8gaXQncyBhc3N1bWVkIHRoYXQgdGhlIHVzZXIgbmF2aWdhdGVkIHRvCi8vIGEgcGF0aCB0aGF0IGlzIG5vdCBwcmVzZW50IGluIHRoZSBpdGVtcwppZighaGFzTmV3JiZoYXNPbGQpdGhpcy5pbnRlcm5hbFZhbHVlPXVuZGVmaW5lZDt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciByZW5kZXI9X1ZTbGlkZUdyb3VwX1ZTbGlkZUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIkJhc2VTbGlkZUdyb3VwIl0ub3B0aW9ucy5yZW5kZXIuY2FsbCh0aGlzLGgpO3JlbmRlci5kYXRhLmF0dHJzPXtyb2xlOid0YWJsaXN0J307cmV0dXJuIHJlbmRlcjt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRhYnMvVlRhYnNJdGVtcy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRhYnMvVlRhYnNJdGVtcy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVGFic1ZUYWJzSXRlbXNUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WV2luZG93X1ZXaW5kb3dfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WV2luZG93L1ZXaW5kb3cgKi8iLi9zcmMvY29tcG9uZW50cy9WV2luZG93L1ZXaW5kb3cudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkl0ZW1Hcm91cF9WSXRlbUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi8uLi9WSXRlbUdyb3VwL1ZJdGVtR3JvdXAgKi8iLi9zcmMvY29tcG9uZW50cy9WSXRlbUdyb3VwL1ZJdGVtR3JvdXAudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIEV4dGVuc2lvbnMKLy8gVHlwZXMgJiBDb21wb25lbnRzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZXaW5kb3dfVldpbmRvd19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0uZXh0ZW5kKHtuYW1lOid2LXRhYnMtaXRlbXMnLHByb3BzOnttYW5kYXRvcnk6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfX0sY29tcHV0ZWQ6e2NsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7fSxfVldpbmRvd19WV2luZG93X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSx7J3YtdGFicy1pdGVtcyc6dHJ1ZX0pO30saXNEYXJrOmZ1bmN0aW9uIGlzRGFyaygpe3JldHVybiB0aGlzLnJvb3RJc0Rhcms7fX0sbWV0aG9kczp7Z2V0VmFsdWU6ZnVuY3Rpb24gZ2V0VmFsdWUoaXRlbSxpKXtyZXR1cm4gaXRlbS5pZHx8X1ZJdGVtR3JvdXBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJCYXNlSXRlbUdyb3VwIl0ub3B0aW9ucy5tZXRob2RzLmdldFZhbHVlLmNhbGwodGhpcyxpdGVtLGkpO319fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRhYnMvVlRhYnNTbGlkZXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVGFicy9WVGFic1NsaWRlci50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRhYnNWVGFic1NsaWRlclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8vIE1peGlucwovLyBVdGlsaXRpZXMKLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkoX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3YtdGFicy1zbGlkZXInLHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoJ2RpdicsdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IodGhpcy5jb2xvcix7c3RhdGljQ2xhc3M6J3YtdGFicy1zbGlkZXInfSkpO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WVGFicy9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZUYWJzL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVlRhYnMsIFZUYWIsIFZUYWJJdGVtLCBWVGFic0l0ZW1zLCBWVGFic1NsaWRlciwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVGFic0luZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRhYnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZUYWJzICovIi4vc3JjL2NvbXBvbmVudHMvVlRhYnMvVlRhYnMudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVGFicyIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZUYWJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRhYl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRhYiAqLyIuL3NyYy9jb21wb25lbnRzL1ZUYWJzL1ZUYWIudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVGFiIixmdW5jdGlvbigpe3JldHVybiBfVlRhYl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUYWJzSXRlbXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZUYWJzSXRlbXMgKi8iLi9zcmMvY29tcG9uZW50cy9WVGFicy9WVGFic0l0ZW1zLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlRhYnNJdGVtcyIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZUYWJzSXRlbXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGFiSXRlbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRhYkl0ZW0gKi8iLi9zcmMvY29tcG9uZW50cy9WVGFicy9WVGFiSXRlbS50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZUYWJJdGVtIixmdW5jdGlvbigpe3JldHVybiBfVlRhYkl0ZW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGFic1NsaWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRhYnNTbGlkZXIgKi8iLi9zcmMvY29tcG9uZW50cy9WVGFicy9WVGFic1NsaWRlci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZUYWJzU2xpZGVyIixmdW5jdGlvbigpe3JldHVybiBfVlRhYnNTbGlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09eyRfdnVldGlmeV9zdWJjb21wb25lbnRzOntWVGFiczpfVlRhYnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLFZUYWI6X1ZUYWJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLFZUYWJzSXRlbXM6X1ZUYWJzSXRlbXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLFZUYWJJdGVtOl9WVGFiSXRlbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0sVlRhYnNTbGlkZXI6X1ZUYWJzU2xpZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXX19Oy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUZXh0RmllbGQvVlRleHRGaWVsZC5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRleHRGaWVsZC9WVGV4dEZpZWxkLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVGV4dEZpZWxkVlRleHRGaWVsZFNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUZXh0RmllbGQvVlRleHRGaWVsZC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVGV4dEZpZWxkL1ZUZXh0RmllbGQudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVGV4dEZpZWxkVlRleHRGaWVsZFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUZXh0RmllbGRfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRleHRGaWVsZC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlRleHRGaWVsZC9WVGV4dEZpZWxkLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRleHRGaWVsZF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WVGV4dEZpZWxkX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJbnB1dCAqLyIuL3NyYy9jb21wb25lbnRzL1ZJbnB1dC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ291bnRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZDb3VudGVyICovIi4vc3JjL2NvbXBvbmVudHMvVkNvdW50ZXIvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkxhYmVsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkxhYmVsICovIi4vc3JjL2NvbXBvbmVudHMvVkxhYmVsL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19sb2FkYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9sb2FkYWJsZSAqLyIuL3NyYy9taXhpbnMvbG9hZGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZGlyZWN0aXZlc19yaXBwbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9kaXJlY3RpdmVzL3JpcHBsZSAqLyIuL3NyYy9kaXJlY3RpdmVzL3JpcHBsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvY29uc29sZSAqLyIuL3NyYy91dGlsL2NvbnNvbGUudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gU3R5bGVzCi8vIEV4dGVuc2lvbnMKLy8gQ29tcG9uZW50cwovLyBNaXhpbnMKLy8gRGlyZWN0aXZlcwovLyBVdGlsaXRpZXMKLy8gVHlwZXMKdmFyIGJhc2VNaXhpbnM9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJkZWZhdWx0Il0pKF9WSW5wdXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLF9taXhpbnNfbG9hZGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdKTt2YXIgZGlydHlUeXBlcz1bJ2NvbG9yJywnZmlsZScsJ3RpbWUnLCdkYXRlJywnZGF0ZXRpbWUtbG9jYWwnLCd3ZWVrJywnbW9udGgnXTsvKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPWJhc2VNaXhpbnMuZXh0ZW5kKCkuZXh0ZW5kKHtuYW1lOid2LXRleHQtZmllbGQnLGRpcmVjdGl2ZXM6e3JpcHBsZTpfZGlyZWN0aXZlc19yaXBwbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdfSxpbmhlcml0QXR0cnM6ZmFsc2UscHJvcHM6e2FwcGVuZE91dGVySWNvbjpTdHJpbmcsYXV0b2ZvY3VzOkJvb2xlYW4sY2xlYXJhYmxlOkJvb2xlYW4sY2xlYXJJY29uOnt0eXBlOlN0cmluZyxkZWZhdWx0OickY2xlYXInfSxjb3VudGVyOltCb29sZWFuLE51bWJlcixTdHJpbmddLGZpbGxlZDpCb29sZWFuLGZsYXQ6Qm9vbGVhbixmdWxsV2lkdGg6Qm9vbGVhbixsYWJlbDpTdHJpbmcsb3V0bGluZWQ6Qm9vbGVhbixwbGFjZWhvbGRlcjpTdHJpbmcscHJlZml4OlN0cmluZyxwcmVwZW5kSW5uZXJJY29uOlN0cmluZyxyZXZlcnNlOkJvb2xlYW4scm91bmRlZDpCb29sZWFuLHNoYXBlZDpCb29sZWFuLHNpbmdsZUxpbmU6Qm9vbGVhbixzb2xvOkJvb2xlYW4sc29sb0ludmVydGVkOkJvb2xlYW4sc3VmZml4OlN0cmluZyx0eXBlOnt0eXBlOlN0cmluZyxkZWZhdWx0Oid0ZXh0J319LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntiYWRJbnB1dDpmYWxzZSxsYWJlbFdpZHRoOjAscHJlZml4V2lkdGg6MCxwcmVwZW5kV2lkdGg6MCxpbml0aWFsVmFsdWU6bnVsbCxpc0Jvb3RlZDpmYWxzZSxpc0NsZWFyaW5nOmZhbHNlfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oe30sX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LXRleHQtZmllbGQnOnRydWUsJ3YtdGV4dC1maWVsZC0tZnVsbC13aWR0aCc6dGhpcy5mdWxsV2lkdGgsJ3YtdGV4dC1maWVsZC0tcHJlZml4Jzp0aGlzLnByZWZpeCwndi10ZXh0LWZpZWxkLS1zaW5nbGUtbGluZSc6dGhpcy5pc1NpbmdsZSwndi10ZXh0LWZpZWxkLS1zb2xvJzp0aGlzLmlzU29sbywndi10ZXh0LWZpZWxkLS1zb2xvLWludmVydGVkJzp0aGlzLnNvbG9JbnZlcnRlZCwndi10ZXh0LWZpZWxkLS1zb2xvLWZsYXQnOnRoaXMuZmxhdCwndi10ZXh0LWZpZWxkLS1maWxsZWQnOnRoaXMuZmlsbGVkLCd2LXRleHQtZmllbGQtLWlzLWJvb3RlZCc6dGhpcy5pc0Jvb3RlZCwndi10ZXh0LWZpZWxkLS1lbmNsb3NlZCc6dGhpcy5pc0VuY2xvc2VkLCd2LXRleHQtZmllbGQtLXJldmVyc2UnOnRoaXMucmV2ZXJzZSwndi10ZXh0LWZpZWxkLS1vdXRsaW5lZCc6dGhpcy5vdXRsaW5lZCwndi10ZXh0LWZpZWxkLS1wbGFjZWhvbGRlcic6dGhpcy5wbGFjZWhvbGRlciwndi10ZXh0LWZpZWxkLS1yb3VuZGVkJzp0aGlzLnJvdW5kZWQsJ3YtdGV4dC1maWVsZC0tc2hhcGVkJzp0aGlzLnNoYXBlZH0pO30sY291bnRlclZhbHVlOmZ1bmN0aW9uIGNvdW50ZXJWYWx1ZSgpe3JldHVybih0aGlzLmludGVybmFsVmFsdWV8fCcnKS50b1N0cmluZygpLmxlbmd0aDt9LGludGVybmFsVmFsdWU6e2dldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5sYXp5VmFsdWU7fSxzZXQ6ZnVuY3Rpb24gc2V0KHZhbCl7dGhpcy5sYXp5VmFsdWU9dmFsO3RoaXMuJGVtaXQoJ2lucHV0Jyx0aGlzLmxhenlWYWx1ZSk7fX0saXNEaXJ0eTpmdW5jdGlvbiBpc0RpcnR5KCl7cmV0dXJuIHRoaXMubGF6eVZhbHVlIT1udWxsJiZ0aGlzLmxhenlWYWx1ZS50b1N0cmluZygpLmxlbmd0aD4wfHx0aGlzLmJhZElucHV0O30saXNFbmNsb3NlZDpmdW5jdGlvbiBpc0VuY2xvc2VkKCl7cmV0dXJuIHRoaXMuZmlsbGVkfHx0aGlzLmlzU29sb3x8dGhpcy5vdXRsaW5lZHx8dGhpcy5mdWxsV2lkdGg7fSxpc0xhYmVsQWN0aXZlOmZ1bmN0aW9uIGlzTGFiZWxBY3RpdmUoKXtyZXR1cm4gdGhpcy5pc0RpcnR5fHxkaXJ0eVR5cGVzLmluY2x1ZGVzKHRoaXMudHlwZSk7fSxpc1NpbmdsZTpmdW5jdGlvbiBpc1NpbmdsZSgpe3JldHVybiB0aGlzLmlzU29sb3x8dGhpcy5zaW5nbGVMaW5lfHx0aGlzLmZ1bGxXaWR0aDt9LGlzU29sbzpmdW5jdGlvbiBpc1NvbG8oKXtyZXR1cm4gdGhpcy5zb2xvfHx0aGlzLnNvbG9JbnZlcnRlZDt9LGxhYmVsUG9zaXRpb246ZnVuY3Rpb24gbGFiZWxQb3NpdGlvbigpe3ZhciBvZmZzZXQ9dGhpcy5wcmVmaXgmJiF0aGlzLmxhYmVsVmFsdWU/dGhpcy5wcmVmaXhXaWR0aDowO2lmKHRoaXMubGFiZWxWYWx1ZSYmdGhpcy5wcmVwZW5kV2lkdGgpb2Zmc2V0LT10aGlzLnByZXBlbmRXaWR0aDtyZXR1cm4gdGhpcy4kdnVldGlmeS5ydGw9PT10aGlzLnJldmVyc2U/e2xlZnQ6b2Zmc2V0LHJpZ2h0OidhdXRvJ306e2xlZnQ6J2F1dG8nLHJpZ2h0Om9mZnNldH07fSxzaG93TGFiZWw6ZnVuY3Rpb24gc2hvd0xhYmVsKCl7cmV0dXJuIHRoaXMuaGFzTGFiZWwmJighdGhpcy5pc1NpbmdsZXx8IXRoaXMuaXNMYWJlbEFjdGl2ZSYmIXRoaXMucGxhY2Vob2xkZXIpO30sbGFiZWxWYWx1ZTpmdW5jdGlvbiBsYWJlbFZhbHVlKCl7cmV0dXJuIXRoaXMuaXNTaW5nbGUmJkJvb2xlYW4odGhpcy5pc0ZvY3VzZWR8fHRoaXMuaXNMYWJlbEFjdGl2ZXx8dGhpcy5wbGFjZWhvbGRlcik7fX0sd2F0Y2g6e2xhYmVsVmFsdWU6J3NldExhYmVsV2lkdGgnLG91dGxpbmVkOidzZXRMYWJlbFdpZHRoJyxsYWJlbDpmdW5jdGlvbiBsYWJlbCgpe3RoaXMuJG5leHRUaWNrKHRoaXMuc2V0TGFiZWxXaWR0aCk7fSxwcmVmaXg6ZnVuY3Rpb24gcHJlZml4KCl7dGhpcy4kbmV4dFRpY2sodGhpcy5zZXRQcmVmaXhXaWR0aCk7fSxpc0ZvY3VzZWQ6ZnVuY3Rpb24gaXNGb2N1c2VkKHZhbCl7Ly8gU2V0cyB2YWxpZGF0aW9uU3RhdGUgZnJvbSB2YWxpZGF0YWJsZQp0aGlzLmhhc0NvbG9yPXZhbDtpZih2YWwpe3RoaXMuaW5pdGlhbFZhbHVlPXRoaXMubGF6eVZhbHVlO31lbHNlIGlmKHRoaXMuaW5pdGlhbFZhbHVlIT09dGhpcy5sYXp5VmFsdWUpe3RoaXMuJGVtaXQoJ2NoYW5nZScsdGhpcy5sYXp5VmFsdWUpO319LHZhbHVlOmZ1bmN0aW9uIHZhbHVlKHZhbCl7dGhpcy5sYXp5VmFsdWU9dmFsO319LGNyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpey8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovaWYodGhpcy4kYXR0cnMuaGFzT3duUHJvcGVydHkoJ2JveCcpKXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJicmVha2luZyJdKSgnYm94JywnZmlsbGVkJyx0aGlzKTt9LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9pZih0aGlzLiRhdHRycy5oYXNPd25Qcm9wZXJ0eSgnYnJvd3Nlci1hdXRvY29tcGxldGUnKSl7T2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siYnJlYWtpbmciXSkoJ2Jyb3dzZXItYXV0b2NvbXBsZXRlJywnYXV0b2NvbXBsZXRlJyx0aGlzKTt9LyogaXN0YW5idWwgaWdub3JlIGlmICovaWYodGhpcy5zaGFwZWQmJiEodGhpcy5maWxsZWR8fHRoaXMub3V0bGluZWR8fHRoaXMuaXNTb2xvKSl7T2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siY29uc29sZVdhcm4iXSkoJ3NoYXBlZCBzaG91bGQgYmUgdXNlZCB3aXRoIGVpdGhlciBmaWxsZWQgb3Igb3V0bGluZWQnLHRoaXMpO319LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3ZhciBfdGhpcz10aGlzO3RoaXMuYXV0b2ZvY3VzJiZ0aGlzLm9uRm9jdXMoKTt0aGlzLnNldExhYmVsV2lkdGgoKTt0aGlzLnNldFByZWZpeFdpZHRoKCk7dGhpcy5zZXRQcmVwZW5kV2lkdGgoKTtyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuaXNCb290ZWQ9dHJ1ZTt9KTt9LG1ldGhvZHM6ey8qKiBAcHVibGljICovZm9jdXM6ZnVuY3Rpb24gZm9jdXMoKXt0aGlzLm9uRm9jdXMoKTt9LC8qKiBAcHVibGljICovYmx1cjpmdW5jdGlvbiBibHVyKGUpe3ZhciBfdGhpcz10aGlzOy8vIGh0dHBzOi8vZ2l0aHViLmNvbS92dWV0aWZ5anMvdnVldGlmeS9pc3N1ZXMvNTkxMwovLyBTYWZhcmkgdGFiIG9yZGVyIGdldHMgYnJva2VuIGlmIGNhbGxlZCBzeW5jaHJvbm91cwp3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCl7X3RoaXMuJHJlZnMuaW5wdXQmJl90aGlzLiRyZWZzLmlucHV0LmJsdXIoKTt9KTt9LGNsZWFyYWJsZUNhbGxiYWNrOmZ1bmN0aW9uIGNsZWFyYWJsZUNhbGxiYWNrKCl7dmFyIF90aGlzPXRoaXM7dGhpcy4kcmVmcy5pbnB1dCYmdGhpcy4kcmVmcy5pbnB1dC5mb2N1cygpO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLmludGVybmFsVmFsdWU9bnVsbDt9KTt9LGdlbkFwcGVuZFNsb3Q6ZnVuY3Rpb24gZ2VuQXBwZW5kU2xvdCgpe3ZhciBzbG90PVtdO2lmKHRoaXMuJHNsb3RzWydhcHBlbmQtb3V0ZXInXSl7c2xvdC5wdXNoKHRoaXMuJHNsb3RzWydhcHBlbmQtb3V0ZXInXSk7fWVsc2UgaWYodGhpcy5hcHBlbmRPdXRlckljb24pe3Nsb3QucHVzaCh0aGlzLmdlbkljb24oJ2FwcGVuZE91dGVyJykpO31yZXR1cm4gdGhpcy5nZW5TbG90KCdhcHBlbmQnLCdvdXRlcicsc2xvdCk7fSxnZW5QcmVwZW5kSW5uZXJTbG90OmZ1bmN0aW9uIGdlblByZXBlbmRJbm5lclNsb3QoKXt2YXIgc2xvdD1bXTtpZih0aGlzLiRzbG90c1sncHJlcGVuZC1pbm5lciddKXtzbG90LnB1c2godGhpcy4kc2xvdHNbJ3ByZXBlbmQtaW5uZXInXSk7fWVsc2UgaWYodGhpcy5wcmVwZW5kSW5uZXJJY29uKXtzbG90LnB1c2godGhpcy5nZW5JY29uKCdwcmVwZW5kSW5uZXInKSk7fXJldHVybiB0aGlzLmdlblNsb3QoJ3ByZXBlbmQnLCdpbm5lcicsc2xvdCk7fSxnZW5JY29uU2xvdDpmdW5jdGlvbiBnZW5JY29uU2xvdCgpe3ZhciBzbG90PVtdO2lmKHRoaXMuJHNsb3RzWydhcHBlbmQnXSl7c2xvdC5wdXNoKHRoaXMuJHNsb3RzWydhcHBlbmQnXSk7fWVsc2UgaWYodGhpcy5hcHBlbmRJY29uKXtzbG90LnB1c2godGhpcy5nZW5JY29uKCdhcHBlbmQnKSk7fXJldHVybiB0aGlzLmdlblNsb3QoJ2FwcGVuZCcsJ2lubmVyJyxzbG90KTt9LGdlbklucHV0U2xvdDpmdW5jdGlvbiBnZW5JbnB1dFNsb3QoKXt2YXIgaW5wdXQ9X1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlbklucHV0U2xvdC5jYWxsKHRoaXMpO3ZhciBwcmVwZW5kPXRoaXMuZ2VuUHJlcGVuZElubmVyU2xvdCgpO2lmKHByZXBlbmQpe2lucHV0LmNoaWxkcmVuPWlucHV0LmNoaWxkcmVufHxbXTtpbnB1dC5jaGlsZHJlbi51bnNoaWZ0KHByZXBlbmQpO31yZXR1cm4gaW5wdXQ7fSxnZW5DbGVhckljb246ZnVuY3Rpb24gZ2VuQ2xlYXJJY29uKCl7aWYoIXRoaXMuY2xlYXJhYmxlKXJldHVybiBudWxsO3ZhciBpY29uPXRoaXMuaXNEaXJ0eT8nY2xlYXInOicnO3JldHVybiB0aGlzLmdlblNsb3QoJ2FwcGVuZCcsJ2lubmVyJyxbdGhpcy5nZW5JY29uKGljb24sdGhpcy5jbGVhcmFibGVDYWxsYmFjayldKTt9LGdlbkNvdW50ZXI6ZnVuY3Rpb24gZ2VuQ291bnRlcigpe2lmKHRoaXMuY291bnRlcj09PWZhbHNlfHx0aGlzLmNvdW50ZXI9PW51bGwpcmV0dXJuIG51bGw7dmFyIG1heD10aGlzLmNvdW50ZXI9PT10cnVlP3RoaXMuYXR0cnMkLm1heGxlbmd0aDp0aGlzLmNvdW50ZXI7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZDb3VudGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSx7cHJvcHM6e2Rhcms6dGhpcy5kYXJrLGxpZ2h0OnRoaXMubGlnaHQsbWF4Om1heCx2YWx1ZTp0aGlzLmNvdW50ZXJWYWx1ZX19KTt9LGdlbkRlZmF1bHRTbG90OmZ1bmN0aW9uIGdlbkRlZmF1bHRTbG90KCl7cmV0dXJuW3RoaXMuZ2VuRmllbGRzZXQoKSx0aGlzLmdlblRleHRGaWVsZFNsb3QoKSx0aGlzLmdlbkNsZWFySWNvbigpLHRoaXMuZ2VuSWNvblNsb3QoKSx0aGlzLmdlblByb2dyZXNzKCldO30sZ2VuRmllbGRzZXQ6ZnVuY3Rpb24gZ2VuRmllbGRzZXQoKXtpZighdGhpcy5vdXRsaW5lZClyZXR1cm4gbnVsbDtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZmllbGRzZXQnLHthdHRyczp7J2FyaWEtaGlkZGVuJzp0cnVlfX0sW3RoaXMuZ2VuTGVnZW5kKCldKTt9LGdlbkxhYmVsOmZ1bmN0aW9uIGdlbkxhYmVsKCl7aWYoIXRoaXMuc2hvd0xhYmVsKXJldHVybiBudWxsO3ZhciBkYXRhPXtwcm9wczp7YWJzb2x1dGU6dHJ1ZSxjb2xvcjp0aGlzLnZhbGlkYXRpb25TdGF0ZSxkYXJrOnRoaXMuZGFyayxkaXNhYmxlZDp0aGlzLmRpc2FibGVkLGZvY3VzZWQ6IXRoaXMuaXNTaW5nbGUmJih0aGlzLmlzRm9jdXNlZHx8ISF0aGlzLnZhbGlkYXRpb25TdGF0ZSksZm9yOnRoaXMuY29tcHV0ZWRJZCxsZWZ0OnRoaXMubGFiZWxQb3NpdGlvbi5sZWZ0LGxpZ2h0OnRoaXMubGlnaHQscmlnaHQ6dGhpcy5sYWJlbFBvc2l0aW9uLnJpZ2h0LHZhbHVlOnRoaXMubGFiZWxWYWx1ZX19O3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WTGFiZWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLGRhdGEsdGhpcy4kc2xvdHMubGFiZWx8fHRoaXMubGFiZWwpO30sZ2VuTGVnZW5kOmZ1bmN0aW9uIGdlbkxlZ2VuZCgpe3ZhciB3aWR0aD0hdGhpcy5zaW5nbGVMaW5lJiYodGhpcy5sYWJlbFZhbHVlfHx0aGlzLmlzRGlydHkpP3RoaXMubGFiZWxXaWR0aDowO3ZhciBzcGFuPXRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLHtkb21Qcm9wczp7aW5uZXJIVE1MOicmIzgyMDM7J319KTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnbGVnZW5kJyx7c3R5bGU6e3dpZHRoOiF0aGlzLmlzU2luZ2xlP09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImNvbnZlcnRUb1VuaXQiXSkod2lkdGgpOnVuZGVmaW5lZH19LFtzcGFuXSk7fSxnZW5JbnB1dDpmdW5jdGlvbiBnZW5JbnB1dCgpe3ZhciBsaXN0ZW5lcnM9T2JqZWN0LmFzc2lnbih7fSx0aGlzLmxpc3RlbmVycyQpO2RlbGV0ZSBsaXN0ZW5lcnNbJ2NoYW5nZSddOy8vIENoYW5nZSBzaG91bGQgbm90IGJlIGJvdW5kIGV4dGVybmFsbHkKcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyx7c3R5bGU6e30sZG9tUHJvcHM6e3ZhbHVlOnRoaXMubGF6eVZhbHVlfSxhdHRyczpfX2Fzc2lnbih7fSx0aGlzLmF0dHJzJCx7YXV0b2ZvY3VzOnRoaXMuYXV0b2ZvY3VzLGRpc2FibGVkOnRoaXMuZGlzYWJsZWQsaWQ6dGhpcy5jb21wdXRlZElkLHBsYWNlaG9sZGVyOnRoaXMucGxhY2Vob2xkZXIscmVhZG9ubHk6dGhpcy5yZWFkb25seSx0eXBlOnRoaXMudHlwZX0pLG9uOk9iamVjdC5hc3NpZ24obGlzdGVuZXJzLHtibHVyOnRoaXMub25CbHVyLGlucHV0OnRoaXMub25JbnB1dCxmb2N1czp0aGlzLm9uRm9jdXMsa2V5ZG93bjp0aGlzLm9uS2V5RG93bn0pLHJlZjonaW5wdXQnfSk7fSxnZW5NZXNzYWdlczpmdW5jdGlvbiBnZW5NZXNzYWdlcygpe2lmKHRoaXMuaGlkZURldGFpbHMpcmV0dXJuIG51bGw7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXRleHQtZmllbGRfX2RldGFpbHMnfSxbX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlbk1lc3NhZ2VzLmNhbGwodGhpcyksdGhpcy5nZW5Db3VudGVyKCldKTt9LGdlblRleHRGaWVsZFNsb3Q6ZnVuY3Rpb24gZ2VuVGV4dEZpZWxkU2xvdCgpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi10ZXh0LWZpZWxkX19zbG90J30sW3RoaXMuZ2VuTGFiZWwoKSx0aGlzLnByZWZpeD90aGlzLmdlbkFmZml4KCdwcmVmaXgnKTpudWxsLHRoaXMuZ2VuSW5wdXQoKSx0aGlzLnN1ZmZpeD90aGlzLmdlbkFmZml4KCdzdWZmaXgnKTpudWxsXSk7fSxnZW5BZmZpeDpmdW5jdGlvbiBnZW5BZmZpeCh0eXBlKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7Y2xhc3M6InYtdGV4dC1maWVsZF9fIit0eXBlLHJlZjp0eXBlfSx0aGlzW3R5cGVdKTt9LG9uQmx1cjpmdW5jdGlvbiBvbkJsdXIoZSl7dmFyIF90aGlzPXRoaXM7dGhpcy5pc0ZvY3VzZWQ9ZmFsc2U7ZSYmdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuJGVtaXQoJ2JsdXInLGUpO30pO30sb25DbGljazpmdW5jdGlvbiBvbkNsaWNrKCl7aWYodGhpcy5pc0ZvY3VzZWR8fHRoaXMuZGlzYWJsZWR8fCF0aGlzLiRyZWZzLmlucHV0KXJldHVybjt0aGlzLiRyZWZzLmlucHV0LmZvY3VzKCk7fSxvbkZvY3VzOmZ1bmN0aW9uIG9uRm9jdXMoZSl7aWYoIXRoaXMuJHJlZnMuaW5wdXQpcmV0dXJuO2lmKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT10aGlzLiRyZWZzLmlucHV0KXtyZXR1cm4gdGhpcy4kcmVmcy5pbnB1dC5mb2N1cygpO31pZighdGhpcy5pc0ZvY3VzZWQpe3RoaXMuaXNGb2N1c2VkPXRydWU7ZSYmdGhpcy4kZW1pdCgnZm9jdXMnLGUpO319LG9uSW5wdXQ6ZnVuY3Rpb24gb25JbnB1dChlKXt2YXIgdGFyZ2V0PWUudGFyZ2V0O3RoaXMuaW50ZXJuYWxWYWx1ZT10YXJnZXQudmFsdWU7dGhpcy5iYWRJbnB1dD10YXJnZXQudmFsaWRpdHkmJnRhcmdldC52YWxpZGl0eS5iYWRJbnB1dDt9LG9uS2V5RG93bjpmdW5jdGlvbiBvbktleURvd24oZSl7aWYoZS5rZXlDb2RlPT09X3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJrZXlDb2RlcyJdLmVudGVyKXRoaXMuJGVtaXQoJ2NoYW5nZScsdGhpcy5pbnRlcm5hbFZhbHVlKTt0aGlzLiRlbWl0KCdrZXlkb3duJyxlKTt9LG9uTW91c2VEb3duOmZ1bmN0aW9uIG9uTW91c2VEb3duKGUpey8vIFByZXZlbnQgaW5wdXQgZnJvbSBiZWluZyBibHVycmVkCmlmKGUudGFyZ2V0IT09dGhpcy4kcmVmcy5pbnB1dCl7ZS5wcmV2ZW50RGVmYXVsdCgpO2Uuc3RvcFByb3BhZ2F0aW9uKCk7fV9WSW5wdXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLm9wdGlvbnMubWV0aG9kcy5vbk1vdXNlRG93bi5jYWxsKHRoaXMsZSk7fSxvbk1vdXNlVXA6ZnVuY3Rpb24gb25Nb3VzZVVwKGUpe2lmKHRoaXMuaGFzTW91c2VEb3duKXRoaXMuZm9jdXMoKTtfVklucHV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMub25Nb3VzZVVwLmNhbGwodGhpcyxlKTt9LHNldExhYmVsV2lkdGg6ZnVuY3Rpb24gc2V0TGFiZWxXaWR0aCgpe2lmKCF0aGlzLm91dGxpbmVkfHwhdGhpcy4kcmVmcy5sYWJlbClyZXR1cm47dGhpcy5sYWJlbFdpZHRoPXRoaXMuJHJlZnMubGFiZWwuc2Nyb2xsV2lkdGgqMC43NSs2O30sc2V0UHJlZml4V2lkdGg6ZnVuY3Rpb24gc2V0UHJlZml4V2lkdGgoKXtpZighdGhpcy4kcmVmcy5wcmVmaXgpcmV0dXJuO3RoaXMucHJlZml4V2lkdGg9dGhpcy4kcmVmcy5wcmVmaXgub2Zmc2V0V2lkdGg7fSxzZXRQcmVwZW5kV2lkdGg6ZnVuY3Rpb24gc2V0UHJlcGVuZFdpZHRoKCl7aWYoIXRoaXMub3V0bGluZWR8fCF0aGlzLiRyZWZzWydwcmVwZW5kLWlubmVyJ10pcmV0dXJuO3RoaXMucHJlcGVuZFdpZHRoPXRoaXMuJHJlZnNbJ3ByZXBlbmQtaW5uZXInXS5vZmZzZXRXaWR0aDt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUZXh0RmllbGQvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZUZXh0RmllbGQvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZUZXh0RmllbGQsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRleHRGaWVsZEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRleHRGaWVsZCAqLyIuL3NyYy9jb21wb25lbnRzL1ZUZXh0RmllbGQvVlRleHRGaWVsZC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZUZXh0RmllbGQiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVGV4dEZpZWxkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WVGV4dEZpZWxkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WVGV4dGFyZWEvVlRleHRhcmVhLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRleHRhcmVhL1ZUZXh0YXJlYS5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZUZXh0YXJlYVZUZXh0YXJlYVNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUZXh0YXJlYS9WVGV4dGFyZWEudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZUZXh0YXJlYS9WVGV4dGFyZWEudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRleHRhcmVhVlRleHRhcmVhVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRleHRhcmVhX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZUZXh0YXJlYS5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlRleHRhcmVhL1ZUZXh0YXJlYS5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUZXh0YXJlYV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WVGV4dGFyZWFfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRleHRGaWVsZF9WVGV4dEZpZWxkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVlRleHRGaWVsZC9WVGV4dEZpZWxkICovIi4vc3JjL2NvbXBvbmVudHMvVlRleHRGaWVsZC9WVGV4dEZpZWxkLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFN0eWxlcwovLyBFeHRlbnNpb25zCi8vIFV0aWxpdGllcwp2YXIgYmFzZU1peGlucz1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoX1ZUZXh0RmllbGRfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0pOy8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09YmFzZU1peGlucy5leHRlbmQoe25hbWU6J3YtdGV4dGFyZWEnLHByb3BzOnthdXRvR3JvdzpCb29sZWFuLG5vUmVzaXplOkJvb2xlYW4scm93SGVpZ2h0Ont0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjI0LHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3Iodil7cmV0dXJuIWlzTmFOKHBhcnNlRmxvYXQodikpO319LHJvd3M6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6NSx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHYpe3JldHVybiFpc05hTihwYXJzZUludCh2LDEwKSk7fX19LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX19hc3NpZ24oeyd2LXRleHRhcmVhJzp0cnVlLCd2LXRleHRhcmVhLS1hdXRvLWdyb3cnOnRoaXMuYXV0b0dyb3csJ3YtdGV4dGFyZWEtLW5vLXJlc2l6ZSc6dGhpcy5ub1Jlc2l6ZUhhbmRsZX0sX1ZUZXh0RmllbGRfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykpO30sbm9SZXNpemVIYW5kbGU6ZnVuY3Rpb24gbm9SZXNpemVIYW5kbGUoKXtyZXR1cm4gdGhpcy5ub1Jlc2l6ZXx8dGhpcy5hdXRvR3Jvdzt9fSx3YXRjaDp7bGF6eVZhbHVlOmZ1bmN0aW9uIGxhenlWYWx1ZSgpe3RoaXMuYXV0b0dyb3cmJnRoaXMuJG5leHRUaWNrKHRoaXMuY2FsY3VsYXRlSW5wdXRIZWlnaHQpO30scm93SGVpZ2h0OmZ1bmN0aW9uIHJvd0hlaWdodCgpe3RoaXMuYXV0b0dyb3cmJnRoaXMuJG5leHRUaWNrKHRoaXMuY2FsY3VsYXRlSW5wdXRIZWlnaHQpO319LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3ZhciBfdGhpcz10aGlzO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtfdGhpcy5hdXRvR3JvdyYmX3RoaXMuY2FsY3VsYXRlSW5wdXRIZWlnaHQoKTt9LDApO30sbWV0aG9kczp7Y2FsY3VsYXRlSW5wdXRIZWlnaHQ6ZnVuY3Rpb24gY2FsY3VsYXRlSW5wdXRIZWlnaHQoKXt2YXIgaW5wdXQ9dGhpcy4kcmVmcy5pbnB1dDtpZighaW5wdXQpcmV0dXJuO2lucHV0LnN0eWxlLmhlaWdodD0nMCc7dmFyIGhlaWdodD1pbnB1dC5zY3JvbGxIZWlnaHQ7dmFyIG1pbkhlaWdodD1wYXJzZUludCh0aGlzLnJvd3MsMTApKnBhcnNlRmxvYXQodGhpcy5yb3dIZWlnaHQpOy8vIFRoaXMgaGFzIHRvIGJlIGRvbmUgQVNBUCwgd2FpdGluZyBmb3IgVnVlCi8vIHRvIHVwZGF0ZSB0aGUgRE9NIGNhdXNlcyB1Z2x5IGxheW91dCBqdW1waW5nCmlucHV0LnN0eWxlLmhlaWdodD1NYXRoLm1heChtaW5IZWlnaHQsaGVpZ2h0KSsncHgnO30sZ2VuSW5wdXQ6ZnVuY3Rpb24gZ2VuSW5wdXQoKXt2YXIgaW5wdXQ9X1ZUZXh0RmllbGRfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlbklucHV0LmNhbGwodGhpcyk7aW5wdXQudGFnPSd0ZXh0YXJlYSc7ZGVsZXRlIGlucHV0LmRhdGEuYXR0cnMudHlwZTtpbnB1dC5kYXRhLmF0dHJzLnJvd3M9dGhpcy5yb3dzO3JldHVybiBpbnB1dDt9LG9uSW5wdXQ6ZnVuY3Rpb24gb25JbnB1dChlKXtfVlRleHRGaWVsZF9WVGV4dEZpZWxkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMub25JbnB1dC5jYWxsKHRoaXMsZSk7dGhpcy5hdXRvR3JvdyYmdGhpcy5jYWxjdWxhdGVJbnB1dEhlaWdodCgpO30sb25LZXlEb3duOmZ1bmN0aW9uIG9uS2V5RG93bihlKXsvLyBQcmV2ZW50cyBjbG9zaW5nIG9mIGEKLy8gZGlhbG9nIHdoZW4gcHJlc3NpbmcKLy8gZW50ZXIKaWYodGhpcy5pc0ZvY3VzZWQmJmUua2V5Q29kZT09PTEzKXtlLnN0b3BQcm9wYWdhdGlvbigpO310aGlzLiRlbWl0KCdrZXlkb3duJyxlKTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUZXh0YXJlYS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVGV4dGFyZWEvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVlRleHRhcmVhLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZUZXh0YXJlYUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRleHRhcmVhX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVGV4dGFyZWEgKi8iLi9zcmMvY29tcG9uZW50cy9WVGV4dGFyZWEvVlRleHRhcmVhLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlRleHRhcmVhIixmdW5jdGlvbigpe3JldHVybiBfVlRleHRhcmVhX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9WVGV4dGFyZWFfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUaW1lUGlja2VyL1ZUaW1lUGlja2VyLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRpbWVQaWNrZXIvVlRpbWVQaWNrZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBTZWxlY3RpbmdUaW1lcywgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVGltZVBpY2tlclZUaW1lUGlja2VyVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiU2VsZWN0aW5nVGltZXMiLGZ1bmN0aW9uKCl7cmV0dXJuIFNlbGVjdGluZ1RpbWVzO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGltZVBpY2tlclRpdGxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVGltZVBpY2tlclRpdGxlICovIi4vc3JjL2NvbXBvbmVudHMvVlRpbWVQaWNrZXIvVlRpbWVQaWNrZXJUaXRsZS50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGltZVBpY2tlckNsb2NrX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVGltZVBpY2tlckNsb2NrICovIi4vc3JjL2NvbXBvbmVudHMvVlRpbWVQaWNrZXIvVlRpbWVQaWNrZXJDbG9jay50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfcGlja2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3BpY2tlciAqLyIuL3NyYy9taXhpbnMvcGlja2VyL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19waWNrZXJfYnV0dG9uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3BpY2tlci1idXR0b24gKi8iLi9zcmMvbWl4aW5zL3BpY2tlci1idXR0b24vaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGF0ZVBpY2tlcl91dGlsX3BhZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZEYXRlUGlja2VyL3V0aWwvcGFkICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGVQaWNrZXIvdXRpbC9wYWQudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX3JlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19yZWFkfHxmdW5jdGlvbihvLG4pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl07aWYoIW0pcmV0dXJuIG87dmFyIGk9bS5jYWxsKG8pLHIsYXI9W10sZTt0cnl7d2hpbGUoKG49PT12b2lkIDB8fG4tLT4wKSYmIShyPWkubmV4dCgpKS5kb25lKXthci5wdXNoKHIudmFsdWUpO319Y2F0Y2goZXJyb3Ipe2U9e2Vycm9yOmVycm9yfTt9ZmluYWxseXt0cnl7aWYociYmIXIuZG9uZSYmKG09aVsicmV0dXJuIl0pKW0uY2FsbChpKTt9ZmluYWxseXtpZihlKXRocm93IGUuZXJyb3I7fX1yZXR1cm4gYXI7fTsvLyBDb21wb25lbnRzCi8vIE1peGlucwovLyBVdGlscwp2YXIgcmFuZ2VIb3VyczI0PU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImNyZWF0ZVJhbmdlIl0pKDI0KTt2YXIgcmFuZ2VIb3VyczEyYW09T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siY3JlYXRlUmFuZ2UiXSkoMTIpO3ZhciByYW5nZUhvdXJzMTJwbT1yYW5nZUhvdXJzMTJhbS5tYXAoZnVuY3Rpb24odil7cmV0dXJuIHYrMTI7fSk7dmFyIHJhbmdlNjA9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siY3JlYXRlUmFuZ2UiXSkoNjApO3ZhciBTZWxlY3RpbmdUaW1lczsoZnVuY3Rpb24oU2VsZWN0aW5nVGltZXMpe1NlbGVjdGluZ1RpbWVzW1NlbGVjdGluZ1RpbWVzWyJIb3VyIl09MV09IkhvdXIiO1NlbGVjdGluZ1RpbWVzW1NlbGVjdGluZ1RpbWVzWyJNaW51dGUiXT0yXT0iTWludXRlIjtTZWxlY3RpbmdUaW1lc1tTZWxlY3RpbmdUaW1lc1siU2Vjb25kIl09M109IlNlY29uZCI7fSkoU2VsZWN0aW5nVGltZXN8fChTZWxlY3RpbmdUaW1lcz17fSkpO3ZhciBzZWxlY3RpbmdOYW1lcz17MTonaG91cicsMjonbWludXRlJywzOidzZWNvbmQnfTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdKShfbWl4aW5zX3BpY2tlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sX21peGluc19waWNrZXJfYnV0dG9uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXS8qIEB2dWUvY29tcG9uZW50ICovKS5leHRlbmQoe25hbWU6J3YtdGltZS1waWNrZXInLHByb3BzOnthbGxvd2VkSG91cnM6e3R5cGU6W0Z1bmN0aW9uLEFycmF5XX0sYWxsb3dlZE1pbnV0ZXM6e3R5cGU6W0Z1bmN0aW9uLEFycmF5XX0sYWxsb3dlZFNlY29uZHM6e3R5cGU6W0Z1bmN0aW9uLEFycmF5XX0sZGlzYWJsZWQ6Qm9vbGVhbixmb3JtYXQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2FtcG0nLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsKXtyZXR1cm5bJ2FtcG0nLCcyNGhyJ10uaW5jbHVkZXModmFsKTt9fSxtaW46U3RyaW5nLG1heDpTdHJpbmcscmVhZG9ubHk6Qm9vbGVhbixzY3JvbGxhYmxlOkJvb2xlYW4sdXNlU2Vjb25kczpCb29sZWFuLHZhbHVlOm51bGwsYW1wbUluVGl0bGU6Qm9vbGVhbn0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2lucHV0SG91cjpudWxsLGlucHV0TWludXRlOm51bGwsaW5wdXRTZWNvbmQ6bnVsbCxsYXp5SW5wdXRIb3VyOm51bGwsbGF6eUlucHV0TWludXRlOm51bGwsbGF6eUlucHV0U2Vjb25kOm51bGwscGVyaW9kOidhbScsc2VsZWN0aW5nOlNlbGVjdGluZ1RpbWVzLkhvdXJ9O30sY29tcHV0ZWQ6e3NlbGVjdGluZ0hvdXI6e2dldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5zZWxlY3Rpbmc9PT1TZWxlY3RpbmdUaW1lcy5Ib3VyO30sc2V0OmZ1bmN0aW9uIHNldCh2KXt0aGlzLnNlbGVjdGluZz1TZWxlY3RpbmdUaW1lcy5Ib3VyO319LHNlbGVjdGluZ01pbnV0ZTp7Z2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLnNlbGVjdGluZz09PVNlbGVjdGluZ1RpbWVzLk1pbnV0ZTt9LHNldDpmdW5jdGlvbiBzZXQodil7dGhpcy5zZWxlY3Rpbmc9U2VsZWN0aW5nVGltZXMuTWludXRlO319LHNlbGVjdGluZ1NlY29uZDp7Z2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLnNlbGVjdGluZz09PVNlbGVjdGluZ1RpbWVzLlNlY29uZDt9LHNldDpmdW5jdGlvbiBzZXQodil7dGhpcy5zZWxlY3Rpbmc9U2VsZWN0aW5nVGltZXMuU2Vjb25kO319LGlzQWxsb3dlZEhvdXJDYjpmdW5jdGlvbiBpc0FsbG93ZWRIb3VyQ2IoKXt2YXIgX3RoaXM9dGhpczt2YXIgY2I7aWYodGhpcy5hbGxvd2VkSG91cnMgaW5zdGFuY2VvZiBBcnJheSl7Y2I9ZnVuY3Rpb24gY2IodmFsKXtyZXR1cm4gX3RoaXMuYWxsb3dlZEhvdXJzLmluY2x1ZGVzKHZhbCk7fTt9ZWxzZXtjYj10aGlzLmFsbG93ZWRIb3Vyczt9aWYoIXRoaXMubWluJiYhdGhpcy5tYXgpcmV0dXJuIGNiO3ZhciBtaW5Ib3VyPXRoaXMubWluP051bWJlcih0aGlzLm1pbi5zcGxpdCgnOicpWzBdKTowO3ZhciBtYXhIb3VyPXRoaXMubWF4P051bWJlcih0aGlzLm1heC5zcGxpdCgnOicpWzBdKToyMztyZXR1cm4gZnVuY3Rpb24odmFsKXtyZXR1cm4gdmFsPj1taW5Ib3VyKjEmJnZhbDw9bWF4SG91cioxJiYoIWNifHxjYih2YWwpKTt9O30saXNBbGxvd2VkTWludXRlQ2I6ZnVuY3Rpb24gaXNBbGxvd2VkTWludXRlQ2IoKXt2YXIgX3RoaXM9dGhpczt2YXIgY2I7dmFyIGlzSG91ckFsbG93ZWQ9IXRoaXMuaXNBbGxvd2VkSG91ckNifHx0aGlzLmlucHV0SG91cj09PW51bGx8fHRoaXMuaXNBbGxvd2VkSG91ckNiKHRoaXMuaW5wdXRIb3VyKTtpZih0aGlzLmFsbG93ZWRNaW51dGVzIGluc3RhbmNlb2YgQXJyYXkpe2NiPWZ1bmN0aW9uIGNiKHZhbCl7cmV0dXJuIF90aGlzLmFsbG93ZWRNaW51dGVzLmluY2x1ZGVzKHZhbCk7fTt9ZWxzZXtjYj10aGlzLmFsbG93ZWRNaW51dGVzO31pZighdGhpcy5taW4mJiF0aGlzLm1heCl7cmV0dXJuIGlzSG91ckFsbG93ZWQ/Y2I6ZnVuY3Rpb24oKXtyZXR1cm4gZmFsc2U7fTt9dmFyIF9hPV9fcmVhZCh0aGlzLm1pbj90aGlzLm1pbi5zcGxpdCgnOicpLm1hcChOdW1iZXIpOlswLDBdLDIpLG1pbkhvdXI9X2FbMF0sbWluTWludXRlPV9hWzFdO3ZhciBfYj1fX3JlYWQodGhpcy5tYXg/dGhpcy5tYXguc3BsaXQoJzonKS5tYXAoTnVtYmVyKTpbMjMsNTldLDIpLG1heEhvdXI9X2JbMF0sbWF4TWludXRlPV9iWzFdO3ZhciBtaW5UaW1lPW1pbkhvdXIqNjArbWluTWludXRlKjE7dmFyIG1heFRpbWU9bWF4SG91cio2MCttYXhNaW51dGUqMTtyZXR1cm4gZnVuY3Rpb24odmFsKXt2YXIgdGltZT02MCpfdGhpcy5pbnB1dEhvdXIrdmFsO3JldHVybiB0aW1lPj1taW5UaW1lJiZ0aW1lPD1tYXhUaW1lJiZpc0hvdXJBbGxvd2VkJiYoIWNifHxjYih2YWwpKTt9O30saXNBbGxvd2VkU2Vjb25kQ2I6ZnVuY3Rpb24gaXNBbGxvd2VkU2Vjb25kQ2IoKXt2YXIgX3RoaXM9dGhpczt2YXIgY2I7dmFyIGlzSG91ckFsbG93ZWQ9IXRoaXMuaXNBbGxvd2VkSG91ckNifHx0aGlzLmlucHV0SG91cj09PW51bGx8fHRoaXMuaXNBbGxvd2VkSG91ckNiKHRoaXMuaW5wdXRIb3VyKTt2YXIgaXNNaW51dGVBbGxvd2VkPWlzSG91ckFsbG93ZWQmJighdGhpcy5pc0FsbG93ZWRNaW51dGVDYnx8dGhpcy5pbnB1dE1pbnV0ZT09PW51bGx8fHRoaXMuaXNBbGxvd2VkTWludXRlQ2IodGhpcy5pbnB1dE1pbnV0ZSkpO2lmKHRoaXMuYWxsb3dlZFNlY29uZHMgaW5zdGFuY2VvZiBBcnJheSl7Y2I9ZnVuY3Rpb24gY2IodmFsKXtyZXR1cm4gX3RoaXMuYWxsb3dlZFNlY29uZHMuaW5jbHVkZXModmFsKTt9O31lbHNle2NiPXRoaXMuYWxsb3dlZFNlY29uZHM7fWlmKCF0aGlzLm1pbiYmIXRoaXMubWF4KXtyZXR1cm4gaXNNaW51dGVBbGxvd2VkP2NiOmZ1bmN0aW9uKCl7cmV0dXJuIGZhbHNlO307fXZhciBfYT1fX3JlYWQodGhpcy5taW4/dGhpcy5taW4uc3BsaXQoJzonKS5tYXAoTnVtYmVyKTpbMCwwLDBdLDMpLG1pbkhvdXI9X2FbMF0sbWluTWludXRlPV9hWzFdLG1pblNlY29uZD1fYVsyXTt2YXIgX2I9X19yZWFkKHRoaXMubWF4P3RoaXMubWF4LnNwbGl0KCc6JykubWFwKE51bWJlcik6WzIzLDU5LDU5XSwzKSxtYXhIb3VyPV9iWzBdLG1heE1pbnV0ZT1fYlsxXSxtYXhTZWNvbmQ9X2JbMl07dmFyIG1pblRpbWU9bWluSG91ciozNjAwK21pbk1pbnV0ZSo2MCsobWluU2Vjb25kfHwwKSoxO3ZhciBtYXhUaW1lPW1heEhvdXIqMzYwMCttYXhNaW51dGUqNjArKG1heFNlY29uZHx8MCkqMTtyZXR1cm4gZnVuY3Rpb24odmFsKXt2YXIgdGltZT0zNjAwKl90aGlzLmlucHV0SG91cis2MCpfdGhpcy5pbnB1dE1pbnV0ZSt2YWw7cmV0dXJuIHRpbWU+PW1pblRpbWUmJnRpbWU8PW1heFRpbWUmJmlzTWludXRlQWxsb3dlZCYmKCFjYnx8Y2IodmFsKSk7fTt9LGlzQW1QbTpmdW5jdGlvbiBpc0FtUG0oKXtyZXR1cm4gdGhpcy5mb3JtYXQ9PT0nYW1wbSc7fX0sd2F0Y2g6e3ZhbHVlOidzZXRJbnB1dERhdGEnfSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLnNldElucHV0RGF0YSh0aGlzLnZhbHVlKTt0aGlzLiRvbigndXBkYXRlOnBlcmlvZCcsdGhpcy5zZXRQZXJpb2QpO30sbWV0aG9kczp7Z2VuVmFsdWU6ZnVuY3Rpb24gZ2VuVmFsdWUoKXtpZih0aGlzLmlucHV0SG91ciE9bnVsbCYmdGhpcy5pbnB1dE1pbnV0ZSE9bnVsbCYmKCF0aGlzLnVzZVNlY29uZHN8fHRoaXMuaW5wdXRTZWNvbmQhPW51bGwpKXtyZXR1cm4gT2JqZWN0KF9WRGF0ZVBpY2tlcl91dGlsX3BhZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0pKHRoaXMuaW5wdXRIb3VyKSsiOiIrT2JqZWN0KF9WRGF0ZVBpY2tlcl91dGlsX3BhZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0pKHRoaXMuaW5wdXRNaW51dGUpKyh0aGlzLnVzZVNlY29uZHM/IjoiK09iamVjdChfVkRhdGVQaWNrZXJfdXRpbF9wYWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdKSh0aGlzLmlucHV0U2Vjb25kKTonJyk7fXJldHVybiBudWxsO30sZW1pdFZhbHVlOmZ1bmN0aW9uIGVtaXRWYWx1ZSgpe3ZhciB2YWx1ZT10aGlzLmdlblZhbHVlKCk7aWYodmFsdWUhPT1udWxsKXRoaXMuJGVtaXQoJ2lucHV0Jyx2YWx1ZSk7fSxzZXRQZXJpb2Q6ZnVuY3Rpb24gc2V0UGVyaW9kKHBlcmlvZCl7dGhpcy5wZXJpb2Q9cGVyaW9kO2lmKHRoaXMuaW5wdXRIb3VyIT1udWxsKXt2YXIgbmV3SG91cj10aGlzLmlucHV0SG91cisocGVyaW9kPT09J2FtJz8tMTI6MTIpO3RoaXMuaW5wdXRIb3VyPXRoaXMuZmlyc3RBbGxvd2VkKCdob3VyJyxuZXdIb3VyKTt0aGlzLmVtaXRWYWx1ZSgpO319LHNldElucHV0RGF0YTpmdW5jdGlvbiBzZXRJbnB1dERhdGEodmFsdWUpe2lmKHZhbHVlPT1udWxsfHx2YWx1ZT09PScnKXt0aGlzLmlucHV0SG91cj1udWxsO3RoaXMuaW5wdXRNaW51dGU9bnVsbDt0aGlzLmlucHV0U2Vjb25kPW51bGw7fWVsc2UgaWYodmFsdWUgaW5zdGFuY2VvZiBEYXRlKXt0aGlzLmlucHV0SG91cj12YWx1ZS5nZXRIb3VycygpO3RoaXMuaW5wdXRNaW51dGU9dmFsdWUuZ2V0TWludXRlcygpO3RoaXMuaW5wdXRTZWNvbmQ9dmFsdWUuZ2V0U2Vjb25kcygpO31lbHNle3ZhciBfYT1fX3JlYWQodmFsdWUudHJpbSgpLnRvTG93ZXJDYXNlKCkubWF0Y2goL14oXGQrKTooXGQrKSg6KFxkKykpPyhbYXBdbSk/JC8pfHxuZXcgQXJyYXkoNiksNiksaG91cj1fYVsxXSxtaW51dGU9X2FbMl0sc2Vjb25kPV9hWzRdLHBlcmlvZD1fYVs1XTt0aGlzLmlucHV0SG91cj1wZXJpb2Q/dGhpcy5jb252ZXJ0MTJ0bzI0KHBhcnNlSW50KGhvdXIsMTApLHBlcmlvZCk6cGFyc2VJbnQoaG91ciwxMCk7dGhpcy5pbnB1dE1pbnV0ZT1wYXJzZUludChtaW51dGUsMTApO3RoaXMuaW5wdXRTZWNvbmQ9cGFyc2VJbnQoc2Vjb25kfHwwLDEwKTt9dGhpcy5wZXJpb2Q9dGhpcy5pbnB1dEhvdXI9PW51bGx8fHRoaXMuaW5wdXRIb3VyPDEyPydhbSc6J3BtJzt9LGNvbnZlcnQyNHRvMTI6ZnVuY3Rpb24gY29udmVydDI0dG8xMihob3VyKXtyZXR1cm4gaG91cj8oaG91ci0xKSUxMisxOjEyO30sY29udmVydDEydG8yNDpmdW5jdGlvbiBjb252ZXJ0MTJ0bzI0KGhvdXIscGVyaW9kKXtyZXR1cm4gaG91ciUxMisocGVyaW9kPT09J3BtJz8xMjowKTt9LG9uSW5wdXQ6ZnVuY3Rpb24gb25JbnB1dCh2YWx1ZSl7aWYodGhpcy5zZWxlY3Rpbmc9PT1TZWxlY3RpbmdUaW1lcy5Ib3VyKXt0aGlzLmlucHV0SG91cj10aGlzLmlzQW1QbT90aGlzLmNvbnZlcnQxMnRvMjQodmFsdWUsdGhpcy5wZXJpb2QpOnZhbHVlO31lbHNlIGlmKHRoaXMuc2VsZWN0aW5nPT09U2VsZWN0aW5nVGltZXMuTWludXRlKXt0aGlzLmlucHV0TWludXRlPXZhbHVlO31lbHNle3RoaXMuaW5wdXRTZWNvbmQ9dmFsdWU7fXRoaXMuZW1pdFZhbHVlKCk7fSxvbkNoYW5nZTpmdW5jdGlvbiBvbkNoYW5nZSh2YWx1ZSl7dGhpcy4kZW1pdCgiY2xpY2s6IitzZWxlY3RpbmdOYW1lc1t0aGlzLnNlbGVjdGluZ10sdmFsdWUpO3ZhciBlbWl0Q2hhbmdlPXRoaXMuc2VsZWN0aW5nPT09KHRoaXMudXNlU2Vjb25kcz9TZWxlY3RpbmdUaW1lcy5TZWNvbmQ6U2VsZWN0aW5nVGltZXMuTWludXRlKTtpZih0aGlzLnNlbGVjdGluZz09PVNlbGVjdGluZ1RpbWVzLkhvdXIpe3RoaXMuc2VsZWN0aW5nPVNlbGVjdGluZ1RpbWVzLk1pbnV0ZTt9ZWxzZSBpZih0aGlzLnVzZVNlY29uZHMmJnRoaXMuc2VsZWN0aW5nPT09U2VsZWN0aW5nVGltZXMuTWludXRlKXt0aGlzLnNlbGVjdGluZz1TZWxlY3RpbmdUaW1lcy5TZWNvbmQ7fWlmKHRoaXMuaW5wdXRIb3VyPT09dGhpcy5sYXp5SW5wdXRIb3VyJiZ0aGlzLmlucHV0TWludXRlPT09dGhpcy5sYXp5SW5wdXRNaW51dGUmJighdGhpcy51c2VTZWNvbmRzfHx0aGlzLmlucHV0U2Vjb25kPT09dGhpcy5sYXp5SW5wdXRTZWNvbmQpKXJldHVybjt2YXIgdGltZT10aGlzLmdlblZhbHVlKCk7aWYodGltZT09PW51bGwpcmV0dXJuO3RoaXMubGF6eUlucHV0SG91cj10aGlzLmlucHV0SG91cjt0aGlzLmxhenlJbnB1dE1pbnV0ZT10aGlzLmlucHV0TWludXRlO3RoaXMudXNlU2Vjb25kcyYmKHRoaXMubGF6eUlucHV0U2Vjb25kPXRoaXMuaW5wdXRTZWNvbmQpO2VtaXRDaGFuZ2UmJnRoaXMuJGVtaXQoJ2NoYW5nZScsdGltZSk7fSxmaXJzdEFsbG93ZWQ6ZnVuY3Rpb24gZmlyc3RBbGxvd2VkKHR5cGUsdmFsdWUpe3ZhciBhbGxvd2VkRm49dHlwZT09PSdob3VyJz90aGlzLmlzQWxsb3dlZEhvdXJDYjp0eXBlPT09J21pbnV0ZSc/dGhpcy5pc0FsbG93ZWRNaW51dGVDYjp0aGlzLmlzQWxsb3dlZFNlY29uZENiO2lmKCFhbGxvd2VkRm4pcmV0dXJuIHZhbHVlOy8vIFRPRE86IGNsZWFuIHVwCnZhciByYW5nZT10eXBlPT09J21pbnV0ZSc/cmFuZ2U2MDp0eXBlPT09J3NlY29uZCc/cmFuZ2U2MDp0aGlzLmlzQW1QbT92YWx1ZTwxMj9yYW5nZUhvdXJzMTJhbTpyYW5nZUhvdXJzMTJwbTpyYW5nZUhvdXJzMjQ7dmFyIGZpcnN0PXJhbmdlLmZpbmQoZnVuY3Rpb24odil7cmV0dXJuIGFsbG93ZWRGbigodit2YWx1ZSklcmFuZ2UubGVuZ3RoK3JhbmdlWzBdKTt9KTtyZXR1cm4oKGZpcnN0fHwwKSt2YWx1ZSklcmFuZ2UubGVuZ3RoK3JhbmdlWzBdO30sZ2VuQ2xvY2s6ZnVuY3Rpb24gZ2VuQ2xvY2soKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVlRpbWVQaWNrZXJDbG9ja19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0se3Byb3BzOnthbGxvd2VkVmFsdWVzOnRoaXMuc2VsZWN0aW5nPT09U2VsZWN0aW5nVGltZXMuSG91cj90aGlzLmlzQWxsb3dlZEhvdXJDYjp0aGlzLnNlbGVjdGluZz09PVNlbGVjdGluZ1RpbWVzLk1pbnV0ZT90aGlzLmlzQWxsb3dlZE1pbnV0ZUNiOnRoaXMuaXNBbGxvd2VkU2Vjb25kQ2IsY29sb3I6dGhpcy5jb2xvcixkYXJrOnRoaXMuZGFyayxkaXNhYmxlZDp0aGlzLmRpc2FibGVkLGRvdWJsZTp0aGlzLnNlbGVjdGluZz09PVNlbGVjdGluZ1RpbWVzLkhvdXImJiF0aGlzLmlzQW1QbSxmb3JtYXQ6dGhpcy5zZWxlY3Rpbmc9PT1TZWxlY3RpbmdUaW1lcy5Ib3VyP3RoaXMuaXNBbVBtP3RoaXMuY29udmVydDI0dG8xMjpmdW5jdGlvbih2YWwpe3JldHVybiB2YWw7fTpmdW5jdGlvbih2YWwpe3JldHVybiBPYmplY3QoX1ZEYXRlUGlja2VyX3V0aWxfcGFkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSkodmFsLDIpO30sbGlnaHQ6dGhpcy5saWdodCxtYXg6dGhpcy5zZWxlY3Rpbmc9PT1TZWxlY3RpbmdUaW1lcy5Ib3VyP3RoaXMuaXNBbVBtJiZ0aGlzLnBlcmlvZD09PSdhbSc/MTE6MjM6NTksbWluOnRoaXMuc2VsZWN0aW5nPT09U2VsZWN0aW5nVGltZXMuSG91ciYmdGhpcy5pc0FtUG0mJnRoaXMucGVyaW9kPT09J3BtJz8xMjowLHJlYWRvbmx5OnRoaXMucmVhZG9ubHksc2Nyb2xsYWJsZTp0aGlzLnNjcm9sbGFibGUsc2l6ZTpOdW1iZXIodGhpcy53aWR0aCktKCF0aGlzLmZ1bGxXaWR0aCYmdGhpcy5sYW5kc2NhcGU/ODA6MjApLHN0ZXA6dGhpcy5zZWxlY3Rpbmc9PT1TZWxlY3RpbmdUaW1lcy5Ib3VyPzE6NSx2YWx1ZTp0aGlzLnNlbGVjdGluZz09PVNlbGVjdGluZ1RpbWVzLkhvdXI/dGhpcy5pbnB1dEhvdXI6dGhpcy5zZWxlY3Rpbmc9PT1TZWxlY3RpbmdUaW1lcy5NaW51dGU/dGhpcy5pbnB1dE1pbnV0ZTp0aGlzLmlucHV0U2Vjb25kfSxvbjp7aW5wdXQ6dGhpcy5vbklucHV0LGNoYW5nZTp0aGlzLm9uQ2hhbmdlfSxyZWY6J2Nsb2NrJ30pO30sZ2VuQ2xvY2tBbVBtOmZ1bmN0aW9uIGdlbkNsb2NrQW1QbSgpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHRoaXMuc2V0VGV4dENvbG9yKHRoaXMuY29sb3J8fCdwcmltYXJ5Jyx7c3RhdGljQ2xhc3M6J3YtdGltZS1waWNrZXItY2xvY2tfX2FtcG0nfSksW3RoaXMuZ2VuUGlja2VyQnV0dG9uKCdwZXJpb2QnLCdhbScsdGhpcy4kdnVldGlmeS5sYW5nLnQoJyR2dWV0aWZ5LnRpbWVQaWNrZXIuYW0nKSx0aGlzLmRpc2FibGVkfHx0aGlzLnJlYWRvbmx5KSx0aGlzLmdlblBpY2tlckJ1dHRvbigncGVyaW9kJywncG0nLHRoaXMuJHZ1ZXRpZnkubGFuZy50KCckdnVldGlmeS50aW1lUGlja2VyLnBtJyksdGhpcy5kaXNhYmxlZHx8dGhpcy5yZWFkb25seSldKTt9LGdlblBpY2tlckJvZHk6ZnVuY3Rpb24gZ2VuUGlja2VyQm9keSgpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi10aW1lLXBpY2tlci1jbG9ja19fY29udGFpbmVyJyxrZXk6dGhpcy5zZWxlY3Rpbmd9LFshdGhpcy5hbXBtSW5UaXRsZSYmdGhpcy5pc0FtUG0mJnRoaXMuZ2VuQ2xvY2tBbVBtKCksdGhpcy5nZW5DbG9jaygpXSk7fSxnZW5QaWNrZXJUaXRsZTpmdW5jdGlvbiBnZW5QaWNrZXJUaXRsZSgpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KF9WVGltZVBpY2tlclRpdGxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSx7cHJvcHM6e2FtcG06dGhpcy5hbXBtSW5UaXRsZSYmdGhpcy5pc0FtUG0sZGlzYWJsZWQ6dGhpcy5kaXNhYmxlZCxob3VyOnRoaXMuaW5wdXRIb3VyLG1pbnV0ZTp0aGlzLmlucHV0TWludXRlLHNlY29uZDp0aGlzLmlucHV0U2Vjb25kLHBlcmlvZDp0aGlzLnBlcmlvZCxyZWFkb25seTp0aGlzLnJlYWRvbmx5LHVzZVNlY29uZHM6dGhpcy51c2VTZWNvbmRzLHNlbGVjdGluZzp0aGlzLnNlbGVjdGluZ30sb246eyd1cGRhdGU6c2VsZWN0aW5nJzpmdW5jdGlvbiB1cGRhdGVTZWxlY3RpbmcodmFsdWUpe3JldHVybiBfdGhpcy5zZWxlY3Rpbmc9dmFsdWU7fSwndXBkYXRlOnBlcmlvZCc6dGhpcy5zZXRQZXJpb2R9LHJlZjondGl0bGUnLHNsb3Q6J3RpdGxlJ30pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoKXtyZXR1cm4gdGhpcy5nZW5QaWNrZXIoJ3YtcGlja2VyLS10aW1lJyk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUaW1lUGlja2VyL1ZUaW1lUGlja2VyQ2xvY2suc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVGltZVBpY2tlci9WVGltZVBpY2tlckNsb2NrLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRpbWVQaWNrZXJWVGltZVBpY2tlckNsb2NrU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRpbWVQaWNrZXIvVlRpbWVQaWNrZXJDbG9jay50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRpbWVQaWNrZXIvVlRpbWVQaWNrZXJDbG9jay50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVGltZVBpY2tlclZUaW1lUGlja2VyQ2xvY2tUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGltZVBpY2tlckNsb2NrX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZUaW1lUGlja2VyQ2xvY2suc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZUaW1lUGlja2VyL1ZUaW1lUGlja2VyQ2xvY2suc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGltZVBpY2tlckNsb2NrX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZUaW1lUGlja2VyQ2xvY2tfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9jb2xvcmFibGUgKi8iLi9zcmMvbWl4aW5zL2NvbG9yYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIE1peGlucwovLyBUeXBlcwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKShfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLyogQHZ1ZS9jb21wb25lbnQgKi8pLmV4dGVuZCh7bmFtZTondi10aW1lLXBpY2tlci1jbG9jaycscHJvcHM6e2FsbG93ZWRWYWx1ZXM6RnVuY3Rpb24sYW1wbTpCb29sZWFuLGRpc2FibGVkOkJvb2xlYW4sZG91YmxlOkJvb2xlYW4sZm9ybWF0Ont0eXBlOkZ1bmN0aW9uLGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQodmFsKXtyZXR1cm4gdmFsO319LG1heDp7dHlwZTpOdW1iZXIscmVxdWlyZWQ6dHJ1ZX0sbWluOnt0eXBlOk51bWJlcixyZXF1aXJlZDp0cnVlfSxzY3JvbGxhYmxlOkJvb2xlYW4scmVhZG9ubHk6Qm9vbGVhbixyb3RhdGU6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MH0sc3RlcDp7dHlwZTpOdW1iZXIsZGVmYXVsdDoxfSx2YWx1ZTpOdW1iZXJ9LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntpbnB1dFZhbHVlOnRoaXMudmFsdWUsaXNEcmFnZ2luZzpmYWxzZSx2YWx1ZU9uTW91c2VEb3duOm51bGwsdmFsdWVPbk1vdXNlVXA6bnVsbH07fSxjb21wdXRlZDp7Y291bnQ6ZnVuY3Rpb24gY291bnQoKXtyZXR1cm4gdGhpcy5tYXgtdGhpcy5taW4rMTt9LGRlZ3JlZXNQZXJVbml0OmZ1bmN0aW9uIGRlZ3JlZXNQZXJVbml0KCl7cmV0dXJuIDM2MC90aGlzLnJvdW5kQ291bnQ7fSxkZWdyZWVzOmZ1bmN0aW9uIGRlZ3JlZXMoKXtyZXR1cm4gdGhpcy5kZWdyZWVzUGVyVW5pdCpNYXRoLlBJLzE4MDt9LGRpc3BsYXllZFZhbHVlOmZ1bmN0aW9uIGRpc3BsYXllZFZhbHVlKCl7cmV0dXJuIHRoaXMudmFsdWU9PW51bGw/dGhpcy5taW46dGhpcy52YWx1ZTt9LGlubmVyUmFkaXVzU2NhbGU6ZnVuY3Rpb24gaW5uZXJSYWRpdXNTY2FsZSgpe3JldHVybiAwLjYyO30scm91bmRDb3VudDpmdW5jdGlvbiByb3VuZENvdW50KCl7cmV0dXJuIHRoaXMuZG91YmxlP3RoaXMuY291bnQvMjp0aGlzLmNvdW50O319LHdhdGNoOnt2YWx1ZTpmdW5jdGlvbiB2YWx1ZShfdmFsdWUpe3RoaXMuaW5wdXRWYWx1ZT1fdmFsdWU7fX0sbWV0aG9kczp7d2hlZWw6ZnVuY3Rpb24gd2hlZWwoZSl7ZS5wcmV2ZW50RGVmYXVsdCgpO3ZhciBkZWx0YT1NYXRoLnNpZ24oLWUuZGVsdGFZfHwxKTt2YXIgdmFsdWU9dGhpcy5kaXNwbGF5ZWRWYWx1ZTtkb3t2YWx1ZT12YWx1ZStkZWx0YTt2YWx1ZT0odmFsdWUtdGhpcy5taW4rdGhpcy5jb3VudCkldGhpcy5jb3VudCt0aGlzLm1pbjt9d2hpbGUoIXRoaXMuaXNBbGxvd2VkKHZhbHVlKSYmdmFsdWUhPT10aGlzLmRpc3BsYXllZFZhbHVlKTtpZih2YWx1ZSE9PXRoaXMuZGlzcGxheWVkVmFsdWUpe3RoaXMudXBkYXRlKHZhbHVlKTt9fSxpc0lubmVyOmZ1bmN0aW9uIGlzSW5uZXIodmFsdWUpe3JldHVybiB0aGlzLmRvdWJsZSYmdmFsdWUtdGhpcy5taW4+PXRoaXMucm91bmRDb3VudDt9LGhhbmRTY2FsZTpmdW5jdGlvbiBoYW5kU2NhbGUodmFsdWUpe3JldHVybiB0aGlzLmlzSW5uZXIodmFsdWUpP3RoaXMuaW5uZXJSYWRpdXNTY2FsZToxO30saXNBbGxvd2VkOmZ1bmN0aW9uIGlzQWxsb3dlZCh2YWx1ZSl7cmV0dXJuIXRoaXMuYWxsb3dlZFZhbHVlc3x8dGhpcy5hbGxvd2VkVmFsdWVzKHZhbHVlKTt9LGdlblZhbHVlczpmdW5jdGlvbiBnZW5WYWx1ZXMoKXt2YXIgY2hpbGRyZW49W107Zm9yKHZhciB2YWx1ZT10aGlzLm1pbjt2YWx1ZTw9dGhpcy5tYXg7dmFsdWU9dmFsdWUrdGhpcy5zdGVwKXt2YXIgY29sb3I9dmFsdWU9PT10aGlzLnZhbHVlJiYodGhpcy5jb2xvcnx8J2FjY2VudCcpO2NoaWxkcmVuLnB1c2godGhpcy4kY3JlYXRlRWxlbWVudCgnc3BhbicsdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IoY29sb3Ise3N0YXRpY0NsYXNzOid2LXRpbWUtcGlja2VyLWNsb2NrX19pdGVtJyxjbGFzczp7J3YtdGltZS1waWNrZXItY2xvY2tfX2l0ZW0tLWFjdGl2ZSc6dmFsdWU9PT10aGlzLmRpc3BsYXllZFZhbHVlLCd2LXRpbWUtcGlja2VyLWNsb2NrX19pdGVtLS1kaXNhYmxlZCc6dGhpcy5kaXNhYmxlZHx8IXRoaXMuaXNBbGxvd2VkKHZhbHVlKX0sc3R5bGU6dGhpcy5nZXRUcmFuc2Zvcm0odmFsdWUpLGRvbVByb3BzOntpbm5lckhUTUw6IjxzcGFuPiIrdGhpcy5mb3JtYXQodmFsdWUpKyI8L3NwYW4+In19KSkpO31yZXR1cm4gY2hpbGRyZW47fSxnZW5IYW5kOmZ1bmN0aW9uIGdlbkhhbmQoKXt2YXIgc2NhbGU9InNjYWxlWSgiK3RoaXMuaGFuZFNjYWxlKHRoaXMuZGlzcGxheWVkVmFsdWUpKyIpIjt2YXIgYW5nbGU9dGhpcy5yb3RhdGUrdGhpcy5kZWdyZWVzUGVyVW5pdCoodGhpcy5kaXNwbGF5ZWRWYWx1ZS10aGlzLm1pbik7dmFyIGNvbG9yPXRoaXMudmFsdWUhPW51bGwmJih0aGlzLmNvbG9yfHwnYWNjZW50Jyk7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IoY29sb3Ise3N0YXRpY0NsYXNzOid2LXRpbWUtcGlja2VyLWNsb2NrX19oYW5kJyxjbGFzczp7J3YtdGltZS1waWNrZXItY2xvY2tfX2hhbmQtLWlubmVyJzp0aGlzLmlzSW5uZXIodGhpcy52YWx1ZSl9LHN0eWxlOnt0cmFuc2Zvcm06InJvdGF0ZSgiK2FuZ2xlKyJkZWcpICIrc2NhbGV9fSkpO30sZ2V0VHJhbnNmb3JtOmZ1bmN0aW9uIGdldFRyYW5zZm9ybShpKXt2YXIgX2E9dGhpcy5nZXRQb3NpdGlvbihpKSx4PV9hLngseT1fYS55O3JldHVybntsZWZ0OjUwK3gqNTArIiUiLHRvcDo1MCt5KjUwKyIlIn07fSxnZXRQb3NpdGlvbjpmdW5jdGlvbiBnZXRQb3NpdGlvbih2YWx1ZSl7dmFyIHJvdGF0ZVJhZGlhbnM9dGhpcy5yb3RhdGUqTWF0aC5QSS8xODA7cmV0dXJue3g6TWF0aC5zaW4oKHZhbHVlLXRoaXMubWluKSp0aGlzLmRlZ3JlZXMrcm90YXRlUmFkaWFucykqdGhpcy5oYW5kU2NhbGUodmFsdWUpLHk6LU1hdGguY29zKCh2YWx1ZS10aGlzLm1pbikqdGhpcy5kZWdyZWVzK3JvdGF0ZVJhZGlhbnMpKnRoaXMuaGFuZFNjYWxlKHZhbHVlKX07fSxvbk1vdXNlRG93bjpmdW5jdGlvbiBvbk1vdXNlRG93bihlKXtlLnByZXZlbnREZWZhdWx0KCk7dGhpcy52YWx1ZU9uTW91c2VEb3duPW51bGw7dGhpcy52YWx1ZU9uTW91c2VVcD1udWxsO3RoaXMuaXNEcmFnZ2luZz10cnVlO3RoaXMub25EcmFnTW92ZShlKTt9LG9uTW91c2VVcDpmdW5jdGlvbiBvbk1vdXNlVXAoZSl7ZS5zdG9wUHJvcGFnYXRpb24oKTt0aGlzLmlzRHJhZ2dpbmc9ZmFsc2U7aWYodGhpcy52YWx1ZU9uTW91c2VVcCE9PW51bGwmJnRoaXMuaXNBbGxvd2VkKHRoaXMudmFsdWVPbk1vdXNlVXApKXt0aGlzLiRlbWl0KCdjaGFuZ2UnLHRoaXMudmFsdWVPbk1vdXNlVXApO319LG9uRHJhZ01vdmU6ZnVuY3Rpb24gb25EcmFnTW92ZShlKXtlLnByZXZlbnREZWZhdWx0KCk7aWYoIXRoaXMuaXNEcmFnZ2luZyYmZS50eXBlIT09J2NsaWNrJylyZXR1cm47dmFyIF9hPXRoaXMuJHJlZnMuY2xvY2suZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksd2lkdGg9X2Eud2lkdGgsdG9wPV9hLnRvcCxsZWZ0PV9hLmxlZnQ7dmFyIGlubmVyV2lkdGg9dGhpcy4kcmVmcy5pbm5lckNsb2NrLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoO3ZhciBfYj0ndG91Y2hlcydpbiBlP2UudG91Y2hlc1swXTplLGNsaWVudFg9X2IuY2xpZW50WCxjbGllbnRZPV9iLmNsaWVudFk7dmFyIGNlbnRlcj17eDp3aWR0aC8yLHk6LXdpZHRoLzJ9O3ZhciBjb29yZHM9e3g6Y2xpZW50WC1sZWZ0LHk6dG9wLWNsaWVudFl9O3ZhciBoYW5kQW5nbGU9TWF0aC5yb3VuZCh0aGlzLmFuZ2xlKGNlbnRlcixjb29yZHMpLXRoaXMucm90YXRlKzM2MCklMzYwO3ZhciBpbnNpZGVDbGljaz10aGlzLmRvdWJsZSYmdGhpcy5ldWNsaWRlYW4oY2VudGVyLGNvb3Jkcyk8KGlubmVyV2lkdGgraW5uZXJXaWR0aCp0aGlzLmlubmVyUmFkaXVzU2NhbGUpLzQ7dmFyIHZhbHVlPShNYXRoLnJvdW5kKGhhbmRBbmdsZS90aGlzLmRlZ3JlZXNQZXJVbml0KSsoaW5zaWRlQ2xpY2s/dGhpcy5yb3VuZENvdW50OjApKSV0aGlzLmNvdW50K3RoaXMubWluOy8vIE5lY2Vzc2FyeSB0byBmaXggZWRnZSBjYXNlIHdoZW4gc2VsZWN0aW5nIGxlZnQgcGFydCBvZiB0aGUgdmFsdWUocykgYXQgMTIgbydjbG9jawp2YXIgbmV3VmFsdWU7aWYoaGFuZEFuZ2xlPj0zNjAtdGhpcy5kZWdyZWVzUGVyVW5pdC8yKXtuZXdWYWx1ZT1pbnNpZGVDbGljaz90aGlzLm1heC10aGlzLnJvdW5kQ291bnQrMTp0aGlzLm1pbjt9ZWxzZXtuZXdWYWx1ZT12YWx1ZTt9aWYodGhpcy5pc0FsbG93ZWQodmFsdWUpKXtpZih0aGlzLnZhbHVlT25Nb3VzZURvd249PT1udWxsKXt0aGlzLnZhbHVlT25Nb3VzZURvd249bmV3VmFsdWU7fXRoaXMudmFsdWVPbk1vdXNlVXA9bmV3VmFsdWU7dGhpcy51cGRhdGUobmV3VmFsdWUpO319LHVwZGF0ZTpmdW5jdGlvbiB1cGRhdGUodmFsdWUpe2lmKHRoaXMuaW5wdXRWYWx1ZSE9PXZhbHVlKXt0aGlzLmlucHV0VmFsdWU9dmFsdWU7dGhpcy4kZW1pdCgnaW5wdXQnLHZhbHVlKTt9fSxldWNsaWRlYW46ZnVuY3Rpb24gZXVjbGlkZWFuKHAwLHAxKXt2YXIgZHg9cDEueC1wMC54O3ZhciBkeT1wMS55LXAwLnk7cmV0dXJuIE1hdGguc3FydChkeCpkeCtkeSpkeSk7fSxhbmdsZTpmdW5jdGlvbiBhbmdsZShjZW50ZXIscDEpe3ZhciB2YWx1ZT0yKk1hdGguYXRhbjIocDEueS1jZW50ZXIueS10aGlzLmV1Y2xpZGVhbihjZW50ZXIscDEpLHAxLngtY2VudGVyLngpO3JldHVybiBNYXRoLmFicyh2YWx1ZSoxODAvTWF0aC5QSSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgX3RoaXM9dGhpczt2YXIgZGF0YT17c3RhdGljQ2xhc3M6J3YtdGltZS1waWNrZXItY2xvY2snLGNsYXNzOl9fYXNzaWduKHsndi10aW1lLXBpY2tlci1jbG9jay0taW5kZXRlcm1pbmF0ZSc6dGhpcy52YWx1ZT09bnVsbH0sdGhpcy50aGVtZUNsYXNzZXMpLG9uOnRoaXMucmVhZG9ubHl8fHRoaXMuZGlzYWJsZWQ/dW5kZWZpbmVkOk9iamVjdC5hc3NpZ24oe21vdXNlZG93bjp0aGlzLm9uTW91c2VEb3duLG1vdXNldXA6dGhpcy5vbk1vdXNlVXAsbW91c2VsZWF2ZTpmdW5jdGlvbiBtb3VzZWxlYXZlKGUpe3JldHVybiBfdGhpcy5pc0RyYWdnaW5nJiZfdGhpcy5vbk1vdXNlVXAoZSk7fSx0b3VjaHN0YXJ0OnRoaXMub25Nb3VzZURvd24sdG91Y2hlbmQ6dGhpcy5vbk1vdXNlVXAsbW91c2Vtb3ZlOnRoaXMub25EcmFnTW92ZSx0b3VjaG1vdmU6dGhpcy5vbkRyYWdNb3ZlfSx0aGlzLnNjcm9sbGFibGU/e3doZWVsOnRoaXMud2hlZWx9Ont9KSxyZWY6J2Nsb2NrJ307cmV0dXJuIGgoJ2RpdicsZGF0YSxbaCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtdGltZS1waWNrZXItY2xvY2tfX2lubmVyJyxyZWY6J2lubmVyQ2xvY2snfSxbdGhpcy5nZW5IYW5kKCksdGhpcy5nZW5WYWx1ZXMoKV0pXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUaW1lUGlja2VyL1ZUaW1lUGlja2VyVGl0bGUuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVGltZVBpY2tlci9WVGltZVBpY2tlclRpdGxlLnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRpbWVQaWNrZXJWVGltZVBpY2tlclRpdGxlU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRpbWVQaWNrZXIvVlRpbWVQaWNrZXJUaXRsZS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRpbWVQaWNrZXIvVlRpbWVQaWNrZXJUaXRsZS50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVGltZVBpY2tlclZUaW1lUGlja2VyVGl0bGVUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGltZVBpY2tlclRpdGxlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZUaW1lUGlja2VyVGl0bGUuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZUaW1lUGlja2VyL1ZUaW1lUGlja2VyVGl0bGUuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGltZVBpY2tlclRpdGxlX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZUaW1lUGlja2VyVGl0bGVfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3BpY2tlcl9idXR0b25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvcGlja2VyLWJ1dHRvbiAqLyIuL3NyYy9taXhpbnMvcGlja2VyLWJ1dHRvbi9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WRGF0ZVBpY2tlcl91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkRhdGVQaWNrZXIvdXRpbCAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRlUGlja2VyL3V0aWwvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGltZVBpY2tlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRpbWVQaWNrZXIgKi8iLi9zcmMvY29tcG9uZW50cy9WVGltZVBpY2tlci9WVGltZVBpY2tlci50cyIpOy8vIE1peGlucwovLyBVdGlscwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKShfbWl4aW5zX3BpY2tlcl9idXR0b25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLyogQHZ1ZS9jb21wb25lbnQgKi8pLmV4dGVuZCh7bmFtZTondi10aW1lLXBpY2tlci10aXRsZScscHJvcHM6e2FtcG06Qm9vbGVhbixkaXNhYmxlZDpCb29sZWFuLGhvdXI6TnVtYmVyLG1pbnV0ZTpOdW1iZXIsc2Vjb25kOk51bWJlcixwZXJpb2Q6e3R5cGU6U3RyaW5nLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IocGVyaW9kKXtyZXR1cm4gcGVyaW9kPT09J2FtJ3x8cGVyaW9kPT09J3BtJzt9fSxyZWFkb25seTpCb29sZWFuLHVzZVNlY29uZHM6Qm9vbGVhbixzZWxlY3Rpbmc6TnVtYmVyfSxtZXRob2RzOntnZW5UaW1lOmZ1bmN0aW9uIGdlblRpbWUoKXt2YXIgaG91cj10aGlzLmhvdXI7aWYodGhpcy5hbXBtKXtob3VyPWhvdXI/KGhvdXItMSklMTIrMToxMjt9dmFyIGRpc3BsYXllZEhvdXI9dGhpcy5ob3VyPT1udWxsPyctLSc6dGhpcy5hbXBtP1N0cmluZyhob3VyKTpPYmplY3QoX1ZEYXRlUGlja2VyX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sicGFkIl0pKGhvdXIpO3ZhciBkaXNwbGF5ZWRNaW51dGU9dGhpcy5taW51dGU9PW51bGw/Jy0tJzpPYmplY3QoX1ZEYXRlUGlja2VyX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sicGFkIl0pKHRoaXMubWludXRlKTt2YXIgdGl0bGVDb250ZW50PVt0aGlzLmdlblBpY2tlckJ1dHRvbignc2VsZWN0aW5nJyxfVlRpbWVQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siU2VsZWN0aW5nVGltZXMiXS5Ib3VyLGRpc3BsYXllZEhvdXIsdGhpcy5kaXNhYmxlZCksdGhpcy4kY3JlYXRlRWxlbWVudCgnc3BhbicsJzonKSx0aGlzLmdlblBpY2tlckJ1dHRvbignc2VsZWN0aW5nJyxfVlRpbWVQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siU2VsZWN0aW5nVGltZXMiXS5NaW51dGUsZGlzcGxheWVkTWludXRlLHRoaXMuZGlzYWJsZWQpXTtpZih0aGlzLnVzZVNlY29uZHMpe3ZhciBkaXNwbGF5ZWRTZWNvbmQ9dGhpcy5zZWNvbmQ9PW51bGw/Jy0tJzpPYmplY3QoX1ZEYXRlUGlja2VyX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sicGFkIl0pKHRoaXMuc2Vjb25kKTt0aXRsZUNvbnRlbnQucHVzaCh0aGlzLiRjcmVhdGVFbGVtZW50KCdzcGFuJywnOicpKTt0aXRsZUNvbnRlbnQucHVzaCh0aGlzLmdlblBpY2tlckJ1dHRvbignc2VsZWN0aW5nJyxfVlRpbWVQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siU2VsZWN0aW5nVGltZXMiXS5TZWNvbmQsZGlzcGxheWVkU2Vjb25kLHRoaXMuZGlzYWJsZWQpKTt9cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse2NsYXNzOid2LXRpbWUtcGlja2VyLXRpdGxlX190aW1lJ30sdGl0bGVDb250ZW50KTt9LGdlbkFtUG06ZnVuY3Rpb24gZ2VuQW1QbSgpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi10aW1lLXBpY2tlci10aXRsZV9fYW1wbSd9LFt0aGlzLmdlblBpY2tlckJ1dHRvbigncGVyaW9kJywnYW0nLHRoaXMuJHZ1ZXRpZnkubGFuZy50KCckdnVldGlmeS50aW1lUGlja2VyLmFtJyksdGhpcy5kaXNhYmxlZHx8dGhpcy5yZWFkb25seSksdGhpcy5nZW5QaWNrZXJCdXR0b24oJ3BlcmlvZCcsJ3BtJyx0aGlzLiR2dWV0aWZ5LmxhbmcudCgnJHZ1ZXRpZnkudGltZVBpY2tlci5wbScpLHRoaXMuZGlzYWJsZWR8fHRoaXMucmVhZG9ubHkpXSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgY2hpbGRyZW49W3RoaXMuZ2VuVGltZSgpXTt0aGlzLmFtcG0mJmNoaWxkcmVuLnB1c2godGhpcy5nZW5BbVBtKCkpO3JldHVybiBoKCdkaXYnLHtzdGF0aWNDbGFzczondi10aW1lLXBpY2tlci10aXRsZSd9LGNoaWxkcmVuKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRpbWVQaWNrZXIvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVGltZVBpY2tlci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZUaW1lUGlja2VyLCBWVGltZVBpY2tlckNsb2NrLCBWVGltZVBpY2tlclRpdGxlLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZUaW1lUGlja2VySW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGltZVBpY2tlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRpbWVQaWNrZXIgKi8iLi9zcmMvY29tcG9uZW50cy9WVGltZVBpY2tlci9WVGltZVBpY2tlci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZUaW1lUGlja2VyIixmdW5jdGlvbigpe3JldHVybiBfVlRpbWVQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGltZVBpY2tlckNsb2NrX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVGltZVBpY2tlckNsb2NrICovIi4vc3JjL2NvbXBvbmVudHMvVlRpbWVQaWNrZXIvVlRpbWVQaWNrZXJDbG9jay50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZUaW1lUGlja2VyQ2xvY2siLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVGltZVBpY2tlckNsb2NrX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRpbWVQaWNrZXJUaXRsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRpbWVQaWNrZXJUaXRsZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZUaW1lUGlja2VyL1ZUaW1lUGlja2VyVGl0bGUudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVGltZVBpY2tlclRpdGxlIixmdW5jdGlvbigpe3JldHVybiBfVlRpbWVQaWNrZXJUaXRsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT17JF92dWV0aWZ5X3N1YmNvbXBvbmVudHM6e1ZUaW1lUGlja2VyOl9WVGltZVBpY2tlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0sVlRpbWVQaWNrZXJDbG9jazpfVlRpbWVQaWNrZXJDbG9ja19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sVlRpbWVQaWNrZXJUaXRsZTpfVlRpbWVQaWNrZXJUaXRsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il19fTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WVGltZWxpbmUvVlRpbWVsaW5lLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRpbWVsaW5lL1ZUaW1lbGluZS5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZUaW1lbGluZVZUaW1lbGluZVNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUaW1lbGluZS9WVGltZWxpbmUudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZUaW1lbGluZS9WVGltZWxpbmUudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRpbWVsaW5lVlRpbWVsaW5lVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRpbWVsaW5lX3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZUaW1lbGluZS5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlRpbWVsaW5lL1ZUaW1lbGluZS5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUaW1lbGluZV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WVGltZWxpbmVfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gTWl4aW5zCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0pKF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS8qIEB2dWUvY29tcG9uZW50ICovKS5leHRlbmQoe25hbWU6J3YtdGltZWxpbmUnLHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybnt0aW1lbGluZTp0aGlzfTt9LHByb3BzOnthbGlnblRvcDpCb29sZWFuLGRlbnNlOkJvb2xlYW4scmV2ZXJzZTpCb29sZWFufSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJuIF9fYXNzaWduKHsndi10aW1lbGluZS0tYWxpZ24tdG9wJzp0aGlzLmFsaWduVG9wLCd2LXRpbWVsaW5lLS1kZW5zZSc6dGhpcy5kZW5zZSwndi10aW1lbGluZS0tcmV2ZXJzZSc6dGhpcy5yZXZlcnNlfSx0aGlzLnRoZW1lQ2xhc3Nlcyk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXtyZXR1cm4gaCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtdGltZWxpbmUnLGNsYXNzOnRoaXMuY2xhc3Nlc30sdGhpcy4kc2xvdHMuZGVmYXVsdCk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUaW1lbGluZS9WVGltZWxpbmVJdGVtLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRpbWVsaW5lL1ZUaW1lbGluZUl0ZW0udHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZUaW1lbGluZVZUaW1lbGluZUl0ZW1Ucyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkljb24gKi8iLi9zcmMvY29tcG9uZW50cy9WSWNvbi9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL3RoZW1lYWJsZSAqLyIuL3NyYy9taXhpbnMvdGhlbWVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIFR5cGVzCi8vIE1peGlucwp2YXIgYmFzZU1peGlucz1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkoX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS8qIEB2dWUvY29tcG9uZW50ICovKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPWJhc2VNaXhpbnMuZXh0ZW5kKCkuZXh0ZW5kKHtuYW1lOid2LXRpbWVsaW5lLWl0ZW0nLGluamVjdDpbJ3RpbWVsaW5lJ10scHJvcHM6e2NvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OidwcmltYXJ5J30sZmlsbERvdDpCb29sZWFuLGhpZGVEb3Q6Qm9vbGVhbixpY29uOlN0cmluZyxpY29uQ29sb3I6U3RyaW5nLGxhcmdlOkJvb2xlYW4sbGVmdDpCb29sZWFuLHJpZ2h0OkJvb2xlYW4sc21hbGw6Qm9vbGVhbn0sY29tcHV0ZWQ6e2hhc0ljb246ZnVuY3Rpb24gaGFzSWNvbigpe3JldHVybiEhdGhpcy5pY29ufHwhIXRoaXMuJHNsb3RzLmljb247fX0sbWV0aG9kczp7Z2VuQm9keTpmdW5jdGlvbiBnZW5Cb2R5KCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXRpbWVsaW5lLWl0ZW1fX2JvZHknfSx0aGlzLiRzbG90cy5kZWZhdWx0KTt9LGdlbkljb246ZnVuY3Rpb24gZ2VuSWNvbigpe2lmKHRoaXMuJHNsb3RzLmljb24pe3JldHVybiB0aGlzLiRzbG90cy5pY29uO31yZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLHtwcm9wczp7Y29sb3I6dGhpcy5pY29uQ29sb3IsZGFyazohdGhpcy50aGVtZS5pc0Rhcmssc21hbGw6dGhpcy5zbWFsbH19LHRoaXMuaWNvbik7fSxnZW5Jbm5lckRvdDpmdW5jdGlvbiBnZW5Jbm5lckRvdCgpe3ZhciBkYXRhPXRoaXMuc2V0QmFja2dyb3VuZENvbG9yKHRoaXMuY29sb3IpO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLF9fYXNzaWduKHtzdGF0aWNDbGFzczondi10aW1lbGluZS1pdGVtX19pbm5lci1kb3QnfSxkYXRhKSxbdGhpcy5oYXNJY29uJiZ0aGlzLmdlbkljb24oKV0pO30sZ2VuRG90OmZ1bmN0aW9uIGdlbkRvdCgpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi10aW1lbGluZS1pdGVtX19kb3QnLGNsYXNzOnsndi10aW1lbGluZS1pdGVtX19kb3QtLXNtYWxsJzp0aGlzLnNtYWxsLCd2LXRpbWVsaW5lLWl0ZW1fX2RvdC0tbGFyZ2UnOnRoaXMubGFyZ2V9fSxbdGhpcy5nZW5Jbm5lckRvdCgpXSk7fSxnZW5EaXZpZGVyOmZ1bmN0aW9uIGdlbkRpdmlkZXIoKXt2YXIgY2hpbGRyZW49W107aWYoIXRoaXMuaGlkZURvdCljaGlsZHJlbi5wdXNoKHRoaXMuZ2VuRG90KCkpO3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi10aW1lbGluZS1pdGVtX19kaXZpZGVyJ30sY2hpbGRyZW4pO30sZ2VuT3Bwb3NpdGU6ZnVuY3Rpb24gZ2VuT3Bwb3NpdGUoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtdGltZWxpbmUtaXRlbV9fb3Bwb3NpdGUnfSx0aGlzLiRzbG90cy5vcHBvc2l0ZSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgY2hpbGRyZW49W3RoaXMuZ2VuQm9keSgpLHRoaXMuZ2VuRGl2aWRlcigpXTtpZih0aGlzLiRzbG90cy5vcHBvc2l0ZSljaGlsZHJlbi5wdXNoKHRoaXMuZ2VuT3Bwb3NpdGUoKSk7cmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXRpbWVsaW5lLWl0ZW0nLGNsYXNzOl9fYXNzaWduKHsndi10aW1lbGluZS1pdGVtLS1maWxsLWRvdCc6dGhpcy5maWxsRG90LCd2LXRpbWVsaW5lLWl0ZW0tLWJlZm9yZSc6dGhpcy50aW1lbGluZS5yZXZlcnNlP3RoaXMucmlnaHQ6dGhpcy5sZWZ0LCd2LXRpbWVsaW5lLWl0ZW0tLWFmdGVyJzp0aGlzLnRpbWVsaW5lLnJldmVyc2U/dGhpcy5sZWZ0OnRoaXMucmlnaHR9LHRoaXMudGhlbWVDbGFzc2VzKX0sY2hpbGRyZW4pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WVGltZWxpbmUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRpbWVsaW5lL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZUaW1lbGluZSwgVlRpbWVsaW5lSXRlbSwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVGltZWxpbmVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUaW1lbGluZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRpbWVsaW5lICovIi4vc3JjL2NvbXBvbmVudHMvVlRpbWVsaW5lL1ZUaW1lbGluZS50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZUaW1lbGluZSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZUaW1lbGluZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUaW1lbGluZUl0ZW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZUaW1lbGluZUl0ZW0gKi8iLi9zcmMvY29tcG9uZW50cy9WVGltZWxpbmUvVlRpbWVsaW5lSXRlbS50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZUaW1lbGluZUl0ZW0iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVGltZWxpbmVJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXskX3Z1ZXRpZnlfc3ViY29tcG9uZW50czp7VlRpbWVsaW5lOl9WVGltZWxpbmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLFZUaW1lbGluZUl0ZW06X1ZUaW1lbGluZUl0ZW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdfX07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRvb2xiYXIvVlRvb2xiYXIuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRvb2xiYXIvVlRvb2xiYXIuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRvb2xiYXJWVG9vbGJhclNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUb29sYmFyL1ZUb29sYmFyLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRvb2xiYXIvVlRvb2xiYXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZUb29sYmFyVlRvb2xiYXJUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVG9vbGJhcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVG9vbGJhci5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlRvb2xiYXIvVlRvb2xiYXIuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVG9vbGJhcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WVG9vbGJhcl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2hlZXRfVlNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVlNoZWV0L1ZTaGVldCAqLyIuL3NyYy9jb21wb25lbnRzL1ZTaGVldC9WU2hlZXQudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkltZ19WSW1nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkltZy9WSW1nICovIi4vc3JjL2NvbXBvbmVudHMvVkltZy9WSW1nLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9Oy8vIFN0eWxlcwovLyBFeHRlbnNpb25zCi8vIENvbXBvbmVudHMKLy8gVXRpbGl0aWVzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZTaGVldF9WU2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLmV4dGVuZCh7bmFtZTondi10b29sYmFyJyxwcm9wczp7YWJzb2x1dGU6Qm9vbGVhbixib3R0b206Qm9vbGVhbixjb2xsYXBzZTpCb29sZWFuLGRlbnNlOkJvb2xlYW4sZXh0ZW5kZWQ6Qm9vbGVhbixleHRlbnNpb25IZWlnaHQ6e2RlZmF1bHQ6NDgsdHlwZTpbTnVtYmVyLFN0cmluZ119LGZsYXQ6Qm9vbGVhbixmbG9hdGluZzpCb29sZWFuLHByb21pbmVudDpCb29sZWFuLHNob3J0OkJvb2xlYW4sc3JjOnt0eXBlOltTdHJpbmcsT2JqZWN0XSxkZWZhdWx0OicnfSx0YWc6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2hlYWRlcid9LHRpbGU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aXNFeHRlbmRlZDpmYWxzZX07fSxjb21wdXRlZDp7Y29tcHV0ZWRIZWlnaHQ6ZnVuY3Rpb24gY29tcHV0ZWRIZWlnaHQoKXt2YXIgaGVpZ2h0PXRoaXMuY29tcHV0ZWRDb250ZW50SGVpZ2h0O2lmKCF0aGlzLmlzRXh0ZW5kZWQpcmV0dXJuIGhlaWdodDt2YXIgZXh0ZW5zaW9uSGVpZ2h0PXBhcnNlSW50KHRoaXMuZXh0ZW5zaW9uSGVpZ2h0KTtyZXR1cm4gdGhpcy5pc0NvbGxhcHNlZD9oZWlnaHQ6aGVpZ2h0KyghaXNOYU4oZXh0ZW5zaW9uSGVpZ2h0KT9leHRlbnNpb25IZWlnaHQ6MCk7fSxjb21wdXRlZENvbnRlbnRIZWlnaHQ6ZnVuY3Rpb24gY29tcHV0ZWRDb250ZW50SGVpZ2h0KCl7aWYodGhpcy5oZWlnaHQpcmV0dXJuIHBhcnNlSW50KHRoaXMuaGVpZ2h0KTtpZih0aGlzLmlzUHJvbWluZW50JiZ0aGlzLmRlbnNlKXJldHVybiA5NjtpZih0aGlzLmlzUHJvbWluZW50JiZ0aGlzLnNob3J0KXJldHVybiAxMTI7aWYodGhpcy5pc1Byb21pbmVudClyZXR1cm4gMTI4O2lmKHRoaXMuZGVuc2UpcmV0dXJuIDQ4O2lmKHRoaXMuc2hvcnR8fHRoaXMuJHZ1ZXRpZnkuYnJlYWtwb2ludC5zbUFuZERvd24pcmV0dXJuIDU2O3JldHVybiA2NDt9LGNsYXNzZXM6ZnVuY3Rpb24gY2xhc3Nlcygpe3JldHVybiBfX2Fzc2lnbih7fSxfVlNoZWV0X1ZTaGVldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0ub3B0aW9ucy5jb21wdXRlZC5jbGFzc2VzLmNhbGwodGhpcykseyd2LXRvb2xiYXInOnRydWUsJ3YtdG9vbGJhci0tYWJzb2x1dGUnOnRoaXMuYWJzb2x1dGUsJ3YtdG9vbGJhci0tYm90dG9tJzp0aGlzLmJvdHRvbSwndi10b29sYmFyLS1jb2xsYXBzZSc6dGhpcy5jb2xsYXBzZSwndi10b29sYmFyLS1jb2xsYXBzZWQnOnRoaXMuaXNDb2xsYXBzZWQsJ3YtdG9vbGJhci0tZGVuc2UnOnRoaXMuZGVuc2UsJ3YtdG9vbGJhci0tZXh0ZW5kZWQnOnRoaXMuaXNFeHRlbmRlZCwndi10b29sYmFyLS1mbGF0Jzp0aGlzLmZsYXQsJ3YtdG9vbGJhci0tZmxvYXRpbmcnOnRoaXMuZmxvYXRpbmcsJ3YtdG9vbGJhci0tcHJvbWluZW50Jzp0aGlzLmlzUHJvbWluZW50fSk7fSxpc0NvbGxhcHNlZDpmdW5jdGlvbiBpc0NvbGxhcHNlZCgpe3JldHVybiB0aGlzLmNvbGxhcHNlO30saXNQcm9taW5lbnQ6ZnVuY3Rpb24gaXNQcm9taW5lbnQoKXtyZXR1cm4gdGhpcy5wcm9taW5lbnQ7fSxzdHlsZXM6ZnVuY3Rpb24gc3R5bGVzKCl7cmV0dXJuIF9fYXNzaWduKHt9LHRoaXMubWVhc3VyYWJsZVN0eWxlcyx7aGVpZ2h0Ok9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5jb21wdXRlZEhlaWdodCl9KTt9fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXt2YXIgX3RoaXM9dGhpczt2YXIgYnJlYWtpbmdQcm9wcz1bWydhcHAnLCc8di1hcHAtYmFyIGFwcD4nXSxbJ21hbnVhbC1zY3JvbGwnLCc8di1hcHAtYmFyIDp2YWx1ZT0iZmFsc2UiPiddLFsnY2xpcHBlZC1sZWZ0JywnPHYtYXBwLWJhciBjbGlwcGVkLWxlZnQ+J10sWydjbGlwcGVkLXJpZ2h0JywnPHYtYXBwLWJhciBjbGlwcGVkLXJpZ2h0PiddLFsnaW52ZXJ0ZWQtc2Nyb2xsJywnPHYtYXBwLWJhciBpbnZlcnRlZC1zY3JvbGw+J10sWydzY3JvbGwtb2ZmLXNjcmVlbicsJzx2LWFwcC1iYXIgc2Nyb2xsLW9mZi1zY3JlZW4+J10sWydzY3JvbGwtdGFyZ2V0JywnPHYtYXBwLWJhciBzY3JvbGwtdGFyZ2V0PiddLFsnc2Nyb2xsLXRocmVzaG9sZCcsJzx2LWFwcC1iYXIgc2Nyb2xsLXRocmVzaG9sZD4nXSxbJ2NhcmQnLCc8di1hcHAtYmFyIGZsYXQ+J11dOy8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovYnJlYWtpbmdQcm9wcy5mb3JFYWNoKGZ1bmN0aW9uKF9hKXt2YXIgX2I9X19yZWFkKF9hLDIpLG9yaWdpbmFsPV9iWzBdLHJlcGxhY2VtZW50PV9iWzFdO2lmKF90aGlzLiRhdHRycy5oYXNPd25Qcm9wZXJ0eShvcmlnaW5hbCkpT2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siYnJlYWtpbmciXSkob3JpZ2luYWwscmVwbGFjZW1lbnQsX3RoaXMpO30pO30sbWV0aG9kczp7Z2VuQmFja2dyb3VuZDpmdW5jdGlvbiBnZW5CYWNrZ3JvdW5kKCl7dmFyIHByb3BzPXtoZWlnaHQ6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmNvbXB1dGVkSGVpZ2h0KSxzcmM6dGhpcy5zcmN9O3ZhciBpbWFnZT10aGlzLiRzY29wZWRTbG90cy5pbWc/dGhpcy4kc2NvcGVkU2xvdHMuaW1nKHtwcm9wczpwcm9wc30pOnRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZJbWdfVkltZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0se3Byb3BzOnByb3BzfSk7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXRvb2xiYXJfX2ltYWdlJ30sW2ltYWdlXSk7fSxnZW5Db250ZW50OmZ1bmN0aW9uIGdlbkNvbnRlbnQoKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtdG9vbGJhcl9fY29udGVudCcsc3R5bGU6e2hlaWdodDpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuY29tcHV0ZWRDb250ZW50SGVpZ2h0KX19LE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImdldFNsb3QiXSkodGhpcykpO30sZ2VuRXh0ZW5zaW9uOmZ1bmN0aW9uIGdlbkV4dGVuc2lvbigpe3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi10b29sYmFyX19leHRlbnNpb24nLHN0eWxlOntoZWlnaHQ6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLmV4dGVuc2lvbkhlaWdodCl9fSxPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJnZXRTbG90Il0pKHRoaXMsJ2V4dGVuc2lvbicpKTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3RoaXMuaXNFeHRlbmRlZD10aGlzLmV4dGVuZGVkfHwhIXRoaXMuJHNjb3BlZFNsb3RzLmV4dGVuc2lvbjt2YXIgY2hpbGRyZW49W3RoaXMuZ2VuQ29udGVudCgpXTt2YXIgZGF0YT10aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbG9yLHtjbGFzczp0aGlzLmNsYXNzZXMsc3R5bGU6dGhpcy5zdHlsZXMsb246dGhpcy4kbGlzdGVuZXJzfSk7aWYodGhpcy5pc0V4dGVuZGVkKWNoaWxkcmVuLnB1c2godGhpcy5nZW5FeHRlbnNpb24oKSk7aWYodGhpcy5zcmN8fHRoaXMuJHNjb3BlZFNsb3RzLmltZyljaGlsZHJlbi51bnNoaWZ0KHRoaXMuZ2VuQmFja2dyb3VuZCgpKTtyZXR1cm4gaCh0aGlzLnRhZyxkYXRhLGNoaWxkcmVuKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRvb2xiYXIvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVG9vbGJhci9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZUb29sYmFyLCBWVG9vbGJhckl0ZW1zLCBWVG9vbGJhclRpdGxlLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZUb29sYmFySW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVG9vbGJhckl0ZW1zIixmdW5jdGlvbigpe3JldHVybiBWVG9vbGJhckl0ZW1zO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVG9vbGJhclRpdGxlIixmdW5jdGlvbigpe3JldHVybiBWVG9vbGJhclRpdGxlO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVG9vbGJhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRvb2xiYXIgKi8iLi9zcmMvY29tcG9uZW50cy9WVG9vbGJhci9WVG9vbGJhci50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZUb29sYmFyIixmdW5jdGlvbigpe3JldHVybiBfVlRvb2xiYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7Ly8gQ29tcG9uZW50cwovLyBVdGlsaXRpZXMKdmFyIFZUb29sYmFyVGl0bGU9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siY3JlYXRlU2ltcGxlRnVuY3Rpb25hbCJdKSgndi10b29sYmFyX190aXRsZScpO3ZhciBWVG9vbGJhckl0ZW1zPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImNyZWF0ZVNpbXBsZUZ1bmN0aW9uYWwiXSkoJ3YtdG9vbGJhcl9faXRlbXMnKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXskX3Z1ZXRpZnlfc3ViY29tcG9uZW50czp7VlRvb2xiYXI6X1ZUb29sYmFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSxWVG9vbGJhckl0ZW1zOlZUb29sYmFySXRlbXMsVlRvb2xiYXJUaXRsZTpWVG9vbGJhclRpdGxlfX07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRvb2x0aXAvVlRvb2x0aXAuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRvb2x0aXAvVlRvb2x0aXAuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRvb2x0aXBWVG9vbHRpcFNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUb29sdGlwL1ZUb29sdGlwLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRvb2x0aXAvVlRvb2x0aXAudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZUb29sdGlwVlRvb2x0aXBUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVG9vbHRpcF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVG9vbHRpcC5zYXNzICovIi4vc3JjL2NvbXBvbmVudHMvVlRvb2x0aXAvVlRvb2x0aXAuc2FzcyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVG9vbHRpcF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9WVG9vbHRpcF9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfYWN0aXZhdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvYWN0aXZhdGFibGUgKi8iLi9zcmMvbWl4aW5zL2FjdGl2YXRhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2RlbGF5YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9kZWxheWFibGUgKi8iLi9zcmMvbWl4aW5zL2RlbGF5YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfZGVwZW5kZW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2RlcGVuZGVudCAqLyIuL3NyYy9taXhpbnMvZGVwZW5kZW50L2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19kZXRhY2hhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL2RldGFjaGFibGUgKi8iLi9zcmMvbWl4aW5zL2RldGFjaGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX21lbnVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vbWl4aW5zL21lbnVhYmxlICovIi4vc3JjL21peGlucy9tZW51YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy90b2dnbGVhYmxlICovIi4vc3JjL21peGlucy90b2dnbGVhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8vIE1peGlucwovLyBIZWxwZXJzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfX1siZGVmYXVsdCJdKShfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sX21peGluc19kZWxheWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdLF9taXhpbnNfZGVwZW5kZW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSxfbWl4aW5zX2RldGFjaGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdLF9taXhpbnNfbWVudWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdLF9taXhpbnNfdG9nZ2xlYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJkZWZhdWx0Il0pLmV4dGVuZCh7bmFtZTondi10b29sdGlwJyxwcm9wczp7Y2xvc2VEZWxheTp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDowfSxkaXNhYmxlZDpCb29sZWFuLGZpeGVkOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxvcGVuRGVsYXk6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MH0sb3Blbk9uSG92ZXI6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LHRhZzp7dHlwZTpTdHJpbmcsZGVmYXVsdDonc3Bhbid9LHRyYW5zaXRpb246U3RyaW5nLHpJbmRleDp7ZGVmYXVsdDpudWxsfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2NhbGN1bGF0ZWRNaW5XaWR0aDowLGNsb3NlRGVwZW5kZW50czpmYWxzZX07fSxjb21wdXRlZDp7Y2FsY3VsYXRlZExlZnQ6ZnVuY3Rpb24gY2FsY3VsYXRlZExlZnQoKXt2YXIgX2E9dGhpcy5kaW1lbnNpb25zLGFjdGl2YXRvcj1fYS5hY3RpdmF0b3IsY29udGVudD1fYS5jb250ZW50O3ZhciB1bmtub3duPSF0aGlzLmJvdHRvbSYmIXRoaXMubGVmdCYmIXRoaXMudG9wJiYhdGhpcy5yaWdodDt2YXIgYWN0aXZhdG9yTGVmdD10aGlzLmF0dGFjaCE9PWZhbHNlP2FjdGl2YXRvci5vZmZzZXRMZWZ0OmFjdGl2YXRvci5sZWZ0O3ZhciBsZWZ0PTA7aWYodGhpcy50b3B8fHRoaXMuYm90dG9tfHx1bmtub3duKXtsZWZ0PWFjdGl2YXRvckxlZnQrYWN0aXZhdG9yLndpZHRoLzItY29udGVudC53aWR0aC8yO31lbHNlIGlmKHRoaXMubGVmdHx8dGhpcy5yaWdodCl7bGVmdD1hY3RpdmF0b3JMZWZ0Kyh0aGlzLnJpZ2h0P2FjdGl2YXRvci53aWR0aDotY29udGVudC53aWR0aCkrKHRoaXMucmlnaHQ/MTA6LTEwKTt9aWYodGhpcy5udWRnZUxlZnQpbGVmdC09cGFyc2VJbnQodGhpcy5udWRnZUxlZnQpO2lmKHRoaXMubnVkZ2VSaWdodClsZWZ0Kz1wYXJzZUludCh0aGlzLm51ZGdlUmlnaHQpO3JldHVybiB0aGlzLmNhbGNYT3ZlcmZsb3cobGVmdCx0aGlzLmRpbWVuc2lvbnMuY29udGVudC53aWR0aCkrInB4Ijt9LGNhbGN1bGF0ZWRUb3A6ZnVuY3Rpb24gY2FsY3VsYXRlZFRvcCgpe3ZhciBfYT10aGlzLmRpbWVuc2lvbnMsYWN0aXZhdG9yPV9hLmFjdGl2YXRvcixjb250ZW50PV9hLmNvbnRlbnQ7dmFyIGFjdGl2YXRvclRvcD10aGlzLmF0dGFjaCE9PWZhbHNlP2FjdGl2YXRvci5vZmZzZXRUb3A6YWN0aXZhdG9yLnRvcDt2YXIgdG9wPTA7aWYodGhpcy50b3B8fHRoaXMuYm90dG9tKXt0b3A9YWN0aXZhdG9yVG9wKyh0aGlzLmJvdHRvbT9hY3RpdmF0b3IuaGVpZ2h0Oi1jb250ZW50LmhlaWdodCkrKHRoaXMuYm90dG9tPzEwOi0xMCk7fWVsc2UgaWYodGhpcy5sZWZ0fHx0aGlzLnJpZ2h0KXt0b3A9YWN0aXZhdG9yVG9wK2FjdGl2YXRvci5oZWlnaHQvMi1jb250ZW50LmhlaWdodC8yO31pZih0aGlzLm51ZGdlVG9wKXRvcC09cGFyc2VJbnQodGhpcy5udWRnZVRvcCk7aWYodGhpcy5udWRnZUJvdHRvbSl0b3ArPXBhcnNlSW50KHRoaXMubnVkZ2VCb3R0b20pO3JldHVybiB0aGlzLmNhbGNZT3ZlcmZsb3codG9wK3RoaXMucGFnZVlPZmZzZXQpKyJweCI7fSxjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm57J3YtdG9vbHRpcC0tdG9wJzp0aGlzLnRvcCwndi10b29sdGlwLS1yaWdodCc6dGhpcy5yaWdodCwndi10b29sdGlwLS1ib3R0b20nOnRoaXMuYm90dG9tLCd2LXRvb2x0aXAtLWxlZnQnOnRoaXMubGVmdCwndi10b29sdGlwLS1hdHRhY2hlZCc6dGhpcy5hdHRhY2g9PT0nJ3x8dGhpcy5hdHRhY2g9PT10cnVlfHx0aGlzLmF0dGFjaD09PSdhdHRhY2gnfTt9LGNvbXB1dGVkVHJhbnNpdGlvbjpmdW5jdGlvbiBjb21wdXRlZFRyYW5zaXRpb24oKXtpZih0aGlzLnRyYW5zaXRpb24pcmV0dXJuIHRoaXMudHJhbnNpdGlvbjtyZXR1cm4gdGhpcy5pc0FjdGl2ZT8nc2NhbGUtdHJhbnNpdGlvbic6J2ZhZGUtdHJhbnNpdGlvbic7fSxvZmZzZXRZOmZ1bmN0aW9uIG9mZnNldFkoKXtyZXR1cm4gdGhpcy50b3B8fHRoaXMuYm90dG9tO30sb2Zmc2V0WDpmdW5jdGlvbiBvZmZzZXRYKCl7cmV0dXJuIHRoaXMubGVmdHx8dGhpcy5yaWdodDt9LHN0eWxlczpmdW5jdGlvbiBzdHlsZXMoKXtyZXR1cm57bGVmdDp0aGlzLmNhbGN1bGF0ZWRMZWZ0LG1heFdpZHRoOk9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5tYXhXaWR0aCksbWluV2lkdGg6T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLm1pbldpZHRoKSxvcGFjaXR5OnRoaXMuaXNBY3RpdmU/MC45OjAsdG9wOnRoaXMuY2FsY3VsYXRlZFRvcCx6SW5kZXg6dGhpcy56SW5kZXh8fHRoaXMuYWN0aXZlWkluZGV4fTt9fSxiZWZvcmVNb3VudDpmdW5jdGlvbiBiZWZvcmVNb3VudCgpe3ZhciBfdGhpcz10aGlzO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7X3RoaXMudmFsdWUmJl90aGlzLmNhbGxBY3RpdmF0ZSgpO30pO30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7aWYoT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZ2V0U2xvdFR5cGUiXSkodGhpcywnYWN0aXZhdG9yJyx0cnVlKT09PSd2LXNsb3QnKXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fWyJjb25zb2xlRXJyb3IiXSkoInYtdG9vbHRpcCdzIGFjdGl2YXRvciBzbG90IG11c3QgYmUgYm91bmQsIHRyeSAnPHRlbXBsYXRlICNhY3RpdmF0b3I9XCJkYXRhXCI+PHYtYnRuIHYtb249XCJkYXRhLm9uPiciLHRoaXMpO319LG1ldGhvZHM6e2FjdGl2YXRlOmZ1bmN0aW9uIGFjdGl2YXRlKCl7Ly8gVXBkYXRlIGNvb3JkaW5hdGVzIGFuZCBkaW1lbnNpb25zIG9mIG1lbnUKLy8gYW5kIGl0cyBhY3RpdmF0b3IKdGhpcy51cGRhdGVEaW1lbnNpb25zKCk7Ly8gU3RhcnQgdGhlIHRyYW5zaXRpb24KcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuc3RhcnRUcmFuc2l0aW9uKTt9LGRlYWN0aXZhdGU6ZnVuY3Rpb24gZGVhY3RpdmF0ZSgpe3RoaXMucnVuRGVsYXkoJ2Nsb3NlJyk7fSxnZW5BY3RpdmF0b3JMaXN0ZW5lcnM6ZnVuY3Rpb24gZ2VuQWN0aXZhdG9yTGlzdGVuZXJzKCl7dmFyIF90aGlzPXRoaXM7dmFyIGxpc3RlbmVycz1fbWl4aW5zX2FjdGl2YXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuZ2VuQWN0aXZhdG9yTGlzdGVuZXJzLmNhbGwodGhpcyk7bGlzdGVuZXJzLmZvY3VzPWZ1bmN0aW9uKGUpe190aGlzLmdldEFjdGl2YXRvcihlKTtfdGhpcy5ydW5EZWxheSgnb3BlbicpO307bGlzdGVuZXJzLmJsdXI9ZnVuY3Rpb24oZSl7X3RoaXMuZ2V0QWN0aXZhdG9yKGUpO190aGlzLnJ1bkRlbGF5KCdjbG9zZScpO307bGlzdGVuZXJzLmtleWRvd249ZnVuY3Rpb24oZSl7aWYoZS5rZXlDb2RlPT09X3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJrZXlDb2RlcyJdLmVzYyl7X3RoaXMuZ2V0QWN0aXZhdG9yKGUpO190aGlzLnJ1bkRlbGF5KCdjbG9zZScpO319O3JldHVybiBsaXN0ZW5lcnM7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgX2E7dmFyIHRvb2x0aXA9aCgnZGl2Jyx0aGlzLnNldEJhY2tncm91bmRDb2xvcih0aGlzLmNvbG9yLHtzdGF0aWNDbGFzczondi10b29sdGlwX19jb250ZW50JyxjbGFzczooX2E9e30sX2FbdGhpcy5jb250ZW50Q2xhc3NdPXRydWUsX2EubWVudWFibGVfX2NvbnRlbnRfX2FjdGl2ZT10aGlzLmlzQWN0aXZlLF9hWyd2LXRvb2x0aXBfX2NvbnRlbnQtLWZpeGVkJ109dGhpcy5hY3RpdmF0b3JGaXhlZCxfYSksc3R5bGU6dGhpcy5zdHlsZXMsYXR0cnM6dGhpcy5nZXRTY29wZUlkQXR0cnMoKSxkaXJlY3RpdmVzOlt7bmFtZTonc2hvdycsdmFsdWU6dGhpcy5pc0NvbnRlbnRBY3RpdmV9XSxyZWY6J2NvbnRlbnQnfSksdGhpcy5zaG93TGF6eUNvbnRlbnQodGhpcy5nZXRDb250ZW50U2xvdCgpKSk7cmV0dXJuIGgodGhpcy50YWcse3N0YXRpY0NsYXNzOid2LXRvb2x0aXAnLGNsYXNzOnRoaXMuY2xhc3Nlc30sW2goJ3RyYW5zaXRpb24nLHtwcm9wczp7bmFtZTp0aGlzLmNvbXB1dGVkVHJhbnNpdGlvbn19LFt0b29sdGlwXSksdGhpcy5nZW5BY3RpdmF0b3IoKV0pO319KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WVG9vbHRpcC9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZUb29sdGlwL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVlRvb2x0aXAsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRvb2x0aXBJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUb29sdGlwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVG9vbHRpcCAqLyIuL3NyYy9jb21wb25lbnRzL1ZUb29sdGlwL1ZUb29sdGlwLnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlRvb2x0aXAiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVG9vbHRpcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1fVlRvb2x0aXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUcmVldmlldy9WVHJlZXZpZXcuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVHJlZXZpZXcvVlRyZWV2aWV3LnNhc3MgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRyZWV2aWV3VlRyZWV2aWV3U2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRyZWV2aWV3L1ZUcmVldmlldy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVlRyZWV2aWV3L1ZUcmVldmlldy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVHJlZXZpZXdWVHJlZXZpZXdUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVHJlZXZpZXdfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRyZWV2aWV3LnNhc3MgKi8iLi9zcmMvY29tcG9uZW50cy9WVHJlZXZpZXcvVlRyZWV2aWV3LnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRyZWV2aWV3X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX1ZUcmVldmlld19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVHJlZXZpZXdOb2RlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVHJlZXZpZXdOb2RlICovIi4vc3JjL2NvbXBvbmVudHMvVlRyZWV2aWV3L1ZUcmVldmlld05vZGUudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy90aGVtZWFibGUgKi8iLi9zcmMvbWl4aW5zL3RoZW1lYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfcmVnaXN0cmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvcmVnaXN0cmFibGUgKi8iLi9zcmMvbWl4aW5zL3JlZ2lzdHJhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfZmlsdGVyVHJlZUl0ZW1zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsL2ZpbHRlclRyZWVJdGVtcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZUcmVldmlldy91dGlsL2ZpbHRlclRyZWVJdGVtcy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9O3ZhciBfX3NwcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3NwcmVhZHx8ZnVuY3Rpb24oKXtmb3IodmFyIGFyPVtdLGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXthcj1hci5jb25jYXQoX19yZWFkKGFyZ3VtZW50c1tpXSkpO31yZXR1cm4gYXI7fTt2YXIgX192YWx1ZXM9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX192YWx1ZXN8fGZ1bmN0aW9uKG8pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl0saT0wO2lmKG0pcmV0dXJuIG0uY2FsbChvKTtyZXR1cm57bmV4dDpmdW5jdGlvbiBuZXh0KCl7aWYobyYmaT49by5sZW5ndGgpbz12b2lkIDA7cmV0dXJue3ZhbHVlOm8mJm9baSsrXSxkb25lOiFvfTt9fTt9Oy8vIFN0eWxlcwovLyBDb21wb25lbnRzCi8vIE1peGlucwovLyBVdGlscwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdKShPYmplY3QoX21peGluc19yZWdpc3RyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJwcm92aWRlIl0pKCd0cmVldmlldycpLF9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS8qIEB2dWUvY29tcG9uZW50ICovKS5leHRlbmQoe25hbWU6J3YtdHJlZXZpZXcnLHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybnt0cmVldmlldzp0aGlzfTt9LHByb3BzOl9fYXNzaWduKHthY3RpdmU6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LGRlbnNlOkJvb2xlYW4sZmlsdGVyOkZ1bmN0aW9uLGhvdmVyYWJsZTpCb29sZWFuLGl0ZW1zOnt0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bXTt9fSxtdWx0aXBsZUFjdGl2ZTpCb29sZWFuLG9wZW46e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LG9wZW5BbGw6Qm9vbGVhbixyZXR1cm5PYmplY3Q6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSxzZWFyY2g6U3RyaW5nLHNlbGVjdGlvblR5cGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2xlYWYnLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3Iodil7cmV0dXJuWydsZWFmJywnaW5kZXBlbmRlbnQnXS5pbmNsdWRlcyh2KTt9fSx2YWx1ZTp7dHlwZTpBcnJheSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuW107fX19LF9WVHJlZXZpZXdOb2RlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bIlZUcmVldmlld05vZGVQcm9wcyJdKSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57YWN0aXZlQ2FjaGU6bmV3IFNldCgpLG5vZGVzOnt9LG9wZW5DYWNoZTpuZXcgU2V0KCksc2VsZWN0ZWRDYWNoZTpuZXcgU2V0KCl9O30sY29tcHV0ZWQ6e2V4Y2x1ZGVkSXRlbXM6ZnVuY3Rpb24gZXhjbHVkZWRJdGVtcygpe3ZhciBleGNsdWRlZD1uZXcgU2V0KCk7aWYoIXRoaXMuc2VhcmNoKXJldHVybiBleGNsdWRlZDtmb3IodmFyIGk9MDtpPHRoaXMuaXRlbXMubGVuZ3RoO2krKyl7T2JqZWN0KF91dGlsX2ZpbHRlclRyZWVJdGVtc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJmaWx0ZXJUcmVlSXRlbXMiXSkodGhpcy5maWx0ZXJ8fF91dGlsX2ZpbHRlclRyZWVJdGVtc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJmaWx0ZXJUcmVlSXRlbSJdLHRoaXMuaXRlbXNbaV0sdGhpcy5zZWFyY2gsdGhpcy5pdGVtS2V5LHRoaXMuaXRlbVRleHQsdGhpcy5pdGVtQ2hpbGRyZW4sZXhjbHVkZWQpO31yZXR1cm4gZXhjbHVkZWQ7fX0sd2F0Y2g6e2l0ZW1zOntoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIoKXt2YXIgX3RoaXM9dGhpczt2YXIgb2xkS2V5cz1PYmplY3Qua2V5cyh0aGlzLm5vZGVzKS5tYXAoZnVuY3Rpb24oayl7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKF90aGlzLm5vZGVzW2tdLml0ZW0sX3RoaXMuaXRlbUtleSk7fSk7dmFyIG5ld0tleXM9dGhpcy5nZXRLZXlzKHRoaXMuaXRlbXMpO3ZhciBkaWZmPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImFycmF5RGlmZiJdKShuZXdLZXlzLG9sZEtleXMpOy8vIFdlIG9ubHkgd2FudCB0byBkbyBzdHVmZiBpZiBpdGVtcyBoYXZlIGNoYW5nZWQKaWYoIWRpZmYubGVuZ3RoJiZuZXdLZXlzLmxlbmd0aDxvbGRLZXlzLmxlbmd0aClyZXR1cm47Ly8gSWYgbm9kZXMgYXJlIHJlbW92ZWQgd2UgbmVlZCB0byBjbGVhciB0aGVtIGZyb20gdGhpcy5ub2RlcwpkaWZmLmZvckVhY2goZnVuY3Rpb24oayl7cmV0dXJuIGRlbGV0ZSBfdGhpcy5ub2Rlc1trXTt9KTt2YXIgb2xkU2VsZWN0ZWRDYWNoZT1fX3NwcmVhZCh0aGlzLnNlbGVjdGVkQ2FjaGUpO3RoaXMuc2VsZWN0ZWRDYWNoZT1uZXcgU2V0KCk7dGhpcy5hY3RpdmVDYWNoZT1uZXcgU2V0KCk7dGhpcy5vcGVuQ2FjaGU9bmV3IFNldCgpO3RoaXMuYnVpbGRUcmVlKHRoaXMuaXRlbXMpOy8vIE9ubHkgZW1pdCBzZWxlY3RlZCBpZiBzZWxlY3Rpb24gaGFzIGNoYW5nZWQKLy8gYXMgYSByZXN1bHQgb2YgaXRlbXMgY2hhbmdpbmcuIFRoaXMgZml4ZXMgYQovLyBwb3RlbnRpYWwgZG91YmxlIGVtaXQgd2hlbiBzZWxlY3RpbmcgYSBub2RlCi8vIHdpdGggZHluYW1pYyBjaGlsZHJlbgppZighT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVlcEVxdWFsIl0pKG9sZFNlbGVjdGVkQ2FjaGUsX19zcHJlYWQodGhpcy5zZWxlY3RlZENhY2hlKSkpdGhpcy5lbWl0U2VsZWN0ZWQoKTt9LGRlZXA6dHJ1ZX0sYWN0aXZlOmZ1bmN0aW9uIGFjdGl2ZSh2YWx1ZSl7dGhpcy5oYW5kbGVOb2RlQ2FjaGVXYXRjaGVyKHZhbHVlLHRoaXMuYWN0aXZlQ2FjaGUsdGhpcy51cGRhdGVBY3RpdmUsdGhpcy5lbWl0QWN0aXZlKTt9LHZhbHVlOmZ1bmN0aW9uIHZhbHVlKF92YWx1ZSl7dGhpcy5oYW5kbGVOb2RlQ2FjaGVXYXRjaGVyKF92YWx1ZSx0aGlzLnNlbGVjdGVkQ2FjaGUsdGhpcy51cGRhdGVTZWxlY3RlZCx0aGlzLmVtaXRTZWxlY3RlZCk7fSxvcGVuOmZ1bmN0aW9uIG9wZW4odmFsdWUpe3RoaXMuaGFuZGxlTm9kZUNhY2hlV2F0Y2hlcih2YWx1ZSx0aGlzLm9wZW5DYWNoZSx0aGlzLnVwZGF0ZU9wZW4sdGhpcy5lbWl0T3Blbik7fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dmFyIF90aGlzPXRoaXM7dGhpcy5idWlsZFRyZWUodGhpcy5pdGVtcyk7dGhpcy52YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7cmV0dXJuIF90aGlzLnVwZGF0ZVNlbGVjdGVkKGtleSx0cnVlKTt9KTt0aGlzLmFjdGl2ZS5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7cmV0dXJuIF90aGlzLnVwZGF0ZUFjdGl2ZShrZXksdHJ1ZSk7fSk7fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt2YXIgX3RoaXM9dGhpczsvLyBTYXZlIHRoZSBkZXZlbG9wZXIgZnJvbSB0aGVtc2VsdmVzCmlmKHRoaXMuJHNsb3RzLnByZXBlbmR8fHRoaXMuJHNsb3RzLmFwcGVuZCl7T2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siY29uc29sZVdhcm4iXSkoJ1RoZSBwcmVwZW5kIGFuZCBhcHBlbmQgc2xvdHMgcmVxdWlyZSBhIHNsb3Qtc2NvcGUgYXR0cmlidXRlJyx0aGlzKTt9aWYodGhpcy5vcGVuQWxsKXt0aGlzLnVwZGF0ZUFsbCh0cnVlKTt9ZWxzZXt0aGlzLm9wZW4uZm9yRWFjaChmdW5jdGlvbihrZXkpe3JldHVybiBfdGhpcy51cGRhdGVPcGVuKGtleSx0cnVlKTt9KTt0aGlzLmVtaXRPcGVuKCk7fX0sbWV0aG9kczp7LyoqIEBwdWJsaWMgKi91cGRhdGVBbGw6ZnVuY3Rpb24gdXBkYXRlQWxsKHZhbHVlKXt2YXIgX3RoaXM9dGhpcztPYmplY3Qua2V5cyh0aGlzLm5vZGVzKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7cmV0dXJuIF90aGlzLnVwZGF0ZU9wZW4oT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZ2V0T2JqZWN0VmFsdWVCeVBhdGgiXSkoX3RoaXMubm9kZXNba2V5XS5pdGVtLF90aGlzLml0ZW1LZXkpLHZhbHVlKTt9KTt0aGlzLmVtaXRPcGVuKCk7fSxnZXRLZXlzOmZ1bmN0aW9uIGdldEtleXMoaXRlbXMsa2V5cyl7aWYoa2V5cz09PXZvaWQgMCl7a2V5cz1bXTt9Zm9yKHZhciBpPTA7aTxpdGVtcy5sZW5ndGg7aSsrKXt2YXIga2V5PU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKGl0ZW1zW2ldLHRoaXMuaXRlbUtleSk7a2V5cy5wdXNoKGtleSk7dmFyIGNoaWxkcmVuPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKGl0ZW1zW2ldLHRoaXMuaXRlbUNoaWxkcmVuKTtpZihjaGlsZHJlbil7a2V5cy5wdXNoLmFwcGx5KGtleXMsX19zcHJlYWQodGhpcy5nZXRLZXlzKGNoaWxkcmVuKSkpO319cmV0dXJuIGtleXM7fSxidWlsZFRyZWU6ZnVuY3Rpb24gYnVpbGRUcmVlKGl0ZW1zLHBhcmVudCl7dmFyIF90aGlzPXRoaXM7aWYocGFyZW50PT09dm9pZCAwKXtwYXJlbnQ9bnVsbDt9Zm9yKHZhciBpPTA7aTxpdGVtcy5sZW5ndGg7aSsrKXt2YXIgaXRlbT1pdGVtc1tpXTt2YXIga2V5PU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKGl0ZW0sdGhpcy5pdGVtS2V5KTt2YXIgY2hpbGRyZW49T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZ2V0T2JqZWN0VmFsdWVCeVBhdGgiXSkoaXRlbSx0aGlzLml0ZW1DaGlsZHJlbixbXSk7dmFyIG9sZE5vZGU9dGhpcy5ub2Rlcy5oYXNPd25Qcm9wZXJ0eShrZXkpP3RoaXMubm9kZXNba2V5XTp7aXNTZWxlY3RlZDpmYWxzZSxpc0luZGV0ZXJtaW5hdGU6ZmFsc2UsaXNBY3RpdmU6ZmFsc2UsaXNPcGVuOmZhbHNlLHZub2RlOm51bGx9O3ZhciBub2RlPXt2bm9kZTpvbGROb2RlLnZub2RlLHBhcmVudDpwYXJlbnQsY2hpbGRyZW46Y2hpbGRyZW4ubWFwKGZ1bmN0aW9uKGMpe3JldHVybiBPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJnZXRPYmplY3RWYWx1ZUJ5UGF0aCJdKShjLF90aGlzLml0ZW1LZXkpO30pLGl0ZW06aXRlbX07dGhpcy5idWlsZFRyZWUoY2hpbGRyZW4sa2V5KTsvLyBUaGlzIGZpeGVkIGJ1ZyB3aXRoIGR5bmFtaWMgY2hpbGRyZW4gcmVzZXR0aW5nIHNlbGVjdGVkIHBhcmVudCBzdGF0ZQppZighdGhpcy5ub2Rlcy5oYXNPd25Qcm9wZXJ0eShrZXkpJiZwYXJlbnQhPT1udWxsJiZ0aGlzLm5vZGVzLmhhc093blByb3BlcnR5KHBhcmVudCkpe25vZGUuaXNTZWxlY3RlZD10aGlzLm5vZGVzW3BhcmVudF0uaXNTZWxlY3RlZDtub2RlLmlzSW5kZXRlcm1pbmF0ZT10aGlzLm5vZGVzW3BhcmVudF0uaXNJbmRldGVybWluYXRlO31lbHNle25vZGUuaXNTZWxlY3RlZD1vbGROb2RlLmlzU2VsZWN0ZWQ7bm9kZS5pc0luZGV0ZXJtaW5hdGU9b2xkTm9kZS5pc0luZGV0ZXJtaW5hdGU7fW5vZGUuaXNBY3RpdmU9b2xkTm9kZS5pc0FjdGl2ZTtub2RlLmlzT3Blbj1vbGROb2RlLmlzT3Blbjt0aGlzLm5vZGVzW2tleV09IWNoaWxkcmVuLmxlbmd0aD9ub2RlOnRoaXMuY2FsY3VsYXRlU3RhdGUobm9kZSx0aGlzLm5vZGVzKTsvLyBEb24ndCBmb3JnZXQgdG8gcmVidWlsZCBjYWNoZQppZih0aGlzLm5vZGVzW2tleV0uaXNTZWxlY3RlZCl0aGlzLnNlbGVjdGVkQ2FjaGUuYWRkKGtleSk7aWYodGhpcy5ub2Rlc1trZXldLmlzQWN0aXZlKXRoaXMuYWN0aXZlQ2FjaGUuYWRkKGtleSk7aWYodGhpcy5ub2Rlc1trZXldLmlzT3Blbil0aGlzLm9wZW5DYWNoZS5hZGQoa2V5KTt0aGlzLnVwZGF0ZVZub2RlU3RhdGUoa2V5KTt9fSxjYWxjdWxhdGVTdGF0ZTpmdW5jdGlvbiBjYWxjdWxhdGVTdGF0ZShub2RlLHN0YXRlKXt2YXIgY291bnRzPW5vZGUuY2hpbGRyZW4ucmVkdWNlKGZ1bmN0aW9uKGNvdW50cyxjaGlsZCl7Y291bnRzWzBdKz0rQm9vbGVhbihzdGF0ZVtjaGlsZF0uaXNTZWxlY3RlZCk7Y291bnRzWzFdKz0rQm9vbGVhbihzdGF0ZVtjaGlsZF0uaXNJbmRldGVybWluYXRlKTtyZXR1cm4gY291bnRzO30sWzAsMF0pO25vZGUuaXNTZWxlY3RlZD0hIW5vZGUuY2hpbGRyZW4ubGVuZ3RoJiZjb3VudHNbMF09PT1ub2RlLmNoaWxkcmVuLmxlbmd0aDtub2RlLmlzSW5kZXRlcm1pbmF0ZT0hbm9kZS5pc1NlbGVjdGVkJiYoY291bnRzWzBdPjB8fGNvdW50c1sxXT4wKTtyZXR1cm4gbm9kZTt9LGVtaXRPcGVuOmZ1bmN0aW9uIGVtaXRPcGVuKCl7dGhpcy5lbWl0Tm9kZUNhY2hlKCd1cGRhdGU6b3BlbicsdGhpcy5vcGVuQ2FjaGUpO30sZW1pdFNlbGVjdGVkOmZ1bmN0aW9uIGVtaXRTZWxlY3RlZCgpe3RoaXMuZW1pdE5vZGVDYWNoZSgnaW5wdXQnLHRoaXMuc2VsZWN0ZWRDYWNoZSk7fSxlbWl0QWN0aXZlOmZ1bmN0aW9uIGVtaXRBY3RpdmUoKXt0aGlzLmVtaXROb2RlQ2FjaGUoJ3VwZGF0ZTphY3RpdmUnLHRoaXMuYWN0aXZlQ2FjaGUpO30sZW1pdE5vZGVDYWNoZTpmdW5jdGlvbiBlbWl0Tm9kZUNhY2hlKGV2ZW50LGNhY2hlKXt2YXIgX3RoaXM9dGhpczt0aGlzLiRlbWl0KGV2ZW50LHRoaXMucmV0dXJuT2JqZWN0P19fc3ByZWFkKGNhY2hlKS5tYXAoZnVuY3Rpb24oa2V5KXtyZXR1cm4gX3RoaXMubm9kZXNba2V5XS5pdGVtO30pOl9fc3ByZWFkKGNhY2hlKSk7fSxoYW5kbGVOb2RlQ2FjaGVXYXRjaGVyOmZ1bmN0aW9uIGhhbmRsZU5vZGVDYWNoZVdhdGNoZXIodmFsdWUsY2FjaGUsdXBkYXRlRm4sZW1pdEZuKXt2YXIgX3RoaXM9dGhpczt2YWx1ZT10aGlzLnJldHVybk9iamVjdD92YWx1ZS5tYXAoZnVuY3Rpb24odil7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKHYsX3RoaXMuaXRlbUtleSk7fSk6dmFsdWU7dmFyIG9sZD1fX3NwcmVhZChjYWNoZSk7aWYoT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVlcEVxdWFsIl0pKG9sZCx2YWx1ZSkpcmV0dXJuO29sZC5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7cmV0dXJuIHVwZGF0ZUZuKGtleSxmYWxzZSk7fSk7dmFsdWUuZm9yRWFjaChmdW5jdGlvbihrZXkpe3JldHVybiB1cGRhdGVGbihrZXksdHJ1ZSk7fSk7ZW1pdEZuKCk7fSxnZXREZXNjZW5kYW50czpmdW5jdGlvbiBnZXREZXNjZW5kYW50cyhrZXksZGVzY2VuZGFudHMpe2lmKGRlc2NlbmRhbnRzPT09dm9pZCAwKXtkZXNjZW5kYW50cz1bXTt9dmFyIGNoaWxkcmVuPXRoaXMubm9kZXNba2V5XS5jaGlsZHJlbjtkZXNjZW5kYW50cy5wdXNoLmFwcGx5KGRlc2NlbmRhbnRzLF9fc3ByZWFkKGNoaWxkcmVuKSk7Zm9yKHZhciBpPTA7aTxjaGlsZHJlbi5sZW5ndGg7aSsrKXtkZXNjZW5kYW50cz10aGlzLmdldERlc2NlbmRhbnRzKGNoaWxkcmVuW2ldLGRlc2NlbmRhbnRzKTt9cmV0dXJuIGRlc2NlbmRhbnRzO30sZ2V0UGFyZW50czpmdW5jdGlvbiBnZXRQYXJlbnRzKGtleSl7dmFyIHBhcmVudD10aGlzLm5vZGVzW2tleV0ucGFyZW50O3ZhciBwYXJlbnRzPVtdO3doaWxlKHBhcmVudCE9PW51bGwpe3BhcmVudHMucHVzaChwYXJlbnQpO3BhcmVudD10aGlzLm5vZGVzW3BhcmVudF0ucGFyZW50O31yZXR1cm4gcGFyZW50czt9LHJlZ2lzdGVyOmZ1bmN0aW9uIHJlZ2lzdGVyKG5vZGUpe3ZhciBrZXk9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZ2V0T2JqZWN0VmFsdWVCeVBhdGgiXSkobm9kZS5pdGVtLHRoaXMuaXRlbUtleSk7dGhpcy5ub2Rlc1trZXldLnZub2RlPW5vZGU7dGhpcy51cGRhdGVWbm9kZVN0YXRlKGtleSk7fSx1bnJlZ2lzdGVyOmZ1bmN0aW9uIHVucmVnaXN0ZXIobm9kZSl7dmFyIGtleT1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJnZXRPYmplY3RWYWx1ZUJ5UGF0aCJdKShub2RlLml0ZW0sdGhpcy5pdGVtS2V5KTtpZih0aGlzLm5vZGVzW2tleV0pdGhpcy5ub2Rlc1trZXldLnZub2RlPW51bGw7fSxpc1BhcmVudDpmdW5jdGlvbiBpc1BhcmVudChrZXkpe3JldHVybiB0aGlzLm5vZGVzW2tleV0uY2hpbGRyZW4mJnRoaXMubm9kZXNba2V5XS5jaGlsZHJlbi5sZW5ndGg7fSx1cGRhdGVBY3RpdmU6ZnVuY3Rpb24gdXBkYXRlQWN0aXZlKGtleSxpc0FjdGl2ZSl7dmFyIF90aGlzPXRoaXM7aWYoIXRoaXMubm9kZXMuaGFzT3duUHJvcGVydHkoa2V5KSlyZXR1cm47aWYoIXRoaXMubXVsdGlwbGVBY3RpdmUpe3RoaXMuYWN0aXZlQ2FjaGUuZm9yRWFjaChmdW5jdGlvbihhY3RpdmUpe190aGlzLm5vZGVzW2FjdGl2ZV0uaXNBY3RpdmU9ZmFsc2U7X3RoaXMudXBkYXRlVm5vZGVTdGF0ZShhY3RpdmUpO190aGlzLmFjdGl2ZUNhY2hlLmRlbGV0ZShhY3RpdmUpO30pO312YXIgbm9kZT10aGlzLm5vZGVzW2tleV07aWYoIW5vZGUpcmV0dXJuO2lmKGlzQWN0aXZlKXRoaXMuYWN0aXZlQ2FjaGUuYWRkKGtleSk7ZWxzZSB0aGlzLmFjdGl2ZUNhY2hlLmRlbGV0ZShrZXkpO25vZGUuaXNBY3RpdmU9aXNBY3RpdmU7dGhpcy51cGRhdGVWbm9kZVN0YXRlKGtleSk7fSx1cGRhdGVTZWxlY3RlZDpmdW5jdGlvbiB1cGRhdGVTZWxlY3RlZChrZXksaXNTZWxlY3RlZCl7dmFyIGVfMSxfYTt2YXIgX3RoaXM9dGhpcztpZighdGhpcy5ub2Rlcy5oYXNPd25Qcm9wZXJ0eShrZXkpKXJldHVybjt2YXIgY2hhbmdlZD1uZXcgTWFwKCk7aWYodGhpcy5zZWxlY3Rpb25UeXBlIT09J2luZGVwZW5kZW50Jyl7dmFyIGRlc2NlbmRhbnRzPV9fc3ByZWFkKFtrZXldLHRoaXMuZ2V0RGVzY2VuZGFudHMoa2V5KSk7ZGVzY2VuZGFudHMuZm9yRWFjaChmdW5jdGlvbihkZXNjZW5kYW50KXtfdGhpcy5ub2Rlc1tkZXNjZW5kYW50XS5pc1NlbGVjdGVkPWlzU2VsZWN0ZWQ7X3RoaXMubm9kZXNbZGVzY2VuZGFudF0uaXNJbmRldGVybWluYXRlPWZhbHNlO2NoYW5nZWQuc2V0KGRlc2NlbmRhbnQsaXNTZWxlY3RlZCk7fSk7dmFyIHBhcmVudHM9dGhpcy5nZXRQYXJlbnRzKGtleSk7cGFyZW50cy5mb3JFYWNoKGZ1bmN0aW9uKHBhcmVudCl7X3RoaXMubm9kZXNbcGFyZW50XT1fdGhpcy5jYWxjdWxhdGVTdGF0ZShfdGhpcy5ub2Rlc1twYXJlbnRdLF90aGlzLm5vZGVzKTtjaGFuZ2VkLnNldChwYXJlbnQsX3RoaXMubm9kZXNbcGFyZW50XS5pc1NlbGVjdGVkKTt9KTt9ZWxzZXt0aGlzLm5vZGVzW2tleV0uaXNTZWxlY3RlZD1pc1NlbGVjdGVkO3RoaXMubm9kZXNba2V5XS5pc0luZGV0ZXJtaW5hdGU9ZmFsc2U7Y2hhbmdlZC5zZXQoa2V5LGlzU2VsZWN0ZWQpO310cnl7Zm9yKHZhciBfYj1fX3ZhbHVlcyhjaGFuZ2VkLmVudHJpZXMoKSksX2M9X2IubmV4dCgpOyFfYy5kb25lO19jPV9iLm5leHQoKSl7dmFyIF9kPV9fcmVhZChfYy52YWx1ZSwyKSxrZXlfMT1fZFswXSx2YWx1ZT1fZFsxXTt0aGlzLnVwZGF0ZVZub2RlU3RhdGUoa2V5XzEpO2lmKHRoaXMuc2VsZWN0aW9uVHlwZT09PSdsZWFmJyYmdGhpcy5pc1BhcmVudChrZXlfMSkpY29udGludWU7dmFsdWU9PT10cnVlP3RoaXMuc2VsZWN0ZWRDYWNoZS5hZGQoa2V5XzEpOnRoaXMuc2VsZWN0ZWRDYWNoZS5kZWxldGUoa2V5XzEpO319Y2F0Y2goZV8xXzEpe2VfMT17ZXJyb3I6ZV8xXzF9O31maW5hbGx5e3RyeXtpZihfYyYmIV9jLmRvbmUmJihfYT1fYi5yZXR1cm4pKV9hLmNhbGwoX2IpO31maW5hbGx5e2lmKGVfMSl0aHJvdyBlXzEuZXJyb3I7fX19LHVwZGF0ZU9wZW46ZnVuY3Rpb24gdXBkYXRlT3BlbihrZXksaXNPcGVuKXt2YXIgX3RoaXM9dGhpcztpZighdGhpcy5ub2Rlcy5oYXNPd25Qcm9wZXJ0eShrZXkpKXJldHVybjt2YXIgbm9kZT10aGlzLm5vZGVzW2tleV07dmFyIGNoaWxkcmVuPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKG5vZGUuaXRlbSx0aGlzLml0ZW1DaGlsZHJlbik7aWYoY2hpbGRyZW4mJiFjaGlsZHJlbi5sZW5ndGgmJm5vZGUudm5vZGUmJiFub2RlLnZub2RlLmhhc0xvYWRlZCl7bm9kZS52bm9kZS5jaGVja0NoaWxkcmVuKCkudGhlbihmdW5jdGlvbigpe3JldHVybiBfdGhpcy51cGRhdGVPcGVuKGtleSxpc09wZW4pO30pO31lbHNlIGlmKGNoaWxkcmVuJiZjaGlsZHJlbi5sZW5ndGgpe25vZGUuaXNPcGVuPWlzT3Blbjtub2RlLmlzT3Blbj90aGlzLm9wZW5DYWNoZS5hZGQoa2V5KTp0aGlzLm9wZW5DYWNoZS5kZWxldGUoa2V5KTt0aGlzLnVwZGF0ZVZub2RlU3RhdGUoa2V5KTt9fSx1cGRhdGVWbm9kZVN0YXRlOmZ1bmN0aW9uIHVwZGF0ZVZub2RlU3RhdGUoa2V5KXt2YXIgbm9kZT10aGlzLm5vZGVzW2tleV07aWYobm9kZSYmbm9kZS52bm9kZSl7bm9kZS52bm9kZS5pc1NlbGVjdGVkPW5vZGUuaXNTZWxlY3RlZDtub2RlLnZub2RlLmlzSW5kZXRlcm1pbmF0ZT1ub2RlLmlzSW5kZXRlcm1pbmF0ZTtub2RlLnZub2RlLmlzQWN0aXZlPW5vZGUuaXNBY3RpdmU7bm9kZS52bm9kZS5pc09wZW49bm9kZS5pc09wZW47fX0saXNFeGNsdWRlZDpmdW5jdGlvbiBpc0V4Y2x1ZGVkKGtleSl7cmV0dXJuISF0aGlzLnNlYXJjaCYmdGhpcy5leGNsdWRlZEl0ZW1zLmhhcyhrZXkpO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGNoaWxkcmVuPXRoaXMuaXRlbXMubGVuZ3RoP3RoaXMuaXRlbXMubWFwKF9WVHJlZXZpZXdOb2RlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuZ2VuQ2hpbGQuYmluZCh0aGlzKSkvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLzp0aGlzLiRzbG90cy5kZWZhdWx0Oy8vIFRPRE86IHJlbW92ZSB0eXBlIGFubm90YXRpb24gd2l0aCBUUyAzLjIKcmV0dXJuIGgoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXRyZWV2aWV3JyxjbGFzczpfX2Fzc2lnbih7J3YtdHJlZXZpZXctLWhvdmVyYWJsZSc6dGhpcy5ob3ZlcmFibGUsJ3YtdHJlZXZpZXctLWRlbnNlJzp0aGlzLmRlbnNlfSx0aGlzLnRoZW1lQ2xhc3Nlcyl9LGNoaWxkcmVuKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRyZWV2aWV3L1ZUcmVldmlld05vZGUudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVHJlZXZpZXcvVlRyZWV2aWV3Tm9kZS50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZUcmVldmlld05vZGVQcm9wcywgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVHJlZXZpZXdWVHJlZXZpZXdOb2RlVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlRyZWV2aWV3Tm9kZVByb3BzIixmdW5jdGlvbigpe3JldHVybiBWVHJlZXZpZXdOb2RlUHJvcHM7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdHJhbnNpdGlvbnMgKi8iLi9zcmMvY29tcG9uZW50cy90cmFuc2l0aW9ucy9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WSWNvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJY29uICovIi4vc3JjL2NvbXBvbmVudHMvVkljb24vaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRyZWV2aWV3Tm9kZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRyZWV2aWV3Tm9kZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZUcmVldmlldy9WVHJlZXZpZXdOb2RlLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19yZWdpc3RyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9yZWdpc3RyYWJsZSAqLyIuL3NyYy9taXhpbnMvcmVnaXN0cmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL21peGlucy9jb2xvcmFibGUgKi8iLi9zcmMvbWl4aW5zL2NvbG9yYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIENvbXBvbmVudHMKLy8gTWl4aW5zCi8vIFV0aWxzCnZhciBiYXNlTWl4aW5zPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdKShfbWl4aW5zX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0sT2JqZWN0KF9taXhpbnNfcmVnaXN0cmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siaW5qZWN0Il0pKCd0cmVldmlldycpKTt2YXIgVlRyZWV2aWV3Tm9kZVByb3BzPXthY3RpdmF0YWJsZTpCb29sZWFuLGFjdGl2ZUNsYXNzOnt0eXBlOlN0cmluZyxkZWZhdWx0Oid2LXRyZWV2aWV3LW5vZGUtLWFjdGl2ZSd9LGNvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OidwcmltYXJ5J30sZXhwYW5kSWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJHN1Ymdyb3VwJ30saW5kZXRlcm1pbmF0ZUljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRjaGVja2JveEluZGV0ZXJtaW5hdGUnfSxpdGVtQ2hpbGRyZW46e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2NoaWxkcmVuJ30saXRlbURpc2FibGVkOnt0eXBlOlN0cmluZyxkZWZhdWx0OidkaXNhYmxlZCd9LGl0ZW1LZXk6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2lkJ30saXRlbVRleHQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J25hbWUnfSxsb2FkQ2hpbGRyZW46RnVuY3Rpb24sbG9hZGluZ0ljb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyRsb2FkaW5nJ30sb2ZmSWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJGNoZWNrYm94T2ZmJ30sb25JY29uOnt0eXBlOlN0cmluZyxkZWZhdWx0OickY2hlY2tib3hPbid9LG9wZW5PbkNsaWNrOkJvb2xlYW4scm91bmRlZDpCb29sZWFuLHNlbGVjdGFibGU6Qm9vbGVhbixzZWxlY3RlZENvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OidhY2NlbnQnfSxzaGFwZWQ6Qm9vbGVhbix0cmFuc2l0aW9uOkJvb2xlYW59Oy8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09YmFzZU1peGlucy5leHRlbmQoKS5leHRlbmQoe25hbWU6J3YtdHJlZXZpZXctbm9kZScsaW5qZWN0Ont0cmVldmlldzp7ZGVmYXVsdDpudWxsfX0scHJvcHM6X19hc3NpZ24oe2l0ZW06e3R5cGU6T2JqZWN0LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm4gbnVsbDt9fX0sVlRyZWV2aWV3Tm9kZVByb3BzKSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aGFzTG9hZGVkOmZhbHNlLGlzQWN0aXZlOmZhbHNlLGlzSW5kZXRlcm1pbmF0ZTpmYWxzZSxpc0xvYWRpbmc6ZmFsc2UsaXNPcGVuOmZhbHNlLGlzU2VsZWN0ZWQ6ZmFsc2V9O30sY29tcHV0ZWQ6e2Rpc2FibGVkOmZ1bmN0aW9uIGRpc2FibGVkKCl7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKHRoaXMuaXRlbSx0aGlzLml0ZW1EaXNhYmxlZCk7fSxrZXk6ZnVuY3Rpb24ga2V5KCl7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKHRoaXMuaXRlbSx0aGlzLml0ZW1LZXkpO30sY2hpbGRyZW46ZnVuY3Rpb24gY2hpbGRyZW4oKXtyZXR1cm4gT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZ2V0T2JqZWN0VmFsdWVCeVBhdGgiXSkodGhpcy5pdGVtLHRoaXMuaXRlbUNoaWxkcmVuKTt9LHRleHQ6ZnVuY3Rpb24gdGV4dCgpe3JldHVybiBPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJnZXRPYmplY3RWYWx1ZUJ5UGF0aCJdKSh0aGlzLml0ZW0sdGhpcy5pdGVtVGV4dCk7fSxzY29wZWRQcm9wczpmdW5jdGlvbiBzY29wZWRQcm9wcygpe3JldHVybntpdGVtOnRoaXMuaXRlbSxsZWFmOiF0aGlzLmNoaWxkcmVuLHNlbGVjdGVkOnRoaXMuaXNTZWxlY3RlZCxpbmRldGVybWluYXRlOnRoaXMuaXNJbmRldGVybWluYXRlLGFjdGl2ZTp0aGlzLmlzQWN0aXZlLG9wZW46dGhpcy5pc09wZW59O30sY29tcHV0ZWRJY29uOmZ1bmN0aW9uIGNvbXB1dGVkSWNvbigpe2lmKHRoaXMuaXNJbmRldGVybWluYXRlKXJldHVybiB0aGlzLmluZGV0ZXJtaW5hdGVJY29uO2Vsc2UgaWYodGhpcy5pc1NlbGVjdGVkKXJldHVybiB0aGlzLm9uSWNvbjtlbHNlIHJldHVybiB0aGlzLm9mZkljb247fSxoYXNDaGlsZHJlbjpmdW5jdGlvbiBoYXNDaGlsZHJlbigpe3JldHVybiEhdGhpcy5jaGlsZHJlbiYmKCEhdGhpcy5jaGlsZHJlbi5sZW5ndGh8fCEhdGhpcy5sb2FkQ2hpbGRyZW4pO319LGNyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpe3RoaXMudHJlZXZpZXcucmVnaXN0ZXIodGhpcyk7fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXt0aGlzLnRyZWV2aWV3LnVucmVnaXN0ZXIodGhpcyk7fSxtZXRob2RzOntjaGVja0NoaWxkcmVuOmZ1bmN0aW9uIGNoZWNrQ2hpbGRyZW4oKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSl7Ly8gVE9ETzogUG90ZW50aWFsIGlzc3VlIHdpdGggYWx3YXlzIHRyeWluZwovLyB0byBsb2FkIGNoaWxkcmVuIGlmIHJlc3BvbnNlIGlzIGVtcHR5PwppZighX3RoaXMuY2hpbGRyZW58fF90aGlzLmNoaWxkcmVuLmxlbmd0aHx8IV90aGlzLmxvYWRDaGlsZHJlbnx8X3RoaXMuaGFzTG9hZGVkKXJldHVybiByZXNvbHZlKCk7X3RoaXMuaXNMb2FkaW5nPXRydWU7cmVzb2x2ZShfdGhpcy5sb2FkQ2hpbGRyZW4oX3RoaXMuaXRlbSkpO30pLnRoZW4oZnVuY3Rpb24oKXtfdGhpcy5pc0xvYWRpbmc9ZmFsc2U7X3RoaXMuaGFzTG9hZGVkPXRydWU7fSk7fSxvcGVuOmZ1bmN0aW9uIG9wZW4oKXt0aGlzLmlzT3Blbj0hdGhpcy5pc09wZW47dGhpcy50cmVldmlldy51cGRhdGVPcGVuKHRoaXMua2V5LHRoaXMuaXNPcGVuKTt0aGlzLnRyZWV2aWV3LmVtaXRPcGVuKCk7fSxnZW5MYWJlbDpmdW5jdGlvbiBnZW5MYWJlbCgpe3ZhciBjaGlsZHJlbj1bXTtpZih0aGlzLiRzY29wZWRTbG90cy5sYWJlbCljaGlsZHJlbi5wdXNoKHRoaXMuJHNjb3BlZFNsb3RzLmxhYmVsKHRoaXMuc2NvcGVkUHJvcHMpKTtlbHNlIGNoaWxkcmVuLnB1c2godGhpcy50ZXh0KTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c2xvdDonbGFiZWwnLHN0YXRpY0NsYXNzOid2LXRyZWV2aWV3LW5vZGVfX2xhYmVsJ30sY2hpbGRyZW4pO30sZ2VuQ29udGVudDpmdW5jdGlvbiBnZW5Db250ZW50KCl7dmFyIGNoaWxkcmVuPVt0aGlzLiRzY29wZWRTbG90cy5wcmVwZW5kJiZ0aGlzLiRzY29wZWRTbG90cy5wcmVwZW5kKHRoaXMuc2NvcGVkUHJvcHMpLHRoaXMuZ2VuTGFiZWwoKSx0aGlzLiRzY29wZWRTbG90cy5hcHBlbmQmJnRoaXMuJHNjb3BlZFNsb3RzLmFwcGVuZCh0aGlzLnNjb3BlZFByb3BzKV07cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXRyZWV2aWV3LW5vZGVfX2NvbnRlbnQnfSxjaGlsZHJlbik7fSxnZW5Ub2dnbGU6ZnVuY3Rpb24gZ2VuVG9nZ2xlKCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bIlZJY29uIl0se3N0YXRpY0NsYXNzOid2LXRyZWV2aWV3LW5vZGVfX3RvZ2dsZScsY2xhc3M6eyd2LXRyZWV2aWV3LW5vZGVfX3RvZ2dsZS0tb3Blbic6dGhpcy5pc09wZW4sJ3YtdHJlZXZpZXctbm9kZV9fdG9nZ2xlLS1sb2FkaW5nJzp0aGlzLmlzTG9hZGluZ30sc2xvdDoncHJlcGVuZCcsb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKGUpe2lmKF90aGlzLmRpc2FibGVkKXJldHVybjtlLnN0b3BQcm9wYWdhdGlvbigpO2lmKF90aGlzLmlzTG9hZGluZylyZXR1cm47X3RoaXMuY2hlY2tDaGlsZHJlbigpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMub3BlbigpO30pO319fSxbdGhpcy5pc0xvYWRpbmc/dGhpcy5sb2FkaW5nSWNvbjp0aGlzLmV4cGFuZEljb25dKTt9LGdlbkNoZWNrYm94OmZ1bmN0aW9uIGdlbkNoZWNrYm94KCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bIlZJY29uIl0se3N0YXRpY0NsYXNzOid2LXRyZWV2aWV3LW5vZGVfX2NoZWNrYm94Jyxwcm9wczp7Y29sb3I6dGhpcy5pc1NlbGVjdGVkP3RoaXMuc2VsZWN0ZWRDb2xvcjp1bmRlZmluZWR9LG9uOntjbGljazpmdW5jdGlvbiBjbGljayhlKXtpZihfdGhpcy5kaXNhYmxlZClyZXR1cm47ZS5zdG9wUHJvcGFnYXRpb24oKTtpZihfdGhpcy5pc0xvYWRpbmcpcmV0dXJuO190aGlzLmNoZWNrQ2hpbGRyZW4oKS50aGVuKGZ1bmN0aW9uKCl7Ly8gV2UgbmV4dFRpY2sgaGVyZSBzbyB0aGF0IGl0ZW1zIHdhdGNoIGluIFZUcmVldmlldyBoYXMgYSBjaGFuY2UgdG8gcnVuIGZpcnN0Cl90aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe190aGlzLmlzU2VsZWN0ZWQ9IV90aGlzLmlzU2VsZWN0ZWQ7X3RoaXMuaXNJbmRldGVybWluYXRlPWZhbHNlO190aGlzLnRyZWV2aWV3LnVwZGF0ZVNlbGVjdGVkKF90aGlzLmtleSxfdGhpcy5pc1NlbGVjdGVkKTtfdGhpcy50cmVldmlldy5lbWl0U2VsZWN0ZWQoKTt9KTt9KTt9fX0sW3RoaXMuY29tcHV0ZWRJY29uXSk7fSxnZW5Ob2RlOmZ1bmN0aW9uIGdlbk5vZGUoKXt2YXIgX2E7dmFyIF90aGlzPXRoaXM7dmFyIGNoaWxkcmVuPVt0aGlzLmdlbkNvbnRlbnQoKV07aWYodGhpcy5zZWxlY3RhYmxlKWNoaWxkcmVuLnVuc2hpZnQodGhpcy5nZW5DaGVja2JveCgpKTtpZih0aGlzLmhhc0NoaWxkcmVuKWNoaWxkcmVuLnVuc2hpZnQodGhpcy5nZW5Ub2dnbGUoKSk7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsdGhpcy5zZXRUZXh0Q29sb3IodGhpcy5pc0FjdGl2ZSYmdGhpcy5jb2xvcix7c3RhdGljQ2xhc3M6J3YtdHJlZXZpZXctbm9kZV9fcm9vdCcsY2xhc3M6KF9hPXt9LF9hW3RoaXMuYWN0aXZlQ2xhc3NdPXRoaXMuaXNBY3RpdmUsX2EpLG9uOntjbGljazpmdW5jdGlvbiBjbGljaygpe2lmKF90aGlzLmRpc2FibGVkKXJldHVybjtpZihfdGhpcy5vcGVuT25DbGljayYmX3RoaXMuaGFzQ2hpbGRyZW4pe190aGlzLm9wZW4oKTt9ZWxzZSBpZihfdGhpcy5hY3RpdmF0YWJsZSl7X3RoaXMuaXNBY3RpdmU9IV90aGlzLmlzQWN0aXZlO190aGlzLnRyZWV2aWV3LnVwZGF0ZUFjdGl2ZShfdGhpcy5rZXksX3RoaXMuaXNBY3RpdmUpO190aGlzLnRyZWV2aWV3LmVtaXRBY3RpdmUoKTt9fX19KSxjaGlsZHJlbik7fSxnZW5DaGlsZDpmdW5jdGlvbiBnZW5DaGlsZChpdGVtKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfVlRyZWV2aWV3Tm9kZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0se2tleTpPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJnZXRPYmplY3RWYWx1ZUJ5UGF0aCJdKShpdGVtLHRoaXMuaXRlbUtleSkscHJvcHM6e2FjdGl2YXRhYmxlOnRoaXMuYWN0aXZhdGFibGUsYWN0aXZlQ2xhc3M6dGhpcy5hY3RpdmVDbGFzcyxpdGVtOml0ZW0sc2VsZWN0YWJsZTp0aGlzLnNlbGVjdGFibGUsc2VsZWN0ZWRDb2xvcjp0aGlzLnNlbGVjdGVkQ29sb3IsY29sb3I6dGhpcy5jb2xvcixleHBhbmRJY29uOnRoaXMuZXhwYW5kSWNvbixpbmRldGVybWluYXRlSWNvbjp0aGlzLmluZGV0ZXJtaW5hdGVJY29uLG9mZkljb246dGhpcy5vZmZJY29uLG9uSWNvbjp0aGlzLm9uSWNvbixsb2FkaW5nSWNvbjp0aGlzLmxvYWRpbmdJY29uLGl0ZW1LZXk6dGhpcy5pdGVtS2V5LGl0ZW1UZXh0OnRoaXMuaXRlbVRleHQsaXRlbURpc2FibGVkOnRoaXMuaXRlbURpc2FibGVkLGl0ZW1DaGlsZHJlbjp0aGlzLml0ZW1DaGlsZHJlbixsb2FkQ2hpbGRyZW46dGhpcy5sb2FkQ2hpbGRyZW4sdHJhbnNpdGlvbjp0aGlzLnRyYW5zaXRpb24sb3Blbk9uQ2xpY2s6dGhpcy5vcGVuT25DbGljayxyb3VuZGVkOnRoaXMucm91bmRlZCxzaGFwZWQ6dGhpcy5zaGFwZWR9LHNjb3BlZFNsb3RzOnRoaXMuJHNjb3BlZFNsb3RzfSk7fSxnZW5DaGlsZHJlbldyYXBwZXI6ZnVuY3Rpb24gZ2VuQ2hpbGRyZW5XcmFwcGVyKCl7aWYoIXRoaXMuaXNPcGVufHwhdGhpcy5jaGlsZHJlbilyZXR1cm4gbnVsbDt2YXIgY2hpbGRyZW49W3RoaXMuY2hpbGRyZW4ubWFwKHRoaXMuZ2VuQ2hpbGQpXTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtdHJlZXZpZXctbm9kZV9fY2hpbGRyZW4nfSxjaGlsZHJlbik7fSxnZW5UcmFuc2l0aW9uOmZ1bmN0aW9uIGdlblRyYW5zaXRpb24oKXtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siVkV4cGFuZFRyYW5zaXRpb24iXSxbdGhpcy5nZW5DaGlsZHJlbldyYXBwZXIoKV0pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGNoaWxkcmVuPVt0aGlzLmdlbk5vZGUoKV07aWYodGhpcy50cmFuc2l0aW9uKWNoaWxkcmVuLnB1c2godGhpcy5nZW5UcmFuc2l0aW9uKCkpO2Vsc2UgY2hpbGRyZW4ucHVzaCh0aGlzLmdlbkNoaWxkcmVuV3JhcHBlcigpKTtyZXR1cm4gaCgnZGl2Jyx7c3RhdGljQ2xhc3M6J3YtdHJlZXZpZXctbm9kZScsY2xhc3M6eyd2LXRyZWV2aWV3LW5vZGUtLWxlYWYnOiF0aGlzLmhhc0NoaWxkcmVuLCd2LXRyZWV2aWV3LW5vZGUtLWNsaWNrJzp0aGlzLm9wZW5PbkNsaWNrLCd2LXRyZWV2aWV3LW5vZGUtLWRpc2FibGVkJzp0aGlzLmRpc2FibGVkLCd2LXRyZWV2aWV3LW5vZGUtLXJvdW5kZWQnOnRoaXMucm91bmRlZCwndi10cmVldmlldy1ub2RlLS1zaGFwZWQnOnRoaXMuc2hhcGVkLCd2LXRyZWV2aWV3LW5vZGUtLXNlbGVjdGVkJzp0aGlzLmlzU2VsZWN0ZWQsJ3YtdHJlZXZpZXctbm9kZS0tZXhjbHVkZWQnOnRoaXMudHJlZXZpZXcuaXNFeGNsdWRlZCh0aGlzLmtleSl9LGF0dHJzOnsnYXJpYS1leHBhbmRlZCc6U3RyaW5nKHRoaXMuaXNPcGVuKX19LGNoaWxkcmVuKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVlRyZWV2aWV3L2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZUcmVldmlldy9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWVHJlZXZpZXcsIFZUcmVldmlld05vZGUsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVlRyZWV2aWV3SW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVHJlZXZpZXdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZUcmVldmlldyAqLyIuL3NyYy9jb21wb25lbnRzL1ZUcmVldmlldy9WVHJlZXZpZXcudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVHJlZXZpZXciLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVHJlZXZpZXdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVHJlZXZpZXdOb2RlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVHJlZXZpZXdOb2RlICovIi4vc3JjL2NvbXBvbmVudHMvVlRyZWV2aWV3L1ZUcmVldmlld05vZGUudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVHJlZXZpZXdOb2RlIixmdW5jdGlvbigpe3JldHVybiBfVlRyZWV2aWV3Tm9kZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT17JF92dWV0aWZ5X3N1YmNvbXBvbmVudHM6e1ZUcmVldmlldzpfVlRyZWV2aWV3X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSxWVHJlZXZpZXdOb2RlOl9WVHJlZXZpZXdOb2RlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXX19Oy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZUcmVldmlldy91dGlsL2ZpbHRlclRyZWVJdGVtcy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy9WVHJlZXZpZXcvdXRpbC9maWx0ZXJUcmVlSXRlbXMudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZmlsdGVyVHJlZUl0ZW0sIGZpbHRlclRyZWVJdGVtcyAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWVHJlZXZpZXdVdGlsRmlsdGVyVHJlZUl0ZW1zVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZmlsdGVyVHJlZUl0ZW0iLGZ1bmN0aW9uKCl7cmV0dXJuIGZpbHRlclRyZWVJdGVtO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJmaWx0ZXJUcmVlSXRlbXMiLGZ1bmN0aW9uKCl7cmV0dXJuIGZpbHRlclRyZWVJdGVtczt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpO2Z1bmN0aW9uIGZpbHRlclRyZWVJdGVtKGl0ZW0sc2VhcmNoLHRleHRLZXkpe3ZhciB0ZXh0PU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKGl0ZW0sdGV4dEtleSk7cmV0dXJuIHRleHQudG9Mb2NhbGVMb3dlckNhc2UoKS5pbmRleE9mKHNlYXJjaC50b0xvY2FsZUxvd2VyQ2FzZSgpKT4tMTt9ZnVuY3Rpb24gZmlsdGVyVHJlZUl0ZW1zKGZpbHRlcixpdGVtLHNlYXJjaCxpZEtleSx0ZXh0S2V5LGNoaWxkcmVuS2V5LGV4Y2x1ZGVkKXtpZihmaWx0ZXIoaXRlbSxzZWFyY2gsdGV4dEtleSkpe3JldHVybiB0cnVlO312YXIgY2hpbGRyZW49T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZ2V0T2JqZWN0VmFsdWVCeVBhdGgiXSkoaXRlbSxjaGlsZHJlbktleSk7aWYoY2hpbGRyZW4pe3ZhciBtYXRjaD1mYWxzZTtmb3IodmFyIGk9MDtpPGNoaWxkcmVuLmxlbmd0aDtpKyspe2lmKGZpbHRlclRyZWVJdGVtcyhmaWx0ZXIsY2hpbGRyZW5baV0sc2VhcmNoLGlkS2V5LHRleHRLZXksY2hpbGRyZW5LZXksZXhjbHVkZWQpKXttYXRjaD10cnVlO319aWYobWF0Y2gpcmV0dXJuIHRydWU7fWV4Y2x1ZGVkLmFkZChPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJnZXRPYmplY3RWYWx1ZUJ5UGF0aCJdKShpdGVtLGlkS2V5KSk7cmV0dXJuIGZhbHNlO30vKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WV2luZG93L1ZXaW5kb3cuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZXaW5kb3cvVldpbmRvdy5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVldpbmRvd1ZXaW5kb3dTYXNzKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pey8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbgovKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy9WV2luZG93L1ZXaW5kb3cudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVldpbmRvdy9WV2luZG93LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVldpbmRvd1ZXaW5kb3dUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WV2luZG93X3Nhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZXaW5kb3cuc2FzcyAqLyIuL3NyYy9jb21wb25lbnRzL1ZXaW5kb3cvVldpbmRvdy5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZXaW5kb3dfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVldpbmRvd19zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQnRuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vVkJ0biAqLyIuL3NyYy9jb21wb25lbnRzL1ZCdG4vaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9WSWNvbiAqLyIuL3NyYy9jb21wb25lbnRzL1ZJY29uL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJdGVtR3JvdXBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL1ZJdGVtR3JvdXAvVkl0ZW1Hcm91cCAqLyIuL3NyYy9jb21wb25lbnRzL1ZJdGVtR3JvdXAvVkl0ZW1Hcm91cC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX3RvdWNoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vZGlyZWN0aXZlcy90b3VjaCAqLyIuL3NyYy9kaXJlY3RpdmVzL3RvdWNoL2luZGV4LnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvLyBTdHlsZXMKLy8gQ29tcG9uZW50cwovLyBEaXJlY3RpdmVzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X1ZJdGVtR3JvdXBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJCYXNlSXRlbUdyb3VwIl0uZXh0ZW5kKHtuYW1lOid2LXdpbmRvdycscHJvdmlkZTpmdW5jdGlvbiBwcm92aWRlKCl7cmV0dXJue3dpbmRvd0dyb3VwOnRoaXN9O30sZGlyZWN0aXZlczp7VG91Y2g6X2RpcmVjdGl2ZXNfdG91Y2hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdfSxwcm9wczp7YWN0aXZlQ2xhc3M6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J3Ytd2luZG93LWl0ZW0tLWFjdGl2ZSd9LGNvbnRpbnVvdXM6Qm9vbGVhbixtYW5kYXRvcnk6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LG5leHRJY29uOnt0eXBlOltCb29sZWFuLFN0cmluZ10sZGVmYXVsdDonJG5leHQnfSxwcmV2SWNvbjp7dHlwZTpbQm9vbGVhbixTdHJpbmddLGRlZmF1bHQ6JyRwcmV2J30scmV2ZXJzZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dW5kZWZpbmVkfSxzaG93QXJyb3dzOkJvb2xlYW4sc2hvd0Fycm93c09uSG92ZXI6Qm9vbGVhbix0b3VjaDpPYmplY3QsdG91Y2hsZXNzOkJvb2xlYW4sdmFsdWU6e3JlcXVpcmVkOmZhbHNlfSx2ZXJ0aWNhbDpCb29sZWFufSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57Y2hhbmdlZEJ5RGVsaW1pdGVyczpmYWxzZSxpbnRlcm5hbEhlaWdodDp1bmRlZmluZWQsdHJhbnNpdGlvbkhlaWdodDp1bmRlZmluZWQsdHJhbnNpdGlvbkNvdW50OjAsaXNCb290ZWQ6ZmFsc2UsaXNSZXZlcnNlOmZhbHNlfTt9LGNvbXB1dGVkOntpc0FjdGl2ZTpmdW5jdGlvbiBpc0FjdGl2ZSgpe3JldHVybiB0aGlzLnRyYW5zaXRpb25Db3VudD4wO30sY2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJuIF9fYXNzaWduKHt9LF9WSXRlbUdyb3VwX1ZJdGVtR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siQmFzZUl0ZW1Hcm91cCJdLm9wdGlvbnMuY29tcHV0ZWQuY2xhc3Nlcy5jYWxsKHRoaXMpLHsndi13aW5kb3ctLXNob3ctYXJyb3dzLW9uLWhvdmVyJzp0aGlzLnNob3dBcnJvd3NPbkhvdmVyfSk7fSxjb21wdXRlZFRyYW5zaXRpb246ZnVuY3Rpb24gY29tcHV0ZWRUcmFuc2l0aW9uKCl7aWYoIXRoaXMuaXNCb290ZWQpcmV0dXJuJyc7dmFyIGF4aXM9dGhpcy52ZXJ0aWNhbD8neSc6J3gnO3ZhciBkaXJlY3Rpb249dGhpcy5pbnRlcm5hbFJldmVyc2U/Jy1yZXZlcnNlJzonJztyZXR1cm4idi13aW5kb3ctIitheGlzK2RpcmVjdGlvbisiLXRyYW5zaXRpb24iO30saGFzQWN0aXZlSXRlbXM6ZnVuY3Rpb24gaGFzQWN0aXZlSXRlbXMoKXtyZXR1cm4gQm9vbGVhbih0aGlzLml0ZW1zLmZpbmQoZnVuY3Rpb24oaXRlbSl7cmV0dXJuIWl0ZW0uZGlzYWJsZWQ7fSkpO30saGFzTmV4dDpmdW5jdGlvbiBoYXNOZXh0KCl7cmV0dXJuIHRoaXMuY29udGludW91c3x8dGhpcy5pbnRlcm5hbEluZGV4PHRoaXMuaXRlbXMubGVuZ3RoLTE7fSxoYXNQcmV2OmZ1bmN0aW9uIGhhc1ByZXYoKXtyZXR1cm4gdGhpcy5jb250aW51b3VzfHx0aGlzLmludGVybmFsSW5kZXg+MDt9LGludGVybmFsSW5kZXg6ZnVuY3Rpb24gaW50ZXJuYWxJbmRleCgpe3ZhciBfdGhpcz10aGlzO3JldHVybiB0aGlzLml0ZW1zLmZpbmRJbmRleChmdW5jdGlvbihpdGVtLGkpe3JldHVybiBfdGhpcy5pbnRlcm5hbFZhbHVlPT09X3RoaXMuZ2V0VmFsdWUoaXRlbSxpKTt9KTt9LGludGVybmFsUmV2ZXJzZTpmdW5jdGlvbiBpbnRlcm5hbFJldmVyc2UoKXtpZih0aGlzLnJldmVyc2UhPT11bmRlZmluZWQpcmV0dXJuIHRoaXMucmV2ZXJzZTtyZXR1cm4gdGhpcy5pc1JldmVyc2U7fX0sd2F0Y2g6e2ludGVybmFsSW5kZXg6J3VwZGF0ZVJldmVyc2UnfSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt2YXIgX3RoaXM9dGhpczt3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLmlzQm9vdGVkPXRydWU7fSk7fSxtZXRob2RzOntnZW5Db250YWluZXI6ZnVuY3Rpb24gZ2VuQ29udGFpbmVyKCl7dmFyIGNoaWxkcmVuPVt0aGlzLiRzbG90cy5kZWZhdWx0XTtpZih0aGlzLnNob3dBcnJvd3Mpe2NoaWxkcmVuLnB1c2godGhpcy5nZW5Db250cm9sSWNvbnMoKSk7fXJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczondi13aW5kb3dfX2NvbnRhaW5lcicsY2xhc3M6eyd2LXdpbmRvd19fY29udGFpbmVyLS1pcy1hY3RpdmUnOnRoaXMuaXNBY3RpdmV9LHN0eWxlOntoZWlnaHQ6dGhpcy5pbnRlcm5hbEhlaWdodHx8dGhpcy50cmFuc2l0aW9uSGVpZ2h0fX0sY2hpbGRyZW4pO30sZ2VuSWNvbjpmdW5jdGlvbiBnZW5JY29uKGRpcmVjdGlvbixpY29uLGZuKXt2YXIgX3RoaXM9dGhpcztyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2Jyx7c3RhdGljQ2xhc3M6InYtd2luZG93X18iK2RpcmVjdGlvbn0sW3RoaXMuJGNyZWF0ZUVsZW1lbnQoX1ZCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLHtwcm9wczp7aWNvbjp0cnVlfSxhdHRyczp7J2FyaWEtbGFiZWwnOnRoaXMuJHZ1ZXRpZnkubGFuZy50KCIkdnVldGlmeS5jYXJvdXNlbC4iK2RpcmVjdGlvbil9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygpe190aGlzLmNoYW5nZWRCeURlbGltaXRlcnM9dHJ1ZTtmbigpO319fSxbdGhpcy4kY3JlYXRlRWxlbWVudChfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLHtwcm9wczp7bGFyZ2U6dHJ1ZX19LGljb24pXSldKTt9LGdlbkNvbnRyb2xJY29uczpmdW5jdGlvbiBnZW5Db250cm9sSWNvbnMoKXt2YXIgaWNvbnM9W107dmFyIHByZXZJY29uPXRoaXMuJHZ1ZXRpZnkucnRsP3RoaXMubmV4dEljb246dGhpcy5wcmV2SWNvbjsvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL2lmKHRoaXMuaGFzUHJldiYmcHJldkljb24mJnR5cGVvZiBwcmV2SWNvbj09PSdzdHJpbmcnKXt2YXIgaWNvbj10aGlzLmdlbkljb24oJ3ByZXYnLHByZXZJY29uLHRoaXMucHJldik7aWNvbiYmaWNvbnMucHVzaChpY29uKTt9dmFyIG5leHRJY29uPXRoaXMuJHZ1ZXRpZnkucnRsP3RoaXMucHJldkljb246dGhpcy5uZXh0SWNvbjsvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL2lmKHRoaXMuaGFzTmV4dCYmbmV4dEljb24mJnR5cGVvZiBuZXh0SWNvbj09PSdzdHJpbmcnKXt2YXIgaWNvbj10aGlzLmdlbkljb24oJ25leHQnLG5leHRJY29uLHRoaXMubmV4dCk7aWNvbiYmaWNvbnMucHVzaChpY29uKTt9cmV0dXJuIGljb25zO30sZ2V0TmV4dEluZGV4OmZ1bmN0aW9uIGdldE5leHRJbmRleChpbmRleCl7dmFyIG5leHRJbmRleD0oaW5kZXgrMSkldGhpcy5pdGVtcy5sZW5ndGg7dmFyIGl0ZW09dGhpcy5pdGVtc1tuZXh0SW5kZXhdO2lmKGl0ZW0uZGlzYWJsZWQpcmV0dXJuIHRoaXMuZ2V0TmV4dEluZGV4KG5leHRJbmRleCk7cmV0dXJuIG5leHRJbmRleDt9LGdldFByZXZJbmRleDpmdW5jdGlvbiBnZXRQcmV2SW5kZXgoaW5kZXgpe3ZhciBwcmV2SW5kZXg9KGluZGV4K3RoaXMuaXRlbXMubGVuZ3RoLTEpJXRoaXMuaXRlbXMubGVuZ3RoO3ZhciBpdGVtPXRoaXMuaXRlbXNbcHJldkluZGV4XTtpZihpdGVtLmRpc2FibGVkKXJldHVybiB0aGlzLmdldFByZXZJbmRleChwcmV2SW5kZXgpO3JldHVybiBwcmV2SW5kZXg7fSxuZXh0OmZ1bmN0aW9uIG5leHQoKXt0aGlzLmlzUmV2ZXJzZT10aGlzLiR2dWV0aWZ5LnJ0bDsvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9pZighdGhpcy5oYXNBY3RpdmVJdGVtc3x8IXRoaXMuaGFzTmV4dClyZXR1cm47dmFyIG5leHRJbmRleD10aGlzLmdldE5leHRJbmRleCh0aGlzLmludGVybmFsSW5kZXgpO3ZhciBpdGVtPXRoaXMuaXRlbXNbbmV4dEluZGV4XTt0aGlzLmludGVybmFsVmFsdWU9dGhpcy5nZXRWYWx1ZShpdGVtLG5leHRJbmRleCk7fSxwcmV2OmZ1bmN0aW9uIHByZXYoKXt0aGlzLmlzUmV2ZXJzZT0hdGhpcy4kdnVldGlmeS5ydGw7LyogaXN0YW5idWwgaWdub3JlIGlmICovaWYoIXRoaXMuaGFzQWN0aXZlSXRlbXN8fCF0aGlzLmhhc1ByZXYpcmV0dXJuO3ZhciBsYXN0SW5kZXg9dGhpcy5nZXRQcmV2SW5kZXgodGhpcy5pbnRlcm5hbEluZGV4KTt2YXIgaXRlbT10aGlzLml0ZW1zW2xhc3RJbmRleF07dGhpcy5pbnRlcm5hbFZhbHVlPXRoaXMuZ2V0VmFsdWUoaXRlbSxsYXN0SW5kZXgpO30sdXBkYXRlUmV2ZXJzZTpmdW5jdGlvbiB1cGRhdGVSZXZlcnNlKHZhbCxvbGRWYWwpe2lmKHRoaXMuY2hhbmdlZEJ5RGVsaW1pdGVycyl7dGhpcy5jaGFuZ2VkQnlEZWxpbWl0ZXJzPWZhbHNlO3JldHVybjt9dGhpcy5pc1JldmVyc2U9dmFsPG9sZFZhbDt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBfdGhpcz10aGlzO3ZhciBkYXRhPXtzdGF0aWNDbGFzczondi13aW5kb3cnLGNsYXNzOnRoaXMuY2xhc3NlcyxkaXJlY3RpdmVzOltdfTtpZighdGhpcy50b3VjaGxlc3Mpe3ZhciB2YWx1ZT10aGlzLnRvdWNofHx7bGVmdDpmdW5jdGlvbiBsZWZ0KCl7X3RoaXMuJHZ1ZXRpZnkucnRsP190aGlzLnByZXYoKTpfdGhpcy5uZXh0KCk7fSxyaWdodDpmdW5jdGlvbiByaWdodCgpe190aGlzLiR2dWV0aWZ5LnJ0bD9fdGhpcy5uZXh0KCk6X3RoaXMucHJldigpO30sZW5kOmZ1bmN0aW9uIGVuZChlKXtlLnN0b3BQcm9wYWdhdGlvbigpO30sc3RhcnQ6ZnVuY3Rpb24gc3RhcnQoZSl7ZS5zdG9wUHJvcGFnYXRpb24oKTt9fTtkYXRhLmRpcmVjdGl2ZXMucHVzaCh7bmFtZTondG91Y2gnLHZhbHVlOnZhbHVlfSk7fXJldHVybiBoKCdkaXYnLGRhdGEsW3RoaXMuZ2VuQ29udGFpbmVyKCldKTt9fSk7LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvVldpbmRvdy9WV2luZG93SXRlbS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvVldpbmRvdy9WV2luZG93SXRlbS50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNWV2luZG93VldpbmRvd0l0ZW1Ucyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9taXhpbnNfYm9vdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvYm9vdGFibGUgKi8iLi9zcmMvbWl4aW5zL2Jvb3RhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc19ncm91cGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9taXhpbnMvZ3JvdXBhYmxlICovIi4vc3JjL21peGlucy9ncm91cGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZGlyZWN0aXZlc190b3VjaF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL2RpcmVjdGl2ZXMvdG91Y2ggKi8iLi9zcmMvZGlyZWN0aXZlcy90b3VjaC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvLyBNaXhpbnMKLy8gRGlyZWN0aXZlcwovLyBVdGlsaXRpZXMKdmFyIGJhc2VNaXhpbnM9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0pKF9taXhpbnNfYm9vdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLE9iamVjdChfbWl4aW5zX2dyb3VwYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJmYWN0b3J5Il0pKCd3aW5kb3dHcm91cCcsJ3Ytd2luZG93LWl0ZW0nLCd2LXdpbmRvdycpKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPWJhc2VNaXhpbnMuZXh0ZW5kKCkuZXh0ZW5kKCkuZXh0ZW5kKHtuYW1lOid2LXdpbmRvdy1pdGVtJyxkaXJlY3RpdmVzOntUb3VjaDpfZGlyZWN0aXZlc190b3VjaF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il19LHByb3BzOntkaXNhYmxlZDpCb29sZWFuLHJldmVyc2VUcmFuc2l0aW9uOnt0eXBlOltCb29sZWFuLFN0cmluZ10sZGVmYXVsdDp1bmRlZmluZWR9LHRyYW5zaXRpb246e3R5cGU6W0Jvb2xlYW4sU3RyaW5nXSxkZWZhdWx0OnVuZGVmaW5lZH0sdmFsdWU6e3JlcXVpcmVkOmZhbHNlfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2lzQWN0aXZlOmZhbHNlLGluVHJhbnNpdGlvbjpmYWxzZX07fSxjb21wdXRlZDp7Y2xhc3NlczpmdW5jdGlvbiBjbGFzc2VzKCl7cmV0dXJuIHRoaXMuZ3JvdXBDbGFzc2VzO30sY29tcHV0ZWRUcmFuc2l0aW9uOmZ1bmN0aW9uIGNvbXB1dGVkVHJhbnNpdGlvbigpe2lmKCF0aGlzLndpbmRvd0dyb3VwLmludGVybmFsUmV2ZXJzZSl7cmV0dXJuIHR5cGVvZiB0aGlzLnRyYW5zaXRpb24hPT0ndW5kZWZpbmVkJz90aGlzLnRyYW5zaXRpb258fCcnOnRoaXMud2luZG93R3JvdXAuY29tcHV0ZWRUcmFuc2l0aW9uO31yZXR1cm4gdHlwZW9mIHRoaXMucmV2ZXJzZVRyYW5zaXRpb24hPT0ndW5kZWZpbmVkJz90aGlzLnJldmVyc2VUcmFuc2l0aW9ufHwnJzp0aGlzLndpbmRvd0dyb3VwLmNvbXB1dGVkVHJhbnNpdGlvbjt9fSxtZXRob2RzOntnZW5EZWZhdWx0U2xvdDpmdW5jdGlvbiBnZW5EZWZhdWx0U2xvdCgpe3JldHVybiB0aGlzLiRzbG90cy5kZWZhdWx0O30sZ2VuV2luZG93SXRlbTpmdW5jdGlvbiBnZW5XaW5kb3dJdGVtKCl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2Rpdicse3N0YXRpY0NsYXNzOid2LXdpbmRvdy1pdGVtJyxjbGFzczp0aGlzLmNsYXNzZXMsZGlyZWN0aXZlczpbe25hbWU6J3Nob3cnLHZhbHVlOnRoaXMuaXNBY3RpdmV9XSxvbjp0aGlzLiRsaXN0ZW5lcnN9LHRoaXMuc2hvd0xhenlDb250ZW50KHRoaXMuZ2VuRGVmYXVsdFNsb3QoKSkpO30sb25BZnRlclRyYW5zaXRpb246ZnVuY3Rpb24gb25BZnRlclRyYW5zaXRpb24oKXtpZighdGhpcy5pblRyYW5zaXRpb24pe3JldHVybjt9Ly8gRmluYWxpemUgdHJhbnNpdGlvbiBzdGF0ZS4KdGhpcy5pblRyYW5zaXRpb249ZmFsc2U7aWYodGhpcy53aW5kb3dHcm91cC50cmFuc2l0aW9uQ291bnQ+MCl7dGhpcy53aW5kb3dHcm91cC50cmFuc2l0aW9uQ291bnQtLTsvLyBSZW1vdmUgY29udGFpbmVyIGhlaWdodCBpZiB3ZSBhcmUgb3V0IG9mIHRyYW5zaXRpb24uCmlmKHRoaXMud2luZG93R3JvdXAudHJhbnNpdGlvbkNvdW50PT09MCl7dGhpcy53aW5kb3dHcm91cC50cmFuc2l0aW9uSGVpZ2h0PXVuZGVmaW5lZDt9fX0sb25CZWZvcmVUcmFuc2l0aW9uOmZ1bmN0aW9uIG9uQmVmb3JlVHJhbnNpdGlvbigpe2lmKHRoaXMuaW5UcmFuc2l0aW9uKXtyZXR1cm47fS8vIEluaXRpYWxpemUgdHJhbnNpdGlvbiBzdGF0ZSBoZXJlLgp0aGlzLmluVHJhbnNpdGlvbj10cnVlO2lmKHRoaXMud2luZG93R3JvdXAudHJhbnNpdGlvbkNvdW50PT09MCl7Ly8gU2V0IGluaXRpYWwgaGVpZ2h0IGZvciBoZWlnaHQgdHJhbnNpdGlvbi4KdGhpcy53aW5kb3dHcm91cC50cmFuc2l0aW9uSGVpZ2h0PU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy53aW5kb3dHcm91cC4kZWwuY2xpZW50SGVpZ2h0KTt9dGhpcy53aW5kb3dHcm91cC50cmFuc2l0aW9uQ291bnQrKzt9LG9uVHJhbnNpdGlvbkNhbmNlbGxlZDpmdW5jdGlvbiBvblRyYW5zaXRpb25DYW5jZWxsZWQoKXt0aGlzLm9uQWZ0ZXJUcmFuc2l0aW9uKCk7Ly8gVGhpcyBzaG91bGQgaGF2ZSB0aGUgc2FtZSBwYXRoIGFzIG5vcm1hbCB0cmFuc2l0aW9uIGVuZC4KfSxvbkVudGVyOmZ1bmN0aW9uIG9uRW50ZXIoZWwpe3ZhciBfdGhpcz10aGlzO2lmKCF0aGlzLmluVHJhbnNpdGlvbil7cmV0dXJuO310aGlzLiRuZXh0VGljayhmdW5jdGlvbigpey8vIERvIG5vdCBzZXQgaGVpZ2h0IGlmIG5vIHRyYW5zaXRpb24gb3IgY2FuY2VsbGVkLgppZighX3RoaXMuY29tcHV0ZWRUcmFuc2l0aW9ufHwhX3RoaXMuaW5UcmFuc2l0aW9uKXtyZXR1cm47fS8vIFNldCB0cmFuc2l0aW9uIHRhcmdldCBoZWlnaHQuCl90aGlzLndpbmRvd0dyb3VwLnRyYW5zaXRpb25IZWlnaHQ9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siY29udmVydFRvVW5pdCJdKShlbC5jbGllbnRIZWlnaHQpO30pO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoJ3RyYW5zaXRpb24nLHtwcm9wczp7bmFtZTp0aGlzLmNvbXB1dGVkVHJhbnNpdGlvbn0sb246ey8vIEhhbmRsZXJzIGZvciBlbnRlciB3aW5kb3dzLgpiZWZvcmVFbnRlcjp0aGlzLm9uQmVmb3JlVHJhbnNpdGlvbixhZnRlckVudGVyOnRoaXMub25BZnRlclRyYW5zaXRpb24sZW50ZXJDYW5jZWxsZWQ6dGhpcy5vblRyYW5zaXRpb25DYW5jZWxsZWQsLy8gSGFuZGxlcnMgZm9yIGxlYXZlIHdpbmRvd3MuCmJlZm9yZUxlYXZlOnRoaXMub25CZWZvcmVUcmFuc2l0aW9uLGFmdGVyTGVhdmU6dGhpcy5vbkFmdGVyVHJhbnNpdGlvbixsZWF2ZUNhbmNlbGxlZDp0aGlzLm9uVHJhbnNpdGlvbkNhbmNlbGxlZCwvLyBFbnRlciBoYW5kbGVyIGZvciBoZWlnaHQgdHJhbnNpdGlvbi4KZW50ZXI6dGhpcy5vbkVudGVyfX0sW3RoaXMuZ2VuV2luZG93SXRlbSgpXSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL1ZXaW5kb3cvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL1ZXaW5kb3cvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZXaW5kb3csIFZXaW5kb3dJdGVtLCBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjQ29tcG9uZW50c1ZXaW5kb3dJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZXaW5kb3dfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZXaW5kb3cgKi8iLi9zcmMvY29tcG9uZW50cy9WV2luZG93L1ZXaW5kb3cudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWV2luZG93IixmdW5jdGlvbigpe3JldHVybiBfVldpbmRvd19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZXaW5kb3dJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WV2luZG93SXRlbSAqLyIuL3NyYy9jb21wb25lbnRzL1ZXaW5kb3cvVldpbmRvd0l0ZW0udHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWV2luZG93SXRlbSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZXaW5kb3dJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXskX3Z1ZXRpZnlfc3ViY29tcG9uZW50czp7VldpbmRvdzpfVldpbmRvd19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0sVldpbmRvd0l0ZW06X1ZXaW5kb3dJdGVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXX19Oy8qKiovfSwvKioqLyIuL3NyYy9jb21wb25lbnRzL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2NvbXBvbmVudHMvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBWQXBwLCBWQXBwQmFyLCBWQXBwQmFyTmF2SWNvbiwgVkFsZXJ0LCBWQXV0b2NvbXBsZXRlLCBWQXZhdGFyLCBWQmFkZ2UsIFZCYW5uZXIsIFZCb3R0b21OYXZpZ2F0aW9uLCBWQm90dG9tU2hlZXQsIFZCcmVhZGNydW1icywgVkJyZWFkY3J1bWJzSXRlbSwgVkJyZWFkY3J1bWJzRGl2aWRlciwgVkJ0biwgVkJ0blRvZ2dsZSwgVkNhbGVuZGFyLCBWQ2FsZW5kYXJEYWlseSwgVkNhbGVuZGFyV2Vla2x5LCBWQ2FsZW5kYXJNb250aGx5LCBWQ2FyZCwgVkNhcmRBY3Rpb25zLCBWQ2FyZFN1YnRpdGxlLCBWQ2FyZFRleHQsIFZDYXJkVGl0bGUsIFZDYXJvdXNlbCwgVkNhcm91c2VsSXRlbSwgVkNoZWNrYm94LCBWU2ltcGxlQ2hlY2tib3gsIFZDaGlwLCBWQ2hpcEdyb3VwLCBWQ29sb3JQaWNrZXIsIFZDb2xvclBpY2tlclN3YXRjaGVzLCBWQ29sb3JQaWNrZXJDYW52YXMsIFZDb250ZW50LCBWQ29tYm9ib3gsIFZDb3VudGVyLCBWRGF0YSwgVkRhdGFJdGVyYXRvciwgVkRhdGFGb290ZXIsIFZEYXRhVGFibGUsIFZFZGl0RGlhbG9nLCBWVGFibGVPdmVyZmxvdywgVkRhdGFUYWJsZUhlYWRlciwgVlNpbXBsZVRhYmxlLCBWVmlydHVhbFRhYmxlLCBWRGF0ZVBpY2tlciwgVkRhdGVQaWNrZXJUaXRsZSwgVkRhdGVQaWNrZXJIZWFkZXIsIFZEYXRlUGlja2VyRGF0ZVRhYmxlLCBWRGF0ZVBpY2tlck1vbnRoVGFibGUsIFZEYXRlUGlja2VyWWVhcnMsIFZEaWFsb2csIFZEaXZpZGVyLCBWRXhwYW5zaW9uUGFuZWxzLCBWRXhwYW5zaW9uUGFuZWwsIFZFeHBhbnNpb25QYW5lbEhlYWRlciwgVkV4cGFuc2lvblBhbmVsQ29udGVudCwgVkZpbGVJbnB1dCwgVkZvb3RlciwgVkZvcm0sIFZDb250YWluZXIsIFZDb2wsIFZSb3csIFZTcGFjZXIsIFZMYXlvdXQsIFZGbGV4LCBWSG92ZXIsIFZJY29uLCBWSW1nLCBWSW5wdXQsIFZJdGVtLCBWSXRlbUdyb3VwLCBWTGFiZWwsIFZMYXp5LCBWTGlzdEl0ZW1BY3Rpb25UZXh0LCBWTGlzdEl0ZW1Db250ZW50LCBWTGlzdEl0ZW1UaXRsZSwgVkxpc3RJdGVtU3VidGl0bGUsIFZMaXN0LCBWTGlzdEdyb3VwLCBWTGlzdEl0ZW0sIFZMaXN0SXRlbUFjdGlvbiwgVkxpc3RJdGVtQXZhdGFyLCBWTGlzdEl0ZW1JY29uLCBWTGlzdEl0ZW1Hcm91cCwgVk1lbnUsIFZNZXNzYWdlcywgVk5hdmlnYXRpb25EcmF3ZXIsIFZPdmVyZmxvd0J0biwgVk92ZXJsYXksIFZQYWdpbmF0aW9uLCBWU2hlZXQsIFZQYXJhbGxheCwgVlBpY2tlciwgVlByb2dyZXNzQ2lyY3VsYXIsIFZQcm9ncmVzc0xpbmVhciwgVlJhZGlvR3JvdXAsIFZSYWRpbywgVlJhbmdlU2xpZGVyLCBWUmF0aW5nLCBWUmVzcG9uc2l2ZSwgVlNlbGVjdCwgVlNrZWxldG9uTG9hZGVyLCBWU2xpZGVyLCBWU2xpZGVHcm91cCwgVlNsaWRlSXRlbSwgVlNuYWNrYmFyLCBWU3BhcmtsaW5lLCBWU3BlZWREaWFsLCBWU3RlcHBlciwgVlN0ZXBwZXJDb250ZW50LCBWU3RlcHBlclN0ZXAsIFZTdGVwcGVySGVhZGVyLCBWU3RlcHBlckl0ZW1zLCBWU3ViaGVhZGVyLCBWU3dpdGNoLCBWU3lzdGVtQmFyLCBWVGFicywgVlRhYiwgVlRhYkl0ZW0sIFZUYWJzSXRlbXMsIFZUYWJzU2xpZGVyLCBWVGV4dGFyZWEsIFZUZXh0RmllbGQsIFZUaW1lbGluZSwgVlRpbWVsaW5lSXRlbSwgVlRpbWVQaWNrZXIsIFZUaW1lUGlja2VyQ2xvY2ssIFZUaW1lUGlja2VyVGl0bGUsIFZUb29sYmFyLCBWVG9vbGJhckl0ZW1zLCBWVG9vbGJhclRpdGxlLCBWVG9vbHRpcCwgVlRyZWV2aWV3LCBWVHJlZXZpZXdOb2RlLCBWV2luZG93LCBWV2luZG93SXRlbSwgVkNhcm91c2VsVHJhbnNpdGlvbiwgVkNhcm91c2VsUmV2ZXJzZVRyYW5zaXRpb24sIFZUYWJUcmFuc2l0aW9uLCBWVGFiUmV2ZXJzZVRyYW5zaXRpb24sIFZNZW51VHJhbnNpdGlvbiwgVkZhYlRyYW5zaXRpb24sIFZEaWFsb2dUcmFuc2l0aW9uLCBWRGlhbG9nQm90dG9tVHJhbnNpdGlvbiwgVkZhZGVUcmFuc2l0aW9uLCBWU2NhbGVUcmFuc2l0aW9uLCBWU2Nyb2xsWFRyYW5zaXRpb24sIFZTY3JvbGxYUmV2ZXJzZVRyYW5zaXRpb24sIFZTY3JvbGxZVHJhbnNpdGlvbiwgVlNjcm9sbFlSZXZlcnNlVHJhbnNpdGlvbiwgVlNsaWRlWFRyYW5zaXRpb24sIFZTbGlkZVhSZXZlcnNlVHJhbnNpdGlvbiwgVlNsaWRlWVRyYW5zaXRpb24sIFZTbGlkZVlSZXZlcnNlVHJhbnNpdGlvbiwgVkV4cGFuZFRyYW5zaXRpb24sIFZFeHBhbmRYVHJhbnNpdGlvbiAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZBcHBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZBcHAgKi8iLi9zcmMvY29tcG9uZW50cy9WQXBwL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkFwcCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZBcHBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siVkFwcCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXBwQmFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQXBwQmFyICovIi4vc3JjL2NvbXBvbmVudHMvVkFwcEJhci9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZBcHBCYXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQXBwQmFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bIlZBcHBCYXIiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQXBwQmFyTmF2SWNvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZBcHBCYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siVkFwcEJhck5hdkljb24iXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkFsZXJ0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQWxlcnQgKi8iLi9zcmMvY29tcG9uZW50cy9WQWxlcnQvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQWxlcnQiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQWxlcnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siVkFsZXJ0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZBdXRvY29tcGxldGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZBdXRvY29tcGxldGUgKi8iLi9zcmMvY29tcG9uZW50cy9WQXV0b2NvbXBsZXRlL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkF1dG9jb21wbGV0ZSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZBdXRvY29tcGxldGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siVkF1dG9jb21wbGV0ZSJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQXZhdGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQXZhdGFyICovIi4vc3JjL2NvbXBvbmVudHMvVkF2YXRhci9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZBdmF0YXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQXZhdGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bIlZBdmF0YXIiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJhZGdlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQmFkZ2UgKi8iLi9zcmMvY29tcG9uZW50cy9WQmFkZ2UvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQmFkZ2UiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQmFkZ2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siVkJhZGdlIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZCYW5uZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZCYW5uZXIgKi8iLi9zcmMvY29tcG9uZW50cy9WQmFubmVyL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkJhbm5lciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZCYW5uZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siVkJhbm5lciJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQm90dG9tTmF2aWdhdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkJvdHRvbU5hdmlnYXRpb24gKi8iLi9zcmMvY29tcG9uZW50cy9WQm90dG9tTmF2aWdhdGlvbi9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZCb3R0b21OYXZpZ2F0aW9uIixmdW5jdGlvbigpe3JldHVybiBfVkJvdHRvbU5hdmlnYXRpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siVkJvdHRvbU5hdmlnYXRpb24iXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkJvdHRvbVNoZWV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQm90dG9tU2hlZXQgKi8iLi9zcmMvY29tcG9uZW50cy9WQm90dG9tU2hlZXQvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQm90dG9tU2hlZXQiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQm90dG9tU2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siVkJvdHRvbVNoZWV0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZCcmVhZGNydW1ic19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkJyZWFkY3J1bWJzICovIi4vc3JjL2NvbXBvbmVudHMvVkJyZWFkY3J1bWJzL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkJyZWFkY3J1bWJzIixmdW5jdGlvbigpe3JldHVybiBfVkJyZWFkY3J1bWJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19bIlZCcmVhZGNydW1icyJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZCcmVhZGNydW1ic0l0ZW0iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQnJlYWRjcnVtYnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siVkJyZWFkY3J1bWJzSXRlbSJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZCcmVhZGNydW1ic0RpdmlkZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQnJlYWRjcnVtYnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siVkJyZWFkY3J1bWJzRGl2aWRlciJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQnRuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkJ0biAqLyIuL3NyYy9jb21wb25lbnRzL1ZCdG4vaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQnRuIixmdW5jdGlvbigpe3JldHVybiBfVkJ0bl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfX1siVkJ0biJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQnRuVG9nZ2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkJ0blRvZ2dsZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZCdG5Ub2dnbGUvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQnRuVG9nZ2xlIixmdW5jdGlvbigpe3JldHVybiBfVkJ0blRvZ2dsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfX1siVkJ0blRvZ2dsZSJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2FsZW5kYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEyX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ2FsZW5kYXIgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2FsZW5kYXIvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ2FsZW5kYXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQ2FsZW5kYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEyX19bIlZDYWxlbmRhciJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDYWxlbmRhckRhaWx5IixmdW5jdGlvbigpe3JldHVybiBfVkNhbGVuZGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fWyJWQ2FsZW5kYXJEYWlseSJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDYWxlbmRhcldlZWtseSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDYWxlbmRhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfX1siVkNhbGVuZGFyV2Vla2x5Il07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNhbGVuZGFyTW9udGhseSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDYWxlbmRhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfX1siVkNhbGVuZGFyTW9udGhseSJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2FyZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDYXJkICovIi4vc3JjL2NvbXBvbmVudHMvVkNhcmQvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ2FyZCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDYXJkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJWQ2FyZCJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDYXJkQWN0aW9ucyIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDYXJkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJWQ2FyZEFjdGlvbnMiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ2FyZFN1YnRpdGxlIixmdW5jdGlvbigpe3JldHVybiBfVkNhcmRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEzX19bIlZDYXJkU3VidGl0bGUiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ2FyZFRleHQiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQ2FyZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfX1siVkNhcmRUZXh0Il07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNhcmRUaXRsZSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDYXJkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJWQ2FyZFRpdGxlIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDYXJvdXNlbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDYXJvdXNlbCAqLyIuL3NyYy9jb21wb25lbnRzL1ZDYXJvdXNlbC9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDYXJvdXNlbCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDYXJvdXNlbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTRfX1siVkNhcm91c2VsIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNhcm91c2VsSXRlbSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDYXJvdXNlbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTRfX1siVkNhcm91c2VsSXRlbSJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WQ2hlY2tib3hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE1X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ2hlY2tib3ggKi8iLi9zcmMvY29tcG9uZW50cy9WQ2hlY2tib3gvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ2hlY2tib3giLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQ2hlY2tib3hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE1X19bIlZDaGVja2JveCJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTaW1wbGVDaGVja2JveCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDaGVja2JveF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTVfX1siVlNpbXBsZUNoZWNrYm94Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDaGlwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNoaXAgKi8iLi9zcmMvY29tcG9uZW50cy9WQ2hpcC9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDaGlwIixmdW5jdGlvbigpe3JldHVybiBfVkNoaXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE2X19bIlZDaGlwIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDaGlwR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE3X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ2hpcEdyb3VwICovIi4vc3JjL2NvbXBvbmVudHMvVkNoaXBHcm91cC9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDaGlwR3JvdXAiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQ2hpcEdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xN19fWyJWQ2hpcEdyb3VwIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZDb2xvclBpY2tlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMThfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZDb2xvclBpY2tlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZDb2xvclBpY2tlci9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDb2xvclBpY2tlciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZDb2xvclBpY2tlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMThfX1siVkNvbG9yUGlja2VyIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNvbG9yUGlja2VyU3dhdGNoZXMiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQ29sb3JQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE4X19bIlZDb2xvclBpY2tlclN3YXRjaGVzIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNvbG9yUGlja2VyQ2FudmFzIixmdW5jdGlvbigpe3JldHVybiBfVkNvbG9yUGlja2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xOF9fWyJWQ29sb3JQaWNrZXJDYW52YXMiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNvbnRlbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE5X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ29udGVudCAqLyIuL3NyYy9jb21wb25lbnRzL1ZDb250ZW50L2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNvbnRlbnQiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQ29udGVudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTlfX1siVkNvbnRlbnQiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNvbWJvYm94X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkNvbWJvYm94ICovIi4vc3JjL2NvbXBvbmVudHMvVkNvbWJvYm94L2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNvbWJvYm94IixmdW5jdGlvbigpe3JldHVybiBfVkNvbWJvYm94X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yMF9fWyJWQ29tYm9ib3giXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkNvdW50ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzIxX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WQ291bnRlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZDb3VudGVyL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkNvdW50ZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WQ291bnRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjFfX1siVkNvdW50ZXIiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGFfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzIyX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRGF0YSAqLyIuL3NyYy9jb21wb25lbnRzL1ZEYXRhL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkRhdGEiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRGF0YV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjJfX1siVkRhdGEiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRhdGFJdGVyYXRvcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEYXRhSXRlcmF0b3IgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0YUl0ZXJhdG9yL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkRhdGFJdGVyYXRvciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZEYXRhSXRlcmF0b3JfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzIzX19bIlZEYXRhSXRlcmF0b3IiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRGF0YUZvb3RlciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZEYXRhSXRlcmF0b3JfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzIzX19bIlZEYXRhRm9vdGVyIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEYXRhVGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI0X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRGF0YVRhYmxlICovIi4vc3JjL2NvbXBvbmVudHMvVkRhdGFUYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZEYXRhVGFibGUiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRGF0YVRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yNF9fWyJWRGF0YVRhYmxlIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkVkaXREaWFsb2ciLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRGF0YVRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yNF9fWyJWRWRpdERpYWxvZyJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZUYWJsZU92ZXJmbG93IixmdW5jdGlvbigpe3JldHVybiBfVkRhdGFUYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjRfX1siVlRhYmxlT3ZlcmZsb3ciXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRGF0YVRhYmxlSGVhZGVyIixmdW5jdGlvbigpe3JldHVybiBfVkRhdGFUYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjRfX1siVkRhdGFUYWJsZUhlYWRlciJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTaW1wbGVUYWJsZSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZEYXRhVGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI0X19bIlZTaW1wbGVUYWJsZSJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZWaXJ0dWFsVGFibGUiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRGF0YVRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yNF9fWyJWVmlydHVhbFRhYmxlIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZEYXRlUGlja2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yNV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkRhdGVQaWNrZXIgKi8iLi9zcmMvY29tcG9uZW50cy9WRGF0ZVBpY2tlci9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZEYXRlUGlja2VyIixmdW5jdGlvbigpe3JldHVybiBfVkRhdGVQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI1X19bIlZEYXRlUGlja2VyIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkRhdGVQaWNrZXJUaXRsZSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZEYXRlUGlja2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yNV9fWyJWRGF0ZVBpY2tlclRpdGxlIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkRhdGVQaWNrZXJIZWFkZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRGF0ZVBpY2tlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjVfX1siVkRhdGVQaWNrZXJIZWFkZXIiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRGF0ZVBpY2tlckRhdGVUYWJsZSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZEYXRlUGlja2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yNV9fWyJWRGF0ZVBpY2tlckRhdGVUYWJsZSJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZEYXRlUGlja2VyTW9udGhUYWJsZSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZEYXRlUGlja2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yNV9fWyJWRGF0ZVBpY2tlck1vbnRoVGFibGUiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRGF0ZVBpY2tlclllYXJzIixmdW5jdGlvbigpe3JldHVybiBfVkRhdGVQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI1X19bIlZEYXRlUGlja2VyWWVhcnMiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRpYWxvZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZEaWFsb2cgKi8iLi9zcmMvY29tcG9uZW50cy9WRGlhbG9nL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkRpYWxvZyIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZEaWFsb2dfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI2X19bIlZEaWFsb2ciXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkRpdmlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI3X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRGl2aWRlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZEaXZpZGVyL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkRpdmlkZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRGl2aWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjdfX1siVkRpdmlkZXIiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVkV4cGFuc2lvblBhbmVsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yOF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkV4cGFuc2lvblBhbmVsICovIi4vc3JjL2NvbXBvbmVudHMvVkV4cGFuc2lvblBhbmVsL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkV4cGFuc2lvblBhbmVscyIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZFeHBhbnNpb25QYW5lbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjhfX1siVkV4cGFuc2lvblBhbmVscyJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZFeHBhbnNpb25QYW5lbCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZFeHBhbnNpb25QYW5lbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjhfX1siVkV4cGFuc2lvblBhbmVsIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkV4cGFuc2lvblBhbmVsSGVhZGVyIixmdW5jdGlvbigpe3JldHVybiBfVkV4cGFuc2lvblBhbmVsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yOF9fWyJWRXhwYW5zaW9uUGFuZWxIZWFkZXIiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRXhwYW5zaW9uUGFuZWxDb250ZW50IixmdW5jdGlvbigpe3JldHVybiBfVkV4cGFuc2lvblBhbmVsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yOF9fWyJWRXhwYW5zaW9uUGFuZWxDb250ZW50Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZGaWxlSW5wdXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI5X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRmlsZUlucHV0ICovIi4vc3JjL2NvbXBvbmVudHMvVkZpbGVJbnB1dC9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZGaWxlSW5wdXQiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRmlsZUlucHV0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yOV9fWyJWRmlsZUlucHV0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZGb290ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzMwX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WRm9vdGVyICovIi4vc3JjL2NvbXBvbmVudHMvVkZvb3Rlci9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZGb290ZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WRm9vdGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zMF9fWyJWRm9vdGVyIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZGb3JtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkZvcm0gKi8iLi9zcmMvY29tcG9uZW50cy9WRm9ybS9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZGb3JtIixmdW5jdGlvbigpe3JldHVybiBfVkZvcm1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzMxX19bIlZGb3JtIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZHcmlkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkdyaWQgKi8iLi9zcmMvY29tcG9uZW50cy9WR3JpZC9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDb250YWluZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WR3JpZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzJfX1siVkNvbnRhaW5lciJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDb2wiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WR3JpZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzJfX1siVkNvbCJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZSb3ciLGZ1bmN0aW9uKCl7cmV0dXJuIF9WR3JpZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzJfX1siVlJvdyJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTcGFjZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WR3JpZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzJfX1siVlNwYWNlciJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZMYXlvdXQiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WR3JpZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzJfX1siVkxheW91dCJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZGbGV4IixmdW5jdGlvbigpe3JldHVybiBfVkdyaWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzMyX19bIlZGbGV4Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZIb3Zlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZIb3ZlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZIb3Zlci9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZIb3ZlciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZIb3Zlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzNfX1siVkhvdmVyIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJY29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVkljb24gKi8iLi9zcmMvY29tcG9uZW50cy9WSWNvbi9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZJY29uIixmdW5jdGlvbigpe3JldHVybiBfVkljb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzM0X19bIlZJY29uIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJbWdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzM1X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WSW1nICovIi4vc3JjL2NvbXBvbmVudHMvVkltZy9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZJbWciLGZ1bmN0aW9uKCl7cmV0dXJuIF9WSW1nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zNV9fWyJWSW1nIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZJbnB1dCAqLyIuL3NyYy9jb21wb25lbnRzL1ZJbnB1dC9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZJbnB1dCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzZfX1siVklucHV0Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZJdGVtR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzM3X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WSXRlbUdyb3VwICovIi4vc3JjL2NvbXBvbmVudHMvVkl0ZW1Hcm91cC9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZJdGVtIixmdW5jdGlvbigpe3JldHVybiBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzdfX1siVkl0ZW0iXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWSXRlbUdyb3VwIixmdW5jdGlvbigpe3JldHVybiBfVkl0ZW1Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzdfX1siVkl0ZW1Hcm91cCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGFiZWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzM4X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WTGFiZWwgKi8iLi9zcmMvY29tcG9uZW50cy9WTGFiZWwvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGFiZWwiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WTGFiZWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzM4X19bIlZMYWJlbCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGF6eV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzlfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZMYXp5ICovIi4vc3JjL2NvbXBvbmVudHMvVkxhenkvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGF6eSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZMYXp5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zOV9fWyJWTGF6eSJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZMaXN0ICovIi4vc3JjL2NvbXBvbmVudHMvVkxpc3QvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGlzdEl0ZW1BY3Rpb25UZXh0IixmdW5jdGlvbigpe3JldHVybiBfVkxpc3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQwX19bIlZMaXN0SXRlbUFjdGlvblRleHQiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGlzdEl0ZW1Db250ZW50IixmdW5jdGlvbigpe3JldHVybiBfVkxpc3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQwX19bIlZMaXN0SXRlbUNvbnRlbnQiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGlzdEl0ZW1UaXRsZSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZMaXN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80MF9fWyJWTGlzdEl0ZW1UaXRsZSJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZMaXN0SXRlbVN1YnRpdGxlIixmdW5jdGlvbigpe3JldHVybiBfVkxpc3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQwX19bIlZMaXN0SXRlbVN1YnRpdGxlIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkxpc3QiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WTGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDBfX1siVkxpc3QiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGlzdEdyb3VwIixmdW5jdGlvbigpe3JldHVybiBfVkxpc3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQwX19bIlZMaXN0R3JvdXAiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGlzdEl0ZW0iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WTGlzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDBfX1siVkxpc3RJdGVtIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkxpc3RJdGVtQWN0aW9uIixmdW5jdGlvbigpe3JldHVybiBfVkxpc3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQwX19bIlZMaXN0SXRlbUFjdGlvbiJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZMaXN0SXRlbUF2YXRhciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZMaXN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80MF9fWyJWTGlzdEl0ZW1BdmF0YXIiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGlzdEl0ZW1JY29uIixmdW5jdGlvbigpe3JldHVybiBfVkxpc3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQwX19bIlZMaXN0SXRlbUljb24iXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTGlzdEl0ZW1Hcm91cCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZMaXN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80MF9fWyJWTGlzdEl0ZW1Hcm91cCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTWVudV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZNZW51ICovIi4vc3JjL2NvbXBvbmVudHMvVk1lbnUvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTWVudSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZNZW51X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80MV9fWyJWTWVudSJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTWVzc2FnZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQyX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WTWVzc2FnZXMgKi8iLi9zcmMvY29tcG9uZW50cy9WTWVzc2FnZXMvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTWVzc2FnZXMiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WTWVzc2FnZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQyX19bIlZNZXNzYWdlcyJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WTmF2aWdhdGlvbkRyYXdlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZOYXZpZ2F0aW9uRHJhd2VyICovIi4vc3JjL2NvbXBvbmVudHMvVk5hdmlnYXRpb25EcmF3ZXIvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWTmF2aWdhdGlvbkRyYXdlciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZOYXZpZ2F0aW9uRHJhd2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80M19fWyJWTmF2aWdhdGlvbkRyYXdlciJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WT3ZlcmZsb3dCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQ0X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WT3ZlcmZsb3dCdG4gKi8iLi9zcmMvY29tcG9uZW50cy9WT3ZlcmZsb3dCdG4vaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWT3ZlcmZsb3dCdG4iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WT3ZlcmZsb3dCdG5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQ0X19bIlZPdmVyZmxvd0J0biJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WT3ZlcmxheV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZPdmVybGF5ICovIi4vc3JjL2NvbXBvbmVudHMvVk92ZXJsYXkvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWT3ZlcmxheSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZPdmVybGF5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80NV9fWyJWT3ZlcmxheSJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WUGFnaW5hdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZQYWdpbmF0aW9uICovIi4vc3JjL2NvbXBvbmVudHMvVlBhZ2luYXRpb24vaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWUGFnaW5hdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZQYWdpbmF0aW9uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80Nl9fWyJWUGFnaW5hdGlvbiJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WU2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQ3X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU2hlZXQgKi8iLi9zcmMvY29tcG9uZW50cy9WU2hlZXQvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWU2hlZXQiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU2hlZXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQ3X19bIlZTaGVldCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WUGFyYWxsYXhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQ4X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WUGFyYWxsYXggKi8iLi9zcmMvY29tcG9uZW50cy9WUGFyYWxsYXgvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWUGFyYWxsYXgiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WUGFyYWxsYXhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQ4X19bIlZQYXJhbGxheCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WUGlja2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80OV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlBpY2tlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZQaWNrZXIvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWUGlja2VyIixmdW5jdGlvbigpe3JldHVybiBfVlBpY2tlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDlfX1siVlBpY2tlciJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WUHJvZ3Jlc3NDaXJjdWxhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNTBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZQcm9ncmVzc0NpcmN1bGFyICovIi4vc3JjL2NvbXBvbmVudHMvVlByb2dyZXNzQ2lyY3VsYXIvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWUHJvZ3Jlc3NDaXJjdWxhciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZQcm9ncmVzc0NpcmN1bGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81MF9fWyJWUHJvZ3Jlc3NDaXJjdWxhciJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WUHJvZ3Jlc3NMaW5lYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzUxX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WUHJvZ3Jlc3NMaW5lYXIgKi8iLi9zcmMvY29tcG9uZW50cy9WUHJvZ3Jlc3NMaW5lYXIvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWUHJvZ3Jlc3NMaW5lYXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WUHJvZ3Jlc3NMaW5lYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzUxX19bIlZQcm9ncmVzc0xpbmVhciJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WUmFkaW9Hcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNTJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZSYWRpb0dyb3VwICovIi4vc3JjL2NvbXBvbmVudHMvVlJhZGlvR3JvdXAvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWUmFkaW9Hcm91cCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZSYWRpb0dyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81Ml9fWyJWUmFkaW9Hcm91cCJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZSYWRpbyIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZSYWRpb0dyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81Ml9fWyJWUmFkaW8iXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJhbmdlU2xpZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81M19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlJhbmdlU2xpZGVyICovIi4vc3JjL2NvbXBvbmVudHMvVlJhbmdlU2xpZGVyL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlJhbmdlU2xpZGVyIixmdW5jdGlvbigpe3JldHVybiBfVlJhbmdlU2xpZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81M19fWyJWUmFuZ2VTbGlkZXIiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJhdGluZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNTRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZSYXRpbmcgKi8iLi9zcmMvY29tcG9uZW50cy9WUmF0aW5nL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlJhdGluZyIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZSYXRpbmdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzU0X19bIlZSYXRpbmciXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJlc3BvbnNpdmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzU1X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WUmVzcG9uc2l2ZSAqLyIuL3NyYy9jb21wb25lbnRzL1ZSZXNwb25zaXZlL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlJlc3BvbnNpdmUiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WUmVzcG9uc2l2ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNTVfX1siVlJlc3BvbnNpdmUiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNTZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTZWxlY3QgKi8iLi9zcmMvY29tcG9uZW50cy9WU2VsZWN0L2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNlbGVjdCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZTZWxlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzU2X19bIlZTZWxlY3QiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNrZWxldG9uTG9hZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81N19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlNrZWxldG9uTG9hZGVyICovIi4vc3JjL2NvbXBvbmVudHMvVlNrZWxldG9uTG9hZGVyL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNrZWxldG9uTG9hZGVyIixmdW5jdGlvbigpe3JldHVybiBfVlNrZWxldG9uTG9hZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81N19fWyJWU2tlbGV0b25Mb2FkZXIiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNsaWRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNThfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTbGlkZXIgKi8iLi9zcmMvY29tcG9uZW50cy9WU2xpZGVyL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNsaWRlciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZTbGlkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzU4X19bIlZTbGlkZXIiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNsaWRlR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzU5X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU2xpZGVHcm91cCAqLyIuL3NyYy9jb21wb25lbnRzL1ZTbGlkZUdyb3VwL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNsaWRlR3JvdXAiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU2xpZGVHcm91cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNTlfX1siVlNsaWRlR3JvdXAiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWU2xpZGVJdGVtIixmdW5jdGlvbigpe3JldHVybiBfVlNsaWRlR3JvdXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzU5X19bIlZTbGlkZUl0ZW0iXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNuYWNrYmFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82MF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlNuYWNrYmFyICovIi4vc3JjL2NvbXBvbmVudHMvVlNuYWNrYmFyL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNuYWNrYmFyIixmdW5jdGlvbigpe3JldHVybiBfVlNuYWNrYmFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82MF9fWyJWU25hY2tiYXIiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNwYXJrbGluZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNjFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTcGFya2xpbmUgKi8iLi9zcmMvY29tcG9uZW50cy9WU3BhcmtsaW5lL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNwYXJrbGluZSIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZTcGFya2xpbmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzYxX19bIlZTcGFya2xpbmUiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlNwZWVkRGlhbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNjJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL1ZTcGVlZERpYWwgKi8iLi9zcmMvY29tcG9uZW50cy9WU3BlZWREaWFsL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNwZWVkRGlhbCIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZTcGVlZERpYWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzYyX19bIlZTcGVlZERpYWwiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlN0ZXBwZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzYzX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU3RlcHBlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZTdGVwcGVyL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlN0ZXBwZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU3RlcHBlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNjNfX1siVlN0ZXBwZXIiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWU3RlcHBlckNvbnRlbnQiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU3RlcHBlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNjNfX1siVlN0ZXBwZXJDb250ZW50Il07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlN0ZXBwZXJTdGVwIixmdW5jdGlvbigpe3JldHVybiBfVlN0ZXBwZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzYzX19bIlZTdGVwcGVyU3RlcCJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTdGVwcGVySGVhZGVyIixmdW5jdGlvbigpe3JldHVybiBfVlN0ZXBwZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzYzX19bIlZTdGVwcGVySGVhZGVyIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlN0ZXBwZXJJdGVtcyIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZTdGVwcGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82M19fWyJWU3RlcHBlckl0ZW1zIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTdWJoZWFkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzY0X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU3ViaGVhZGVyICovIi4vc3JjL2NvbXBvbmVudHMvVlN1YmhlYWRlci9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTdWJoZWFkZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU3ViaGVhZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82NF9fWyJWU3ViaGVhZGVyIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTd2l0Y2hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzY1X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU3dpdGNoICovIi4vc3JjL2NvbXBvbmVudHMvVlN3aXRjaC9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTd2l0Y2giLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU3dpdGNoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82NV9fWyJWU3dpdGNoIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZTeXN0ZW1CYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzY2X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WU3lzdGVtQmFyICovIi4vc3JjL2NvbXBvbmVudHMvVlN5c3RlbUJhci9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTeXN0ZW1CYXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WU3lzdGVtQmFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82Nl9fWyJWU3lzdGVtQmFyIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZUYWJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82N19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRhYnMgKi8iLi9zcmMvY29tcG9uZW50cy9WVGFicy9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZUYWJzIixmdW5jdGlvbigpe3JldHVybiBfVlRhYnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzY3X19bIlZUYWJzIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlRhYiIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZUYWJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82N19fWyJWVGFiIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlRhYkl0ZW0iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVGFic19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNjdfX1siVlRhYkl0ZW0iXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVGFic0l0ZW1zIixmdW5jdGlvbigpe3JldHVybiBfVlRhYnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzY3X19bIlZUYWJzSXRlbXMiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVGFic1NsaWRlciIsZnVuY3Rpb24oKXtyZXR1cm4gX1ZUYWJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82N19fWyJWVGFic1NsaWRlciJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGV4dGFyZWFfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzY4X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVGV4dGFyZWEgKi8iLi9zcmMvY29tcG9uZW50cy9WVGV4dGFyZWEvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVGV4dGFyZWEiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVGV4dGFyZWFfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzY4X19bIlZUZXh0YXJlYSJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGV4dEZpZWxkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82OV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRleHRGaWVsZCAqLyIuL3NyYy9jb21wb25lbnRzL1ZUZXh0RmllbGQvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVGV4dEZpZWxkIixmdW5jdGlvbigpe3JldHVybiBfVlRleHRGaWVsZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNjlfX1siVlRleHRGaWVsZCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9WVGltZWxpbmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzcwX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVGltZWxpbmUgKi8iLi9zcmMvY29tcG9uZW50cy9WVGltZWxpbmUvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVGltZWxpbmUiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVGltZWxpbmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzcwX19bIlZUaW1lbGluZSJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZUaW1lbGluZUl0ZW0iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVGltZWxpbmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzcwX19bIlZUaW1lbGluZUl0ZW0iXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRpbWVQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzcxX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVGltZVBpY2tlciAqLyIuL3NyYy9jb21wb25lbnRzL1ZUaW1lUGlja2VyL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlRpbWVQaWNrZXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVGltZVBpY2tlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNzFfX1siVlRpbWVQaWNrZXIiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVGltZVBpY2tlckNsb2NrIixmdW5jdGlvbigpe3JldHVybiBfVlRpbWVQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzcxX19bIlZUaW1lUGlja2VyQ2xvY2siXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVGltZVBpY2tlclRpdGxlIixmdW5jdGlvbigpe3JldHVybiBfVlRpbWVQaWNrZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzcxX19bIlZUaW1lUGlja2VyVGl0bGUiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRvb2xiYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzcyX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVG9vbGJhciAqLyIuL3NyYy9jb21wb25lbnRzL1ZUb29sYmFyL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlRvb2xiYXIiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVG9vbGJhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNzJfX1siVlRvb2xiYXIiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVG9vbGJhckl0ZW1zIixmdW5jdGlvbigpe3JldHVybiBfVlRvb2xiYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzcyX19bIlZUb29sYmFySXRlbXMiXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVG9vbGJhclRpdGxlIixmdW5jdGlvbigpe3JldHVybiBfVlRvb2xiYXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzcyX19bIlZUb29sYmFyVGl0bGUiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRvb2x0aXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzczX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WVG9vbHRpcCAqLyIuL3NyYy9jb21wb25lbnRzL1ZUb29sdGlwL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlRvb2x0aXAiLGZ1bmN0aW9uKCl7cmV0dXJuIF9WVG9vbHRpcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNzNfX1siVlRvb2x0aXAiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlRyZWV2aWV3X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83NF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vVlRyZWV2aWV3ICovIi4vc3JjL2NvbXBvbmVudHMvVlRyZWV2aWV3L2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlRyZWV2aWV3IixmdW5jdGlvbigpe3JldHVybiBfVlRyZWV2aWV3X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83NF9fWyJWVHJlZXZpZXciXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVHJlZXZpZXdOb2RlIixmdW5jdGlvbigpe3JldHVybiBfVlRyZWV2aWV3X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83NF9fWyJWVHJlZXZpZXdOb2RlIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZXaW5kb3dfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzc1X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WV2luZG93ICovIi4vc3JjL2NvbXBvbmVudHMvVldpbmRvdy9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZXaW5kb3ciLGZ1bmN0aW9uKCl7cmV0dXJuIF9WV2luZG93X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83NV9fWyJWV2luZG93Il07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVldpbmRvd0l0ZW0iLGZ1bmN0aW9uKCl7cmV0dXJuIF9WV2luZG93X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83NV9fWyJWV2luZG93SXRlbSJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF90cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3RyYW5zaXRpb25zICovIi4vc3JjL2NvbXBvbmVudHMvdHJhbnNpdGlvbnMvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ2Fyb3VzZWxUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzc2X19bIlZDYXJvdXNlbFRyYW5zaXRpb24iXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWQ2Fyb3VzZWxSZXZlcnNlVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83Nl9fWyJWQ2Fyb3VzZWxSZXZlcnNlVHJhbnNpdGlvbiJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZUYWJUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzc2X19bIlZUYWJUcmFuc2l0aW9uIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlRhYlJldmVyc2VUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzc2X19bIlZUYWJSZXZlcnNlVHJhbnNpdGlvbiJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZNZW51VHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83Nl9fWyJWTWVudVRyYW5zaXRpb24iXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRmFiVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83Nl9fWyJWRmFiVHJhbnNpdGlvbiJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZEaWFsb2dUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzc2X19bIlZEaWFsb2dUcmFuc2l0aW9uIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkRpYWxvZ0JvdHRvbVRyYW5zaXRpb24iLGZ1bmN0aW9uKCl7cmV0dXJuIF90cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNzZfX1siVkRpYWxvZ0JvdHRvbVRyYW5zaXRpb24iXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRmFkZVRyYW5zaXRpb24iLGZ1bmN0aW9uKCl7cmV0dXJuIF90cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNzZfX1siVkZhZGVUcmFuc2l0aW9uIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNjYWxlVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83Nl9fWyJWU2NhbGVUcmFuc2l0aW9uIl07fSk7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNjcm9sbFhUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzc2X19bIlZTY3JvbGxYVHJhbnNpdGlvbiJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTY3JvbGxYUmV2ZXJzZVRyYW5zaXRpb24iLGZ1bmN0aW9uKCl7cmV0dXJuIF90cmFuc2l0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNzZfX1siVlNjcm9sbFhSZXZlcnNlVHJhbnNpdGlvbiJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTY3JvbGxZVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83Nl9fWyJWU2Nyb2xsWVRyYW5zaXRpb24iXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWU2Nyb2xsWVJldmVyc2VUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBfdHJhbnNpdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzc2X19bIlZTY3JvbGxZUmV2ZXJzZVRyYW5zaXRpb24iXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWU2xpZGVYVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83Nl9fWyJWU2xpZGVYVHJhbnNpdGlvbiJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTbGlkZVhSZXZlcnNlVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83Nl9fWyJWU2xpZGVYUmV2ZXJzZVRyYW5zaXRpb24iXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWU2xpZGVZVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83Nl9fWyJWU2xpZGVZVHJhbnNpdGlvbiJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTbGlkZVlSZXZlcnNlVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83Nl9fWyJWU2xpZGVZUmV2ZXJzZVRyYW5zaXRpb24iXTt9KTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRXhwYW5kVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83Nl9fWyJWRXhwYW5kVHJhbnNpdGlvbiJdO30pOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZFeHBhbmRYVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gX3RyYW5zaXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83Nl9fWyJWRXhwYW5kWFRyYW5zaXRpb24iXTt9KTsvKioqL30sLyoqKi8iLi9zcmMvY29tcG9uZW50cy90cmFuc2l0aW9ucy9leHBhbmQtdHJhbnNpdGlvbi50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9jb21wb25lbnRzL3RyYW5zaXRpb25zL2V4cGFuZC10cmFuc2l0aW9uLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0NvbXBvbmVudHNUcmFuc2l0aW9uc0V4cGFuZFRyYW5zaXRpb25Ucyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1mdW5jdGlvbihleHBhbmRlZFBhcmVudENsYXNzLHgpe2lmKGV4cGFuZGVkUGFyZW50Q2xhc3M9PT12b2lkIDApe2V4cGFuZGVkUGFyZW50Q2xhc3M9Jyc7fWlmKHg9PT12b2lkIDApe3g9ZmFsc2U7fXZhciBzaXplUHJvcGVydHk9eD8nd2lkdGgnOidoZWlnaHQnO3ZhciBvZmZzZXRQcm9wZXJ0eT0ib2Zmc2V0IitPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJ1cHBlckZpcnN0Il0pKHNpemVQcm9wZXJ0eSk7cmV0dXJue2JlZm9yZUVudGVyOmZ1bmN0aW9uIGJlZm9yZUVudGVyKGVsKXt2YXIgX2E7ZWwuX3BhcmVudD1lbC5wYXJlbnROb2RlO2VsLl9pbml0aWFsU3R5bGU9KF9hPXt0cmFuc2l0aW9uOmVsLnN0eWxlLnRyYW5zaXRpb24sdmlzaWJpbGl0eTplbC5zdHlsZS52aXNpYmlsaXR5LG92ZXJmbG93OmVsLnN0eWxlLm92ZXJmbG93fSxfYVtzaXplUHJvcGVydHldPWVsLnN0eWxlW3NpemVQcm9wZXJ0eV0sX2EpO30sZW50ZXI6ZnVuY3Rpb24gZW50ZXIoZWwpe3ZhciBpbml0aWFsU3R5bGU9ZWwuX2luaXRpYWxTdHlsZTt2YXIgb2Zmc2V0PWVsW29mZnNldFByb3BlcnR5XSsicHgiO2VsLnN0eWxlLnNldFByb3BlcnR5KCd0cmFuc2l0aW9uJywnbm9uZScsJ2ltcG9ydGFudCcpO2VsLnN0eWxlLnZpc2liaWxpdHk9J2hpZGRlbic7ZWwuc3R5bGUudmlzaWJpbGl0eT1pbml0aWFsU3R5bGUudmlzaWJpbGl0eTtlbC5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJztlbC5zdHlsZVtzaXplUHJvcGVydHldPScwJzt2b2lkIGVsLm9mZnNldEhlaWdodDsvLyBmb3JjZSByZWZsb3cKZWwuc3R5bGUudHJhbnNpdGlvbj1pbml0aWFsU3R5bGUudHJhbnNpdGlvbjtpZihleHBhbmRlZFBhcmVudENsYXNzJiZlbC5fcGFyZW50KXtlbC5fcGFyZW50LmNsYXNzTGlzdC5hZGQoZXhwYW5kZWRQYXJlbnRDbGFzcyk7fXJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpe2VsLnN0eWxlW3NpemVQcm9wZXJ0eV09b2Zmc2V0O30pO30sYWZ0ZXJFbnRlcjpyZXNldFN0eWxlcyxlbnRlckNhbmNlbGxlZDpyZXNldFN0eWxlcyxsZWF2ZTpmdW5jdGlvbiBsZWF2ZShlbCl7dmFyIF9hO2VsLl9pbml0aWFsU3R5bGU9KF9hPXt0cmFuc2l0aW9uOicnLHZpc2liaWxpdHk6Jycsb3ZlcmZsb3c6ZWwuc3R5bGUub3ZlcmZsb3d9LF9hW3NpemVQcm9wZXJ0eV09ZWwuc3R5bGVbc2l6ZVByb3BlcnR5XSxfYSk7ZWwuc3R5bGUub3ZlcmZsb3c9J2hpZGRlbic7ZWwuc3R5bGVbc2l6ZVByb3BlcnR5XT1lbFtvZmZzZXRQcm9wZXJ0eV0rInB4Ijt2b2lkIGVsLm9mZnNldEhlaWdodDsvLyBmb3JjZSByZWZsb3cKcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCl7cmV0dXJuIGVsLnN0eWxlW3NpemVQcm9wZXJ0eV09JzAnO30pO30sYWZ0ZXJMZWF2ZTphZnRlckxlYXZlLGxlYXZlQ2FuY2VsbGVkOmFmdGVyTGVhdmV9O2Z1bmN0aW9uIGFmdGVyTGVhdmUoZWwpe2lmKGV4cGFuZGVkUGFyZW50Q2xhc3MmJmVsLl9wYXJlbnQpe2VsLl9wYXJlbnQuY2xhc3NMaXN0LnJlbW92ZShleHBhbmRlZFBhcmVudENsYXNzKTt9cmVzZXRTdHlsZXMoZWwpO31mdW5jdGlvbiByZXNldFN0eWxlcyhlbCl7dmFyIHNpemU9ZWwuX2luaXRpYWxTdHlsZVtzaXplUHJvcGVydHldO2VsLnN0eWxlLm92ZXJmbG93PWVsLl9pbml0aWFsU3R5bGUub3ZlcmZsb3c7aWYoc2l6ZSE9bnVsbCllbC5zdHlsZVtzaXplUHJvcGVydHldPXNpemU7ZGVsZXRlIGVsLl9pbml0aWFsU3R5bGU7fX07LyoqKi99LC8qKiovIi4vc3JjL2NvbXBvbmVudHMvdHJhbnNpdGlvbnMvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvY29tcG9uZW50cy90cmFuc2l0aW9ucy9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFZDYXJvdXNlbFRyYW5zaXRpb24sIFZDYXJvdXNlbFJldmVyc2VUcmFuc2l0aW9uLCBWVGFiVHJhbnNpdGlvbiwgVlRhYlJldmVyc2VUcmFuc2l0aW9uLCBWTWVudVRyYW5zaXRpb24sIFZGYWJUcmFuc2l0aW9uLCBWRGlhbG9nVHJhbnNpdGlvbiwgVkRpYWxvZ0JvdHRvbVRyYW5zaXRpb24sIFZGYWRlVHJhbnNpdGlvbiwgVlNjYWxlVHJhbnNpdGlvbiwgVlNjcm9sbFhUcmFuc2l0aW9uLCBWU2Nyb2xsWFJldmVyc2VUcmFuc2l0aW9uLCBWU2Nyb2xsWVRyYW5zaXRpb24sIFZTY3JvbGxZUmV2ZXJzZVRyYW5zaXRpb24sIFZTbGlkZVhUcmFuc2l0aW9uLCBWU2xpZGVYUmV2ZXJzZVRyYW5zaXRpb24sIFZTbGlkZVlUcmFuc2l0aW9uLCBWU2xpZGVZUmV2ZXJzZVRyYW5zaXRpb24sIFZFeHBhbmRUcmFuc2l0aW9uLCBWRXhwYW5kWFRyYW5zaXRpb24sIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNDb21wb25lbnRzVHJhbnNpdGlvbnNJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDYXJvdXNlbFRyYW5zaXRpb24iLGZ1bmN0aW9uKCl7cmV0dXJuIFZDYXJvdXNlbFRyYW5zaXRpb247fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZDYXJvdXNlbFJldmVyc2VUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBWQ2Fyb3VzZWxSZXZlcnNlVHJhbnNpdGlvbjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlRhYlRyYW5zaXRpb24iLGZ1bmN0aW9uKCl7cmV0dXJuIFZUYWJUcmFuc2l0aW9uO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWVGFiUmV2ZXJzZVRyYW5zaXRpb24iLGZ1bmN0aW9uKCl7cmV0dXJuIFZUYWJSZXZlcnNlVHJhbnNpdGlvbjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVk1lbnVUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBWTWVudVRyYW5zaXRpb247fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZGYWJUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBWRmFiVHJhbnNpdGlvbjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkRpYWxvZ1RyYW5zaXRpb24iLGZ1bmN0aW9uKCl7cmV0dXJuIFZEaWFsb2dUcmFuc2l0aW9uO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWRGlhbG9nQm90dG9tVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gVkRpYWxvZ0JvdHRvbVRyYW5zaXRpb247fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZGYWRlVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gVkZhZGVUcmFuc2l0aW9uO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWU2NhbGVUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBWU2NhbGVUcmFuc2l0aW9uO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJWU2Nyb2xsWFRyYW5zaXRpb24iLGZ1bmN0aW9uKCl7cmV0dXJuIFZTY3JvbGxYVHJhbnNpdGlvbjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNjcm9sbFhSZXZlcnNlVHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gVlNjcm9sbFhSZXZlcnNlVHJhbnNpdGlvbjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNjcm9sbFlUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBWU2Nyb2xsWVRyYW5zaXRpb247fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTY3JvbGxZUmV2ZXJzZVRyYW5zaXRpb24iLGZ1bmN0aW9uKCl7cmV0dXJuIFZTY3JvbGxZUmV2ZXJzZVRyYW5zaXRpb247fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTbGlkZVhUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBWU2xpZGVYVHJhbnNpdGlvbjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNsaWRlWFJldmVyc2VUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBWU2xpZGVYUmV2ZXJzZVRyYW5zaXRpb247fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZTbGlkZVlUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBWU2xpZGVZVHJhbnNpdGlvbjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVlNsaWRlWVJldmVyc2VUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBWU2xpZGVZUmV2ZXJzZVRyYW5zaXRpb247fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlZFeHBhbmRUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBWRXhwYW5kVHJhbnNpdGlvbjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVkV4cGFuZFhUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBWRXhwYW5kWFRyYW5zaXRpb247fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZXhwYW5kX3RyYW5zaXRpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2V4cGFuZC10cmFuc2l0aW9uICovIi4vc3JjL2NvbXBvbmVudHMvdHJhbnNpdGlvbnMvZXhwYW5kLXRyYW5zaXRpb24udHMiKTsvLyBDb21wb25lbnQgc3BlY2lmaWMgdHJhbnNpdGlvbnMKdmFyIFZDYXJvdXNlbFRyYW5zaXRpb249T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siY3JlYXRlU2ltcGxlVHJhbnNpdGlvbiJdKSgnY2Fyb3VzZWwtdHJhbnNpdGlvbicpO3ZhciBWQ2Fyb3VzZWxSZXZlcnNlVHJhbnNpdGlvbj1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjcmVhdGVTaW1wbGVUcmFuc2l0aW9uIl0pKCdjYXJvdXNlbC1yZXZlcnNlLXRyYW5zaXRpb24nKTt2YXIgVlRhYlRyYW5zaXRpb249T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siY3JlYXRlU2ltcGxlVHJhbnNpdGlvbiJdKSgndGFiLXRyYW5zaXRpb24nKTt2YXIgVlRhYlJldmVyc2VUcmFuc2l0aW9uPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNyZWF0ZVNpbXBsZVRyYW5zaXRpb24iXSkoJ3RhYi1yZXZlcnNlLXRyYW5zaXRpb24nKTt2YXIgVk1lbnVUcmFuc2l0aW9uPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNyZWF0ZVNpbXBsZVRyYW5zaXRpb24iXSkoJ21lbnUtdHJhbnNpdGlvbicpO3ZhciBWRmFiVHJhbnNpdGlvbj1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjcmVhdGVTaW1wbGVUcmFuc2l0aW9uIl0pKCdmYWItdHJhbnNpdGlvbicsJ2NlbnRlciBjZW50ZXInLCdvdXQtaW4nKTsvLyBHZW5lcmljIHRyYW5zaXRpb25zCnZhciBWRGlhbG9nVHJhbnNpdGlvbj1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjcmVhdGVTaW1wbGVUcmFuc2l0aW9uIl0pKCdkaWFsb2ctdHJhbnNpdGlvbicpO3ZhciBWRGlhbG9nQm90dG9tVHJhbnNpdGlvbj1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjcmVhdGVTaW1wbGVUcmFuc2l0aW9uIl0pKCdkaWFsb2ctYm90dG9tLXRyYW5zaXRpb24nKTt2YXIgVkZhZGVUcmFuc2l0aW9uPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNyZWF0ZVNpbXBsZVRyYW5zaXRpb24iXSkoJ2ZhZGUtdHJhbnNpdGlvbicpO3ZhciBWU2NhbGVUcmFuc2l0aW9uPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNyZWF0ZVNpbXBsZVRyYW5zaXRpb24iXSkoJ3NjYWxlLXRyYW5zaXRpb24nKTt2YXIgVlNjcm9sbFhUcmFuc2l0aW9uPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNyZWF0ZVNpbXBsZVRyYW5zaXRpb24iXSkoJ3Njcm9sbC14LXRyYW5zaXRpb24nKTt2YXIgVlNjcm9sbFhSZXZlcnNlVHJhbnNpdGlvbj1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjcmVhdGVTaW1wbGVUcmFuc2l0aW9uIl0pKCdzY3JvbGwteC1yZXZlcnNlLXRyYW5zaXRpb24nKTt2YXIgVlNjcm9sbFlUcmFuc2l0aW9uPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNyZWF0ZVNpbXBsZVRyYW5zaXRpb24iXSkoJ3Njcm9sbC15LXRyYW5zaXRpb24nKTt2YXIgVlNjcm9sbFlSZXZlcnNlVHJhbnNpdGlvbj1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjcmVhdGVTaW1wbGVUcmFuc2l0aW9uIl0pKCdzY3JvbGwteS1yZXZlcnNlLXRyYW5zaXRpb24nKTt2YXIgVlNsaWRlWFRyYW5zaXRpb249T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siY3JlYXRlU2ltcGxlVHJhbnNpdGlvbiJdKSgnc2xpZGUteC10cmFuc2l0aW9uJyk7dmFyIFZTbGlkZVhSZXZlcnNlVHJhbnNpdGlvbj1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjcmVhdGVTaW1wbGVUcmFuc2l0aW9uIl0pKCdzbGlkZS14LXJldmVyc2UtdHJhbnNpdGlvbicpO3ZhciBWU2xpZGVZVHJhbnNpdGlvbj1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjcmVhdGVTaW1wbGVUcmFuc2l0aW9uIl0pKCdzbGlkZS15LXRyYW5zaXRpb24nKTt2YXIgVlNsaWRlWVJldmVyc2VUcmFuc2l0aW9uPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNyZWF0ZVNpbXBsZVRyYW5zaXRpb24iXSkoJ3NsaWRlLXktcmV2ZXJzZS10cmFuc2l0aW9uJyk7Ly8gSmF2YVNjcmlwdCB0cmFuc2l0aW9ucwp2YXIgVkV4cGFuZFRyYW5zaXRpb249T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siY3JlYXRlSmF2YVNjcmlwdFRyYW5zaXRpb24iXSkoJ2V4cGFuZC10cmFuc2l0aW9uJyxPYmplY3QoX2V4cGFuZF90cmFuc2l0aW9uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkoKSk7dmFyIFZFeHBhbmRYVHJhbnNpdGlvbj1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjcmVhdGVKYXZhU2NyaXB0VHJhbnNpdGlvbiJdKSgnZXhwYW5kLXgtdHJhbnNpdGlvbicsT2JqZWN0KF9leHBhbmRfdHJhbnNpdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0pKCcnLHRydWUpKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXskX3Z1ZXRpZnlfc3ViY29tcG9uZW50czp7VkNhcm91c2VsVHJhbnNpdGlvbjpWQ2Fyb3VzZWxUcmFuc2l0aW9uLFZDYXJvdXNlbFJldmVyc2VUcmFuc2l0aW9uOlZDYXJvdXNlbFJldmVyc2VUcmFuc2l0aW9uLFZEaWFsb2dUcmFuc2l0aW9uOlZEaWFsb2dUcmFuc2l0aW9uLFZEaWFsb2dCb3R0b21UcmFuc2l0aW9uOlZEaWFsb2dCb3R0b21UcmFuc2l0aW9uLFZGYWJUcmFuc2l0aW9uOlZGYWJUcmFuc2l0aW9uLFZGYWRlVHJhbnNpdGlvbjpWRmFkZVRyYW5zaXRpb24sVk1lbnVUcmFuc2l0aW9uOlZNZW51VHJhbnNpdGlvbixWU2NhbGVUcmFuc2l0aW9uOlZTY2FsZVRyYW5zaXRpb24sVlNjcm9sbFhUcmFuc2l0aW9uOlZTY3JvbGxYVHJhbnNpdGlvbixWU2Nyb2xsWFJldmVyc2VUcmFuc2l0aW9uOlZTY3JvbGxYUmV2ZXJzZVRyYW5zaXRpb24sVlNjcm9sbFlUcmFuc2l0aW9uOlZTY3JvbGxZVHJhbnNpdGlvbixWU2Nyb2xsWVJldmVyc2VUcmFuc2l0aW9uOlZTY3JvbGxZUmV2ZXJzZVRyYW5zaXRpb24sVlNsaWRlWFRyYW5zaXRpb246VlNsaWRlWFRyYW5zaXRpb24sVlNsaWRlWFJldmVyc2VUcmFuc2l0aW9uOlZTbGlkZVhSZXZlcnNlVHJhbnNpdGlvbixWU2xpZGVZVHJhbnNpdGlvbjpWU2xpZGVZVHJhbnNpdGlvbixWU2xpZGVZUmV2ZXJzZVRyYW5zaXRpb246VlNsaWRlWVJldmVyc2VUcmFuc2l0aW9uLFZUYWJSZXZlcnNlVHJhbnNpdGlvbjpWVGFiUmV2ZXJzZVRyYW5zaXRpb24sVlRhYlRyYW5zaXRpb246VlRhYlRyYW5zaXRpb24sVkV4cGFuZFRyYW5zaXRpb246VkV4cGFuZFRyYW5zaXRpb24sVkV4cGFuZFhUcmFuc2l0aW9uOlZFeHBhbmRYVHJhbnNpdGlvbn19Oy8qKiovfSwvKioqLyIuL3NyYy9kaXJlY3RpdmVzL2NsaWNrLW91dHNpZGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9kaXJlY3RpdmVzL2NsaWNrLW91dHNpZGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IENsaWNrT3V0c2lkZSwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0RpcmVjdGl2ZXNDbGlja091dHNpZGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIkNsaWNrT3V0c2lkZSIsZnVuY3Rpb24oKXtyZXR1cm4gQ2xpY2tPdXRzaWRlO30pO2Z1bmN0aW9uIGNsb3NlQ29uZGl0aW9uYWwoKXtyZXR1cm4gZmFsc2U7fWZ1bmN0aW9uIGRpcmVjdGl2ZShlLGVsLGJpbmRpbmcpey8vIEFyZ3MgbWF5IG5vdCBhbHdheXMgYmUgc3VwcGxpZWQKYmluZGluZy5hcmdzPWJpbmRpbmcuYXJnc3x8e307Ly8gSWYgbm8gY2xvc2VDb25kaXRpb25hbCB3YXMgc3VwcGxpZWQgYXNzaWduIGEgZGVmYXVsdAp2YXIgaXNBY3RpdmU9YmluZGluZy5hcmdzLmNsb3NlQ29uZGl0aW9uYWx8fGNsb3NlQ29uZGl0aW9uYWw7Ly8gVGhlIGluY2x1ZGUgZWxlbWVudCBjYWxsYmFja3MgYmVsb3cgY2FuIGJlIGV4cGVuc2l2ZQovLyBzbyB3ZSBzaG91bGQgYXZvaWQgY2FsbGluZyB0aGVtIHdoZW4gd2UncmUgbm90IGFjdGl2ZS4KLy8gRXhwbGljaXRseSBjaGVjayBmb3IgZmFsc2UgdG8gYWxsb3cgZmFsbGJhY2sgY29tcGF0aWJpbGl0eQovLyB3aXRoIG5vbi10b2dnbGVhYmxlIGNvbXBvbmVudHMKaWYoIWV8fGlzQWN0aXZlKGUpPT09ZmFsc2UpcmV0dXJuOy8vIElmIGNsaWNrIHdhcyB0cmlnZ2VyZWQgcHJvZ3JhbW1hdGljYWx5IChkb21FbC5jbGljaygpKSB0aGVuCi8vIGl0IHNob3VsZG4ndCBiZSB0cmVhdGVkIGFzIGNsaWNrLW91dHNpZGUKLy8gQ2hyb21lL0ZpcmVmb3ggc3VwcG9ydCBpc1RydXN0ZWQgcHJvcGVydHkKLy8gSUUvRWRnZSBzdXBwb3J0IHBvaW50ZXJUeXBlIHByb3BlcnR5IChlbXB0eSBpZiBub3QgdHJpZ2dlcmVkCi8vIGJ5IHBvaW50aW5nIGRldmljZSkKaWYoJ2lzVHJ1c3RlZCdpbiBlJiYhZS5pc1RydXN0ZWR8fCdwb2ludGVyVHlwZSdpbiBlJiYhZS5wb2ludGVyVHlwZSlyZXR1cm47Ly8gQ2hlY2sgaWYgYWRkaXRpb25hbCBlbGVtZW50cyB3ZXJlIHBhc3NlZCB0byBiZSBpbmNsdWRlZCBpbiBjaGVjawovLyAoY2xpY2sgbXVzdCBiZSBvdXRzaWRlIGFsbCBpbmNsdWRlZCBlbGVtZW50cywgaWYgYW55KQp2YXIgZWxlbWVudHM9KGJpbmRpbmcuYXJncy5pbmNsdWRlfHxmdW5jdGlvbigpe3JldHVybltdO30pKCk7Ly8gQWRkIHRoZSByb290IGVsZW1lbnQgZm9yIHRoZSBjb21wb25lbnQgdGhpcyBkaXJlY3RpdmUgd2FzIGRlZmluZWQgb24KZWxlbWVudHMucHVzaChlbCk7Ly8gQ2hlY2sgaWYgaXQncyBhIGNsaWNrIG91dHNpZGUgb3VyIGVsZW1lbnRzLCBhbmQgdGhlbiBpZiBvdXIgY2FsbGJhY2sgcmV0dXJucyB0cnVlLgovLyBOb24tdG9nZ2xlYWJsZSBjb21wb25lbnRzIHNob3VsZCB0YWtlIGFjdGlvbiBpbiB0aGVpciBjYWxsYmFjayBhbmQgcmV0dXJuIGZhbHN5LgovLyBUb2dnbGVhYmxlIGNhbiByZXR1cm4gdHJ1ZSBpZiBpdCB3YW50cyB0byBkZWFjdGl2YXRlLgovLyBOb3RlIHRoYXQsIGJlY2F1c2Ugd2UncmUgaW4gdGhlIGNhcHR1cmUgcGhhc2UsIHRoaXMgY2FsbGJhY2sgd2lsbCBvY2N1ciBiZWZvcmUKLy8gdGhlIGJ1YmJsaW5nIGNsaWNrIGV2ZW50IG9uIGFueSBvdXRzaWRlIGVsZW1lbnRzLgohZWxlbWVudHMuc29tZShmdW5jdGlvbihlbCl7cmV0dXJuIGVsLmNvbnRhaW5zKGUudGFyZ2V0KTt9KSYmc2V0VGltZW91dChmdW5jdGlvbigpe2lzQWN0aXZlKGUpJiZiaW5kaW5nLnZhbHVlJiZiaW5kaW5nLnZhbHVlKGUpO30sMCk7fXZhciBDbGlja091dHNpZGU9ey8vIFtkYXRhLWFwcF0gbWF5IG5vdCBiZSBmb3VuZAovLyBpZiB1c2luZyBiaW5kLCBpbnNlcnRlZCBtYWtlcwovLyBzdXJlIHRoYXQgdGhlIHJvb3QgZWxlbWVudCBpcwovLyBhdmFpbGFibGUsIGlPUyBkb2VzIG5vdCBzdXBwb3J0Ci8vIGNsaWNrcyBvbiBib2R5Cmluc2VydGVkOmZ1bmN0aW9uIGluc2VydGVkKGVsLGJpbmRpbmcpe3ZhciBvbkNsaWNrPWZ1bmN0aW9uIG9uQ2xpY2soZSl7cmV0dXJuIGRpcmVjdGl2ZShlLGVsLGJpbmRpbmcpO307Ly8gaU9TIGRvZXMgbm90IHJlY29nbml6ZSBjbGljayBldmVudHMgb24gZG9jdW1lbnQKLy8gb3IgYm9keSwgdGhpcyBpcyB0aGUgZW50aXJlIHB1cnBvc2Ugb2YgdGhlIHYtYXBwCi8vIGNvbXBvbmVudCBhbmQgW2RhdGEtYXBwXSwgc3RvcCByZW1vdmluZyB0aGlzCnZhciBhcHA9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtYXBwXScpfHxkb2N1bWVudC5ib2R5Oy8vIFRoaXMgaXMgb25seSBmb3IgdW5pdCB0ZXN0cwphcHAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLG9uQ2xpY2ssdHJ1ZSk7ZWwuX2NsaWNrT3V0c2lkZT1vbkNsaWNrO30sdW5iaW5kOmZ1bmN0aW9uIHVuYmluZChlbCl7aWYoIWVsLl9jbGlja091dHNpZGUpcmV0dXJuO3ZhciBhcHA9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtYXBwXScpfHxkb2N1bWVudC5ib2R5Oy8vIFRoaXMgaXMgb25seSBmb3IgdW5pdCB0ZXN0cwphcHAmJmFwcC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsZWwuX2NsaWNrT3V0c2lkZSx0cnVlKTtkZWxldGUgZWwuX2NsaWNrT3V0c2lkZTt9fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPUNsaWNrT3V0c2lkZTsvKioqL30sLyoqKi8iLi9zcmMvZGlyZWN0aXZlcy9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9kaXJlY3RpdmVzL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogQ2xpY2tPdXRzaWRlLCBJbnRlcnNlY3QsIE11dGF0ZSwgUmVzaXplLCBSaXBwbGUsIFNjcm9sbCwgVG91Y2ggKi8gLyoqKi9mdW5jdGlvbiBzcmNEaXJlY3RpdmVzSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9jbGlja19vdXRzaWRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jbGljay1vdXRzaWRlICovIi4vc3JjL2RpcmVjdGl2ZXMvY2xpY2stb3V0c2lkZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIkNsaWNrT3V0c2lkZSIsZnVuY3Rpb24oKXtyZXR1cm4gX2NsaWNrX291dHNpZGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siQ2xpY2tPdXRzaWRlIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2ludGVyc2VjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaW50ZXJzZWN0ICovIi4vc3JjL2RpcmVjdGl2ZXMvaW50ZXJzZWN0L2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiSW50ZXJzZWN0IixmdW5jdGlvbigpe3JldHVybiBfaW50ZXJzZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bIkludGVyc2VjdCJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9tdXRhdGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL211dGF0ZSAqLyIuL3NyYy9kaXJlY3RpdmVzL211dGF0ZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIk11dGF0ZSIsZnVuY3Rpb24oKXtyZXR1cm4gX211dGF0ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJNdXRhdGUiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfcmVzaXplX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9yZXNpemUgKi8iLi9zcmMvZGlyZWN0aXZlcy9yZXNpemUvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJSZXNpemUiLGZ1bmN0aW9uKCl7cmV0dXJuIF9yZXNpemVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siUmVzaXplIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3JpcHBsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vcmlwcGxlICovIi4vc3JjL2RpcmVjdGl2ZXMvcmlwcGxlL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiUmlwcGxlIixmdW5jdGlvbigpe3JldHVybiBfcmlwcGxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bIlJpcHBsZSJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9zY3JvbGxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3Njcm9sbCAqLyIuL3NyYy9kaXJlY3RpdmVzL3Njcm9sbC9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlNjcm9sbCIsZnVuY3Rpb24oKXtyZXR1cm4gX3Njcm9sbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJTY3JvbGwiXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdG91Y2hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3RvdWNoICovIi4vc3JjL2RpcmVjdGl2ZXMvdG91Y2gvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJUb3VjaCIsZnVuY3Rpb24oKXtyZXR1cm4gX3RvdWNoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bIlRvdWNoIl07fSk7LyoqKi99LC8qKiovIi4vc3JjL2RpcmVjdGl2ZXMvaW50ZXJzZWN0L2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9kaXJlY3RpdmVzL2ludGVyc2VjdC9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBJbnRlcnNlY3QsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNEaXJlY3RpdmVzSW50ZXJzZWN0SW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJJbnRlcnNlY3QiLGZ1bmN0aW9uKCl7cmV0dXJuIEludGVyc2VjdDt9KTtmdW5jdGlvbiBfdHlwZW9mKG9iail7aWYodHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJl90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcik9PT0ic3ltYm9sIil7X3R5cGVvZj1mdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIF90eXBlb2YyKG9iaik7fTt9ZWxzZXtfdHlwZW9mPWZ1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gb2JqJiZ0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb2JqLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZvYmohPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOl90eXBlb2YyKG9iaik7fTt9cmV0dXJuIF90eXBlb2Yob2JqKTt9ZnVuY3Rpb24gaW5zZXJ0ZWQoZWwsYmluZGluZyl7dmFyIG1vZGlmaWVycz1iaW5kaW5nLm1vZGlmaWVyc3x8LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi97fTt2YXIgdmFsdWU9YmluZGluZy52YWx1ZTt2YXIgaXNPYmplY3Q9X3R5cGVvZih2YWx1ZSk9PT0nb2JqZWN0Jzt2YXIgY2FsbGJhY2s9aXNPYmplY3Q/dmFsdWUuaGFuZGxlcjp2YWx1ZTt2YXIgb2JzZXJ2ZXI9bmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGZ1bmN0aW9uKGVudHJpZXMsb2JzZXJ2ZXIpe2lmKGVudHJpZXM9PT12b2lkIDApe2VudHJpZXM9W107fS8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL2lmKCFlbC5fb2JzZXJ2ZSlyZXR1cm47Ly8gSnVzdCBpbiBjYXNlLCBzaG91bGQgbmV2ZXIgZmlyZQovLyBJZiBpcyBub3QgcXVpZXQgb3IgaGFzIGFscmVhZHkgYmVlbgovLyBpbml0dGVkLCBpbnZva2UgdGhlIHVzZXIgY2FsbGJhY2sKaWYoY2FsbGJhY2smJighbW9kaWZpZXJzLnF1aWV0fHxlbC5fb2JzZXJ2ZS5pbml0KSl7dmFyIGlzSW50ZXJzZWN0aW5nPUJvb2xlYW4oZW50cmllcy5maW5kKGZ1bmN0aW9uKGVudHJ5KXtyZXR1cm4gZW50cnkuaXNJbnRlcnNlY3Rpbmc7fSkpO2NhbGxiYWNrKGVudHJpZXMsb2JzZXJ2ZXIsaXNJbnRlcnNlY3RpbmcpO30vLyBJZiBoYXMgYWxyZWFkeSBiZWVuIGluaXR0ZWQgYW5kCi8vIGhhcyB0aGUgb25jZSBtb2RpZmllciwgdW5iaW5kCmlmKGVsLl9vYnNlcnZlLmluaXQmJm1vZGlmaWVycy5vbmNlKXVuYmluZChlbCk7Ly8gT3RoZXJ3aXNlLCBtYXJrIHRoZSBvYnNlcnZlciBhcyBpbml0dGVkCmVsc2UgZWwuX29ic2VydmUuaW5pdD10cnVlO30sdmFsdWUub3B0aW9uc3x8e30pO2VsLl9vYnNlcnZlPXtpbml0OmZhbHNlLG9ic2VydmVyOm9ic2VydmVyfTtvYnNlcnZlci5vYnNlcnZlKGVsKTt9ZnVuY3Rpb24gdW5iaW5kKGVsKXsvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9pZighZWwuX29ic2VydmUpcmV0dXJuO2VsLl9vYnNlcnZlLm9ic2VydmVyLnVub2JzZXJ2ZShlbCk7ZGVsZXRlIGVsLl9vYnNlcnZlO312YXIgSW50ZXJzZWN0PXtpbnNlcnRlZDppbnNlcnRlZCx1bmJpbmQ6dW5iaW5kfTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPUludGVyc2VjdDsvKioqL30sLyoqKi8iLi9zcmMvZGlyZWN0aXZlcy9tdXRhdGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2RpcmVjdGl2ZXMvbXV0YXRlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IE11dGF0ZSwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0RpcmVjdGl2ZXNNdXRhdGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIk11dGF0ZSIsZnVuY3Rpb24oKXtyZXR1cm4gTXV0YXRlO30pO2Z1bmN0aW9uIF90eXBlb2Yob2JqKXtpZih0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmX3R5cGVvZjIoU3ltYm9sLml0ZXJhdG9yKT09PSJzeW1ib2wiKXtfdHlwZW9mPWZ1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gX3R5cGVvZjIob2JqKTt9O31lbHNle190eXBlb2Y9ZnVuY3Rpb24gX3R5cGVvZihvYmope3JldHVybiBvYmomJnR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvYmouY29uc3RydWN0b3I9PT1TeW1ib2wmJm9iaiE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6X3R5cGVvZjIob2JqKTt9O31yZXR1cm4gX3R5cGVvZihvYmopO312YXIgX19yZXN0PXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fcmVzdHx8ZnVuY3Rpb24ocyxlKXt2YXIgdD17fTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkmJmUuaW5kZXhPZihwKTwwKXRbcF09c1twXTt9aWYocyE9bnVsbCYmdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM9PT0iZnVuY3Rpb24iKWZvcih2YXIgaT0wLHA9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTtpPHAubGVuZ3RoO2krKyl7aWYoZS5pbmRleE9mKHBbaV0pPDAmJk9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLHBbaV0pKXRbcFtpXV09c1twW2ldXTt9cmV0dXJuIHQ7fTtmdW5jdGlvbiBpbnNlcnRlZChlbCxiaW5kaW5nKXt2YXIgbW9kaWZpZXJzPWJpbmRpbmcubW9kaWZpZXJzfHwvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3t9O3ZhciB2YWx1ZT1iaW5kaW5nLnZhbHVlO3ZhciBpc09iamVjdD1fdHlwZW9mKHZhbHVlKT09PSdvYmplY3QnO3ZhciBjYWxsYmFjaz1pc09iamVjdD92YWx1ZS5oYW5kbGVyOnZhbHVlO3ZhciBvbmNlPW1vZGlmaWVycy5vbmNlLG1vZGlmaWVyS2V5cz1fX3Jlc3QobW9kaWZpZXJzLFsib25jZSJdKTt2YXIgaGFzTW9kaWZpZXJzPU9iamVjdC5rZXlzKG1vZGlmaWVyS2V5cykubGVuZ3RoPjA7dmFyIGhhc09wdGlvbnM9aXNPYmplY3QmJnZhbHVlLm9wdGlvbnM7Ly8gT3B0aW9ucyB0YWtlIHRvcCBwcmlvcml0eQp2YXIgb3B0aW9ucz1oYXNPcHRpb25zP3ZhbHVlLm9wdGlvbnM6aGFzTW9kaWZpZXJzLy8gSWYgd2UgaGF2ZSBtb2RpZmllcnMsIHVzZSBvbmx5IHRob3NlIHByb3ZpZGVkCj97YXR0cmlidXRlczptb2RpZmllcktleXMuYXR0cixjaGlsZExpc3Q6bW9kaWZpZXJLZXlzLmNoaWxkLHN1YnRyZWU6bW9kaWZpZXJLZXlzLnN1YixjaGFyYWN0ZXJEYXRhOm1vZGlmaWVyS2V5cy5jaGFyLy8gRGVmYXVsdHMgdG8gZXZlcnl0aGluZyBvbgp9OnthdHRyaWJ1dGVzOnRydWUsY2hpbGRMaXN0OnRydWUsc3VidHJlZTp0cnVlLGNoYXJhY3RlckRhdGE6dHJ1ZX07dmFyIG9ic2VydmVyPW5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uKG11dGF0aW9uc0xpc3Qsb2JzZXJ2ZXIpey8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL2lmKCFlbC5fbXV0YXRlKXJldHVybjsvLyBKdXN0IGluIGNhc2UsIHNob3VsZCBuZXZlciBmaXJlCmNhbGxiYWNrKG11dGF0aW9uc0xpc3Qsb2JzZXJ2ZXIpOy8vIElmIGhhcyB0aGUgb25jZSBtb2RpZmllciwgdW5iaW5kCm9uY2UmJnVuYmluZChlbCk7fSk7b2JzZXJ2ZXIub2JzZXJ2ZShlbCxvcHRpb25zKTtlbC5fbXV0YXRlPXtvYnNlcnZlcjpvYnNlcnZlcn07fWZ1bmN0aW9uIHVuYmluZChlbCl7LyogaXN0YW5idWwgaWdub3JlIGlmICovaWYoIWVsLl9tdXRhdGUpcmV0dXJuO2VsLl9tdXRhdGUub2JzZXJ2ZXIuZGlzY29ubmVjdCgpO2RlbGV0ZSBlbC5fbXV0YXRlO312YXIgTXV0YXRlPXtpbnNlcnRlZDppbnNlcnRlZCx1bmJpbmQ6dW5iaW5kfTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU11dGF0ZTsvKioqL30sLyoqKi8iLi9zcmMvZGlyZWN0aXZlcy9yZXNpemUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2RpcmVjdGl2ZXMvcmVzaXplL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFJlc2l6ZSwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0RpcmVjdGl2ZXNSZXNpemVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlJlc2l6ZSIsZnVuY3Rpb24oKXtyZXR1cm4gUmVzaXplO30pO2Z1bmN0aW9uIGluc2VydGVkKGVsLGJpbmRpbmcpe3ZhciBjYWxsYmFjaz1iaW5kaW5nLnZhbHVlO3ZhciBvcHRpb25zPWJpbmRpbmcub3B0aW9uc3x8e3Bhc3NpdmU6dHJ1ZX07d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsY2FsbGJhY2ssb3B0aW9ucyk7ZWwuX29uUmVzaXplPXtjYWxsYmFjazpjYWxsYmFjayxvcHRpb25zOm9wdGlvbnN9O2lmKCFiaW5kaW5nLm1vZGlmaWVyc3x8IWJpbmRpbmcubW9kaWZpZXJzLnF1aWV0KXtjYWxsYmFjaygpO319ZnVuY3Rpb24gdW5iaW5kKGVsKXtpZighZWwuX29uUmVzaXplKXJldHVybjt2YXIgX2E9ZWwuX29uUmVzaXplLGNhbGxiYWNrPV9hLmNhbGxiYWNrLG9wdGlvbnM9X2Eub3B0aW9uczt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJyxjYWxsYmFjayxvcHRpb25zKTtkZWxldGUgZWwuX29uUmVzaXplO312YXIgUmVzaXplPXtpbnNlcnRlZDppbnNlcnRlZCx1bmJpbmQ6dW5iaW5kfTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPVJlc2l6ZTsvKioqL30sLyoqKi8iLi9zcmMvZGlyZWN0aXZlcy9yaXBwbGUvVlJpcHBsZS5zYXNzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvZGlyZWN0aXZlcy9yaXBwbGUvVlJpcHBsZS5zYXNzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHNyY0RpcmVjdGl2ZXNSaXBwbGVWUmlwcGxlU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL2RpcmVjdGl2ZXMvcmlwcGxlL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9kaXJlY3RpdmVzL3JpcHBsZS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBSaXBwbGUsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNEaXJlY3RpdmVzUmlwcGxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJSaXBwbGUiLGZ1bmN0aW9uKCl7cmV0dXJuIFJpcHBsZTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfVlJpcHBsZV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9WUmlwcGxlLnNhc3MgKi8iLi9zcmMvZGlyZWN0aXZlcy9yaXBwbGUvVlJpcHBsZS5zYXNzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX1ZSaXBwbGVfc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfVlJpcHBsZV9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9O3ZhciBfX3NwcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3NwcmVhZHx8ZnVuY3Rpb24oKXtmb3IodmFyIGFyPVtdLGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXthcj1hci5jb25jYXQoX19yZWFkKGFyZ3VtZW50c1tpXSkpO31yZXR1cm4gYXI7fTsvLyBTdHlsZXMKZnVuY3Rpb24gdHJhbnNmb3JtKGVsLHZhbHVlKXtlbC5zdHlsZVsndHJhbnNmb3JtJ109dmFsdWU7ZWwuc3R5bGVbJ3dlYmtpdFRyYW5zZm9ybSddPXZhbHVlO31mdW5jdGlvbiBvcGFjaXR5KGVsLHZhbHVlKXtlbC5zdHlsZVsnb3BhY2l0eSddPXZhbHVlLnRvU3RyaW5nKCk7fWZ1bmN0aW9uIGlzVG91Y2hFdmVudChlKXtyZXR1cm4gZS5jb25zdHJ1Y3Rvci5uYW1lPT09J1RvdWNoRXZlbnQnO312YXIgY2FsY3VsYXRlPWZ1bmN0aW9uIGNhbGN1bGF0ZShlLGVsLHZhbHVlKXtpZih2YWx1ZT09PXZvaWQgMCl7dmFsdWU9e307fXZhciBvZmZzZXQ9ZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7dmFyIHRhcmdldD1pc1RvdWNoRXZlbnQoZSk/ZS50b3VjaGVzW2UudG91Y2hlcy5sZW5ndGgtMV06ZTt2YXIgbG9jYWxYPXRhcmdldC5jbGllbnRYLW9mZnNldC5sZWZ0O3ZhciBsb2NhbFk9dGFyZ2V0LmNsaWVudFktb2Zmc2V0LnRvcDt2YXIgcmFkaXVzPTA7dmFyIHNjYWxlPTAuMztpZihlbC5fcmlwcGxlJiZlbC5fcmlwcGxlLmNpcmNsZSl7c2NhbGU9MC4xNTtyYWRpdXM9ZWwuY2xpZW50V2lkdGgvMjtyYWRpdXM9dmFsdWUuY2VudGVyP3JhZGl1czpyYWRpdXMrTWF0aC5zcXJ0KE1hdGgucG93KGxvY2FsWC1yYWRpdXMsMikrTWF0aC5wb3cobG9jYWxZLXJhZGl1cywyKSkvNDt9ZWxzZXtyYWRpdXM9TWF0aC5zcXJ0KE1hdGgucG93KGVsLmNsaWVudFdpZHRoLDIpK01hdGgucG93KGVsLmNsaWVudEhlaWdodCwyKSkvMjt9dmFyIGNlbnRlclg9KGVsLmNsaWVudFdpZHRoLXJhZGl1cyoyKS8yKyJweCI7dmFyIGNlbnRlclk9KGVsLmNsaWVudEhlaWdodC1yYWRpdXMqMikvMisicHgiO3ZhciB4PXZhbHVlLmNlbnRlcj9jZW50ZXJYOmxvY2FsWC1yYWRpdXMrInB4Ijt2YXIgeT12YWx1ZS5jZW50ZXI/Y2VudGVyWTpsb2NhbFktcmFkaXVzKyJweCI7cmV0dXJue3JhZGl1czpyYWRpdXMsc2NhbGU6c2NhbGUseDp4LHk6eSxjZW50ZXJYOmNlbnRlclgsY2VudGVyWTpjZW50ZXJZfTt9O3ZhciByaXBwbGVzPXsvKiBlc2xpbnQtZGlzYWJsZSBtYXgtc3RhdGVtZW50cyAqL3Nob3c6ZnVuY3Rpb24gc2hvdyhlLGVsLHZhbHVlKXtpZih2YWx1ZT09PXZvaWQgMCl7dmFsdWU9e307fWlmKCFlbC5fcmlwcGxlfHwhZWwuX3JpcHBsZS5lbmFibGVkKXtyZXR1cm47fXZhciBjb250YWluZXI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO3ZhciBhbmltYXRpb249ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO2NvbnRhaW5lci5hcHBlbmRDaGlsZChhbmltYXRpb24pO2NvbnRhaW5lci5jbGFzc05hbWU9J3YtcmlwcGxlX19jb250YWluZXInO2lmKHZhbHVlLmNsYXNzKXtjb250YWluZXIuY2xhc3NOYW1lKz0iICIrdmFsdWUuY2xhc3M7fXZhciBfYT1jYWxjdWxhdGUoZSxlbCx2YWx1ZSkscmFkaXVzPV9hLnJhZGl1cyxzY2FsZT1fYS5zY2FsZSx4PV9hLngseT1fYS55LGNlbnRlclg9X2EuY2VudGVyWCxjZW50ZXJZPV9hLmNlbnRlclk7dmFyIHNpemU9cmFkaXVzKjIrInB4IjthbmltYXRpb24uY2xhc3NOYW1lPSd2LXJpcHBsZV9fYW5pbWF0aW9uJzthbmltYXRpb24uc3R5bGUud2lkdGg9c2l6ZTthbmltYXRpb24uc3R5bGUuaGVpZ2h0PXNpemU7ZWwuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTt2YXIgY29tcHV0ZWQ9d2luZG93LmdldENvbXB1dGVkU3R5bGUoZWwpO2lmKGNvbXB1dGVkJiZjb21wdXRlZC5wb3NpdGlvbj09PSdzdGF0aWMnKXtlbC5zdHlsZS5wb3NpdGlvbj0ncmVsYXRpdmUnO2VsLmRhdGFzZXQucHJldmlvdXNQb3NpdGlvbj0nc3RhdGljJzt9YW5pbWF0aW9uLmNsYXNzTGlzdC5hZGQoJ3YtcmlwcGxlX19hbmltYXRpb24tLWVudGVyJyk7YW5pbWF0aW9uLmNsYXNzTGlzdC5hZGQoJ3YtcmlwcGxlX19hbmltYXRpb24tLXZpc2libGUnKTt0cmFuc2Zvcm0oYW5pbWF0aW9uLCJ0cmFuc2xhdGUoIit4KyIsICIreSsiKSBzY2FsZTNkKCIrc2NhbGUrIiwiK3NjYWxlKyIsIitzY2FsZSsiKSIpO29wYWNpdHkoYW5pbWF0aW9uLDApO2FuaW1hdGlvbi5kYXRhc2V0LmFjdGl2YXRlZD1TdHJpbmcocGVyZm9ybWFuY2Uubm93KCkpO3NldFRpbWVvdXQoZnVuY3Rpb24oKXthbmltYXRpb24uY2xhc3NMaXN0LnJlbW92ZSgndi1yaXBwbGVfX2FuaW1hdGlvbi0tZW50ZXInKTthbmltYXRpb24uY2xhc3NMaXN0LmFkZCgndi1yaXBwbGVfX2FuaW1hdGlvbi0taW4nKTt0cmFuc2Zvcm0oYW5pbWF0aW9uLCJ0cmFuc2xhdGUoIitjZW50ZXJYKyIsICIrY2VudGVyWSsiKSBzY2FsZTNkKDEsMSwxKSIpO29wYWNpdHkoYW5pbWF0aW9uLDAuMjUpO30sMCk7fSxoaWRlOmZ1bmN0aW9uIGhpZGUoZWwpe2lmKCFlbHx8IWVsLl9yaXBwbGV8fCFlbC5fcmlwcGxlLmVuYWJsZWQpcmV0dXJuO3ZhciByaXBwbGVzPWVsLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3YtcmlwcGxlX19hbmltYXRpb24nKTtpZihyaXBwbGVzLmxlbmd0aD09PTApcmV0dXJuO3ZhciBhbmltYXRpb249cmlwcGxlc1tyaXBwbGVzLmxlbmd0aC0xXTtpZihhbmltYXRpb24uZGF0YXNldC5pc0hpZGluZylyZXR1cm47ZWxzZSBhbmltYXRpb24uZGF0YXNldC5pc0hpZGluZz0ndHJ1ZSc7dmFyIGRpZmY9cGVyZm9ybWFuY2Uubm93KCktTnVtYmVyKGFuaW1hdGlvbi5kYXRhc2V0LmFjdGl2YXRlZCk7dmFyIGRlbGF5PU1hdGgubWF4KDI1MC1kaWZmLDApO3NldFRpbWVvdXQoZnVuY3Rpb24oKXthbmltYXRpb24uY2xhc3NMaXN0LnJlbW92ZSgndi1yaXBwbGVfX2FuaW1hdGlvbi0taW4nKTthbmltYXRpb24uY2xhc3NMaXN0LmFkZCgndi1yaXBwbGVfX2FuaW1hdGlvbi0tb3V0Jyk7b3BhY2l0eShhbmltYXRpb24sMCk7c2V0VGltZW91dChmdW5jdGlvbigpe3ZhciByaXBwbGVzPWVsLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3YtcmlwcGxlX19hbmltYXRpb24nKTtpZihyaXBwbGVzLmxlbmd0aD09PTEmJmVsLmRhdGFzZXQucHJldmlvdXNQb3NpdGlvbil7ZWwuc3R5bGUucG9zaXRpb249ZWwuZGF0YXNldC5wcmV2aW91c1Bvc2l0aW9uO2RlbGV0ZSBlbC5kYXRhc2V0LnByZXZpb3VzUG9zaXRpb247fWFuaW1hdGlvbi5wYXJlbnROb2RlJiZlbC5yZW1vdmVDaGlsZChhbmltYXRpb24ucGFyZW50Tm9kZSk7fSwzMDApO30sZGVsYXkpO319O2Z1bmN0aW9uIGlzUmlwcGxlRW5hYmxlZCh2YWx1ZSl7cmV0dXJuIHR5cGVvZiB2YWx1ZT09PSd1bmRlZmluZWQnfHwhIXZhbHVlO31mdW5jdGlvbiByaXBwbGVTaG93KGUpe3ZhciB2YWx1ZT17fTt2YXIgZWxlbWVudD1lLmN1cnJlbnRUYXJnZXQ7aWYoIWVsZW1lbnR8fCFlbGVtZW50Ll9yaXBwbGV8fGVsZW1lbnQuX3JpcHBsZS50b3VjaGVkKXJldHVybjtpZihpc1RvdWNoRXZlbnQoZSkpe2VsZW1lbnQuX3JpcHBsZS50b3VjaGVkPXRydWU7ZWxlbWVudC5fcmlwcGxlLmlzVG91Y2g9dHJ1ZTt9ZWxzZXsvLyBJdCdzIHBvc3NpYmxlIGZvciB0b3VjaCBldmVudHMgdG8gZmlyZQovLyBhcyBtb3VzZSBldmVudHMgb24gQW5kcm9pZC9pT1MsIHRoaXMKLy8gd2lsbCBza2lwIHRoZSBldmVudCBjYWxsIGlmIGl0IGhhcwovLyBhbHJlYWR5IGJlZW4gcmVnaXN0ZXJlZCBhcyB0b3VjaAppZihlbGVtZW50Ll9yaXBwbGUuaXNUb3VjaClyZXR1cm47fXZhbHVlLmNlbnRlcj1lbGVtZW50Ll9yaXBwbGUuY2VudGVyZWQ7aWYoZWxlbWVudC5fcmlwcGxlLmNsYXNzKXt2YWx1ZS5jbGFzcz1lbGVtZW50Ll9yaXBwbGUuY2xhc3M7fXJpcHBsZXMuc2hvdyhlLGVsZW1lbnQsdmFsdWUpO31mdW5jdGlvbiByaXBwbGVIaWRlKGUpe3ZhciBlbGVtZW50PWUuY3VycmVudFRhcmdldDtpZighZWxlbWVudClyZXR1cm47d2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtpZihlbGVtZW50Ll9yaXBwbGUpe2VsZW1lbnQuX3JpcHBsZS50b3VjaGVkPWZhbHNlO319KTtyaXBwbGVzLmhpZGUoZWxlbWVudCk7fWZ1bmN0aW9uIHVwZGF0ZVJpcHBsZShlbCxiaW5kaW5nLHdhc0VuYWJsZWQpe3ZhciBlbmFibGVkPWlzUmlwcGxlRW5hYmxlZChiaW5kaW5nLnZhbHVlKTtpZighZW5hYmxlZCl7cmlwcGxlcy5oaWRlKGVsKTt9ZWwuX3JpcHBsZT1lbC5fcmlwcGxlfHx7fTtlbC5fcmlwcGxlLmVuYWJsZWQ9ZW5hYmxlZDt2YXIgdmFsdWU9YmluZGluZy52YWx1ZXx8e307aWYodmFsdWUuY2VudGVyKXtlbC5fcmlwcGxlLmNlbnRlcmVkPXRydWU7fWlmKHZhbHVlLmNsYXNzKXtlbC5fcmlwcGxlLmNsYXNzPWJpbmRpbmcudmFsdWUuY2xhc3M7fWlmKHZhbHVlLmNpcmNsZSl7ZWwuX3JpcHBsZS5jaXJjbGU9dmFsdWUuY2lyY2xlO31pZihlbmFibGVkJiYhd2FzRW5hYmxlZCl7ZWwuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcscmlwcGxlU2hvdyx7cGFzc2l2ZTp0cnVlfSk7ZWwuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLHJpcHBsZUhpZGUse3Bhc3NpdmU6dHJ1ZX0pO2VsLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoY2FuY2VsJyxyaXBwbGVIaWRlKTtlbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLHJpcHBsZVNob3cpO2VsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLHJpcHBsZUhpZGUpO2VsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLHJpcHBsZUhpZGUpOy8vIEFuY2hvciB0YWdzIGNhbiBiZSBkcmFnZ2VkLCBjYXVzZXMgb3RoZXIgaGlkZXMgdG8gZmFpbCAtICMxNTM3CmVsLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcscmlwcGxlSGlkZSx7cGFzc2l2ZTp0cnVlfSk7fWVsc2UgaWYoIWVuYWJsZWQmJndhc0VuYWJsZWQpe3JlbW92ZUxpc3RlbmVycyhlbCk7fX1mdW5jdGlvbiByZW1vdmVMaXN0ZW5lcnMoZWwpe2VsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicscmlwcGxlU2hvdyk7ZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcscmlwcGxlSGlkZSk7ZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLHJpcHBsZUhpZGUpO2VsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoY2FuY2VsJyxyaXBwbGVIaWRlKTtlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJyxyaXBwbGVIaWRlKTtlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJyxyaXBwbGVIaWRlKTtlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdkcmFnc3RhcnQnLHJpcHBsZUhpZGUpO31mdW5jdGlvbiBkaXJlY3RpdmUoZWwsYmluZGluZyxub2RlKXt1cGRhdGVSaXBwbGUoZWwsYmluZGluZyxmYWxzZSk7aWYodHJ1ZSl7Ly8gd2FybiBpZiBhbiBpbmxpbmUgZWxlbWVudCBpcyB1c2VkLCB3YWl0aW5nIGZvciBlbCB0byBiZSBpbiB0aGUgRE9NIGZpcnN0Cm5vZGUuY29udGV4dCYmbm9kZS5jb250ZXh0LiRuZXh0VGljayhmdW5jdGlvbigpe3ZhciBjb21wdXRlZD13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbCk7aWYoY29tcHV0ZWQmJmNvbXB1dGVkLmRpc3BsYXk9PT0naW5saW5lJyl7dmFyIGNvbnRleHQ9bm9kZS5mbk9wdGlvbnM/W25vZGUuZm5PcHRpb25zLG5vZGUuY29udGV4dF06W25vZGUuY29tcG9uZW50SW5zdGFuY2VdO191dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siY29uc29sZVdhcm4iXS5hcHBseSh2b2lkIDAsX19zcHJlYWQoWyd2LXJpcHBsZSBjYW4gb25seSBiZSB1c2VkIG9uIGJsb2NrLWxldmVsIGVsZW1lbnRzJ10sY29udGV4dCkpO319KTt9fWZ1bmN0aW9uIHVuYmluZChlbCl7ZGVsZXRlIGVsLl9yaXBwbGU7cmVtb3ZlTGlzdGVuZXJzKGVsKTt9ZnVuY3Rpb24gdXBkYXRlKGVsLGJpbmRpbmcpe2lmKGJpbmRpbmcudmFsdWU9PT1iaW5kaW5nLm9sZFZhbHVlKXtyZXR1cm47fXZhciB3YXNFbmFibGVkPWlzUmlwcGxlRW5hYmxlZChiaW5kaW5nLm9sZFZhbHVlKTt1cGRhdGVSaXBwbGUoZWwsYmluZGluZyx3YXNFbmFibGVkKTt9dmFyIFJpcHBsZT17YmluZDpkaXJlY3RpdmUsdW5iaW5kOnVuYmluZCx1cGRhdGU6dXBkYXRlfTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPVJpcHBsZTsvKioqL30sLyoqKi8iLi9zcmMvZGlyZWN0aXZlcy9zY3JvbGwvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2RpcmVjdGl2ZXMvc2Nyb2xsL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFNjcm9sbCwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY0RpcmVjdGl2ZXNTY3JvbGxJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlNjcm9sbCIsZnVuY3Rpb24oKXtyZXR1cm4gU2Nyb2xsO30pO2Z1bmN0aW9uIGluc2VydGVkKGVsLGJpbmRpbmcpe3ZhciBjYWxsYmFjaz1iaW5kaW5nLnZhbHVlO3ZhciBvcHRpb25zPWJpbmRpbmcub3B0aW9uc3x8e3Bhc3NpdmU6dHJ1ZX07dmFyIHRhcmdldD1iaW5kaW5nLmFyZz9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGJpbmRpbmcuYXJnKTp3aW5kb3c7aWYoIXRhcmdldClyZXR1cm47dGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsY2FsbGJhY2ssb3B0aW9ucyk7ZWwuX29uU2Nyb2xsPXtjYWxsYmFjazpjYWxsYmFjayxvcHRpb25zOm9wdGlvbnMsdGFyZ2V0OnRhcmdldH07fWZ1bmN0aW9uIHVuYmluZChlbCl7aWYoIWVsLl9vblNjcm9sbClyZXR1cm47dmFyIF9hPWVsLl9vblNjcm9sbCxjYWxsYmFjaz1fYS5jYWxsYmFjayxvcHRpb25zPV9hLm9wdGlvbnMsdGFyZ2V0PV9hLnRhcmdldDt0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJyxjYWxsYmFjayxvcHRpb25zKTtkZWxldGUgZWwuX29uU2Nyb2xsO312YXIgU2Nyb2xsPXtpbnNlcnRlZDppbnNlcnRlZCx1bmJpbmQ6dW5iaW5kfTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPVNjcm9sbDsvKioqL30sLyoqKi8iLi9zcmMvZGlyZWN0aXZlcy90b3VjaC9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9kaXJlY3RpdmVzL3RvdWNoL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogVG91Y2gsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNEaXJlY3RpdmVzVG91Y2hJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlRvdWNoIixmdW5jdGlvbigpe3JldHVybiBUb3VjaDt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpO3ZhciBoYW5kbGVHZXN0dXJlPWZ1bmN0aW9uIGhhbmRsZUdlc3R1cmUod3JhcHBlcil7dmFyIHRvdWNoc3RhcnRYPXdyYXBwZXIudG91Y2hzdGFydFgsdG91Y2hlbmRYPXdyYXBwZXIudG91Y2hlbmRYLHRvdWNoc3RhcnRZPXdyYXBwZXIudG91Y2hzdGFydFksdG91Y2hlbmRZPXdyYXBwZXIudG91Y2hlbmRZO3ZhciBkaXJSYXRpbz0wLjU7dmFyIG1pbkRpc3RhbmNlPTE2O3dyYXBwZXIub2Zmc2V0WD10b3VjaGVuZFgtdG91Y2hzdGFydFg7d3JhcHBlci5vZmZzZXRZPXRvdWNoZW5kWS10b3VjaHN0YXJ0WTtpZihNYXRoLmFicyh3cmFwcGVyLm9mZnNldFkpPGRpclJhdGlvKk1hdGguYWJzKHdyYXBwZXIub2Zmc2V0WCkpe3dyYXBwZXIubGVmdCYmdG91Y2hlbmRYPHRvdWNoc3RhcnRYLW1pbkRpc3RhbmNlJiZ3cmFwcGVyLmxlZnQod3JhcHBlcik7d3JhcHBlci5yaWdodCYmdG91Y2hlbmRYPnRvdWNoc3RhcnRYK21pbkRpc3RhbmNlJiZ3cmFwcGVyLnJpZ2h0KHdyYXBwZXIpO31pZihNYXRoLmFicyh3cmFwcGVyLm9mZnNldFgpPGRpclJhdGlvKk1hdGguYWJzKHdyYXBwZXIub2Zmc2V0WSkpe3dyYXBwZXIudXAmJnRvdWNoZW5kWTx0b3VjaHN0YXJ0WS1taW5EaXN0YW5jZSYmd3JhcHBlci51cCh3cmFwcGVyKTt3cmFwcGVyLmRvd24mJnRvdWNoZW5kWT50b3VjaHN0YXJ0WSttaW5EaXN0YW5jZSYmd3JhcHBlci5kb3duKHdyYXBwZXIpO319O2Z1bmN0aW9uIF90b3VjaHN0YXJ0KGV2ZW50LHdyYXBwZXIpe3ZhciB0b3VjaD1ldmVudC5jaGFuZ2VkVG91Y2hlc1swXTt3cmFwcGVyLnRvdWNoc3RhcnRYPXRvdWNoLmNsaWVudFg7d3JhcHBlci50b3VjaHN0YXJ0WT10b3VjaC5jbGllbnRZO3dyYXBwZXIuc3RhcnQmJndyYXBwZXIuc3RhcnQoT2JqZWN0LmFzc2lnbihldmVudCx3cmFwcGVyKSk7fWZ1bmN0aW9uIF90b3VjaGVuZChldmVudCx3cmFwcGVyKXt2YXIgdG91Y2g9ZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF07d3JhcHBlci50b3VjaGVuZFg9dG91Y2guY2xpZW50WDt3cmFwcGVyLnRvdWNoZW5kWT10b3VjaC5jbGllbnRZO3dyYXBwZXIuZW5kJiZ3cmFwcGVyLmVuZChPYmplY3QuYXNzaWduKGV2ZW50LHdyYXBwZXIpKTtoYW5kbGVHZXN0dXJlKHdyYXBwZXIpO31mdW5jdGlvbiBfdG91Y2htb3ZlKGV2ZW50LHdyYXBwZXIpe3ZhciB0b3VjaD1ldmVudC5jaGFuZ2VkVG91Y2hlc1swXTt3cmFwcGVyLnRvdWNobW92ZVg9dG91Y2guY2xpZW50WDt3cmFwcGVyLnRvdWNobW92ZVk9dG91Y2guY2xpZW50WTt3cmFwcGVyLm1vdmUmJndyYXBwZXIubW92ZShPYmplY3QuYXNzaWduKGV2ZW50LHdyYXBwZXIpKTt9ZnVuY3Rpb24gY3JlYXRlSGFuZGxlcnModmFsdWUpe3ZhciB3cmFwcGVyPXt0b3VjaHN0YXJ0WDowLHRvdWNoc3RhcnRZOjAsdG91Y2hlbmRYOjAsdG91Y2hlbmRZOjAsdG91Y2htb3ZlWDowLHRvdWNobW92ZVk6MCxvZmZzZXRYOjAsb2Zmc2V0WTowLGxlZnQ6dmFsdWUubGVmdCxyaWdodDp2YWx1ZS5yaWdodCx1cDp2YWx1ZS51cCxkb3duOnZhbHVlLmRvd24sc3RhcnQ6dmFsdWUuc3RhcnQsbW92ZTp2YWx1ZS5tb3ZlLGVuZDp2YWx1ZS5lbmR9O3JldHVybnt0b3VjaHN0YXJ0OmZ1bmN0aW9uIHRvdWNoc3RhcnQoZSl7cmV0dXJuIF90b3VjaHN0YXJ0KGUsd3JhcHBlcik7fSx0b3VjaGVuZDpmdW5jdGlvbiB0b3VjaGVuZChlKXtyZXR1cm4gX3RvdWNoZW5kKGUsd3JhcHBlcik7fSx0b3VjaG1vdmU6ZnVuY3Rpb24gdG91Y2htb3ZlKGUpe3JldHVybiBfdG91Y2htb3ZlKGUsd3JhcHBlcik7fX07fWZ1bmN0aW9uIGluc2VydGVkKGVsLGJpbmRpbmcsdm5vZGUpe3ZhciB2YWx1ZT1iaW5kaW5nLnZhbHVlO3ZhciB0YXJnZXQ9dmFsdWUucGFyZW50P2VsLnBhcmVudEVsZW1lbnQ6ZWw7dmFyIG9wdGlvbnM9dmFsdWUub3B0aW9uc3x8e3Bhc3NpdmU6dHJ1ZX07Ly8gTmVlZGVkIHRvIHBhc3MgdW5pdCB0ZXN0cwppZighdGFyZ2V0KXJldHVybjt2YXIgaGFuZGxlcnM9Y3JlYXRlSGFuZGxlcnMoYmluZGluZy52YWx1ZSk7dGFyZ2V0Ll90b3VjaEhhbmRsZXJzPU9iamVjdCh0YXJnZXQuX3RvdWNoSGFuZGxlcnMpO3RhcmdldC5fdG91Y2hIYW5kbGVyc1t2bm9kZS5jb250ZXh0Ll91aWRdPWhhbmRsZXJzO09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImtleXMiXSkoaGFuZGxlcnMpLmZvckVhY2goZnVuY3Rpb24oZXZlbnROYW1lKXt0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsaGFuZGxlcnNbZXZlbnROYW1lXSxvcHRpb25zKTt9KTt9ZnVuY3Rpb24gdW5iaW5kKGVsLGJpbmRpbmcsdm5vZGUpe3ZhciB0YXJnZXQ9YmluZGluZy52YWx1ZS5wYXJlbnQ/ZWwucGFyZW50RWxlbWVudDplbDtpZighdGFyZ2V0fHwhdGFyZ2V0Ll90b3VjaEhhbmRsZXJzKXJldHVybjt2YXIgaGFuZGxlcnM9dGFyZ2V0Ll90b3VjaEhhbmRsZXJzW3Zub2RlLmNvbnRleHQuX3VpZF07T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1sia2V5cyJdKShoYW5kbGVycykuZm9yRWFjaChmdW5jdGlvbihldmVudE5hbWUpe3RhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSxoYW5kbGVyc1tldmVudE5hbWVdKTt9KTtkZWxldGUgdGFyZ2V0Ll90b3VjaEhhbmRsZXJzW3Zub2RlLmNvbnRleHQuX3VpZF07fXZhciBUb3VjaD17aW5zZXJ0ZWQ6aW5zZXJ0ZWQsdW5iaW5kOnVuYmluZH07LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1Ub3VjaDsvKioqL30sLyoqKi8iLi9zcmMvZnJhbWV3b3JrLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvZnJhbWV3b3JrLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjRnJhbWV3b3JrVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfaW5zdGFsbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaW5zdGFsbCAqLyIuL3NyYy9pbnN0YWxsLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3NlcnZpY2VzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9zZXJ2aWNlcyAqLyIuL3NyYy9zZXJ2aWNlcy9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9zdHlsZXNfbWFpbl9zYXNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9zdHlsZXMvbWFpbi5zYXNzICovIi4vc3JjL3N0eWxlcy9tYWluLnNhc3MiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfc3R5bGVzX21haW5fc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfc3R5bGVzX21haW5fc2Fzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fKTsvLyBTZXJ2aWNlcwovLyBTdHlsZXMKdmFyIFZ1ZXRpZnk9LyoqIEBjbGFzcyAqL2Z1bmN0aW9uKCl7ZnVuY3Rpb24gVnVldGlmeShwcmVzZXQpe2lmKHByZXNldD09PXZvaWQgMCl7cHJlc2V0PXt9O310aGlzLmZyYW1ld29yaz17fTt0aGlzLmluc3RhbGxlZD1bXTt0aGlzLnByZXNldD17fTt0aGlzLnByZXNldD1wcmVzZXQ7dGhpcy51c2UoX3NlcnZpY2VzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bIkFwcGxpY2F0aW9uIl0pO3RoaXMudXNlKF9zZXJ2aWNlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJCcmVha3BvaW50Il0pO3RoaXMudXNlKF9zZXJ2aWNlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJHb3RvIl0pO3RoaXMudXNlKF9zZXJ2aWNlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJJY29ucyJdKTt0aGlzLnVzZShfc2VydmljZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siTGFuZyJdKTt0aGlzLnVzZShfc2VydmljZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siVGhlbWUiXSk7fS8vIENhbGxlZCBvbiB0aGUgbmV3IHZ1ZXRpZnkgaW5zdGFuY2UKLy8gYm9vdHN0cmFwIGluIGluc3RhbGwgYmVmb3JlQ3JlYXRlCi8vIEV4cG9zZXMgc3NyQ29udGV4dCBpZiBhdmFpbGFibGUKVnVldGlmeS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbihyb290LHNzckNvbnRleHQpe3ZhciBfdGhpcz10aGlzO3RoaXMuaW5zdGFsbGVkLmZvckVhY2goZnVuY3Rpb24ocHJvcGVydHkpe3ZhciBzZXJ2aWNlPV90aGlzLmZyYW1ld29ya1twcm9wZXJ0eV07c2VydmljZS5mcmFtZXdvcms9X3RoaXMuZnJhbWV3b3JrO3NlcnZpY2UuaW5pdChyb290LHNzckNvbnRleHQpO30pOy8vIHJ0bCBpcyBub3QgaW5zdGFsbGVkIGFuZAovLyB3aWxsIG5ldmVyIGJlIGNhbGxlZCBieQovLyB0aGUgaW5pdCBwcm9jZXNzCnRoaXMuZnJhbWV3b3JrLnJ0bD1Cb29sZWFuKHRoaXMucHJlc2V0LnJ0bCk7fTsvLyBJbnN0YW50aWF0ZSBhIFZ1ZXRpZnlTZXJ2aWNlClZ1ZXRpZnkucHJvdG90eXBlLnVzZT1mdW5jdGlvbihTZXJ2aWNlKXt2YXIgcHJvcGVydHk9U2VydmljZS5wcm9wZXJ0eTtpZih0aGlzLmluc3RhbGxlZC5pbmNsdWRlcyhwcm9wZXJ0eSkpcmV0dXJuO3RoaXMuZnJhbWV3b3JrW3Byb3BlcnR5XT1uZXcgU2VydmljZSh0aGlzLnByZXNldFtwcm9wZXJ0eV0pO3RoaXMuaW5zdGFsbGVkLnB1c2gocHJvcGVydHkpO307VnVldGlmeS5pbnN0YWxsPV9pbnN0YWxsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImluc3RhbGwiXTtWdWV0aWZ5Lmluc3RhbGxlZD1mYWxzZTtWdWV0aWZ5LnZlcnNpb249IjIuMS4xMCI7cmV0dXJuIFZ1ZXRpZnk7fSgpOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09VnVldGlmeTsvKioqL30sLyoqKi8iLi9zcmMvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2NvbXBvbmVudHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2NvbXBvbmVudHMgKi8iLi9zcmMvY29tcG9uZW50cy9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kaXJlY3RpdmVzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kaXJlY3RpdmVzICovIi4vc3JjL2RpcmVjdGl2ZXMvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZnJhbWV3b3JrX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9mcmFtZXdvcmsgKi8iLi9zcmMvZnJhbWV3b3JrLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPV9mcmFtZXdvcmtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdO3ZhciBpbnN0YWxsPV9mcmFtZXdvcmtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLmluc3RhbGw7X2ZyYW1ld29ya19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0uaW5zdGFsbD1mdW5jdGlvbihWdWUsYXJncyl7aW5zdGFsbC5jYWxsKF9mcmFtZXdvcmtfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdLFZ1ZSxfX2Fzc2lnbih7Y29tcG9uZW50czpfY29tcG9uZW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLGRpcmVjdGl2ZXM6X2RpcmVjdGl2ZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX30sYXJncykpO307aWYodHlwZW9mIHdpbmRvdyE9PSd1bmRlZmluZWQnJiZ3aW5kb3cuVnVlKXt3aW5kb3cuVnVlLnVzZShfZnJhbWV3b3JrX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSk7fS8qKiovfSwvKioqLyIuL3NyYy9pbnN0YWxsLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2luc3RhbGwudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBpbnN0YWxsICovIC8qKiovZnVuY3Rpb24gc3JjSW5zdGFsbFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImluc3RhbGwiLGZ1bmN0aW9uKCl7cmV0dXJuIGluc3RhbGw7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbC9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpO2Z1bmN0aW9uIGluc3RhbGwoVnVlLGFyZ3Mpe2lmKGFyZ3M9PT12b2lkIDApe2FyZ3M9e307fWlmKGluc3RhbGwuaW5zdGFsbGVkKXJldHVybjtpbnN0YWxsLmluc3RhbGxlZD10cnVlO2lmKHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQuYSE9PVZ1ZSl7T2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siY29uc29sZUVycm9yIl0pKCdNdWx0aXBsZSBpbnN0YW5jZXMgb2YgVnVlIGRldGVjdGVkXG5TZWUgaHR0cHM6Ly9naXRodWIuY29tL3Z1ZXRpZnlqcy92dWV0aWZ5L2lzc3Vlcy80MDY4XG5cbklmIHlvdVwncmUgc2VlaW5nICIkYXR0cnMgaXMgcmVhZG9ubHkiLCBpdFwncyBjYXVzZWQgYnkgdGhpcycpO312YXIgY29tcG9uZW50cz1hcmdzLmNvbXBvbmVudHN8fHt9O3ZhciBkaXJlY3RpdmVzPWFyZ3MuZGlyZWN0aXZlc3x8e307Zm9yKHZhciBuYW1lIGluIGRpcmVjdGl2ZXMpe3ZhciBkaXJlY3RpdmU9ZGlyZWN0aXZlc1tuYW1lXTtWdWUuZGlyZWN0aXZlKG5hbWUsZGlyZWN0aXZlKTt9KGZ1bmN0aW9uIHJlZ2lzdGVyQ29tcG9uZW50cyhjb21wb25lbnRzKXtpZihjb21wb25lbnRzKXtmb3IodmFyIGtleSBpbiBjb21wb25lbnRzKXt2YXIgY29tcG9uZW50PWNvbXBvbmVudHNba2V5XTtpZihjb21wb25lbnQmJiFyZWdpc3RlckNvbXBvbmVudHMoY29tcG9uZW50LiRfdnVldGlmeV9zdWJjb21wb25lbnRzKSl7VnVlLmNvbXBvbmVudChrZXksY29tcG9uZW50KTt9fXJldHVybiB0cnVlO31yZXR1cm4gZmFsc2U7fSkoY29tcG9uZW50cyk7Ly8gVXNlZCB0byBhdm9pZCBtdWx0aXBsZSBtaXhpbnMgYmVpbmcgc2V0dXAKLy8gd2hlbiBpbiBkZXYgbW9kZSBhbmQgaG90IG1vZHVsZSByZWxvYWQKLy8gaHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS9pc3N1ZXMvNTA4OSNpc3N1ZWNvbW1lbnQtMjg0MjYwMTExCmlmKFZ1ZS4kX3Z1ZXRpZnlfaW5zdGFsbGVkKXJldHVybjtWdWUuJF92dWV0aWZ5X2luc3RhbGxlZD10cnVlO1Z1ZS5taXhpbih7YmVmb3JlQ3JlYXRlOmZ1bmN0aW9uIGJlZm9yZUNyZWF0ZSgpe3ZhciBvcHRpb25zPXRoaXMuJG9wdGlvbnM7aWYob3B0aW9ucy52dWV0aWZ5KXtvcHRpb25zLnZ1ZXRpZnkuaW5pdCh0aGlzLG9wdGlvbnMuc3NyQ29udGV4dCk7dGhpcy4kdnVldGlmeT1WdWUub2JzZXJ2YWJsZShvcHRpb25zLnZ1ZXRpZnkuZnJhbWV3b3JrKTt9ZWxzZXt0aGlzLiR2dWV0aWZ5PW9wdGlvbnMucGFyZW50JiZvcHRpb25zLnBhcmVudC4kdnVldGlmeXx8dGhpczt9fX0pO30vKioqL30sLyoqKi8iLi9zcmMvbG9jYWxlL2VuLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbG9jYWxlL2VuLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTG9jYWxlRW5Ucyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09e2Nsb3NlOidDbG9zZScsZGF0YUl0ZXJhdG9yOntub1Jlc3VsdHNUZXh0OidObyBtYXRjaGluZyByZWNvcmRzIGZvdW5kJyxsb2FkaW5nVGV4dDonTG9hZGluZyBpdGVtcy4uLid9LGRhdGFUYWJsZTp7aXRlbXNQZXJQYWdlVGV4dDonUm93cyBwZXIgcGFnZTonLGFyaWFMYWJlbDp7c29ydERlc2NlbmRpbmc6JzogU29ydGVkIGRlc2NlbmRpbmcuIEFjdGl2YXRlIHRvIHJlbW92ZSBzb3J0aW5nLicsc29ydEFzY2VuZGluZzonOiBTb3J0ZWQgYXNjZW5kaW5nLiBBY3RpdmF0ZSB0byBzb3J0IGRlc2NlbmRpbmcuJyxzb3J0Tm9uZTonOiBOb3Qgc29ydGVkLiBBY3RpdmF0ZSB0byBzb3J0IGFzY2VuZGluZy4nfSxzb3J0Qnk6J1NvcnQgYnknfSxkYXRhRm9vdGVyOntpdGVtc1BlclBhZ2VUZXh0OidJdGVtcyBwZXIgcGFnZTonLGl0ZW1zUGVyUGFnZUFsbDonQWxsJyxuZXh0UGFnZTonTmV4dCBwYWdlJyxwcmV2UGFnZTonUHJldmlvdXMgcGFnZScsZmlyc3RQYWdlOidGaXJzdCBwYWdlJyxsYXN0UGFnZTonTGFzdCBwYWdlJyxwYWdlVGV4dDonezB9LXsxfSBvZiB7Mn0nfSxkYXRlUGlja2VyOntpdGVtc1NlbGVjdGVkOid7MH0gc2VsZWN0ZWQnfSxub0RhdGFUZXh0OidObyBkYXRhIGF2YWlsYWJsZScsY2Fyb3VzZWw6e3ByZXY6J1ByZXZpb3VzIHZpc3VhbCcsbmV4dDonTmV4dCB2aXN1YWwnLGFyaWFMYWJlbDp7ZGVsaW1pdGVyOidDYXJvdXNlbCBzbGlkZSB7MH0gb2YgezF9J319LGNhbGVuZGFyOnttb3JlRXZlbnRzOid7MH0gbW9yZSd9LGZpbGVJbnB1dDp7Y291bnRlcjonezB9IGZpbGVzJyxjb3VudGVyU2l6ZTonezB9IGZpbGVzICh7MX0gaW4gdG90YWwpJ30sdGltZVBpY2tlcjp7YW06J0FNJyxwbTonUE0nfX07LyoqKi99LC8qKiovIi4vc3JjL21peGlucy9hY3RpdmF0YWJsZS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL21peGlucy9hY3RpdmF0YWJsZS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY01peGluc0FjdGl2YXRhYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9kZWxheWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kZWxheWFibGUgKi8iLi9zcmMvbWl4aW5zL2RlbGF5YWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF90b2dnbGVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdG9nZ2xlYWJsZSAqLyIuL3NyYy9taXhpbnMvdG9nZ2xlYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpO2Z1bmN0aW9uIF90eXBlb2Yob2JqKXtpZih0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmX3R5cGVvZjIoU3ltYm9sLml0ZXJhdG9yKT09PSJzeW1ib2wiKXtfdHlwZW9mPWZ1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gX3R5cGVvZjIob2JqKTt9O31lbHNle190eXBlb2Y9ZnVuY3Rpb24gX3R5cGVvZihvYmope3JldHVybiBvYmomJnR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvYmouY29uc3RydWN0b3I9PT1TeW1ib2wmJm9iaiE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6X3R5cGVvZjIob2JqKTt9O31yZXR1cm4gX3R5cGVvZihvYmopO312YXIgX192YWx1ZXM9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX192YWx1ZXN8fGZ1bmN0aW9uKG8pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl0saT0wO2lmKG0pcmV0dXJuIG0uY2FsbChvKTtyZXR1cm57bmV4dDpmdW5jdGlvbiBuZXh0KCl7aWYobyYmaT49by5sZW5ndGgpbz12b2lkIDA7cmV0dXJue3ZhbHVlOm8mJm9baSsrXSxkb25lOiFvfTt9fTt9Oy8vIE1peGlucwovLyBVdGlsaXRpZXMKdmFyIGJhc2VNaXhpbnM9T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pKF9kZWxheWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdLF90b2dnbGVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSk7LyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1iYXNlTWl4aW5zLmV4dGVuZCh7bmFtZTonYWN0aXZhdGFibGUnLHByb3BzOnthY3RpdmF0b3I6e2RlZmF1bHQ6bnVsbCx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7cmV0dXJuWydzdHJpbmcnLCdvYmplY3QnXS5pbmNsdWRlcyhfdHlwZW9mKHZhbCkpO319LGRpc2FibGVkOkJvb2xlYW4saW50ZXJuYWxBY3RpdmF0b3I6Qm9vbGVhbixvcGVuT25Ib3ZlcjpCb29sZWFufSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57Ly8gRG8gbm90IHVzZSB0aGlzIGRpcmVjdGx5LCBjYWxsIGdldEFjdGl2YXRvcigpIGluc3RlYWQKYWN0aXZhdG9yRWxlbWVudDpudWxsLGFjdGl2YXRvck5vZGU6W10sZXZlbnRzOlsnY2xpY2snLCdtb3VzZWVudGVyJywnbW91c2VsZWF2ZSddLGxpc3RlbmVyczp7fX07fSx3YXRjaDp7YWN0aXZhdG9yOidyZXNldEFjdGl2YXRvcicsb3Blbk9uSG92ZXI6J3Jlc2V0QWN0aXZhdG9yJ30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dmFyIHNsb3RUeXBlPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImdldFNsb3RUeXBlIl0pKHRoaXMsJ2FjdGl2YXRvcicsdHJ1ZSk7aWYoc2xvdFR5cGUmJlsndi1zbG90Jywnbm9ybWFsJ10uaW5jbHVkZXMoc2xvdFR5cGUpKXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJjb25zb2xlRXJyb3IiXSkoIlRoZSBhY3RpdmF0b3Igc2xvdCBtdXN0IGJlIGJvdW5kLCB0cnkgJzx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPVwieyBvbiB9XCI+PHYtYnRuIHYtb249XCJvblwiPiciLHRoaXMpO310aGlzLmFkZEFjdGl2YXRvckV2ZW50cygpO30sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7dGhpcy5yZW1vdmVBY3RpdmF0b3JFdmVudHMoKTt9LG1ldGhvZHM6e2FkZEFjdGl2YXRvckV2ZW50czpmdW5jdGlvbiBhZGRBY3RpdmF0b3JFdmVudHMoKXt2YXIgZV8xLF9hO2lmKCF0aGlzLmFjdGl2YXRvcnx8dGhpcy5kaXNhYmxlZHx8IXRoaXMuZ2V0QWN0aXZhdG9yKCkpcmV0dXJuO3RoaXMubGlzdGVuZXJzPXRoaXMuZ2VuQWN0aXZhdG9yTGlzdGVuZXJzKCk7dmFyIGtleXM9T2JqZWN0LmtleXModGhpcy5saXN0ZW5lcnMpO3RyeXtmb3IodmFyIGtleXNfMT1fX3ZhbHVlcyhrZXlzKSxrZXlzXzFfMT1rZXlzXzEubmV4dCgpOyFrZXlzXzFfMS5kb25lO2tleXNfMV8xPWtleXNfMS5uZXh0KCkpe3ZhciBrZXk9a2V5c18xXzEudmFsdWU7dGhpcy5nZXRBY3RpdmF0b3IoKS5hZGRFdmVudExpc3RlbmVyKGtleSx0aGlzLmxpc3RlbmVyc1trZXldKTt9fWNhdGNoKGVfMV8xKXtlXzE9e2Vycm9yOmVfMV8xfTt9ZmluYWxseXt0cnl7aWYoa2V5c18xXzEmJiFrZXlzXzFfMS5kb25lJiYoX2E9a2V5c18xLnJldHVybikpX2EuY2FsbChrZXlzXzEpO31maW5hbGx5e2lmKGVfMSl0aHJvdyBlXzEuZXJyb3I7fX19LGdlbkFjdGl2YXRvcjpmdW5jdGlvbiBnZW5BY3RpdmF0b3IoKXt2YXIgbm9kZT1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJnZXRTbG90Il0pKHRoaXMsJ2FjdGl2YXRvcicsT2JqZWN0LmFzc2lnbih0aGlzLmdldFZhbHVlUHJveHkoKSx7b246dGhpcy5nZW5BY3RpdmF0b3JMaXN0ZW5lcnMoKSxhdHRyczp0aGlzLmdlbkFjdGl2YXRvckF0dHJpYnV0ZXMoKX0pKXx8W107dGhpcy5hY3RpdmF0b3JOb2RlPW5vZGU7cmV0dXJuIG5vZGU7fSxnZW5BY3RpdmF0b3JBdHRyaWJ1dGVzOmZ1bmN0aW9uIGdlbkFjdGl2YXRvckF0dHJpYnV0ZXMoKXtyZXR1cm57cm9sZTonYnV0dG9uJywnYXJpYS1oYXNwb3B1cCc6dHJ1ZSwnYXJpYS1leHBhbmRlZCc6U3RyaW5nKHRoaXMuaXNBY3RpdmUpfTt9LGdlbkFjdGl2YXRvckxpc3RlbmVyczpmdW5jdGlvbiBnZW5BY3RpdmF0b3JMaXN0ZW5lcnMoKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLmRpc2FibGVkKXJldHVybnt9O3ZhciBsaXN0ZW5lcnM9e307aWYodGhpcy5vcGVuT25Ib3Zlcil7bGlzdGVuZXJzLm1vdXNlZW50ZXI9ZnVuY3Rpb24oZSl7X3RoaXMuZ2V0QWN0aXZhdG9yKGUpO190aGlzLnJ1bkRlbGF5KCdvcGVuJyk7fTtsaXN0ZW5lcnMubW91c2VsZWF2ZT1mdW5jdGlvbihlKXtfdGhpcy5nZXRBY3RpdmF0b3IoZSk7X3RoaXMucnVuRGVsYXkoJ2Nsb3NlJyk7fTt9ZWxzZXtsaXN0ZW5lcnMuY2xpY2s9ZnVuY3Rpb24oZSl7dmFyIGFjdGl2YXRvcj1fdGhpcy5nZXRBY3RpdmF0b3IoZSk7aWYoYWN0aXZhdG9yKWFjdGl2YXRvci5mb2N1cygpO190aGlzLmlzQWN0aXZlPSFfdGhpcy5pc0FjdGl2ZTt9O31yZXR1cm4gbGlzdGVuZXJzO30sZ2V0QWN0aXZhdG9yOmZ1bmN0aW9uIGdldEFjdGl2YXRvcihlKXsvLyBJZiB3ZSd2ZSBhbHJlYWR5IGZldGNoZWQgdGhlIGFjdGl2YXRvciwgcmUtdXNlCmlmKHRoaXMuYWN0aXZhdG9yRWxlbWVudClyZXR1cm4gdGhpcy5hY3RpdmF0b3JFbGVtZW50O3ZhciBhY3RpdmF0b3I9bnVsbDtpZih0aGlzLmFjdGl2YXRvcil7dmFyIHRhcmdldD10aGlzLmludGVybmFsQWN0aXZhdG9yP3RoaXMuJGVsOmRvY3VtZW50O2lmKHR5cGVvZiB0aGlzLmFjdGl2YXRvcj09PSdzdHJpbmcnKXsvLyBTZWxlY3RvcgphY3RpdmF0b3I9dGFyZ2V0LnF1ZXJ5U2VsZWN0b3IodGhpcy5hY3RpdmF0b3IpO31lbHNlIGlmKHRoaXMuYWN0aXZhdG9yLiRlbCl7Ly8gQ29tcG9uZW50IChyZWYpCmFjdGl2YXRvcj10aGlzLmFjdGl2YXRvci4kZWw7fWVsc2V7Ly8gSFRNTEVsZW1lbnQgfCBFbGVtZW50CmFjdGl2YXRvcj10aGlzLmFjdGl2YXRvcjt9fWVsc2UgaWYodGhpcy5hY3RpdmF0b3JOb2RlLmxlbmd0aD09PTF8fHRoaXMuYWN0aXZhdG9yTm9kZS5sZW5ndGgmJiFlKXsvLyBVc2UgdGhlIGNvbnRlbnRzIG9mIHRoZSBhY3RpdmF0b3Igc2xvdAovLyBUaGVyZSdzIGVpdGhlciBvbmx5IG9uZSBlbGVtZW50IGluIGl0IG9yIHdlCi8vIGRvbid0IGhhdmUgYSBjbGljayBldmVudCB0byB1c2UgYXMgYSBsYXN0IHJlc29ydAp2YXIgdm09dGhpcy5hY3RpdmF0b3JOb2RlWzBdLmNvbXBvbmVudEluc3RhbmNlO2lmKHZtJiZ2bS4kb3B0aW9ucy5taXhpbnMmJi8vICAgICAgICAgICAgICAgICAgICAgICAgIEFjdGl2YXRhYmxlIGlzIGluZGlyZWN0bHkgdXNlZCB2aWEgTWVudWFibGUKdm0uJG9wdGlvbnMubWl4aW5zLnNvbWUoZnVuY3Rpb24obSl7cmV0dXJuIG0ub3B0aW9ucyYmWydhY3RpdmF0YWJsZScsJ21lbnVhYmxlJ10uaW5jbHVkZXMobS5vcHRpb25zLm5hbWUpO30pKXsvLyBBY3RpdmF0b3IgaXMgYWN0dWFsbHkgYW5vdGhlciBhY3RpdmF0aWJsZSBjb21wb25lbnQsIHVzZSBpdHMgYWN0aXZhdG9yICgjODg0NikKYWN0aXZhdG9yPXZtLmdldEFjdGl2YXRvcigpO31lbHNle2FjdGl2YXRvcj10aGlzLmFjdGl2YXRvck5vZGVbMF0uZWxtO319ZWxzZSBpZihlKXsvLyBBY3RpdmF0ZWQgYnkgYSBjbGljayBldmVudAphY3RpdmF0b3I9ZS5jdXJyZW50VGFyZ2V0fHxlLnRhcmdldDt9dGhpcy5hY3RpdmF0b3JFbGVtZW50PWFjdGl2YXRvcjtyZXR1cm4gdGhpcy5hY3RpdmF0b3JFbGVtZW50O30sZ2V0Q29udGVudFNsb3Q6ZnVuY3Rpb24gZ2V0Q29udGVudFNsb3QoKXtyZXR1cm4gT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZ2V0U2xvdCJdKSh0aGlzLCdkZWZhdWx0Jyx0aGlzLmdldFZhbHVlUHJveHkoKSx0cnVlKTt9LGdldFZhbHVlUHJveHk6ZnVuY3Rpb24gZ2V0VmFsdWVQcm94eSgpe3ZhciBzZWxmPXRoaXM7cmV0dXJue2dldCB2YWx1ZSgpe3JldHVybiBzZWxmLmlzQWN0aXZlO30sc2V0IHZhbHVlKGlzQWN0aXZlKXtzZWxmLmlzQWN0aXZlPWlzQWN0aXZlO319O30scmVtb3ZlQWN0aXZhdG9yRXZlbnRzOmZ1bmN0aW9uIHJlbW92ZUFjdGl2YXRvckV2ZW50cygpe3ZhciBlXzIsX2E7aWYoIXRoaXMuYWN0aXZhdG9yfHwhdGhpcy5hY3RpdmF0b3JFbGVtZW50KXJldHVybjt2YXIga2V5cz1PYmplY3Qua2V5cyh0aGlzLmxpc3RlbmVycyk7dHJ5e2Zvcih2YXIga2V5c18yPV9fdmFsdWVzKGtleXMpLGtleXNfMl8xPWtleXNfMi5uZXh0KCk7IWtleXNfMl8xLmRvbmU7a2V5c18yXzE9a2V5c18yLm5leHQoKSl7dmFyIGtleT1rZXlzXzJfMS52YWx1ZTt0aGlzLmFjdGl2YXRvckVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihrZXksdGhpcy5saXN0ZW5lcnNba2V5XSk7fX1jYXRjaChlXzJfMSl7ZV8yPXtlcnJvcjplXzJfMX07fWZpbmFsbHl7dHJ5e2lmKGtleXNfMl8xJiYha2V5c18yXzEuZG9uZSYmKF9hPWtleXNfMi5yZXR1cm4pKV9hLmNhbGwoa2V5c18yKTt9ZmluYWxseXtpZihlXzIpdGhyb3cgZV8yLmVycm9yO319dGhpcy5saXN0ZW5lcnM9e307fSxyZXNldEFjdGl2YXRvcjpmdW5jdGlvbiByZXNldEFjdGl2YXRvcigpe3RoaXMuYWN0aXZhdG9yRWxlbWVudD1udWxsO3RoaXMuZ2V0QWN0aXZhdG9yKCk7dGhpcy5hZGRBY3RpdmF0b3JFdmVudHMoKTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvYXBwbGljYXRpb25hYmxlL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL21peGlucy9hcHBsaWNhdGlvbmFibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTWl4aW5zQXBwbGljYXRpb25hYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJkZWZhdWx0IixmdW5jdGlvbigpe3JldHVybiBhcHBsaWNhdGlvbmFibGU7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3Bvc2l0aW9uYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3Bvc2l0aW9uYWJsZSAqLyIuL3NyYy9taXhpbnMvcG9zaXRpb25hYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvLyBVdGlsCmZ1bmN0aW9uIGFwcGxpY2F0aW9uYWJsZSh2YWx1ZSxldmVudHMpe2lmKGV2ZW50cz09PXZvaWQgMCl7ZXZlbnRzPVtdO30vKiBAdnVlL2NvbXBvbmVudCAqL3JldHVybiBPYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkoT2JqZWN0KF9wb3NpdGlvbmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZmFjdG9yeSJdKShbJ2Fic29sdXRlJywnZml4ZWQnXSkpLmV4dGVuZCh7bmFtZTonYXBwbGljYXRpb25hYmxlJyxwcm9wczp7YXBwOkJvb2xlYW59LGNvbXB1dGVkOnthcHBsaWNhdGlvblByb3BlcnR5OmZ1bmN0aW9uIGFwcGxpY2F0aW9uUHJvcGVydHkoKXtyZXR1cm4gdmFsdWU7fX0sd2F0Y2g6ey8vIElmIHByZXZpb3VzIHZhbHVlIHdhcyBhcHAKLy8gcmVzZXQgdGhlIHByb3ZpZGVkIHByb3AKYXBwOmZ1bmN0aW9uIGFwcCh4LHByZXYpe3ByZXY/dGhpcy5yZW1vdmVBcHBsaWNhdGlvbih0cnVlKTp0aGlzLmNhbGxVcGRhdGUoKTt9LGFwcGxpY2F0aW9uUHJvcGVydHk6ZnVuY3Rpb24gYXBwbGljYXRpb25Qcm9wZXJ0eShuZXdWYWwsb2xkVmFsKXt0aGlzLiR2dWV0aWZ5LmFwcGxpY2F0aW9uLnVucmVnaXN0ZXIodGhpcy5fdWlkLG9sZFZhbCk7fX0sYWN0aXZhdGVkOmZ1bmN0aW9uIGFjdGl2YXRlZCgpe3RoaXMuY2FsbFVwZGF0ZSgpO30sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7Zm9yKHZhciBpPTAsbGVuZ3RoPWV2ZW50cy5sZW5ndGg7aTxsZW5ndGg7aSsrKXt0aGlzLiR3YXRjaChldmVudHNbaV0sdGhpcy5jYWxsVXBkYXRlKTt9dGhpcy5jYWxsVXBkYXRlKCk7fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLmNhbGxVcGRhdGUoKTt9LGRlYWN0aXZhdGVkOmZ1bmN0aW9uIGRlYWN0aXZhdGVkKCl7dGhpcy5yZW1vdmVBcHBsaWNhdGlvbigpO30sZGVzdHJveWVkOmZ1bmN0aW9uIGRlc3Ryb3llZCgpe3RoaXMucmVtb3ZlQXBwbGljYXRpb24oKTt9LG1ldGhvZHM6e2NhbGxVcGRhdGU6ZnVuY3Rpb24gY2FsbFVwZGF0ZSgpe2lmKCF0aGlzLmFwcClyZXR1cm47dGhpcy4kdnVldGlmeS5hcHBsaWNhdGlvbi5yZWdpc3Rlcih0aGlzLl91aWQsdGhpcy5hcHBsaWNhdGlvblByb3BlcnR5LHRoaXMudXBkYXRlQXBwbGljYXRpb24oKSk7fSxyZW1vdmVBcHBsaWNhdGlvbjpmdW5jdGlvbiByZW1vdmVBcHBsaWNhdGlvbihmb3JjZSl7aWYoZm9yY2U9PT12b2lkIDApe2ZvcmNlPWZhbHNlO31pZighZm9yY2UmJiF0aGlzLmFwcClyZXR1cm47dGhpcy4kdnVldGlmeS5hcHBsaWNhdGlvbi51bnJlZ2lzdGVyKHRoaXMuX3VpZCx0aGlzLmFwcGxpY2F0aW9uUHJvcGVydHkpO30sdXBkYXRlQXBwbGljYXRpb246ZnVuY3Rpb24gdXBkYXRlQXBwbGljYXRpb24oKXtyZXR1cm4gMDt9fX0pO30vKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL2JpbmRzLWF0dHJzL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbWl4aW5zL2JpbmRzLWF0dHJzL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTWl4aW5zQmluZHNBdHRyc0luZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISB2dWUgKi8idnVlIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKioKICogVGhpcyBtaXhpbiBwcm92aWRlcyBgYXR0cnMkYCBhbmQgYGxpc3RlbmVycyRgIHRvIHdvcmsgYXJvdW5kCiAqIHZ1ZSBidWcgaHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS9pc3N1ZXMvMTAxMTUKICovZnVuY3Rpb24gbWFrZVdhdGNoZXIocHJvcGVydHkpe3JldHVybiBmdW5jdGlvbih2YWwsb2xkVmFsKXtmb3IodmFyIGF0dHIgaW4gb2xkVmFsKXtpZighT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbCxhdHRyKSl7dGhpcy4kZGVsZXRlKHRoaXMuJGRhdGFbcHJvcGVydHldLGF0dHIpO319Zm9yKHZhciBhdHRyIGluIHZhbCl7dGhpcy4kc2V0KHRoaXMuJGRhdGFbcHJvcGVydHldLGF0dHIsdmFsW2F0dHJdKTt9fTt9LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57YXR0cnMkOnt9LGxpc3RlbmVycyQ6e319O30sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7Ly8gV29yayBhcm91bmQgdW53YW50ZWQgcmUtcmVuZGVyczogaHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS9pc3N1ZXMvMTAxMTUKLy8gTWFrZSBzdXJlIHRvIHVzZSBgYXR0cnMkYCBpbnN0ZWFkIG9mIGAkYXR0cnNgIChjb25mdXNpbmcgcmlnaHQ/KQp0aGlzLiR3YXRjaCgnJGF0dHJzJyxtYWtlV2F0Y2hlcignYXR0cnMkJykse2ltbWVkaWF0ZTp0cnVlfSk7dGhpcy4kd2F0Y2goJyRsaXN0ZW5lcnMnLG1ha2VXYXRjaGVyKCdsaXN0ZW5lcnMkJykse2ltbWVkaWF0ZTp0cnVlfSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvYm9vdGFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvYm9vdGFibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNNaXhpbnNCb290YWJsZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18pOy8vIFV0aWxpdGllcwovLyBUeXBlcwovKioKICogQm9vdGFibGUKICogQG1peGluCiAqCiAqIFVzZWQgdG8gYWRkIGxhenkgY29udGVudCBmdW5jdGlvbmFsaXR5IHRvIGNvbXBvbmVudHMKICogTG9va3MgZm9yIGNoYW5nZSBpbiAiaXNBY3RpdmUiIHRvIGF1dG9tYXRpY2FsbHkgYm9vdAogKiBPdGhlcndpc2UgY2FuIGJlIHNldCBtYW51YWxseQogKi8gLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX19kZWZhdWx0LmEuZXh0ZW5kKCkuZXh0ZW5kKHtuYW1lOidib290YWJsZScscHJvcHM6e2VhZ2VyOkJvb2xlYW59LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntpc0Jvb3RlZDpmYWxzZX07fSxjb21wdXRlZDp7aGFzQ29udGVudDpmdW5jdGlvbiBoYXNDb250ZW50KCl7cmV0dXJuIHRoaXMuaXNCb290ZWR8fHRoaXMuZWFnZXJ8fHRoaXMuaXNBY3RpdmU7fX0sd2F0Y2g6e2lzQWN0aXZlOmZ1bmN0aW9uIGlzQWN0aXZlKCl7dGhpcy5pc0Jvb3RlZD10cnVlO319LGNyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpey8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovaWYoJ2xhenknaW4gdGhpcy4kYXR0cnMpe09iamVjdChfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bInJlbW92ZWQiXSkoJ2xhenknLHRoaXMpO319LG1ldGhvZHM6e3Nob3dMYXp5Q29udGVudDpmdW5jdGlvbiBzaG93TGF6eUNvbnRlbnQoY29udGVudCl7cmV0dXJuIHRoaXMuaGFzQ29udGVudD9jb250ZW50OnVuZGVmaW5lZDt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvYnV0dG9uLWdyb3VwL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL21peGlucy9idXR0b24tZ3JvdXAvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTWl4aW5zQnV0dG9uR3JvdXBJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2NvbXBvbmVudHNfVkl0ZW1Hcm91cF9WSXRlbUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vY29tcG9uZW50cy9WSXRlbUdyb3VwL1ZJdGVtR3JvdXAgKi8iLi9zcmMvY29tcG9uZW50cy9WSXRlbUdyb3VwL1ZJdGVtR3JvdXAudHMiKTsvLyBFeHRlbnNpb25zCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09X2NvbXBvbmVudHNfVkl0ZW1Hcm91cF9WSXRlbUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIkJhc2VJdGVtR3JvdXAiXS5leHRlbmQoe25hbWU6J2J1dHRvbi1ncm91cCcscHJvdmlkZTpmdW5jdGlvbiBwcm92aWRlKCl7cmV0dXJue2J0blRvZ2dsZTp0aGlzfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXtyZXR1cm4gX2NvbXBvbmVudHNfVkl0ZW1Hcm91cF9WSXRlbUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIkJhc2VJdGVtR3JvdXAiXS5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKTt9fSxtZXRob2RzOnsvLyBJc24ndCBiZWluZyBwYXNzZWQgZG93biB0aHJvdWdoIHR5cGVzCmdlbkRhdGE6X2NvbXBvbmVudHNfVkl0ZW1Hcm91cF9WSXRlbUdyb3VwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIkJhc2VJdGVtR3JvdXAiXS5vcHRpb25zLm1ldGhvZHMuZ2VuRGF0YX19KTsvKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL2NvbG9yYWJsZS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvY29sb3JhYmxlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY01peGluc0NvbG9yYWJsZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISB2dWUgKi8idnVlIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9O2Z1bmN0aW9uIGlzQ3NzQ29sb3IoY29sb3Ipe3JldHVybiEhY29sb3ImJiEhY29sb3IubWF0Y2goL14oI3wocmdifGhzbClhP1woKS8pO30vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQuYS5leHRlbmQoe25hbWU6J2NvbG9yYWJsZScscHJvcHM6e2NvbG9yOlN0cmluZ30sbWV0aG9kczp7c2V0QmFja2dyb3VuZENvbG9yOmZ1bmN0aW9uIHNldEJhY2tncm91bmRDb2xvcihjb2xvcixkYXRhKXt2YXIgX2E7aWYoZGF0YT09PXZvaWQgMCl7ZGF0YT17fTt9aWYodHlwZW9mIGRhdGEuc3R5bGU9PT0nc3RyaW5nJyl7Ly8gaXN0YW5idWwgaWdub3JlIG5leHQKT2JqZWN0KF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siY29uc29sZUVycm9yIl0pKCdzdHlsZSBtdXN0IGJlIGFuIG9iamVjdCcsdGhpcyk7Ly8gaXN0YW5idWwgaWdub3JlIG5leHQKcmV0dXJuIGRhdGE7fWlmKHR5cGVvZiBkYXRhLmNsYXNzPT09J3N0cmluZycpey8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0Ck9iamVjdChfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImNvbnNvbGVFcnJvciJdKSgnY2xhc3MgbXVzdCBiZSBhbiBvYmplY3QnLHRoaXMpOy8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0CnJldHVybiBkYXRhO31pZihpc0Nzc0NvbG9yKGNvbG9yKSl7ZGF0YS5zdHlsZT1fX2Fzc2lnbih7fSxkYXRhLnN0eWxlLHsnYmFja2dyb3VuZC1jb2xvcic6IiIrY29sb3IsJ2JvcmRlci1jb2xvcic6IiIrY29sb3J9KTt9ZWxzZSBpZihjb2xvcil7ZGF0YS5jbGFzcz1fX2Fzc2lnbih7fSxkYXRhLmNsYXNzLChfYT17fSxfYVtjb2xvcl09dHJ1ZSxfYSkpO31yZXR1cm4gZGF0YTt9LHNldFRleHRDb2xvcjpmdW5jdGlvbiBzZXRUZXh0Q29sb3IoY29sb3IsZGF0YSl7dmFyIF9hO2lmKGRhdGE9PT12b2lkIDApe2RhdGE9e307fWlmKHR5cGVvZiBkYXRhLnN0eWxlPT09J3N0cmluZycpey8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0Ck9iamVjdChfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImNvbnNvbGVFcnJvciJdKSgnc3R5bGUgbXVzdCBiZSBhbiBvYmplY3QnLHRoaXMpOy8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0CnJldHVybiBkYXRhO31pZih0eXBlb2YgZGF0YS5jbGFzcz09PSdzdHJpbmcnKXsvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dApPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJjb25zb2xlRXJyb3IiXSkoJ2NsYXNzIG11c3QgYmUgYW4gb2JqZWN0Jyx0aGlzKTsvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dApyZXR1cm4gZGF0YTt9aWYoaXNDc3NDb2xvcihjb2xvcikpe2RhdGEuc3R5bGU9X19hc3NpZ24oe30sZGF0YS5zdHlsZSx7Y29sb3I6IiIrY29sb3IsJ2NhcmV0LWNvbG9yJzoiIitjb2xvcn0pO31lbHNlIGlmKGNvbG9yKXt2YXIgX2I9X19yZWFkKGNvbG9yLnRvU3RyaW5nKCkudHJpbSgpLnNwbGl0KCcgJywyKSwyKSxjb2xvck5hbWU9X2JbMF0sY29sb3JNb2RpZmllcj1fYlsxXTtkYXRhLmNsYXNzPV9fYXNzaWduKHt9LGRhdGEuY2xhc3MsKF9hPXt9LF9hW2NvbG9yTmFtZSsnLS10ZXh0J109dHJ1ZSxfYSkpO2lmKGNvbG9yTW9kaWZpZXIpe2RhdGEuY2xhc3NbJ3RleHQtLScrY29sb3JNb2RpZmllcl09dHJ1ZTt9fXJldHVybiBkYXRhO319fSk7LyoqKi99LC8qKiovIi4vc3JjL21peGlucy9jb21wYXJhYmxlL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvY29tcGFyYWJsZS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTWl4aW5zQ29tcGFyYWJsZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISB2dWUgKi8idnVlIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09dnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdC5hLmV4dGVuZCh7bmFtZTonY29tcGFyYWJsZScscHJvcHM6e3ZhbHVlQ29tcGFyYXRvcjp7dHlwZTpGdW5jdGlvbixkZWZhdWx0Ol91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVlcEVxdWFsIl19fX0pOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvZGVsYXlhYmxlL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL21peGlucy9kZWxheWFibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTWl4aW5zRGVsYXlhYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qKgogKiBEZWxheWFibGUKICoKICogQG1peGluCiAqCiAqIENoYW5nZXMgdGhlIG9wZW4gb3IgY2xvc2UgZGVsYXkgdGltZSBmb3IgZWxlbWVudHMKICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09dnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdC5hLmV4dGVuZCgpLmV4dGVuZCh7bmFtZTonZGVsYXlhYmxlJyxwcm9wczp7b3BlbkRlbGF5Ont0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjB9LGNsb3NlRGVsYXk6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MH19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntvcGVuVGltZW91dDp1bmRlZmluZWQsY2xvc2VUaW1lb3V0OnVuZGVmaW5lZH07fSxtZXRob2RzOnsvKioKICAgICAqIENsZWFyIGFueSBwZW5kaW5nIGRlbGF5IHRpbWVycyBmcm9tIGV4ZWN1dGluZwogICAgICovY2xlYXJEZWxheTpmdW5jdGlvbiBjbGVhckRlbGF5KCl7Y2xlYXJUaW1lb3V0KHRoaXMub3BlblRpbWVvdXQpO2NsZWFyVGltZW91dCh0aGlzLmNsb3NlVGltZW91dCk7fSwvKioKICAgICAqIFJ1bnMgY2FsbGJhY2sgYWZ0ZXIgYSBzcGVjaWZpZWQgZGVsYXkKICAgICAqL3J1bkRlbGF5OmZ1bmN0aW9uIHJ1bkRlbGF5KHR5cGUsY2Ipe3ZhciBfdGhpcz10aGlzO3RoaXMuY2xlYXJEZWxheSgpO3ZhciBkZWxheT1wYXJzZUludCh0aGlzW3R5cGUrIkRlbGF5Il0sMTApO3RoaXNbdHlwZSsiVGltZW91dCJdPXNldFRpbWVvdXQoY2J8fGZ1bmN0aW9uKCl7X3RoaXMuaXNBY3RpdmU9e29wZW46dHJ1ZSxjbG9zZTpmYWxzZX1bdHlwZV07fSxkZWxheSk7fX19KTsvKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL2RlcGVuZGVudC9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvZGVwZW5kZW50L2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY01peGluc0RlcGVuZGVudEluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpO3ZhciBfX3JlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19yZWFkfHxmdW5jdGlvbihvLG4pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl07aWYoIW0pcmV0dXJuIG87dmFyIGk9bS5jYWxsKG8pLHIsYXI9W10sZTt0cnl7d2hpbGUoKG49PT12b2lkIDB8fG4tLT4wKSYmIShyPWkubmV4dCgpKS5kb25lKXthci5wdXNoKHIudmFsdWUpO319Y2F0Y2goZXJyb3Ipe2U9e2Vycm9yOmVycm9yfTt9ZmluYWxseXt0cnl7aWYociYmIXIuZG9uZSYmKG09aVsicmV0dXJuIl0pKW0uY2FsbChpKTt9ZmluYWxseXtpZihlKXRocm93IGUuZXJyb3I7fX1yZXR1cm4gYXI7fTt2YXIgX19zcHJlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19zcHJlYWR8fGZ1bmN0aW9uKCl7Zm9yKHZhciBhcj1bXSxpPTA7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7YXI9YXIuY29uY2F0KF9fcmVhZChhcmd1bWVudHNbaV0pKTt9cmV0dXJuIGFyO307ZnVuY3Rpb24gc2VhcmNoQ2hpbGRyZW4oY2hpbGRyZW4pe3ZhciByZXN1bHRzPVtdO2Zvcih2YXIgaW5kZXg9MDtpbmRleDxjaGlsZHJlbi5sZW5ndGg7aW5kZXgrKyl7dmFyIGNoaWxkPWNoaWxkcmVuW2luZGV4XTtpZihjaGlsZC5pc0FjdGl2ZSYmY2hpbGQuaXNEZXBlbmRlbnQpe3Jlc3VsdHMucHVzaChjaGlsZCk7fWVsc2V7cmVzdWx0cy5wdXNoLmFwcGx5KHJlc3VsdHMsX19zcHJlYWQoc2VhcmNoQ2hpbGRyZW4oY2hpbGQuJGNoaWxkcmVuKSkpO319cmV0dXJuIHJlc3VsdHM7fS8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKCkuZXh0ZW5kKHtuYW1lOidkZXBlbmRlbnQnLGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntjbG9zZURlcGVuZGVudHM6dHJ1ZSxpc0FjdGl2ZTpmYWxzZSxpc0RlcGVuZGVudDp0cnVlfTt9LHdhdGNoOntpc0FjdGl2ZTpmdW5jdGlvbiBpc0FjdGl2ZSh2YWwpe2lmKHZhbClyZXR1cm47dmFyIG9wZW5EZXBlbmRlbnRzPXRoaXMuZ2V0T3BlbkRlcGVuZGVudHMoKTtmb3IodmFyIGluZGV4PTA7aW5kZXg8b3BlbkRlcGVuZGVudHMubGVuZ3RoO2luZGV4Kyspe29wZW5EZXBlbmRlbnRzW2luZGV4XS5pc0FjdGl2ZT1mYWxzZTt9fX0sbWV0aG9kczp7Z2V0T3BlbkRlcGVuZGVudHM6ZnVuY3Rpb24gZ2V0T3BlbkRlcGVuZGVudHMoKXtpZih0aGlzLmNsb3NlRGVwZW5kZW50cylyZXR1cm4gc2VhcmNoQ2hpbGRyZW4odGhpcy4kY2hpbGRyZW4pO3JldHVybltdO30sZ2V0T3BlbkRlcGVuZGVudEVsZW1lbnRzOmZ1bmN0aW9uIGdldE9wZW5EZXBlbmRlbnRFbGVtZW50cygpe3ZhciByZXN1bHQ9W107dmFyIG9wZW5EZXBlbmRlbnRzPXRoaXMuZ2V0T3BlbkRlcGVuZGVudHMoKTtmb3IodmFyIGluZGV4PTA7aW5kZXg8b3BlbkRlcGVuZGVudHMubGVuZ3RoO2luZGV4Kyspe3Jlc3VsdC5wdXNoLmFwcGx5KHJlc3VsdCxfX3NwcmVhZChvcGVuRGVwZW5kZW50c1tpbmRleF0uZ2V0Q2xpY2thYmxlRGVwZW5kZW50RWxlbWVudHMoKSkpO31yZXR1cm4gcmVzdWx0O30sZ2V0Q2xpY2thYmxlRGVwZW5kZW50RWxlbWVudHM6ZnVuY3Rpb24gZ2V0Q2xpY2thYmxlRGVwZW5kZW50RWxlbWVudHMoKXt2YXIgcmVzdWx0PVt0aGlzLiRlbF07aWYodGhpcy4kcmVmcy5jb250ZW50KXJlc3VsdC5wdXNoKHRoaXMuJHJlZnMuY29udGVudCk7aWYodGhpcy5vdmVybGF5KXJlc3VsdC5wdXNoKHRoaXMub3ZlcmxheS4kZWwpO3Jlc3VsdC5wdXNoLmFwcGx5KHJlc3VsdCxfX3NwcmVhZCh0aGlzLmdldE9wZW5EZXBlbmRlbnRFbGVtZW50cygpKSk7cmV0dXJuIHJlc3VsdDt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvZGV0YWNoYWJsZS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbWl4aW5zL2RldGFjaGFibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY01peGluc0RldGFjaGFibGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2Jvb3RhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vYm9vdGFibGUgKi8iLi9zcmMvbWl4aW5zL2Jvb3RhYmxlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7ZnVuY3Rpb24gX3R5cGVvZihvYmope2lmKHR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZfdHlwZW9mMihTeW1ib2wuaXRlcmF0b3IpPT09InN5bWJvbCIpe190eXBlb2Y9ZnVuY3Rpb24gX3R5cGVvZihvYmope3JldHVybiBfdHlwZW9mMihvYmopO307fWVsc2V7X3R5cGVvZj1mdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIG9iaiYmdHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9iai5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmb2JqIT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjpfdHlwZW9mMihvYmopO307fXJldHVybiBfdHlwZW9mKG9iaik7fS8vIE1peGlucwovLyBVdGlsaXRpZXMKZnVuY3Rpb24gdmFsaWRhdGVBdHRhY2hUYXJnZXQodmFsKXt2YXIgdHlwZT1fdHlwZW9mKHZhbCk7aWYodHlwZT09PSdib29sZWFuJ3x8dHlwZT09PSdzdHJpbmcnKXJldHVybiB0cnVlO3JldHVybiB2YWwubm9kZVR5cGU9PT1Ob2RlLkVMRU1FTlRfTk9ERTt9LyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoX2Jvb3RhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOidkZXRhY2hhYmxlJyxwcm9wczp7YXR0YWNoOntkZWZhdWx0OmZhbHNlLHZhbGlkYXRvcjp2YWxpZGF0ZUF0dGFjaFRhcmdldH0sY29udGVudENsYXNzOnt0eXBlOlN0cmluZyxkZWZhdWx0OicnfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2FjdGl2YXRvck5vZGU6bnVsbCxoYXNEZXRhY2hlZDpmYWxzZX07fSx3YXRjaDp7YXR0YWNoOmZ1bmN0aW9uIGF0dGFjaCgpe3RoaXMuaGFzRGV0YWNoZWQ9ZmFsc2U7dGhpcy5pbml0RGV0YWNoKCk7fSxoYXNDb250ZW50Oidpbml0RGV0YWNoJ30sYmVmb3JlTW91bnQ6ZnVuY3Rpb24gYmVmb3JlTW91bnQoKXt2YXIgX3RoaXM9dGhpczt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe2lmKF90aGlzLmFjdGl2YXRvck5vZGUpe3ZhciBhY3RpdmF0b3I9QXJyYXkuaXNBcnJheShfdGhpcy5hY3RpdmF0b3JOb2RlKT9fdGhpcy5hY3RpdmF0b3JOb2RlOltfdGhpcy5hY3RpdmF0b3JOb2RlXTthY3RpdmF0b3IuZm9yRWFjaChmdW5jdGlvbihub2RlKXtpZighbm9kZS5lbG0pcmV0dXJuO2lmKCFfdGhpcy4kZWwucGFyZW50Tm9kZSlyZXR1cm47dmFyIHRhcmdldD1fdGhpcy4kZWw9PT1fdGhpcy4kZWwucGFyZW50Tm9kZS5maXJzdENoaWxkP190aGlzLiRlbDpfdGhpcy4kZWwubmV4dFNpYmxpbmc7X3RoaXMuJGVsLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5vZGUuZWxtLHRhcmdldCk7fSk7fX0pO30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dGhpcy5oYXNDb250ZW50JiZ0aGlzLmluaXREZXRhY2goKTt9LGRlYWN0aXZhdGVkOmZ1bmN0aW9uIGRlYWN0aXZhdGVkKCl7dGhpcy5pc0FjdGl2ZT1mYWxzZTt9LGJlZm9yZURlc3Ryb3k6ZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpey8vIElFMTEgRml4CnRyeXtpZih0aGlzLiRyZWZzLmNvbnRlbnQmJnRoaXMuJHJlZnMuY29udGVudC5wYXJlbnROb2RlKXt0aGlzLiRyZWZzLmNvbnRlbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLiRyZWZzLmNvbnRlbnQpO31pZih0aGlzLmFjdGl2YXRvck5vZGUpe3ZhciBhY3RpdmF0b3I9QXJyYXkuaXNBcnJheSh0aGlzLmFjdGl2YXRvck5vZGUpP3RoaXMuYWN0aXZhdG9yTm9kZTpbdGhpcy5hY3RpdmF0b3JOb2RlXTthY3RpdmF0b3IuZm9yRWFjaChmdW5jdGlvbihub2RlKXtub2RlLmVsbSYmbm9kZS5lbG0ucGFyZW50Tm9kZSYmbm9kZS5lbG0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlLmVsbSk7fSk7fX1jYXRjaChlKXtjb25zb2xlLmxvZyhlKTt9fSxtZXRob2RzOntnZXRTY29wZUlkQXR0cnM6ZnVuY3Rpb24gZ2V0U2NvcGVJZEF0dHJzKCl7dmFyIF9hO3ZhciBzY29wZUlkPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKHRoaXMuJHZub2RlLCdjb250ZXh0LiRvcHRpb25zLl9zY29wZUlkJyk7cmV0dXJuIHNjb3BlSWQmJihfYT17fSxfYVtzY29wZUlkXT0nJyxfYSk7fSxpbml0RGV0YWNoOmZ1bmN0aW9uIGluaXREZXRhY2goKXtpZih0aGlzLl9pc0Rlc3Ryb3llZHx8IXRoaXMuJHJlZnMuY29udGVudHx8dGhpcy5oYXNEZXRhY2hlZHx8Ly8gTGVhdmUgbWVudSBpbiBwbGFjZSBpZiBhdHRhY2hlZAovLyBhbmQgZGV2IGhhcyBub3QgY2hhbmdlZCB0YXJnZXQKdGhpcy5hdHRhY2g9PT0nJ3x8Ly8gSWYgdXNlZCBhcyBhIGJvb2xlYW4gcHJvcCAoPHYtbWVudSBhdHRhY2g+KQp0aGlzLmF0dGFjaD09PXRydWV8fC8vIElmIGJvdW5kIHRvIGEgYm9vbGVhbiAoPHYtbWVudSA6YXR0YWNoPSJ0cnVlIj4pCnRoaXMuYXR0YWNoPT09J2F0dGFjaCcvLyBJZiBib3VuZCBhcyBib29sZWFuIHByb3AgaW4gcHVnICh2LW1lbnUoYXR0YWNoKSkKKXJldHVybjt2YXIgdGFyZ2V0O2lmKHRoaXMuYXR0YWNoPT09ZmFsc2Upey8vIERlZmF1bHQsIGRldGFjaCB0byBhcHAKdGFyZ2V0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWFwcF0nKTt9ZWxzZSBpZih0eXBlb2YgdGhpcy5hdHRhY2g9PT0nc3RyaW5nJyl7Ly8gQ1NTIHNlbGVjdG9yCnRhcmdldD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuYXR0YWNoKTt9ZWxzZXsvLyBET00gRWxlbWVudAp0YXJnZXQ9dGhpcy5hdHRhY2g7fWlmKCF0YXJnZXQpe09iamVjdChfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImNvbnNvbGVXYXJuIl0pKCJVbmFibGUgdG8gbG9jYXRlIHRhcmdldCAiKyh0aGlzLmF0dGFjaHx8J1tkYXRhLWFwcF0nKSx0aGlzKTtyZXR1cm47fXRhcmdldC5pbnNlcnRCZWZvcmUodGhpcy4kcmVmcy5jb250ZW50LHRhcmdldC5maXJzdENoaWxkKTt0aGlzLmhhc0RldGFjaGVkPXRydWU7fX19KTsvKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL2VsZXZhdGFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL21peGlucy9lbGV2YXRhYmxlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNNaXhpbnNFbGV2YXRhYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09dnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdC5hLmV4dGVuZCh7bmFtZTonZWxldmF0YWJsZScscHJvcHM6e2VsZXZhdGlvbjpbTnVtYmVyLFN0cmluZ119LGNvbXB1dGVkOntjb21wdXRlZEVsZXZhdGlvbjpmdW5jdGlvbiBjb21wdXRlZEVsZXZhdGlvbigpe3JldHVybiB0aGlzLmVsZXZhdGlvbjt9LGVsZXZhdGlvbkNsYXNzZXM6ZnVuY3Rpb24gZWxldmF0aW9uQ2xhc3Nlcygpe3ZhciBfYTt2YXIgZWxldmF0aW9uPXRoaXMuY29tcHV0ZWRFbGV2YXRpb247aWYoZWxldmF0aW9uPT1udWxsKXJldHVybnt9O2lmKGlzTmFOKHBhcnNlSW50KGVsZXZhdGlvbikpKXJldHVybnt9O3JldHVybiBfYT17fSxfYVsiZWxldmF0aW9uLSIrdGhpcy5lbGV2YXRpb25dPXRydWUsX2E7fX19KTsvKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL2ZpbHRlcmFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL21peGlucy9maWx0ZXJhYmxlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNNaXhpbnNGaWx0ZXJhYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09dnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdC5hLmV4dGVuZCh7bmFtZTonZmlsdGVyYWJsZScscHJvcHM6e25vRGF0YVRleHQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyR2dWV0aWZ5Lm5vRGF0YVRleHQnfX19KTsvKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL2dyb3VwYWJsZS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvZ3JvdXBhYmxlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZmFjdG9yeSwgZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY01peGluc0dyb3VwYWJsZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZmFjdG9yeSIsZnVuY3Rpb24oKXtyZXR1cm4gZmFjdG9yeTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfcmVnaXN0cmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9yZWdpc3RyYWJsZSAqLyIuL3NyYy9taXhpbnMvcmVnaXN0cmFibGUvaW5kZXgudHMiKTsvLyBNaXhpbnMKZnVuY3Rpb24gZmFjdG9yeShuYW1lc3BhY2UsY2hpbGQscGFyZW50KXsvLyBUT0RPOiB0cyAzLjQgYnJva2UgZGlyZWN0bHkgcmV0dXJuaW5nIHRoaXMKdmFyIFI9T2JqZWN0KF9yZWdpc3RyYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJpbmplY3QiXSkobmFtZXNwYWNlLGNoaWxkLHBhcmVudCkuZXh0ZW5kKHtuYW1lOidncm91cGFibGUnLHByb3BzOnthY3RpdmVDbGFzczp7dHlwZTpTdHJpbmcsZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe2lmKCF0aGlzW25hbWVzcGFjZV0pcmV0dXJuIHVuZGVmaW5lZDtyZXR1cm4gdGhpc1tuYW1lc3BhY2VdLmFjdGl2ZUNsYXNzO319LGRpc2FibGVkOkJvb2xlYW59LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntpc0FjdGl2ZTpmYWxzZX07fSxjb21wdXRlZDp7Z3JvdXBDbGFzc2VzOmZ1bmN0aW9uIGdyb3VwQ2xhc3Nlcygpe3ZhciBfYTtpZighdGhpcy5hY3RpdmVDbGFzcylyZXR1cm57fTtyZXR1cm4gX2E9e30sX2FbdGhpcy5hY3RpdmVDbGFzc109dGhpcy5pc0FjdGl2ZSxfYTt9fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXt0aGlzW25hbWVzcGFjZV0mJnRoaXNbbmFtZXNwYWNlXS5yZWdpc3Rlcih0aGlzKTt9LGJlZm9yZURlc3Ryb3k6ZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpe3RoaXNbbmFtZXNwYWNlXSYmdGhpc1tuYW1lc3BhY2VdLnVucmVnaXN0ZXIodGhpcyk7fSxtZXRob2RzOnt0b2dnbGU6ZnVuY3Rpb24gdG9nZ2xlKCl7dGhpcy4kZW1pdCgnY2hhbmdlJyk7fX19KTtyZXR1cm4gUjt9LyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlZGVjbGFyZSAqL3ZhciBHcm91cGFibGU9ZmFjdG9yeSgnaXRlbUdyb3VwJyk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1Hcm91cGFibGU7LyoqKi99LC8qKiovIi4vc3JjL21peGlucy9sb2FkYWJsZS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL21peGlucy9sb2FkYWJsZS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY01peGluc0xvYWRhYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9jb21wb25lbnRzX1ZQcm9ncmVzc0xpbmVhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL2NvbXBvbmVudHMvVlByb2dyZXNzTGluZWFyICovIi4vc3JjL2NvbXBvbmVudHMvVlByb2dyZXNzTGluZWFyL2luZGV4LnRzIik7LyoqCiAqIExvYWRhYmxlCiAqCiAqIEBtaXhpbgogKgogKiBVc2VkIHRvIGFkZCBsaW5lYXIgcHJvZ3Jlc3MgYmFyIHRvIGNvbXBvbmVudHMKICogQ2FuIHVzZSBhIGRlZmF1bHQgYmFyIHdpdGggYSBzcGVjaWZpYyBjb2xvcgogKiBvciBkZXNpZ25hdGUgYSBjdXN0b20gcHJvZ3Jlc3MgbGluZWFyIGJhcgogKi8gLyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKCkuZXh0ZW5kKHtuYW1lOidsb2FkYWJsZScscHJvcHM6e2xvYWRpbmc6e3R5cGU6W0Jvb2xlYW4sU3RyaW5nXSxkZWZhdWx0OmZhbHNlfSxsb2FkZXJIZWlnaHQ6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6Mn19LG1ldGhvZHM6e2dlblByb2dyZXNzOmZ1bmN0aW9uIGdlblByb2dyZXNzKCl7aWYodGhpcy5sb2FkaW5nPT09ZmFsc2UpcmV0dXJuIG51bGw7cmV0dXJuIHRoaXMuJHNsb3RzLnByb2dyZXNzfHx0aGlzLiRjcmVhdGVFbGVtZW50KF9jb21wb25lbnRzX1ZQcm9ncmVzc0xpbmVhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0se3Byb3BzOnthYnNvbHV0ZTp0cnVlLGNvbG9yOnRoaXMubG9hZGluZz09PXRydWV8fHRoaXMubG9hZGluZz09PScnP3RoaXMuY29sb3J8fCdwcmltYXJ5Jzp0aGlzLmxvYWRpbmcsaGVpZ2h0OnRoaXMubG9hZGVySGVpZ2h0LGluZGV0ZXJtaW5hdGU6dHJ1ZX19KTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvbG9jYWxhYmxlL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL21peGlucy9sb2NhbGFibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTWl4aW5zTG9jYWxhYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09dnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdC5hLmV4dGVuZCh7bmFtZTonbG9jYWxhYmxlJyxwcm9wczp7bG9jYWxlOlN0cmluZ30sY29tcHV0ZWQ6e2N1cnJlbnRMb2NhbGU6ZnVuY3Rpb24gY3VycmVudExvY2FsZSgpe3JldHVybiB0aGlzLmxvY2FsZXx8dGhpcy4kdnVldGlmeS5sYW5nLmN1cnJlbnQ7fX19KTsvKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL21lYXN1cmFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL21peGlucy9tZWFzdXJhYmxlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNNaXhpbnNNZWFzdXJhYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyk7Ly8gSGVscGVycwovLyBUeXBlcwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fX2RlZmF1bHQuYS5leHRlbmQoe25hbWU6J21lYXN1cmFibGUnLHByb3BzOntoZWlnaHQ6W051bWJlcixTdHJpbmddLG1heEhlaWdodDpbTnVtYmVyLFN0cmluZ10sbWF4V2lkdGg6W051bWJlcixTdHJpbmddLG1pbkhlaWdodDpbTnVtYmVyLFN0cmluZ10sbWluV2lkdGg6W051bWJlcixTdHJpbmddLHdpZHRoOltOdW1iZXIsU3RyaW5nXX0sY29tcHV0ZWQ6e21lYXN1cmFibGVTdHlsZXM6ZnVuY3Rpb24gbWVhc3VyYWJsZVN0eWxlcygpe3ZhciBzdHlsZXM9e307dmFyIGhlaWdodD1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuaGVpZ2h0KTt2YXIgbWluSGVpZ2h0PU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5taW5IZWlnaHQpO3ZhciBtaW5XaWR0aD1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMubWluV2lkdGgpO3ZhciBtYXhIZWlnaHQ9T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siY29udmVydFRvVW5pdCJdKSh0aGlzLm1heEhlaWdodCk7dmFyIG1heFdpZHRoPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5tYXhXaWR0aCk7dmFyIHdpZHRoPU9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy53aWR0aCk7aWYoaGVpZ2h0KXN0eWxlcy5oZWlnaHQ9aGVpZ2h0O2lmKG1pbkhlaWdodClzdHlsZXMubWluSGVpZ2h0PW1pbkhlaWdodDtpZihtaW5XaWR0aClzdHlsZXMubWluV2lkdGg9bWluV2lkdGg7aWYobWF4SGVpZ2h0KXN0eWxlcy5tYXhIZWlnaHQ9bWF4SGVpZ2h0O2lmKG1heFdpZHRoKXN0eWxlcy5tYXhXaWR0aD1tYXhXaWR0aDtpZih3aWR0aClzdHlsZXMud2lkdGg9d2lkdGg7cmV0dXJuIHN0eWxlczt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvbWVudWFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvbWVudWFibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNNaXhpbnNNZW51YWJsZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfcG9zaXRpb25hYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vcG9zaXRpb25hYmxlICovIi4vc3JjL21peGlucy9wb3NpdGlvbmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfc3RhY2thYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vc3RhY2thYmxlICovIi4vc3JjL21peGlucy9zdGFja2FibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfYWN0aXZhdGFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9hY3RpdmF0YWJsZSAqLyIuL3NyYy9taXhpbnMvYWN0aXZhdGFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL21peGlucyAqLyIuL3NyYy91dGlsL21peGlucy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7Ly8gTWl4aW5zCi8vIFV0aWxpdGllcwovLyBUeXBlcwp2YXIgYmFzZU1peGlucz1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoX3N0YWNrYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sX3Bvc2l0aW9uYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0sX2FjdGl2YXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSk7LyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1iYXNlTWl4aW5zLmV4dGVuZCgpLmV4dGVuZCh7bmFtZTonbWVudWFibGUnLHByb3BzOnthbGxvd092ZXJmbG93OkJvb2xlYW4sbGlnaHQ6Qm9vbGVhbixkYXJrOkJvb2xlYW4sbWF4V2lkdGg6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6J2F1dG8nfSxtaW5XaWR0aDpbTnVtYmVyLFN0cmluZ10sbnVkZ2VCb3R0b206e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MH0sbnVkZ2VMZWZ0Ont0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjB9LG51ZGdlUmlnaHQ6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MH0sbnVkZ2VUb3A6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MH0sbnVkZ2VXaWR0aDp7dHlwZTpbTnVtYmVyLFN0cmluZ10sZGVmYXVsdDowfSxvZmZzZXRPdmVyZmxvdzpCb29sZWFuLG9wZW5PbkNsaWNrOkJvb2xlYW4scG9zaXRpb25YOnt0eXBlOk51bWJlcixkZWZhdWx0Om51bGx9LHBvc2l0aW9uWTp7dHlwZTpOdW1iZXIsZGVmYXVsdDpudWxsfSx6SW5kZXg6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6bnVsbH19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnthYnNvbHV0ZVg6MCxhYnNvbHV0ZVk6MCxhY3RpdmF0ZWRCeTpudWxsLGFjdGl2YXRvckZpeGVkOmZhbHNlLGRpbWVuc2lvbnM6e2FjdGl2YXRvcjp7dG9wOjAsbGVmdDowLGJvdHRvbTowLHJpZ2h0OjAsd2lkdGg6MCxoZWlnaHQ6MCxvZmZzZXRUb3A6MCxzY3JvbGxIZWlnaHQ6MCxvZmZzZXRMZWZ0OjB9LGNvbnRlbnQ6e3RvcDowLGxlZnQ6MCxib3R0b206MCxyaWdodDowLHdpZHRoOjAsaGVpZ2h0OjAsb2Zmc2V0VG9wOjAsc2Nyb2xsSGVpZ2h0OjB9fSxoYXNKdXN0Rm9jdXNlZDpmYWxzZSxoYXNXaW5kb3c6ZmFsc2UsaW5wdXRBY3RpdmF0b3I6ZmFsc2UsaXNDb250ZW50QWN0aXZlOmZhbHNlLHBhZ2VXaWR0aDowLHBhZ2VZT2Zmc2V0OjAsc3RhY2tDbGFzczondi1tZW51X19jb250ZW50LS1hY3RpdmUnLHN0YWNrTWluWkluZGV4OjZ9O30sY29tcHV0ZWQ6e2NvbXB1dGVkTGVmdDpmdW5jdGlvbiBjb21wdXRlZExlZnQoKXt2YXIgYT10aGlzLmRpbWVuc2lvbnMuYWN0aXZhdG9yO3ZhciBjPXRoaXMuZGltZW5zaW9ucy5jb250ZW50O3ZhciBhY3RpdmF0b3JMZWZ0PSh0aGlzLmF0dGFjaCE9PWZhbHNlP2Eub2Zmc2V0TGVmdDphLmxlZnQpfHwwO3ZhciBtaW5XaWR0aD1NYXRoLm1heChhLndpZHRoLGMud2lkdGgpO3ZhciBsZWZ0PTA7bGVmdCs9dGhpcy5sZWZ0P2FjdGl2YXRvckxlZnQtKG1pbldpZHRoLWEud2lkdGgpOmFjdGl2YXRvckxlZnQ7aWYodGhpcy5vZmZzZXRYKXt2YXIgbWF4V2lkdGg9aXNOYU4oTnVtYmVyKHRoaXMubWF4V2lkdGgpKT9hLndpZHRoOk1hdGgubWluKGEud2lkdGgsTnVtYmVyKHRoaXMubWF4V2lkdGgpKTtsZWZ0Kz10aGlzLmxlZnQ/LW1heFdpZHRoOmEud2lkdGg7fWlmKHRoaXMubnVkZ2VMZWZ0KWxlZnQtPXBhcnNlSW50KHRoaXMubnVkZ2VMZWZ0KTtpZih0aGlzLm51ZGdlUmlnaHQpbGVmdCs9cGFyc2VJbnQodGhpcy5udWRnZVJpZ2h0KTtyZXR1cm4gbGVmdDt9LGNvbXB1dGVkVG9wOmZ1bmN0aW9uIGNvbXB1dGVkVG9wKCl7dmFyIGE9dGhpcy5kaW1lbnNpb25zLmFjdGl2YXRvcjt2YXIgYz10aGlzLmRpbWVuc2lvbnMuY29udGVudDt2YXIgdG9wPTA7aWYodGhpcy50b3ApdG9wKz1hLmhlaWdodC1jLmhlaWdodDtpZih0aGlzLmF0dGFjaCE9PWZhbHNlKXRvcCs9YS5vZmZzZXRUb3A7ZWxzZSB0b3ArPWEudG9wK3RoaXMucGFnZVlPZmZzZXQ7aWYodGhpcy5vZmZzZXRZKXRvcCs9dGhpcy50b3A/LWEuaGVpZ2h0OmEuaGVpZ2h0O2lmKHRoaXMubnVkZ2VUb3ApdG9wLT1wYXJzZUludCh0aGlzLm51ZGdlVG9wKTtpZih0aGlzLm51ZGdlQm90dG9tKXRvcCs9cGFyc2VJbnQodGhpcy5udWRnZUJvdHRvbSk7cmV0dXJuIHRvcDt9LGhhc0FjdGl2YXRvcjpmdW5jdGlvbiBoYXNBY3RpdmF0b3IoKXtyZXR1cm4hIXRoaXMuJHNsb3RzLmFjdGl2YXRvcnx8ISF0aGlzLiRzY29wZWRTbG90cy5hY3RpdmF0b3J8fCEhdGhpcy5hY3RpdmF0b3J8fCEhdGhpcy5pbnB1dEFjdGl2YXRvcjt9fSx3YXRjaDp7ZGlzYWJsZWQ6ZnVuY3Rpb24gZGlzYWJsZWQodmFsKXt2YWwmJnRoaXMuY2FsbERlYWN0aXZhdGUoKTt9LGlzQWN0aXZlOmZ1bmN0aW9uIGlzQWN0aXZlKHZhbCl7aWYodGhpcy5kaXNhYmxlZClyZXR1cm47dmFsP3RoaXMuY2FsbEFjdGl2YXRlKCk6dGhpcy5jYWxsRGVhY3RpdmF0ZSgpO30scG9zaXRpb25YOid1cGRhdGVEaW1lbnNpb25zJyxwb3NpdGlvblk6J3VwZGF0ZURpbWVuc2lvbnMnfSxiZWZvcmVNb3VudDpmdW5jdGlvbiBiZWZvcmVNb3VudCgpe3RoaXMuaGFzV2luZG93PXR5cGVvZiB3aW5kb3chPT0ndW5kZWZpbmVkJzt9LG1ldGhvZHM6e2Fic29sdXRlUG9zaXRpb246ZnVuY3Rpb24gYWJzb2x1dGVQb3NpdGlvbigpe3JldHVybntvZmZzZXRUb3A6MCxvZmZzZXRMZWZ0OjAsc2Nyb2xsSGVpZ2h0OjAsdG9wOnRoaXMucG9zaXRpb25ZfHx0aGlzLmFic29sdXRlWSxib3R0b206dGhpcy5wb3NpdGlvbll8fHRoaXMuYWJzb2x1dGVZLGxlZnQ6dGhpcy5wb3NpdGlvblh8fHRoaXMuYWJzb2x1dGVYLHJpZ2h0OnRoaXMucG9zaXRpb25YfHx0aGlzLmFic29sdXRlWCxoZWlnaHQ6MCx3aWR0aDowfTt9LGFjdGl2YXRlOmZ1bmN0aW9uIGFjdGl2YXRlKCl7fSxjYWxjTGVmdDpmdW5jdGlvbiBjYWxjTGVmdChtZW51V2lkdGgpe3JldHVybiBPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJjb252ZXJ0VG9Vbml0Il0pKHRoaXMuYXR0YWNoIT09ZmFsc2U/dGhpcy5jb21wdXRlZExlZnQ6dGhpcy5jYWxjWE92ZXJmbG93KHRoaXMuY29tcHV0ZWRMZWZ0LG1lbnVXaWR0aCkpO30sY2FsY1RvcDpmdW5jdGlvbiBjYWxjVG9wKCl7cmV0dXJuIE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImNvbnZlcnRUb1VuaXQiXSkodGhpcy5hdHRhY2ghPT1mYWxzZT90aGlzLmNvbXB1dGVkVG9wOnRoaXMuY2FsY1lPdmVyZmxvdyh0aGlzLmNvbXB1dGVkVG9wKSk7fSxjYWxjWE92ZXJmbG93OmZ1bmN0aW9uIGNhbGNYT3ZlcmZsb3cobGVmdCxtZW51V2lkdGgpe3ZhciB4T3ZlcmZsb3c9bGVmdCttZW51V2lkdGgtdGhpcy5wYWdlV2lkdGgrMTI7aWYoKCF0aGlzLmxlZnR8fHRoaXMucmlnaHQpJiZ4T3ZlcmZsb3c+MCl7bGVmdD1NYXRoLm1heChsZWZ0LXhPdmVyZmxvdywwKTt9ZWxzZXtsZWZ0PU1hdGgubWF4KGxlZnQsMTIpO31yZXR1cm4gbGVmdCt0aGlzLmdldE9mZnNldExlZnQoKTt9LGNhbGNZT3ZlcmZsb3c6ZnVuY3Rpb24gY2FsY1lPdmVyZmxvdyh0b3Ape3ZhciBkb2N1bWVudEhlaWdodD10aGlzLmdldElubmVySGVpZ2h0KCk7dmFyIHRvVG9wPXRoaXMucGFnZVlPZmZzZXQrZG9jdW1lbnRIZWlnaHQ7dmFyIGFjdGl2YXRvcj10aGlzLmRpbWVuc2lvbnMuYWN0aXZhdG9yO3ZhciBjb250ZW50SGVpZ2h0PXRoaXMuZGltZW5zaW9ucy5jb250ZW50LmhlaWdodDt2YXIgdG90YWxIZWlnaHQ9dG9wK2NvbnRlbnRIZWlnaHQ7dmFyIGlzT3ZlcmZsb3dpbmc9dG9Ub3A8dG90YWxIZWlnaHQ7Ly8gSWYgb3ZlcmZsb3dpbmcgYm90dG9tIGFuZCBvZmZzZXQKLy8gVE9ETzogc2V0ICdib3R0b20nIHBvc2l0aW9uIGluc3RlYWQgb2YgJ3RvcCcKaWYoaXNPdmVyZmxvd2luZyYmdGhpcy5vZmZzZXRPdmVyZmxvdyYmLy8gSWYgd2UgZG9uJ3QgaGF2ZSBlbm91Z2ggcm9vbSB0byBvZmZzZXQKLy8gdGhlIG92ZXJmbG93LCBkb24ndCBvZmZzZXQKYWN0aXZhdG9yLnRvcD5jb250ZW50SGVpZ2h0KXt0b3A9dGhpcy5wYWdlWU9mZnNldCsoYWN0aXZhdG9yLnRvcC1jb250ZW50SGVpZ2h0KTsvLyBJZiBvdmVyZmxvd2luZyBib3R0b20KfWVsc2UgaWYoaXNPdmVyZmxvd2luZyYmIXRoaXMuYWxsb3dPdmVyZmxvdyl7dG9wPXRvVG9wLWNvbnRlbnRIZWlnaHQtMTI7Ly8gSWYgb3ZlcmZsb3dpbmcgdG9wCn1lbHNlIGlmKHRvcDx0aGlzLnBhZ2VZT2Zmc2V0JiYhdGhpcy5hbGxvd092ZXJmbG93KXt0b3A9dGhpcy5wYWdlWU9mZnNldCsxMjt9cmV0dXJuIHRvcDwxMj8xMjp0b3A7fSxjYWxsQWN0aXZhdGU6ZnVuY3Rpb24gY2FsbEFjdGl2YXRlKCl7aWYoIXRoaXMuaGFzV2luZG93KXJldHVybjt0aGlzLmFjdGl2YXRlKCk7fSxjYWxsRGVhY3RpdmF0ZTpmdW5jdGlvbiBjYWxsRGVhY3RpdmF0ZSgpe3RoaXMuaXNDb250ZW50QWN0aXZlPWZhbHNlO3RoaXMuZGVhY3RpdmF0ZSgpO30sY2hlY2tGb3JQYWdlWU9mZnNldDpmdW5jdGlvbiBjaGVja0ZvclBhZ2VZT2Zmc2V0KCl7aWYodGhpcy5oYXNXaW5kb3cpe3RoaXMucGFnZVlPZmZzZXQ9dGhpcy5hY3RpdmF0b3JGaXhlZD8wOnRoaXMuZ2V0T2Zmc2V0VG9wKCk7fX0sY2hlY2tBY3RpdmF0b3JGaXhlZDpmdW5jdGlvbiBjaGVja0FjdGl2YXRvckZpeGVkKCl7aWYodGhpcy5hdHRhY2ghPT1mYWxzZSlyZXR1cm47dmFyIGVsPXRoaXMuZ2V0QWN0aXZhdG9yKCk7d2hpbGUoZWwpe2lmKHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsKS5wb3NpdGlvbj09PSdmaXhlZCcpe3RoaXMuYWN0aXZhdG9yRml4ZWQ9dHJ1ZTtyZXR1cm47fWVsPWVsLm9mZnNldFBhcmVudDt9dGhpcy5hY3RpdmF0b3JGaXhlZD1mYWxzZTt9LGRlYWN0aXZhdGU6ZnVuY3Rpb24gZGVhY3RpdmF0ZSgpe30sZ2VuQWN0aXZhdG9yTGlzdGVuZXJzOmZ1bmN0aW9uIGdlbkFjdGl2YXRvckxpc3RlbmVycygpe3ZhciBfdGhpcz10aGlzO3ZhciBsaXN0ZW5lcnM9X2FjdGl2YXRhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXS5vcHRpb25zLm1ldGhvZHMuZ2VuQWN0aXZhdG9yTGlzdGVuZXJzLmNhbGwodGhpcyk7dmFyIG9uQ2xpY2s9bGlzdGVuZXJzLmNsaWNrO2xpc3RlbmVycy5jbGljaz1mdW5jdGlvbihlKXtpZihfdGhpcy5vcGVuT25DbGljayl7b25DbGljayYmb25DbGljayhlKTt9X3RoaXMuYWJzb2x1dGVYPWUuY2xpZW50WDtfdGhpcy5hYnNvbHV0ZVk9ZS5jbGllbnRZO307cmV0dXJuIGxpc3RlbmVyczt9LGdldElubmVySGVpZ2h0OmZ1bmN0aW9uIGdldElubmVySGVpZ2h0KCl7aWYoIXRoaXMuaGFzV2luZG93KXJldHVybiAwO3JldHVybiB3aW5kb3cuaW5uZXJIZWlnaHR8fGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQ7fSxnZXRPZmZzZXRMZWZ0OmZ1bmN0aW9uIGdldE9mZnNldExlZnQoKXtpZighdGhpcy5oYXNXaW5kb3cpcmV0dXJuIDA7cmV0dXJuIHdpbmRvdy5wYWdlWE9mZnNldHx8ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQ7fSxnZXRPZmZzZXRUb3A6ZnVuY3Rpb24gZ2V0T2Zmc2V0VG9wKCl7aWYoIXRoaXMuaGFzV2luZG93KXJldHVybiAwO3JldHVybiB3aW5kb3cucGFnZVlPZmZzZXR8fGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3A7fSxnZXRSb3VuZGVkQm91bmRlZENsaWVudFJlY3Q6ZnVuY3Rpb24gZ2V0Um91bmRlZEJvdW5kZWRDbGllbnRSZWN0KGVsKXt2YXIgcmVjdD1lbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtyZXR1cm57dG9wOk1hdGgucm91bmQocmVjdC50b3ApLGxlZnQ6TWF0aC5yb3VuZChyZWN0LmxlZnQpLGJvdHRvbTpNYXRoLnJvdW5kKHJlY3QuYm90dG9tKSxyaWdodDpNYXRoLnJvdW5kKHJlY3QucmlnaHQpLHdpZHRoOk1hdGgucm91bmQocmVjdC53aWR0aCksaGVpZ2h0Ok1hdGgucm91bmQocmVjdC5oZWlnaHQpfTt9LG1lYXN1cmU6ZnVuY3Rpb24gbWVhc3VyZShlbCl7aWYoIWVsfHwhdGhpcy5oYXNXaW5kb3cpcmV0dXJuIG51bGw7dmFyIHJlY3Q9dGhpcy5nZXRSb3VuZGVkQm91bmRlZENsaWVudFJlY3QoZWwpOy8vIEFjY291bnQgZm9yIGFjdGl2YXRvciBtYXJnaW4KaWYodGhpcy5hdHRhY2ghPT1mYWxzZSl7dmFyIHN0eWxlPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsKTtyZWN0LmxlZnQ9cGFyc2VJbnQoc3R5bGUubWFyZ2luTGVmdCk7cmVjdC50b3A9cGFyc2VJbnQoc3R5bGUubWFyZ2luVG9wKTt9cmV0dXJuIHJlY3Q7fSxzbmVha1BlZWs6ZnVuY3Rpb24gc25lYWtQZWVrKGNiKXt2YXIgX3RoaXM9dGhpcztyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKXt2YXIgZWw9X3RoaXMuJHJlZnMuY29udGVudDtpZighZWx8fGVsLnN0eWxlLmRpc3BsYXkhPT0nbm9uZScpe2NiKCk7cmV0dXJuO31lbC5zdHlsZS5kaXNwbGF5PSdpbmxpbmUtYmxvY2snO2NiKCk7ZWwuc3R5bGUuZGlzcGxheT0nbm9uZSc7fSk7fSxzdGFydFRyYW5zaXRpb246ZnVuY3Rpb24gc3RhcnRUcmFuc2l0aW9uKCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpe3JldHVybiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKXtfdGhpcy5pc0NvbnRlbnRBY3RpdmU9X3RoaXMuaGFzSnVzdEZvY3VzZWQ9X3RoaXMuaXNBY3RpdmU7cmVzb2x2ZSgpO30pO30pO30sdXBkYXRlRGltZW5zaW9uczpmdW5jdGlvbiB1cGRhdGVEaW1lbnNpb25zKCl7dmFyIF90aGlzPXRoaXM7dGhpcy5oYXNXaW5kb3c9dHlwZW9mIHdpbmRvdyE9PSd1bmRlZmluZWQnO3RoaXMuY2hlY2tBY3RpdmF0b3JGaXhlZCgpO3RoaXMuY2hlY2tGb3JQYWdlWU9mZnNldCgpO3RoaXMucGFnZVdpZHRoPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDt2YXIgZGltZW5zaW9ucz17fTsvLyBBY3RpdmF0b3Igc2hvdWxkIGFscmVhZHkgYmUgc2hvd24KaWYoIXRoaXMuaGFzQWN0aXZhdG9yfHx0aGlzLmFic29sdXRlKXtkaW1lbnNpb25zLmFjdGl2YXRvcj10aGlzLmFic29sdXRlUG9zaXRpb24oKTt9ZWxzZXt2YXIgYWN0aXZhdG9yPXRoaXMuZ2V0QWN0aXZhdG9yKCk7aWYoIWFjdGl2YXRvcilyZXR1cm47ZGltZW5zaW9ucy5hY3RpdmF0b3I9dGhpcy5tZWFzdXJlKGFjdGl2YXRvcik7ZGltZW5zaW9ucy5hY3RpdmF0b3Iub2Zmc2V0TGVmdD1hY3RpdmF0b3Iub2Zmc2V0TGVmdDtpZih0aGlzLmF0dGFjaCE9PWZhbHNlKXsvLyBhY2NvdW50IGZvciBjc3MgcGFkZGluZyBjYXVzaW5nIHRoaW5ncyB0byBub3QgbGluZSB1cAovLyB0aGlzIGlzIG1vc3RseSBmb3Igdi1hdXRvY29tcGxldGUsIGhvcGVmdWxseSBpdCB3b24ndCBicmVhayBhbnl0aGluZwpkaW1lbnNpb25zLmFjdGl2YXRvci5vZmZzZXRUb3A9YWN0aXZhdG9yLm9mZnNldFRvcDt9ZWxzZXtkaW1lbnNpb25zLmFjdGl2YXRvci5vZmZzZXRUb3A9MDt9fS8vIERpc3BsYXkgYW5kIGhpZGUgdG8gZ2V0IGRpbWVuc2lvbnMKdGhpcy5zbmVha1BlZWsoZnVuY3Rpb24oKXtkaW1lbnNpb25zLmNvbnRlbnQ9X3RoaXMubWVhc3VyZShfdGhpcy4kcmVmcy5jb250ZW50KTtfdGhpcy5kaW1lbnNpb25zPWRpbWVuc2lvbnM7fSk7fX19KTsvKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL292ZXJsYXlhYmxlL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbWl4aW5zL292ZXJsYXlhYmxlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTWl4aW5zT3ZlcmxheWFibGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2NvbXBvbmVudHNfVk92ZXJsYXlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9jb21wb25lbnRzL1ZPdmVybGF5ICovIi4vc3JjL2NvbXBvbmVudHMvVk92ZXJsYXkvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18pOy8vIENvbXBvbmVudHMKLy8gVXRpbGl0aWVzCi8vIFR5cGVzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09dnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19fZGVmYXVsdC5hLmV4dGVuZCgpLmV4dGVuZCh7bmFtZTonb3ZlcmxheWFibGUnLHByb3BzOntoaWRlT3ZlcmxheTpCb29sZWFuLG92ZXJsYXlDb2xvcjpTdHJpbmcsb3ZlcmxheU9wYWNpdHk6W051bWJlcixTdHJpbmddfSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57b3ZlcmxheTpudWxsfTt9LHdhdGNoOntoaWRlT3ZlcmxheTpmdW5jdGlvbiBoaWRlT3ZlcmxheSh2YWx1ZSl7aWYoIXRoaXMuaXNBY3RpdmUpcmV0dXJuO2lmKHZhbHVlKXRoaXMucmVtb3ZlT3ZlcmxheSgpO2Vsc2UgdGhpcy5nZW5PdmVybGF5KCk7fX0sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7dGhpcy5yZW1vdmVPdmVybGF5KCk7fSxtZXRob2RzOntjcmVhdGVPdmVybGF5OmZ1bmN0aW9uIGNyZWF0ZU92ZXJsYXkoKXt2YXIgb3ZlcmxheT1uZXcgX2NvbXBvbmVudHNfVk92ZXJsYXlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKHtwcm9wc0RhdGE6e2Fic29sdXRlOnRoaXMuYWJzb2x1dGUsdmFsdWU6ZmFsc2UsY29sb3I6dGhpcy5vdmVybGF5Q29sb3Isb3BhY2l0eTp0aGlzLm92ZXJsYXlPcGFjaXR5fX0pO292ZXJsYXkuJG1vdW50KCk7dmFyIHBhcmVudD10aGlzLmFic29sdXRlP3RoaXMuJGVsLnBhcmVudE5vZGU6ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtYXBwXScpO3BhcmVudCYmcGFyZW50Lmluc2VydEJlZm9yZShvdmVybGF5LiRlbCxwYXJlbnQuZmlyc3RDaGlsZCk7dGhpcy5vdmVybGF5PW92ZXJsYXk7fSxnZW5PdmVybGF5OmZ1bmN0aW9uIGdlbk92ZXJsYXkoKXt2YXIgX3RoaXM9dGhpczt0aGlzLmhpZGVTY3JvbGwoKTtpZih0aGlzLmhpZGVPdmVybGF5KXJldHVybjtpZighdGhpcy5vdmVybGF5KXRoaXMuY3JlYXRlT3ZlcmxheSgpO3JlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpe2lmKCFfdGhpcy5vdmVybGF5KXJldHVybjtpZihfdGhpcy5hY3RpdmVaSW5kZXghPT11bmRlZmluZWQpe190aGlzLm92ZXJsYXkuekluZGV4PVN0cmluZyhfdGhpcy5hY3RpdmVaSW5kZXgtMSk7fWVsc2UgaWYoX3RoaXMuJGVsKXtfdGhpcy5vdmVybGF5LnpJbmRleD1PYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJnZXRaSW5kZXgiXSkoX3RoaXMuJGVsKTt9X3RoaXMub3ZlcmxheS52YWx1ZT10cnVlO30pO3JldHVybiB0cnVlO30sLyoqIHJlbW92ZU92ZXJsYXkoZmFsc2UpIHdpbGwgbm90IHJlc3RvcmUgdGhlIHNjb2xsYmFyIGFmdGVyd2FyZHMgKi9yZW1vdmVPdmVybGF5OmZ1bmN0aW9uIHJlbW92ZU92ZXJsYXkoc2hvd1Njcm9sbCl7dmFyIF90aGlzPXRoaXM7aWYoc2hvd1Njcm9sbD09PXZvaWQgMCl7c2hvd1Njcm9sbD10cnVlO31pZih0aGlzLm92ZXJsYXkpe09iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImFkZE9uY2VFdmVudExpc3RlbmVyIl0pKHRoaXMub3ZlcmxheS4kZWwsJ3RyYW5zaXRpb25lbmQnLGZ1bmN0aW9uKCl7aWYoIV90aGlzLm92ZXJsYXl8fCFfdGhpcy5vdmVybGF5LiRlbHx8IV90aGlzLm92ZXJsYXkuJGVsLnBhcmVudE5vZGV8fF90aGlzLm92ZXJsYXkudmFsdWUpcmV0dXJuO190aGlzLm92ZXJsYXkuJGVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoX3RoaXMub3ZlcmxheS4kZWwpO190aGlzLm92ZXJsYXkuJGRlc3Ryb3koKTtfdGhpcy5vdmVybGF5PW51bGw7fSk7dGhpcy5vdmVybGF5LnZhbHVlPWZhbHNlO31zaG93U2Nyb2xsJiZ0aGlzLnNob3dTY3JvbGwoKTt9LHNjcm9sbExpc3RlbmVyOmZ1bmN0aW9uIHNjcm9sbExpc3RlbmVyKGUpe2lmKGUudHlwZT09PSdrZXlkb3duJyl7aWYoWydJTlBVVCcsJ1RFWFRBUkVBJywnU0VMRUNUJ10uaW5jbHVkZXMoZS50YXJnZXQudGFnTmFtZSl8fC8vIGh0dHBzOi8vZ2l0aHViLmNvbS92dWV0aWZ5anMvdnVldGlmeS9pc3N1ZXMvNDcxNQplLnRhcmdldC5pc0NvbnRlbnRFZGl0YWJsZSlyZXR1cm47dmFyIHVwPVtfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImtleUNvZGVzIl0udXAsX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJrZXlDb2RlcyJdLnBhZ2V1cF07dmFyIGRvd249W191dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1sia2V5Q29kZXMiXS5kb3duLF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1sia2V5Q29kZXMiXS5wYWdlZG93bl07aWYodXAuaW5jbHVkZXMoZS5rZXlDb2RlKSl7ZS5kZWx0YVk9LTE7fWVsc2UgaWYoZG93bi5pbmNsdWRlcyhlLmtleUNvZGUpKXtlLmRlbHRhWT0xO31lbHNle3JldHVybjt9fWlmKGUudGFyZ2V0PT09dGhpcy5vdmVybGF5fHxlLnR5cGUhPT0na2V5ZG93bicmJmUudGFyZ2V0PT09ZG9jdW1lbnQuYm9keXx8dGhpcy5jaGVja1BhdGgoZSkpZS5wcmV2ZW50RGVmYXVsdCgpO30saGFzU2Nyb2xsYmFyOmZ1bmN0aW9uIGhhc1Njcm9sbGJhcihlbCl7aWYoIWVsfHxlbC5ub2RlVHlwZSE9PU5vZGUuRUxFTUVOVF9OT0RFKXJldHVybiBmYWxzZTt2YXIgc3R5bGU9d2luZG93LmdldENvbXB1dGVkU3R5bGUoZWwpO3JldHVyblsnYXV0bycsJ3Njcm9sbCddLmluY2x1ZGVzKHN0eWxlLm92ZXJmbG93WSkmJmVsLnNjcm9sbEhlaWdodD5lbC5jbGllbnRIZWlnaHQ7fSxzaG91bGRTY3JvbGw6ZnVuY3Rpb24gc2hvdWxkU2Nyb2xsKGVsLGRlbHRhKXtpZihlbC5zY3JvbGxUb3A9PT0wJiZkZWx0YTwwKXJldHVybiB0cnVlO3JldHVybiBlbC5zY3JvbGxUb3ArZWwuY2xpZW50SGVpZ2h0PT09ZWwuc2Nyb2xsSGVpZ2h0JiZkZWx0YT4wO30saXNJbnNpZGU6ZnVuY3Rpb24gaXNJbnNpZGUoZWwscGFyZW50KXtpZihlbD09PXBhcmVudCl7cmV0dXJuIHRydWU7fWVsc2UgaWYoZWw9PT1udWxsfHxlbD09PWRvY3VtZW50LmJvZHkpe3JldHVybiBmYWxzZTt9ZWxzZXtyZXR1cm4gdGhpcy5pc0luc2lkZShlbC5wYXJlbnROb2RlLHBhcmVudCk7fX0sY2hlY2tQYXRoOmZ1bmN0aW9uIGNoZWNrUGF0aChlKXt2YXIgcGF0aD1lLnBhdGh8fHRoaXMuY29tcG9zZWRQYXRoKGUpO3ZhciBkZWx0YT1lLmRlbHRhWTtpZihlLnR5cGU9PT0na2V5ZG93bicmJnBhdGhbMF09PT1kb2N1bWVudC5ib2R5KXt2YXIgZGlhbG9nPXRoaXMuJHJlZnMuZGlhbG9nOy8vIGdldFNlbGVjdGlvbiByZXR1cm5zIG51bGwgaW4gZmlyZWZveCBpbiBzb21lIGVkZ2UgY2FzZXMsIGNhbiBiZSBpZ25vcmVkCnZhciBzZWxlY3RlZD13aW5kb3cuZ2V0U2VsZWN0aW9uKCkuYW5jaG9yTm9kZTtpZihkaWFsb2cmJnRoaXMuaGFzU2Nyb2xsYmFyKGRpYWxvZykmJnRoaXMuaXNJbnNpZGUoc2VsZWN0ZWQsZGlhbG9nKSl7cmV0dXJuIHRoaXMuc2hvdWxkU2Nyb2xsKGRpYWxvZyxkZWx0YSk7fXJldHVybiB0cnVlO31mb3IodmFyIGluZGV4PTA7aW5kZXg8cGF0aC5sZW5ndGg7aW5kZXgrKyl7dmFyIGVsPXBhdGhbaW5kZXhdO2lmKGVsPT09ZG9jdW1lbnQpcmV0dXJuIHRydWU7aWYoZWw9PT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpcmV0dXJuIHRydWU7aWYoZWw9PT10aGlzLiRyZWZzLmNvbnRlbnQpcmV0dXJuIHRydWU7aWYodGhpcy5oYXNTY3JvbGxiYXIoZWwpKXJldHVybiB0aGlzLnNob3VsZFNjcm9sbChlbCxkZWx0YSk7fXJldHVybiB0cnVlO30sLyoqCiAgICAgKiBQb2x5ZmlsbCBmb3IgRXZlbnQucHJvdG90eXBlLmNvbXBvc2VkUGF0aAogICAgICovY29tcG9zZWRQYXRoOmZ1bmN0aW9uIGNvbXBvc2VkUGF0aChlKXtpZihlLmNvbXBvc2VkUGF0aClyZXR1cm4gZS5jb21wb3NlZFBhdGgoKTt2YXIgcGF0aD1bXTt2YXIgZWw9ZS50YXJnZXQ7d2hpbGUoZWwpe3BhdGgucHVzaChlbCk7aWYoZWwudGFnTmFtZT09PSdIVE1MJyl7cGF0aC5wdXNoKGRvY3VtZW50KTtwYXRoLnB1c2god2luZG93KTtyZXR1cm4gcGF0aDt9ZWw9ZWwucGFyZW50RWxlbWVudDt9cmV0dXJuIHBhdGg7fSxoaWRlU2Nyb2xsOmZ1bmN0aW9uIGhpZGVTY3JvbGwoKXtpZih0aGlzLiR2dWV0aWZ5LmJyZWFrcG9pbnQuc21BbmREb3duKXtkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnb3ZlcmZsb3cteS1oaWRkZW4nKTt9ZWxzZXtPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJhZGRQYXNzaXZlRXZlbnRMaXN0ZW5lciJdKSh3aW5kb3csJ3doZWVsJyx0aGlzLnNjcm9sbExpc3RlbmVyLHtwYXNzaXZlOmZhbHNlfSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLHRoaXMuc2Nyb2xsTGlzdGVuZXIpO319LHNob3dTY3JvbGw6ZnVuY3Rpb24gc2hvd1Njcm9sbCgpe2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdvdmVyZmxvdy15LWhpZGRlbicpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCd3aGVlbCcsdGhpcy5zY3JvbGxMaXN0ZW5lcik7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLHRoaXMuc2Nyb2xsTGlzdGVuZXIpO319fSk7LyoqKi99LC8qKiovIi4vc3JjL21peGlucy9waWNrZXItYnV0dG9uL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvcGlja2VyLWJ1dHRvbi9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTWl4aW5zUGlja2VyQnV0dG9uSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9jb2xvcmFibGUgKi8iLi9zcmMvbWl4aW5zL2NvbG9yYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvLyBNaXhpbnMKLy8gVXRpbGl0aWVzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0pKF9jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKS5leHRlbmQoe21ldGhvZHM6e2dlblBpY2tlckJ1dHRvbjpmdW5jdGlvbiBnZW5QaWNrZXJCdXR0b24ocHJvcCx2YWx1ZSxjb250ZW50LHJlYWRvbmx5LHN0YXRpY0NsYXNzKXt2YXIgX3RoaXM9dGhpcztpZihyZWFkb25seT09PXZvaWQgMCl7cmVhZG9ubHk9ZmFsc2U7fWlmKHN0YXRpY0NsYXNzPT09dm9pZCAwKXtzdGF0aWNDbGFzcz0nJzt9dmFyIGFjdGl2ZT10aGlzW3Byb3BdPT09dmFsdWU7dmFyIGNsaWNrPWZ1bmN0aW9uIGNsaWNrKGV2ZW50KXtldmVudC5zdG9wUHJvcGFnYXRpb24oKTtfdGhpcy4kZW1pdCgidXBkYXRlOiIrT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sia2ViYWJDYXNlIl0pKHByb3ApLHZhbHVlKTt9O3JldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLHtzdGF0aWNDbGFzczooInYtcGlja2VyX190aXRsZV9fYnRuICIrc3RhdGljQ2xhc3MpLnRyaW0oKSxjbGFzczp7J3YtcGlja2VyX190aXRsZV9fYnRuLS1hY3RpdmUnOmFjdGl2ZSwndi1waWNrZXJfX3RpdGxlX19idG4tLXJlYWRvbmx5JzpyZWFkb25seX0sb246YWN0aXZlfHxyZWFkb25seT91bmRlZmluZWQ6e2NsaWNrOmNsaWNrfX0sQXJyYXkuaXNBcnJheShjb250ZW50KT9jb250ZW50Oltjb250ZW50XSk7fX19KTsvKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL3BpY2tlci9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvcGlja2VyL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY01peGluc1BpY2tlckluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfY29tcG9uZW50c19WUGlja2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vY29tcG9uZW50cy9WUGlja2VyICovIi4vc3JjL2NvbXBvbmVudHMvVlBpY2tlci9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9jb2xvcmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9jb2xvcmFibGUgKi8iLi9zcmMvbWl4aW5zL2NvbG9yYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF90aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi90aGVtZWFibGUgKi8iLi9zcmMvbWl4aW5zL3RoZW1lYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7Ly8gQ29tcG9uZW50cwovLyBNaXhpbnMKLy8gVXRpbHMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1PYmplY3QoX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoX2NvbG9yYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0sX3RoZW1lYWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0vKiBAdnVlL2NvbXBvbmVudCAqLykuZXh0ZW5kKHtuYW1lOidwaWNrZXInLHByb3BzOntmdWxsV2lkdGg6Qm9vbGVhbixoZWFkZXJDb2xvcjpTdHJpbmcsbGFuZHNjYXBlOkJvb2xlYW4sbm9UaXRsZTpCb29sZWFuLHdpZHRoOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OjI5MH19LG1ldGhvZHM6e2dlblBpY2tlclRpdGxlOmZ1bmN0aW9uIGdlblBpY2tlclRpdGxlKCl7cmV0dXJuIG51bGw7fSxnZW5QaWNrZXJCb2R5OmZ1bmN0aW9uIGdlblBpY2tlckJvZHkoKXtyZXR1cm4gbnVsbDt9LGdlblBpY2tlckFjdGlvbnNTbG90OmZ1bmN0aW9uIGdlblBpY2tlckFjdGlvbnNTbG90KCl7cmV0dXJuIHRoaXMuJHNjb3BlZFNsb3RzLmRlZmF1bHQ/dGhpcy4kc2NvcGVkU2xvdHMuZGVmYXVsdCh7c2F2ZTp0aGlzLnNhdmUsY2FuY2VsOnRoaXMuY2FuY2VsfSk6dGhpcy4kc2xvdHMuZGVmYXVsdDt9LGdlblBpY2tlcjpmdW5jdGlvbiBnZW5QaWNrZXIoc3RhdGljQ2xhc3Mpe3ZhciBjaGlsZHJlbj1bXTtpZighdGhpcy5ub1RpdGxlKXt2YXIgdGl0bGU9dGhpcy5nZW5QaWNrZXJUaXRsZSgpO3RpdGxlJiZjaGlsZHJlbi5wdXNoKHRpdGxlKTt9dmFyIGJvZHk9dGhpcy5nZW5QaWNrZXJCb2R5KCk7Ym9keSYmY2hpbGRyZW4ucHVzaChib2R5KTtjaGlsZHJlbi5wdXNoKHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ3RlbXBsYXRlJyx7c2xvdDonYWN0aW9ucyd9LFt0aGlzLmdlblBpY2tlckFjdGlvbnNTbG90KCldKSk7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoX2NvbXBvbmVudHNfVlBpY2tlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0se3N0YXRpY0NsYXNzOnN0YXRpY0NsYXNzLHByb3BzOntjb2xvcjp0aGlzLmhlYWRlckNvbG9yfHx0aGlzLmNvbG9yLGRhcms6dGhpcy5kYXJrLGZ1bGxXaWR0aDp0aGlzLmZ1bGxXaWR0aCxsYW5kc2NhcGU6dGhpcy5sYW5kc2NhcGUsbGlnaHQ6dGhpcy5saWdodCx3aWR0aDp0aGlzLndpZHRoLG5vVGl0bGU6dGhpcy5ub1RpdGxlfX0sY2hpbGRyZW4pO319fSk7LyoqKi99LC8qKiovIi4vc3JjL21peGlucy9wb3NpdGlvbmFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbWl4aW5zL3Bvc2l0aW9uYWJsZS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGZhY3RvcnksIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNNaXhpbnNQb3NpdGlvbmFibGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImZhY3RvcnkiLGZ1bmN0aW9uKCl7cmV0dXJuIGZhY3Rvcnk7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTt2YXIgYXZhaWxhYmxlUHJvcHM9e2Fic29sdXRlOkJvb2xlYW4sYm90dG9tOkJvb2xlYW4sZml4ZWQ6Qm9vbGVhbixsZWZ0OkJvb2xlYW4scmlnaHQ6Qm9vbGVhbix0b3A6Qm9vbGVhbn07ZnVuY3Rpb24gZmFjdG9yeShzZWxlY3RlZCl7aWYoc2VsZWN0ZWQ9PT12b2lkIDApe3NlbGVjdGVkPVtdO31yZXR1cm4gdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdC5hLmV4dGVuZCh7bmFtZToncG9zaXRpb25hYmxlJyxwcm9wczpzZWxlY3RlZC5sZW5ndGg/T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZmlsdGVyT2JqZWN0T25LZXlzIl0pKGF2YWlsYWJsZVByb3BzLHNlbGVjdGVkKTphdmFpbGFibGVQcm9wc30pO30vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPWZhY3RvcnkoKTsvLyBBZGQgYSBgKmAgYmVmb3JlIHRoZSBzZWNvbmQgYC9gCi8qIFRlc3RzIC8KbGV0IHNpbmdsZSA9IGZhY3RvcnkoWyd0b3AnXSkuZXh0ZW5kKHsKICBjcmVhdGVkICgpIHsKICAgIHRoaXMudG9wCiAgICB0aGlzLmJvdHRvbQogICAgdGhpcy5hYnNvbHV0ZQogIH0KfSkKCmxldCBzb21lID0gZmFjdG9yeShbJ3RvcCcsICdib3R0b20nXSkuZXh0ZW5kKHsKICBjcmVhdGVkICgpIHsKICAgIHRoaXMudG9wCiAgICB0aGlzLmJvdHRvbQogICAgdGhpcy5hYnNvbHV0ZQogIH0KfSkKCmxldCBhbGwgPSBmYWN0b3J5KCkuZXh0ZW5kKHsKICBjcmVhdGVkICgpIHsKICAgIHRoaXMudG9wCiAgICB0aGlzLmJvdHRvbQogICAgdGhpcy5hYnNvbHV0ZQogICAgdGhpcy5mb29iYXIKICB9Cn0pCi8qKi8gLyoqKi99LC8qKiovIi4vc3JjL21peGlucy9wcm94eWFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbWl4aW5zL3Byb3h5YWJsZS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGZhY3RvcnksIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNNaXhpbnNQcm94eWFibGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImZhY3RvcnkiLGZ1bmN0aW9uKCl7cmV0dXJuIGZhY3Rvcnk7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7ZnVuY3Rpb24gZmFjdG9yeShwcm9wLGV2ZW50KXt2YXIgX2EsX2I7aWYocHJvcD09PXZvaWQgMCl7cHJvcD0ndmFsdWUnO31pZihldmVudD09PXZvaWQgMCl7ZXZlbnQ9J2NoYW5nZSc7fXJldHVybiB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOidwcm94eWFibGUnLG1vZGVsOntwcm9wOnByb3AsZXZlbnQ6ZXZlbnR9LHByb3BzOihfYT17fSxfYVtwcm9wXT17cmVxdWlyZWQ6ZmFsc2V9LF9hKSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aW50ZXJuYWxMYXp5VmFsdWU6dGhpc1twcm9wXX07fSxjb21wdXRlZDp7aW50ZXJuYWxWYWx1ZTp7Z2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLmludGVybmFsTGF6eVZhbHVlO30sc2V0OmZ1bmN0aW9uIHNldCh2YWwpe2lmKHZhbD09PXRoaXMuaW50ZXJuYWxMYXp5VmFsdWUpcmV0dXJuO3RoaXMuaW50ZXJuYWxMYXp5VmFsdWU9dmFsO3RoaXMuJGVtaXQoZXZlbnQsdmFsKTt9fX0sd2F0Y2g6KF9iPXt9LF9iW3Byb3BdPWZ1bmN0aW9uKHZhbCl7dGhpcy5pbnRlcm5hbExhenlWYWx1ZT12YWw7fSxfYil9KTt9LyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlZGVjbGFyZSAqL3ZhciBQcm94eWFibGU9ZmFjdG9yeSgpOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09UHJveHlhYmxlOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvcmVnaXN0cmFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvcmVnaXN0cmFibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGluamVjdCwgcHJvdmlkZSAqLyAvKioqL2Z1bmN0aW9uIHNyY01peGluc1JlZ2lzdHJhYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJpbmplY3QiLGZ1bmN0aW9uKCl7cmV0dXJuIGluamVjdDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywicHJvdmlkZSIsZnVuY3Rpb24oKXtyZXR1cm4gcHJvdmlkZTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISB2dWUgKi8idnVlIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpO2Z1bmN0aW9uIGdlbmVyYXRlV2FybmluZyhjaGlsZCxwYXJlbnQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJjb25zb2xlV2FybiJdKSgiVGhlICIrY2hpbGQrIiBjb21wb25lbnQgbXVzdCBiZSB1c2VkIGluc2lkZSBhICIrcGFyZW50KTt9O31mdW5jdGlvbiBpbmplY3QobmFtZXNwYWNlLGNoaWxkLHBhcmVudCl7dmFyIF9hO3ZhciBkZWZhdWx0SW1wbD1jaGlsZCYmcGFyZW50P3tyZWdpc3RlcjpnZW5lcmF0ZVdhcm5pbmcoY2hpbGQscGFyZW50KSx1bnJlZ2lzdGVyOmdlbmVyYXRlV2FybmluZyhjaGlsZCxwYXJlbnQpfTpudWxsO3JldHVybiB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOidyZWdpc3RyYWJsZS1pbmplY3QnLGluamVjdDooX2E9e30sX2FbbmFtZXNwYWNlXT17ZGVmYXVsdDpkZWZhdWx0SW1wbH0sX2EpfSk7fWZ1bmN0aW9uIHByb3ZpZGUobmFtZXNwYWNlLHNlbGYpe2lmKHNlbGY9PT12b2lkIDApe3NlbGY9ZmFsc2U7fXJldHVybiB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOidyZWdpc3RyYWJsZS1wcm92aWRlJyxtZXRob2RzOnNlbGY/e306e3JlZ2lzdGVyOm51bGwsdW5yZWdpc3RlcjpudWxsfSxwcm92aWRlOmZ1bmN0aW9uIHByb3ZpZGUoKXt2YXIgX2E7cmV0dXJuIF9hPXt9LF9hW25hbWVzcGFjZV09c2VsZj90aGlzOntyZWdpc3Rlcjp0aGlzLnJlZ2lzdGVyLHVucmVnaXN0ZXI6dGhpcy51bnJlZ2lzdGVyfSxfYTt9fSk7fS8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvcmV0dXJuYWJsZS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbWl4aW5zL3JldHVybmFibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY01peGluc1JldHVybmFibGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogQHZ1ZS9jb21wb25lbnQgKi8gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOidyZXR1cm5hYmxlJyxwcm9wczp7cmV0dXJuVmFsdWU6bnVsbH0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2lzQWN0aXZlOmZhbHNlLG9yaWdpbmFsVmFsdWU6bnVsbH07fSx3YXRjaDp7aXNBY3RpdmU6ZnVuY3Rpb24gaXNBY3RpdmUodmFsKXtpZih2YWwpe3RoaXMub3JpZ2luYWxWYWx1ZT10aGlzLnJldHVyblZhbHVlO31lbHNle3RoaXMuJGVtaXQoJ3VwZGF0ZTpyZXR1cm4tdmFsdWUnLHRoaXMub3JpZ2luYWxWYWx1ZSk7fX19LG1ldGhvZHM6e3NhdmU6ZnVuY3Rpb24gc2F2ZSh2YWx1ZSl7dmFyIF90aGlzPXRoaXM7dGhpcy5vcmlnaW5hbFZhbHVlPXZhbHVlO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtfdGhpcy5pc0FjdGl2ZT1mYWxzZTt9KTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvcmlwcGxlYWJsZS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbWl4aW5zL3JpcHBsZWFibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY01peGluc1JpcHBsZWFibGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfcmlwcGxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vZGlyZWN0aXZlcy9yaXBwbGUgKi8iLi9zcmMvZGlyZWN0aXZlcy9yaXBwbGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISB2dWUgKi8idnVlIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fKTsvLyBEaXJlY3RpdmVzCi8vIFR5cGVzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09dnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdC5hLmV4dGVuZCh7bmFtZToncmlwcGxlYWJsZScsZGlyZWN0aXZlczp7cmlwcGxlOl9kaXJlY3RpdmVzX3JpcHBsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il19LHByb3BzOntyaXBwbGU6e3R5cGU6W0Jvb2xlYW4sT2JqZWN0XSxkZWZhdWx0OnRydWV9fSxtZXRob2RzOntnZW5SaXBwbGU6ZnVuY3Rpb24gZ2VuUmlwcGxlKGRhdGEpe2lmKGRhdGE9PT12b2lkIDApe2RhdGE9e307fWlmKCF0aGlzLnJpcHBsZSlyZXR1cm4gbnVsbDtkYXRhLnN0YXRpY0NsYXNzPSd2LWlucHV0LS1zZWxlY3Rpb24tY29udHJvbHNfX3JpcHBsZSc7ZGF0YS5kaXJlY3RpdmVzPWRhdGEuZGlyZWN0aXZlc3x8W107ZGF0YS5kaXJlY3RpdmVzLnB1c2goe25hbWU6J3JpcHBsZScsdmFsdWU6e2NlbnRlcjp0cnVlfX0pO2RhdGEub249T2JqZWN0LmFzc2lnbih7Y2xpY2s6dGhpcy5vbkNoYW5nZX0sdGhpcy4kbGlzdGVuZXJzKTtyZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2JyxkYXRhKTt9LG9uQ2hhbmdlOmZ1bmN0aW9uIG9uQ2hhbmdlKCl7fX19KTsvKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL3JvdXRhYmxlL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbWl4aW5zL3JvdXRhYmxlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTWl4aW5zUm91dGFibGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfcmlwcGxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vZGlyZWN0aXZlcy9yaXBwbGUgKi8iLi9zcmMvZGlyZWN0aXZlcy9yaXBwbGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gRGlyZWN0aXZlcwovLyBVdGlsaXRpZXMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOidyb3V0YWJsZScsZGlyZWN0aXZlczp7UmlwcGxlOl9kaXJlY3RpdmVzX3JpcHBsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il19LHByb3BzOnthY3RpdmVDbGFzczpTdHJpbmcsYXBwZW5kOkJvb2xlYW4sZGlzYWJsZWQ6Qm9vbGVhbixleGFjdDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dW5kZWZpbmVkfSxleGFjdEFjdGl2ZUNsYXNzOlN0cmluZyxsaW5rOkJvb2xlYW4saHJlZjpbU3RyaW5nLE9iamVjdF0sdG86W1N0cmluZyxPYmplY3RdLG51eHQ6Qm9vbGVhbixyZXBsYWNlOkJvb2xlYW4scmlwcGxlOnt0eXBlOltCb29sZWFuLE9iamVjdF0sZGVmYXVsdDpudWxsfSx0YWc6U3RyaW5nLHRhcmdldDpTdHJpbmd9LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntpc0FjdGl2ZTpmYWxzZSxwcm94eUNsYXNzOicnfTt9LGNvbXB1dGVkOntjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXt2YXIgY2xhc3Nlcz17fTtpZih0aGlzLnRvKXJldHVybiBjbGFzc2VzO2lmKHRoaXMuYWN0aXZlQ2xhc3MpY2xhc3Nlc1t0aGlzLmFjdGl2ZUNsYXNzXT10aGlzLmlzQWN0aXZlO2lmKHRoaXMucHJveHlDbGFzcyljbGFzc2VzW3RoaXMucHJveHlDbGFzc109dGhpcy5pc0FjdGl2ZTtyZXR1cm4gY2xhc3Nlczt9LGNvbXB1dGVkUmlwcGxlOmZ1bmN0aW9uIGNvbXB1dGVkUmlwcGxlKCl7cmV0dXJuIHRoaXMucmlwcGxlIT1udWxsP3RoaXMucmlwcGxlOiF0aGlzLmRpc2FibGVkJiZ0aGlzLmlzQ2xpY2thYmxlO30saXNDbGlja2FibGU6ZnVuY3Rpb24gaXNDbGlja2FibGUoKXtpZih0aGlzLmRpc2FibGVkKXJldHVybiBmYWxzZTtyZXR1cm4gQm9vbGVhbih0aGlzLmlzTGlua3x8dGhpcy4kbGlzdGVuZXJzLmNsaWNrfHx0aGlzLiRsaXN0ZW5lcnNbJyFjbGljayddfHx0aGlzLiRhdHRycy50YWJpbmRleCk7fSxpc0xpbms6ZnVuY3Rpb24gaXNMaW5rKCl7cmV0dXJuIHRoaXMudG98fHRoaXMuaHJlZnx8dGhpcy5saW5rO30sc3R5bGVzOmZ1bmN0aW9uIHN0eWxlcygpe3JldHVybnt9O319LHdhdGNoOnskcm91dGU6J29uUm91dGVDaGFuZ2UnfSxtZXRob2RzOntjbGljazpmdW5jdGlvbiBjbGljayhlKXt0aGlzLiRlbWl0KCdjbGljaycsZSk7fSxnZW5lcmF0ZVJvdXRlTGluazpmdW5jdGlvbiBnZW5lcmF0ZVJvdXRlTGluaygpe3ZhciBfYTt2YXIgZXhhY3Q9dGhpcy5leGFjdDt2YXIgdGFnO3ZhciBkYXRhPShfYT17YXR0cnM6e3RhYmluZGV4Oid0YWJpbmRleCdpbiB0aGlzLiRhdHRycz90aGlzLiRhdHRycy50YWJpbmRleDp1bmRlZmluZWR9LGNsYXNzOnRoaXMuY2xhc3NlcyxzdHlsZTp0aGlzLnN0eWxlcyxwcm9wczp7fSxkaXJlY3RpdmVzOlt7bmFtZToncmlwcGxlJyx2YWx1ZTp0aGlzLmNvbXB1dGVkUmlwcGxlfV19LF9hW3RoaXMudG8/J25hdGl2ZU9uJzonb24nXT1fX2Fzc2lnbih7fSx0aGlzLiRsaXN0ZW5lcnMse2NsaWNrOnRoaXMuY2xpY2t9KSxfYS5yZWY9J2xpbmsnLF9hKTtpZih0eXBlb2YgdGhpcy5leGFjdD09PSd1bmRlZmluZWQnKXtleGFjdD10aGlzLnRvPT09Jy8nfHx0aGlzLnRvPT09T2JqZWN0KHRoaXMudG8pJiZ0aGlzLnRvLnBhdGg9PT0nLyc7fWlmKHRoaXMudG8pey8vIEFkZCBhIHNwZWNpYWwgYWN0aXZlQ2xhc3MgaG9vawovLyBmb3IgY29tcG9uZW50IGxldmVsIHN0eWxlcwp2YXIgYWN0aXZlQ2xhc3M9dGhpcy5hY3RpdmVDbGFzczt2YXIgZXhhY3RBY3RpdmVDbGFzcz10aGlzLmV4YWN0QWN0aXZlQ2xhc3N8fGFjdGl2ZUNsYXNzO2lmKHRoaXMucHJveHlDbGFzcyl7YWN0aXZlQ2xhc3M9KGFjdGl2ZUNsYXNzKyIgIit0aGlzLnByb3h5Q2xhc3MpLnRyaW0oKTtleGFjdEFjdGl2ZUNsYXNzPShleGFjdEFjdGl2ZUNsYXNzKyIgIit0aGlzLnByb3h5Q2xhc3MpLnRyaW0oKTt9dGFnPXRoaXMubnV4dD8nbnV4dC1saW5rJzoncm91dGVyLWxpbmsnO09iamVjdC5hc3NpZ24oZGF0YS5wcm9wcyx7dG86dGhpcy50byxleGFjdDpleGFjdCxhY3RpdmVDbGFzczphY3RpdmVDbGFzcyxleGFjdEFjdGl2ZUNsYXNzOmV4YWN0QWN0aXZlQ2xhc3MsYXBwZW5kOnRoaXMuYXBwZW5kLHJlcGxhY2U6dGhpcy5yZXBsYWNlfSk7fWVsc2V7dGFnPXRoaXMuaHJlZiYmJ2EnfHx0aGlzLnRhZ3x8J2Rpdic7aWYodGFnPT09J2EnJiZ0aGlzLmhyZWYpZGF0YS5hdHRycy5ocmVmPXRoaXMuaHJlZjt9aWYodGhpcy50YXJnZXQpZGF0YS5hdHRycy50YXJnZXQ9dGhpcy50YXJnZXQ7cmV0dXJue3RhZzp0YWcsZGF0YTpkYXRhfTt9LG9uUm91dGVDaGFuZ2U6ZnVuY3Rpb24gb25Sb3V0ZUNoYW5nZSgpe3ZhciBfdGhpcz10aGlzO2lmKCF0aGlzLnRvfHwhdGhpcy4kcmVmcy5saW5rfHwhdGhpcy4kcm91dGUpcmV0dXJuO3ZhciBhY3RpdmVDbGFzcz0odGhpcy5hY3RpdmVDbGFzcysiICIrKHRoaXMucHJveHlDbGFzc3x8JycpKS50cmltKCk7dmFyIHBhdGg9Il92bm9kZS5kYXRhLmNsYXNzLiIrYWN0aXZlQ2xhc3M7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXsvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL2lmKE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImdldE9iamVjdFZhbHVlQnlQYXRoIl0pKF90aGlzLiRyZWZzLmxpbmsscGF0aCkpe190aGlzLnRvZ2dsZSgpO319KTt9LHRvZ2dsZTpmdW5jdGlvbiB0b2dnbGUoKXt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvc2Nyb2xsYWJsZS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbWl4aW5zL3Njcm9sbGFibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY01peGluc1Njcm9sbGFibGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2RpcmVjdGl2ZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9kaXJlY3RpdmVzICovIi4vc3JjL2RpcmVjdGl2ZXMvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18pOy8vIERpcmVjdGl2ZXMKLy8gVXRpbGl0aWVzCi8vIFR5cGVzCi8qKgogKiBTY3JvbGxhYmxlCiAqCiAqIFVzZWQgZm9yIG1vbml0b3Jpbmcgc2Nyb2xsaW5nIGFuZAogKiBpbnZva2luZyBmdW5jdGlvbnMgYmFzZWQgdXBvbgogKiBzY3JvbGxpbmcgdGhyZXNob2xkcyBiZWluZwogKiBtZXQuCiAqLyAvKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fX2RlZmF1bHQuYS5leHRlbmQoe25hbWU6J3Njcm9sbGFibGUnLGRpcmVjdGl2ZXM6e1Njcm9sbDpfZGlyZWN0aXZlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJTY3JvbGwiXX0scHJvcHM6e3Njcm9sbFRhcmdldDpTdHJpbmcsc2Nyb2xsVGhyZXNob2xkOltTdHJpbmcsTnVtYmVyXX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2N1cnJlbnRTY3JvbGw6MCxjdXJyZW50VGhyZXNob2xkOjAsaXNBY3RpdmU6ZmFsc2UsaXNTY3JvbGxpbmdVcDpmYWxzZSxwcmV2aW91c1Njcm9sbDowLHNhdmVkU2Nyb2xsOjAsdGFyZ2V0Om51bGx9O30sY29tcHV0ZWQ6ey8qKgogICAgICogQSBjb21wdXRlZCBwcm9wZXJ0eSB0aGF0IHJldHVybnMKICAgICAqIHdoZXRoZXIgc2Nyb2xsaW5nIGZlYXR1cmVzIGFyZQogICAgICogZW5hYmxlZCBvciBkaXNhYmxlZAogICAgICovY2FuU2Nyb2xsOmZ1bmN0aW9uIGNhblNjcm9sbCgpe3JldHVybiB0eXBlb2Ygd2luZG93IT09J3VuZGVmaW5lZCc7fSwvKioKICAgICAqIFRoZSB0aHJlc2hvbGQgdGhhdCBtdXN0IGJlIG1ldCBiZWZvcmUKICAgICAqIHRocmVzaG9sZE1ldCBmdW5jdGlvbiBpcyBpbnZva2VkCiAgICAgKi9jb21wdXRlZFNjcm9sbFRocmVzaG9sZDpmdW5jdGlvbiBjb21wdXRlZFNjcm9sbFRocmVzaG9sZCgpe3JldHVybiB0aGlzLnNjcm9sbFRocmVzaG9sZD9OdW1iZXIodGhpcy5zY3JvbGxUaHJlc2hvbGQpOjMwMDt9fSx3YXRjaDp7aXNTY3JvbGxpbmdVcDpmdW5jdGlvbiBpc1Njcm9sbGluZ1VwKCl7dGhpcy5zYXZlZFNjcm9sbD10aGlzLnNhdmVkU2Nyb2xsfHx0aGlzLmN1cnJlbnRTY3JvbGw7fSxpc0FjdGl2ZTpmdW5jdGlvbiBpc0FjdGl2ZSgpe3RoaXMuc2F2ZWRTY3JvbGw9MDt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXtpZih0aGlzLnNjcm9sbFRhcmdldCl7dGhpcy50YXJnZXQ9ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnNjcm9sbFRhcmdldCk7aWYoIXRoaXMudGFyZ2V0KXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJjb25zb2xlV2FybiJdKSgiVW5hYmxlIHRvIGxvY2F0ZSBlbGVtZW50IHdpdGggaWRlbnRpZmllciAiK3RoaXMuc2Nyb2xsVGFyZ2V0LHRoaXMpO319fSxtZXRob2RzOntvblNjcm9sbDpmdW5jdGlvbiBvblNjcm9sbCgpe3ZhciBfdGhpcz10aGlzO2lmKCF0aGlzLmNhblNjcm9sbClyZXR1cm47dGhpcy5wcmV2aW91c1Njcm9sbD10aGlzLmN1cnJlbnRTY3JvbGw7dGhpcy5jdXJyZW50U2Nyb2xsPXRoaXMudGFyZ2V0P3RoaXMudGFyZ2V0LnNjcm9sbFRvcDp3aW5kb3cucGFnZVlPZmZzZXQ7dGhpcy5pc1Njcm9sbGluZ1VwPXRoaXMuY3VycmVudFNjcm9sbDx0aGlzLnByZXZpb3VzU2Nyb2xsO3RoaXMuY3VycmVudFRocmVzaG9sZD1NYXRoLmFicyh0aGlzLmN1cnJlbnRTY3JvbGwtdGhpcy5jb21wdXRlZFNjcm9sbFRocmVzaG9sZCk7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtpZihNYXRoLmFicyhfdGhpcy5jdXJyZW50U2Nyb2xsLV90aGlzLnNhdmVkU2Nyb2xsKT5fdGhpcy5jb21wdXRlZFNjcm9sbFRocmVzaG9sZClfdGhpcy50aHJlc2hvbGRNZXQoKTt9KTt9LC8qKgogICAgICogVGhlIG1ldGhvZCBpbnZva2VkIHdoZW4KICAgICAqIHNjcm9sbGluZyBpbiBhbnkgZGlyZWN0aW9uCiAgICAgKiBoYXMgZXhjZWVkZWQgdGhlIHRocmVzaG9sZAogICAgICovdGhyZXNob2xkTWV0OmZ1bmN0aW9uIHRocmVzaG9sZE1ldCgpe319fSk7LyoqKi99LC8qKiovIi4vc3JjL21peGlucy9zZWxlY3RhYmxlL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvc2VsZWN0YWJsZS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTWl4aW5zU2VsZWN0YWJsZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfY29tcG9uZW50c19WSW5wdXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9jb21wb25lbnRzL1ZJbnB1dCAqLyIuL3NyYy9jb21wb25lbnRzL1ZJbnB1dC9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9yaXBwbGVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vcmlwcGxlYWJsZSAqLyIuL3NyYy9taXhpbnMvcmlwcGxlYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9jb21wYXJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vY29tcGFyYWJsZSAqLyIuL3NyYy9taXhpbnMvY29tcGFyYWJsZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvbWl4aW5zICovIi4vc3JjL3V0aWwvbWl4aW5zLnRzIik7Ly8gQ29tcG9uZW50cwovLyBNaXhpbnMKLy8gVXRpbGl0aWVzCi8qIEB2dWUvY29tcG9uZW50ICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09T2JqZWN0KF91dGlsX21peGluc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKF9jb21wb25lbnRzX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0sX3JpcHBsZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLF9jb21wYXJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkuZXh0ZW5kKHtuYW1lOidzZWxlY3RhYmxlJyxtb2RlbDp7cHJvcDonaW5wdXRWYWx1ZScsZXZlbnQ6J2NoYW5nZSd9LHByb3BzOntpZDpTdHJpbmcsaW5wdXRWYWx1ZTpudWxsLGZhbHNlVmFsdWU6bnVsbCx0cnVlVmFsdWU6bnVsbCxtdWx0aXBsZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6bnVsbH0sbGFiZWw6U3RyaW5nfSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aGFzQ29sb3I6dGhpcy5pbnB1dFZhbHVlLGxhenlWYWx1ZTp0aGlzLmlucHV0VmFsdWV9O30sY29tcHV0ZWQ6e2NvbXB1dGVkQ29sb3I6ZnVuY3Rpb24gY29tcHV0ZWRDb2xvcigpe2lmKCF0aGlzLmlzQWN0aXZlKXJldHVybiB1bmRlZmluZWQ7aWYodGhpcy5jb2xvcilyZXR1cm4gdGhpcy5jb2xvcjtpZih0aGlzLmlzRGFyayYmIXRoaXMuYXBwSXNEYXJrKXJldHVybid3aGl0ZSc7cmV0dXJuJ2FjY2VudCc7fSxpc011bHRpcGxlOmZ1bmN0aW9uIGlzTXVsdGlwbGUoKXtyZXR1cm4gdGhpcy5tdWx0aXBsZT09PXRydWV8fHRoaXMubXVsdGlwbGU9PT1udWxsJiZBcnJheS5pc0FycmF5KHRoaXMuaW50ZXJuYWxWYWx1ZSk7fSxpc0FjdGl2ZTpmdW5jdGlvbiBpc0FjdGl2ZSgpe3ZhciBfdGhpcz10aGlzO3ZhciB2YWx1ZT10aGlzLnZhbHVlO3ZhciBpbnB1dD10aGlzLmludGVybmFsVmFsdWU7aWYodGhpcy5pc011bHRpcGxlKXtpZighQXJyYXkuaXNBcnJheShpbnB1dCkpcmV0dXJuIGZhbHNlO3JldHVybiBpbnB1dC5zb21lKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBfdGhpcy52YWx1ZUNvbXBhcmF0b3IoaXRlbSx2YWx1ZSk7fSk7fWlmKHRoaXMudHJ1ZVZhbHVlPT09dW5kZWZpbmVkfHx0aGlzLmZhbHNlVmFsdWU9PT11bmRlZmluZWQpe3JldHVybiB2YWx1ZT90aGlzLnZhbHVlQ29tcGFyYXRvcih2YWx1ZSxpbnB1dCk6Qm9vbGVhbihpbnB1dCk7fXJldHVybiB0aGlzLnZhbHVlQ29tcGFyYXRvcihpbnB1dCx0aGlzLnRydWVWYWx1ZSk7fSxpc0RpcnR5OmZ1bmN0aW9uIGlzRGlydHkoKXtyZXR1cm4gdGhpcy5pc0FjdGl2ZTt9fSx3YXRjaDp7aW5wdXRWYWx1ZTpmdW5jdGlvbiBpbnB1dFZhbHVlKHZhbCl7dGhpcy5sYXp5VmFsdWU9dmFsO3RoaXMuaGFzQ29sb3I9dmFsO319LG1ldGhvZHM6e2dlbkxhYmVsOmZ1bmN0aW9uIGdlbkxhYmVsKCl7dmFyIF90aGlzPXRoaXM7dmFyIGxhYmVsPV9jb21wb25lbnRzX1ZJbnB1dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0ub3B0aW9ucy5tZXRob2RzLmdlbkxhYmVsLmNhbGwodGhpcyk7aWYoIWxhYmVsKXJldHVybiBsYWJlbDtsYWJlbC5kYXRhLm9uPXtjbGljazpmdW5jdGlvbiBjbGljayhlKXsvLyBQcmV2ZW50IGxhYmVsIGZyb20KLy8gY2F1c2luZyB0aGUgaW5wdXQKLy8gdG8gZm9jdXMKZS5wcmV2ZW50RGVmYXVsdCgpO190aGlzLm9uQ2hhbmdlKCk7fX07cmV0dXJuIGxhYmVsO30sZ2VuSW5wdXQ6ZnVuY3Rpb24gZ2VuSW5wdXQodHlwZSxhdHRycyl7cmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyx7YXR0cnM6T2JqZWN0LmFzc2lnbih7J2FyaWEtY2hlY2tlZCc6dGhpcy5pc0FjdGl2ZS50b1N0cmluZygpLGRpc2FibGVkOnRoaXMuaXNEaXNhYmxlZCxpZDp0aGlzLmNvbXB1dGVkSWQscm9sZTp0eXBlLHR5cGU6dHlwZX0sYXR0cnMpLGRvbVByb3BzOnt2YWx1ZTp0aGlzLnZhbHVlLGNoZWNrZWQ6dGhpcy5pc0FjdGl2ZX0sb246e2JsdXI6dGhpcy5vbkJsdXIsY2hhbmdlOnRoaXMub25DaGFuZ2UsZm9jdXM6dGhpcy5vbkZvY3VzLGtleWRvd246dGhpcy5vbktleWRvd259LHJlZjonaW5wdXQnfSk7fSxvbkJsdXI6ZnVuY3Rpb24gb25CbHVyKCl7dGhpcy5pc0ZvY3VzZWQ9ZmFsc2U7fSxvbkNoYW5nZTpmdW5jdGlvbiBvbkNoYW5nZSgpe3ZhciBfdGhpcz10aGlzO2lmKHRoaXMuaXNEaXNhYmxlZClyZXR1cm47dmFyIHZhbHVlPXRoaXMudmFsdWU7dmFyIGlucHV0PXRoaXMuaW50ZXJuYWxWYWx1ZTtpZih0aGlzLmlzTXVsdGlwbGUpe2lmKCFBcnJheS5pc0FycmF5KGlucHV0KSl7aW5wdXQ9W107fXZhciBsZW5ndGg9aW5wdXQubGVuZ3RoO2lucHV0PWlucHV0LmZpbHRlcihmdW5jdGlvbihpdGVtKXtyZXR1cm4hX3RoaXMudmFsdWVDb21wYXJhdG9yKGl0ZW0sdmFsdWUpO30pO2lmKGlucHV0Lmxlbmd0aD09PWxlbmd0aCl7aW5wdXQucHVzaCh2YWx1ZSk7fX1lbHNlIGlmKHRoaXMudHJ1ZVZhbHVlIT09dW5kZWZpbmVkJiZ0aGlzLmZhbHNlVmFsdWUhPT11bmRlZmluZWQpe2lucHV0PXRoaXMudmFsdWVDb21wYXJhdG9yKGlucHV0LHRoaXMudHJ1ZVZhbHVlKT90aGlzLmZhbHNlVmFsdWU6dGhpcy50cnVlVmFsdWU7fWVsc2UgaWYodmFsdWUpe2lucHV0PXRoaXMudmFsdWVDb21wYXJhdG9yKGlucHV0LHZhbHVlKT9udWxsOnZhbHVlO31lbHNle2lucHV0PSFpbnB1dDt9dGhpcy52YWxpZGF0ZSh0cnVlLGlucHV0KTt0aGlzLmludGVybmFsVmFsdWU9aW5wdXQ7dGhpcy5oYXNDb2xvcj1pbnB1dDt9LG9uRm9jdXM6ZnVuY3Rpb24gb25Gb2N1cygpe3RoaXMuaXNGb2N1c2VkPXRydWU7fSwvKiogQGFic3RyYWN0ICovb25LZXlkb3duOmZ1bmN0aW9uIG9uS2V5ZG93bihlKXt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvc2l6ZWFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvc2l6ZWFibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNNaXhpbnNTaXplYWJsZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISB2dWUgKi8idnVlIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQuYS5leHRlbmQoe25hbWU6J3NpemVhYmxlJyxwcm9wczp7bGFyZ2U6Qm9vbGVhbixzbWFsbDpCb29sZWFuLHhMYXJnZTpCb29sZWFuLHhTbWFsbDpCb29sZWFufSxjb21wdXRlZDp7bWVkaXVtOmZ1bmN0aW9uIG1lZGl1bSgpe3JldHVybiBCb29sZWFuKCF0aGlzLnhTbWFsbCYmIXRoaXMuc21hbGwmJiF0aGlzLmxhcmdlJiYhdGhpcy54TGFyZ2UpO30sc2l6ZWFibGVDbGFzc2VzOmZ1bmN0aW9uIHNpemVhYmxlQ2xhc3Nlcygpe3JldHVybnsndi1zaXplLS14LXNtYWxsJzp0aGlzLnhTbWFsbCwndi1zaXplLS1zbWFsbCc6dGhpcy5zbWFsbCwndi1zaXplLS1kZWZhdWx0Jzp0aGlzLm1lZGl1bSwndi1zaXplLS1sYXJnZSc6dGhpcy5sYXJnZSwndi1zaXplLS14LWxhcmdlJzp0aGlzLnhMYXJnZX07fX19KTsvKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL3Nzci1ib290YWJsZS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvc3NyLWJvb3RhYmxlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY01peGluc1NzckJvb3RhYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qKgogKiBTU1JCb290YWJsZQogKgogKiBAbWl4aW4KICoKICogVXNlZCBpbiBsYXlvdXQgY29tcG9uZW50cyAoZHJhd2VyLCB0b29sYmFyLCBjb250ZW50KQogKiB0byBhdm9pZCBhbiBlbnRyeSBhbmltYXRpb24gd2hlbiB1c2luZyBTU1IKICovIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09dnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdC5hLmV4dGVuZCh7bmFtZTonc3NyLWJvb3RhYmxlJyxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aXNCb290ZWQ6ZmFsc2V9O30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dmFyIF90aGlzPXRoaXM7Ly8gVXNlIHNldEF0dHJpYnV0ZSBpbnN0ZWFkIG9mIGRhdGFzZXQKLy8gYmVjYXVzZSBkYXRhc2V0IGRvZXMgbm90IHdvcmsgd2VsbAovLyB3aXRoIHVuaXQgdGVzdHMKd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpe190aGlzLiRlbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtYm9vdGVkJywndHJ1ZScpO190aGlzLmlzQm9vdGVkPXRydWU7fSk7fX0pOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvc3RhY2thYmxlL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL21peGlucy9zdGFja2FibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTWl4aW5zU3RhY2thYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9O3ZhciBfX3NwcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3NwcmVhZHx8ZnVuY3Rpb24oKXtmb3IodmFyIGFyPVtdLGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXthcj1hci5jb25jYXQoX19yZWFkKGFyZ3VtZW50c1tpXSkpO31yZXR1cm4gYXI7fTsvKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQuYS5leHRlbmQoKS5leHRlbmQoe25hbWU6J3N0YWNrYWJsZScsZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3N0YWNrRWxlbWVudDpudWxsLHN0YWNrRXhjbHVkZTpudWxsLHN0YWNrTWluWkluZGV4OjAsaXNBY3RpdmU6ZmFsc2V9O30sY29tcHV0ZWQ6e2FjdGl2ZVpJbmRleDpmdW5jdGlvbiBhY3RpdmVaSW5kZXgoKXtpZih0eXBlb2Ygd2luZG93PT09J3VuZGVmaW5lZCcpcmV0dXJuIDA7dmFyIGNvbnRlbnQ9dGhpcy5zdGFja0VsZW1lbnR8fHRoaXMuJHJlZnMuY29udGVudDsvLyBSZXR1cm4gY3VycmVudCB6aW5kZXggaWYgbm90IGFjdGl2ZQp2YXIgaW5kZXg9IXRoaXMuaXNBY3RpdmU/T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZ2V0WkluZGV4Il0pKGNvbnRlbnQpOnRoaXMuZ2V0TWF4WkluZGV4KHRoaXMuc3RhY2tFeGNsdWRlfHxbY29udGVudF0pKzI7aWYoaW5kZXg9PW51bGwpcmV0dXJuIGluZGV4Oy8vIFJldHVybiBtYXggY3VycmVudCB6LWluZGV4IChleGNsdWRpbmcgc2VsZikgKyAyCi8vICgyIHRvIGxlYXZlIHJvb20gZm9yIGFuIG92ZXJsYXkgYmVsb3csIGlmIG5lZWRlZCkKcmV0dXJuIHBhcnNlSW50KGluZGV4KTt9fSxtZXRob2RzOntnZXRNYXhaSW5kZXg6ZnVuY3Rpb24gZ2V0TWF4WkluZGV4KGV4Y2x1ZGUpe2lmKGV4Y2x1ZGU9PT12b2lkIDApe2V4Y2x1ZGU9W107fXZhciBiYXNlPXRoaXMuJGVsOy8vIFN0YXJ0IHdpdGggbG93ZXN0IGFsbG93ZWQgei1pbmRleCBvciB6LWluZGV4IG9mCi8vIGJhc2UgY29tcG9uZW50J3MgZWxlbWVudCwgd2hpY2hldmVyIGlzIGdyZWF0ZXIKdmFyIHppcz1bdGhpcy5zdGFja01pblpJbmRleCxPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJnZXRaSW5kZXgiXSkoYmFzZSldOy8vIENvbnZlcnQgdGhlIE5vZGVMaXN0IHRvIGFuIGFycmF5IHRvCi8vIHByZXZlbnQgYW4gRWRnZSBidWcgd2l0aCBTeW1ib2wuaXRlcmF0b3IKLy8gaHR0cHM6Ly9naXRodWIuY29tL3Z1ZXRpZnlqcy92dWV0aWZ5L2lzc3Vlcy8yMTQ2CnZhciBhY3RpdmVFbGVtZW50cz1fX3NwcmVhZChkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd2LW1lbnVfX2NvbnRlbnQtLWFjdGl2ZScpLGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3YtZGlhbG9nX19jb250ZW50LS1hY3RpdmUnKSk7Ly8gR2V0IHotaW5kZXggZm9yIGFsbCBhY3RpdmUgZGlhbG9ncwpmb3IodmFyIGluZGV4PTA7aW5kZXg8YWN0aXZlRWxlbWVudHMubGVuZ3RoO2luZGV4Kyspe2lmKCFleGNsdWRlLmluY2x1ZGVzKGFjdGl2ZUVsZW1lbnRzW2luZGV4XSkpe3ppcy5wdXNoKE9iamVjdChfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImdldFpJbmRleCJdKShhY3RpdmVFbGVtZW50c1tpbmRleF0pKTt9fXJldHVybiBNYXRoLm1heC5hcHBseShNYXRoLF9fc3ByZWFkKHppcykpO319fSk7LyoqKi99LC8qKiovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbWl4aW5zL3RoZW1lYWJsZS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGZ1bmN0aW9uYWxUaGVtZUNsYXNzZXMsIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNNaXhpbnNUaGVtZWFibGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImZ1bmN0aW9uYWxUaGVtZUNsYXNzZXMiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uYWxUaGVtZUNsYXNzZXM7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTtmdW5jdGlvbiBmdW5jdGlvbmFsVGhlbWVDbGFzc2VzKGNvbnRleHQpe3ZhciB2bT1fX2Fzc2lnbih7fSxjb250ZXh0LnByb3BzLGNvbnRleHQuaW5qZWN0aW9ucyk7dmFyIGlzRGFyaz1UaGVtZWFibGUub3B0aW9ucy5jb21wdXRlZC5pc0RhcmsuY2FsbCh2bSk7cmV0dXJuIFRoZW1lYWJsZS5vcHRpb25zLmNvbXB1dGVkLnRoZW1lQ2xhc3Nlcy5jYWxsKHtpc0Rhcms6aXNEYXJrfSk7fS8qIEB2dWUvY29tcG9uZW50ICovdmFyIFRoZW1lYWJsZT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKCkuZXh0ZW5kKHtuYW1lOid0aGVtZWFibGUnLHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybnt0aGVtZTp0aGlzLnRoZW1lYWJsZVByb3ZpZGV9O30saW5qZWN0Ont0aGVtZTp7ZGVmYXVsdDp7aXNEYXJrOmZhbHNlfX19LHByb3BzOntkYXJrOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDpudWxsfSxsaWdodDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6bnVsbH19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnt0aGVtZWFibGVQcm92aWRlOntpc0Rhcms6ZmFsc2V9fTt9LGNvbXB1dGVkOnthcHBJc0Rhcms6ZnVuY3Rpb24gYXBwSXNEYXJrKCl7cmV0dXJuIHRoaXMuJHZ1ZXRpZnkudGhlbWUuZGFya3x8ZmFsc2U7fSxpc0Rhcms6ZnVuY3Rpb24gaXNEYXJrKCl7aWYodGhpcy5kYXJrPT09dHJ1ZSl7Ly8gZXhwbGljaXRseSBkYXJrCnJldHVybiB0cnVlO31lbHNlIGlmKHRoaXMubGlnaHQ9PT10cnVlKXsvLyBleHBsaWNpdGx5IGxpZ2h0CnJldHVybiBmYWxzZTt9ZWxzZXsvLyBpbmhlcml0IGZyb20gcGFyZW50LCBvciBkZWZhdWx0IGZhbHNlIGlmIHRoZXJlIGlzIG5vbmUKcmV0dXJuIHRoaXMudGhlbWUuaXNEYXJrO319LHRoZW1lQ2xhc3NlczpmdW5jdGlvbiB0aGVtZUNsYXNzZXMoKXtyZXR1cm57J3RoZW1lLS1kYXJrJzp0aGlzLmlzRGFyaywndGhlbWUtLWxpZ2h0JzohdGhpcy5pc0Rhcmt9O30sLyoqIFVzZWQgYnkgbWVudXMgYW5kIGRpYWxvZ3MsIGluaGVyaXRzIGZyb20gdi1hcHAgaW5zdGVhZCBvZiB0aGUgcGFyZW50ICovcm9vdElzRGFyazpmdW5jdGlvbiByb290SXNEYXJrKCl7aWYodGhpcy5kYXJrPT09dHJ1ZSl7Ly8gZXhwbGljaXRseSBkYXJrCnJldHVybiB0cnVlO31lbHNlIGlmKHRoaXMubGlnaHQ9PT10cnVlKXsvLyBleHBsaWNpdGx5IGxpZ2h0CnJldHVybiBmYWxzZTt9ZWxzZXsvLyBpbmhlcml0IGZyb20gdi1hcHAKcmV0dXJuIHRoaXMuYXBwSXNEYXJrO319LHJvb3RUaGVtZUNsYXNzZXM6ZnVuY3Rpb24gcm9vdFRoZW1lQ2xhc3Nlcygpe3JldHVybnsndGhlbWUtLWRhcmsnOnRoaXMucm9vdElzRGFyaywndGhlbWUtLWxpZ2h0JzohdGhpcy5yb290SXNEYXJrfTt9fSx3YXRjaDp7aXNEYXJrOntoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsLG9sZFZhbCl7aWYobmV3VmFsIT09b2xkVmFsKXt0aGlzLnRoZW1lYWJsZVByb3ZpZGUuaXNEYXJrPXRoaXMuaXNEYXJrO319LGltbWVkaWF0ZTp0cnVlfX19KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPVRoZW1lYWJsZTsvKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL3RvZ2dsZWFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL21peGlucy90b2dnbGVhYmxlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGZhY3RvcnksIGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNNaXhpbnNUb2dnbGVhYmxlSW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJmYWN0b3J5IixmdW5jdGlvbigpe3JldHVybiBmYWN0b3J5O30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18pO2Z1bmN0aW9uIGZhY3RvcnkocHJvcCxldmVudCl7dmFyIF9hLF9iO2lmKHByb3A9PT12b2lkIDApe3Byb3A9J3ZhbHVlJzt9aWYoZXZlbnQ9PT12b2lkIDApe2V2ZW50PSdpbnB1dCc7fXJldHVybiB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOid0b2dnbGVhYmxlJyxtb2RlbDp7cHJvcDpwcm9wLGV2ZW50OmV2ZW50fSxwcm9wczooX2E9e30sX2FbcHJvcF09e3JlcXVpcmVkOmZhbHNlfSxfYSksZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2lzQWN0aXZlOiEhdGhpc1twcm9wXX07fSx3YXRjaDooX2I9e30sX2JbcHJvcF09ZnVuY3Rpb24odmFsKXt0aGlzLmlzQWN0aXZlPSEhdmFsO30sX2IuaXNBY3RpdmU9ZnVuY3Rpb24odmFsKXshIXZhbCE9PXRoaXNbcHJvcF0mJnRoaXMuJGVtaXQoZXZlbnQsdmFsKTt9LF9iKX0pO30vKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVkZWNsYXJlICovdmFyIFRvZ2dsZWFibGU9ZmFjdG9yeSgpOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09VG9nZ2xlYWJsZTsvKioqL30sLyoqKi8iLi9zcmMvbWl4aW5zL3RyYW5zaXRpb25hYmxlL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbWl4aW5zL3RyYW5zaXRpb25hYmxlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjTWl4aW5zVHJhbnNpdGlvbmFibGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOid0cmFuc2l0aW9uYWJsZScscHJvcHM6e21vZGU6U3RyaW5nLG9yaWdpbjpTdHJpbmcsdHJhbnNpdGlvbjpTdHJpbmd9fSk7LyoqKi99LC8qKiovIi4vc3JjL21peGlucy90cmFuc2xhdGFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvbWl4aW5zL3RyYW5zbGF0YWJsZS9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNNaXhpbnNUcmFuc2xhdGFibGVJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT12dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOid0cmFuc2xhdGFibGUnLHByb3BzOntoZWlnaHQ6TnVtYmVyfSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57ZWxPZmZzZXRUb3A6MCxwYXJhbGxheDowLHBhcmFsbGF4RGlzdDowLHBlcmNlbnRTY3JvbGxlZDowLHNjcm9sbFRvcDowLHdpbmRvd0hlaWdodDowLHdpbmRvd0JvdHRvbTowfTt9LGNvbXB1dGVkOntpbWdIZWlnaHQ6ZnVuY3Rpb24gaW1nSGVpZ2h0KCl7cmV0dXJuIHRoaXMub2JqSGVpZ2h0KCk7fX0sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsdGhpcy50cmFuc2xhdGUsZmFsc2UpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLHRoaXMudHJhbnNsYXRlLGZhbHNlKTt9LG1ldGhvZHM6e2NhbGNEaW1lbnNpb25zOmZ1bmN0aW9uIGNhbGNEaW1lbnNpb25zKCl7dmFyIG9mZnNldD10aGlzLiRlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTt0aGlzLnNjcm9sbFRvcD13aW5kb3cucGFnZVlPZmZzZXQ7dGhpcy5wYXJhbGxheERpc3Q9dGhpcy5pbWdIZWlnaHQtdGhpcy5oZWlnaHQ7dGhpcy5lbE9mZnNldFRvcD1vZmZzZXQudG9wK3RoaXMuc2Nyb2xsVG9wO3RoaXMud2luZG93SGVpZ2h0PXdpbmRvdy5pbm5lckhlaWdodDt0aGlzLndpbmRvd0JvdHRvbT10aGlzLnNjcm9sbFRvcCt0aGlzLndpbmRvd0hlaWdodDt9LGxpc3RlbmVyczpmdW5jdGlvbiBsaXN0ZW5lcnMoKXt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJyx0aGlzLnRyYW5zbGF0ZSxmYWxzZSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsdGhpcy50cmFuc2xhdGUsZmFsc2UpO30sLyoqIEBhYnN0cmFjdCAqKi9vYmpIZWlnaHQ6ZnVuY3Rpb24gb2JqSGVpZ2h0KCl7dGhyb3cgbmV3IEVycm9yKCdOb3QgaW1wbGVtZW50ZWQgIScpO30sdHJhbnNsYXRlOmZ1bmN0aW9uIHRyYW5zbGF0ZSgpe3RoaXMuY2FsY0RpbWVuc2lvbnMoKTt0aGlzLnBlcmNlbnRTY3JvbGxlZD0odGhpcy53aW5kb3dCb3R0b20tdGhpcy5lbE9mZnNldFRvcCkvKHBhcnNlSW50KHRoaXMuaGVpZ2h0KSt0aGlzLndpbmRvd0hlaWdodCk7dGhpcy5wYXJhbGxheD1NYXRoLnJvdW5kKHRoaXMucGFyYWxsYXhEaXN0KnRoaXMucGVyY2VudFNjcm9sbGVkKTt9fX0pOy8qKiovfSwvKioqLyIuL3NyYy9taXhpbnMvdmFsaWRhdGFibGUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9taXhpbnMvdmFsaWRhdGFibGUvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNNaXhpbnNWYWxpZGF0YWJsZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vY29sb3JhYmxlICovIi4vc3JjL21peGlucy9jb2xvcmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfcmVnaXN0cmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9yZWdpc3RyYWJsZSAqLyIuL3NyYy9taXhpbnMvcmVnaXN0cmFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbnNvbGUgKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTtmdW5jdGlvbiBfdHlwZW9mKG9iail7aWYodHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJl90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcik9PT0ic3ltYm9sIil7X3R5cGVvZj1mdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIF90eXBlb2YyKG9iaik7fTt9ZWxzZXtfdHlwZW9mPWZ1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gb2JqJiZ0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb2JqLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZvYmohPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOl90eXBlb2YyKG9iaik7fTt9cmV0dXJuIF90eXBlb2Yob2JqKTt9Ly8gTWl4aW5zCi8vIFV0aWxpdGllcwovKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfdXRpbF9taXhpbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdKShfY29sb3JhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSxPYmplY3QoX3JlZ2lzdHJhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImluamVjdCJdKSgnZm9ybScpLF90aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3ZhbGlkYXRhYmxlJyxwcm9wczp7ZGlzYWJsZWQ6Qm9vbGVhbixlcnJvcjpCb29sZWFuLGVycm9yQ291bnQ6e3R5cGU6W051bWJlcixTdHJpbmddLGRlZmF1bHQ6MX0sZXJyb3JNZXNzYWdlczp7dHlwZTpbU3RyaW5nLEFycmF5XSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuW107fX0sbWVzc2FnZXM6e3R5cGU6W1N0cmluZyxBcnJheV0sZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LHJlYWRvbmx5OkJvb2xlYW4scnVsZXM6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LHN1Y2Nlc3M6Qm9vbGVhbixzdWNjZXNzTWVzc2FnZXM6e3R5cGU6W1N0cmluZyxBcnJheV0sZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LHZhbGlkYXRlT25CbHVyOkJvb2xlYW4sdmFsdWU6e3JlcXVpcmVkOmZhbHNlfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2Vycm9yQnVja2V0OltdLGhhc0NvbG9yOmZhbHNlLGhhc0ZvY3VzZWQ6ZmFsc2UsaGFzSW5wdXQ6ZmFsc2UsaXNGb2N1c2VkOmZhbHNlLGlzUmVzZXR0aW5nOmZhbHNlLGxhenlWYWx1ZTp0aGlzLnZhbHVlLHZhbGlkOmZhbHNlfTt9LGNvbXB1dGVkOntjb21wdXRlZENvbG9yOmZ1bmN0aW9uIGNvbXB1dGVkQ29sb3IoKXtpZih0aGlzLmRpc2FibGVkKXJldHVybiB1bmRlZmluZWQ7aWYodGhpcy5jb2xvcilyZXR1cm4gdGhpcy5jb2xvcjsvLyBJdCdzIGFzc3VtZWQgdGhhdCBpZiB0aGUgaW5wdXQgaXMgb24gYQovLyBkYXJrIGJhY2tncm91bmQsIHRoZSB1c2VyIHdpbGwgd2FudCB0bwovLyBoYXZlIGEgd2hpdGUgY29sb3IuIElmIHRoZSBlbnRpcmUgYXBwCi8vIGlzIHNldHVwIHRvIGJlIGRhcmssIHRoZW4gdGhleSB3aWxsCi8vIGxpa2Ugd2FudCB0byB1c2UgdGhlaXIgcHJpbWFyeSBjb2xvcgppZih0aGlzLmlzRGFyayYmIXRoaXMuYXBwSXNEYXJrKXJldHVybid3aGl0ZSc7ZWxzZSByZXR1cm4ncHJpbWFyeSc7fSxoYXNFcnJvcjpmdW5jdGlvbiBoYXNFcnJvcigpe3JldHVybiB0aGlzLmludGVybmFsRXJyb3JNZXNzYWdlcy5sZW5ndGg+MHx8dGhpcy5lcnJvckJ1Y2tldC5sZW5ndGg+MHx8dGhpcy5lcnJvcjt9LC8vIFRPRE86IEFkZCBsb2dpYyB0aGF0IGFsbG93cyB0aGUgdXNlciB0byBlbmFibGUgYmFzZWQKLy8gdXBvbiBhIGdvb2QgdmFsaWRhdGlvbgpoYXNTdWNjZXNzOmZ1bmN0aW9uIGhhc1N1Y2Nlc3MoKXtyZXR1cm4gdGhpcy5pbnRlcm5hbFN1Y2Nlc3NNZXNzYWdlcy5sZW5ndGg+MHx8dGhpcy5zdWNjZXNzO30sZXh0ZXJuYWxFcnJvcjpmdW5jdGlvbiBleHRlcm5hbEVycm9yKCl7cmV0dXJuIHRoaXMuaW50ZXJuYWxFcnJvck1lc3NhZ2VzLmxlbmd0aD4wfHx0aGlzLmVycm9yO30saGFzTWVzc2FnZXM6ZnVuY3Rpb24gaGFzTWVzc2FnZXMoKXtyZXR1cm4gdGhpcy52YWxpZGF0aW9uVGFyZ2V0Lmxlbmd0aD4wO30saGFzU3RhdGU6ZnVuY3Rpb24gaGFzU3RhdGUoKXtpZih0aGlzLmRpc2FibGVkKXJldHVybiBmYWxzZTtyZXR1cm4gdGhpcy5oYXNTdWNjZXNzfHx0aGlzLnNob3VsZFZhbGlkYXRlJiZ0aGlzLmhhc0Vycm9yO30saW50ZXJuYWxFcnJvck1lc3NhZ2VzOmZ1bmN0aW9uIGludGVybmFsRXJyb3JNZXNzYWdlcygpe3JldHVybiB0aGlzLmdlbkludGVybmFsTWVzc2FnZXModGhpcy5lcnJvck1lc3NhZ2VzKTt9LGludGVybmFsTWVzc2FnZXM6ZnVuY3Rpb24gaW50ZXJuYWxNZXNzYWdlcygpe3JldHVybiB0aGlzLmdlbkludGVybmFsTWVzc2FnZXModGhpcy5tZXNzYWdlcyk7fSxpbnRlcm5hbFN1Y2Nlc3NNZXNzYWdlczpmdW5jdGlvbiBpbnRlcm5hbFN1Y2Nlc3NNZXNzYWdlcygpe3JldHVybiB0aGlzLmdlbkludGVybmFsTWVzc2FnZXModGhpcy5zdWNjZXNzTWVzc2FnZXMpO30saW50ZXJuYWxWYWx1ZTp7Z2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLmxhenlWYWx1ZTt9LHNldDpmdW5jdGlvbiBzZXQodmFsKXt0aGlzLmxhenlWYWx1ZT12YWw7dGhpcy4kZW1pdCgnaW5wdXQnLHZhbCk7fX0sc2hvdWxkVmFsaWRhdGU6ZnVuY3Rpb24gc2hvdWxkVmFsaWRhdGUoKXtpZih0aGlzLmV4dGVybmFsRXJyb3IpcmV0dXJuIHRydWU7aWYodGhpcy5pc1Jlc2V0dGluZylyZXR1cm4gZmFsc2U7cmV0dXJuIHRoaXMudmFsaWRhdGVPbkJsdXI/dGhpcy5oYXNGb2N1c2VkJiYhdGhpcy5pc0ZvY3VzZWQ6dGhpcy5oYXNJbnB1dHx8dGhpcy5oYXNGb2N1c2VkO30sdmFsaWRhdGlvbnM6ZnVuY3Rpb24gdmFsaWRhdGlvbnMoKXtyZXR1cm4gdGhpcy52YWxpZGF0aW9uVGFyZ2V0LnNsaWNlKDAsTnVtYmVyKHRoaXMuZXJyb3JDb3VudCkpO30sdmFsaWRhdGlvblN0YXRlOmZ1bmN0aW9uIHZhbGlkYXRpb25TdGF0ZSgpe2lmKHRoaXMuZGlzYWJsZWQpcmV0dXJuIHVuZGVmaW5lZDtpZih0aGlzLmhhc0Vycm9yJiZ0aGlzLnNob3VsZFZhbGlkYXRlKXJldHVybidlcnJvcic7aWYodGhpcy5oYXNTdWNjZXNzKXJldHVybidzdWNjZXNzJztpZih0aGlzLmhhc0NvbG9yKXJldHVybiB0aGlzLmNvbXB1dGVkQ29sb3I7cmV0dXJuIHVuZGVmaW5lZDt9LHZhbGlkYXRpb25UYXJnZXQ6ZnVuY3Rpb24gdmFsaWRhdGlvblRhcmdldCgpe2lmKHRoaXMuaW50ZXJuYWxFcnJvck1lc3NhZ2VzLmxlbmd0aD4wKXtyZXR1cm4gdGhpcy5pbnRlcm5hbEVycm9yTWVzc2FnZXM7fWVsc2UgaWYodGhpcy5zdWNjZXNzTWVzc2FnZXMubGVuZ3RoPjApe3JldHVybiB0aGlzLmludGVybmFsU3VjY2Vzc01lc3NhZ2VzO31lbHNlIGlmKHRoaXMubWVzc2FnZXMubGVuZ3RoPjApe3JldHVybiB0aGlzLmludGVybmFsTWVzc2FnZXM7fWVsc2UgaWYodGhpcy5zaG91bGRWYWxpZGF0ZSl7cmV0dXJuIHRoaXMuZXJyb3JCdWNrZXQ7fWVsc2UgcmV0dXJuW107fX0sd2F0Y2g6e3J1bGVzOntoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsLG9sZFZhbCl7aWYoT2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVlcEVxdWFsIl0pKG5ld1ZhbCxvbGRWYWwpKXJldHVybjt0aGlzLnZhbGlkYXRlKCk7fSxkZWVwOnRydWV9LGludGVybmFsVmFsdWU6ZnVuY3Rpb24gaW50ZXJuYWxWYWx1ZSgpey8vIElmIGl0J3MgdGhlIGZpcnN0IHRpbWUgd2UncmUgc2V0dGluZyBpbnB1dCwKLy8gbWFyayBpdCB3aXRoIGhhc0lucHV0CnRoaXMuaGFzSW5wdXQ9dHJ1ZTt0aGlzLnZhbGlkYXRlT25CbHVyfHx0aGlzLiRuZXh0VGljayh0aGlzLnZhbGlkYXRlKTt9LGlzRm9jdXNlZDpmdW5jdGlvbiBpc0ZvY3VzZWQodmFsKXsvLyBTaG91bGQgbm90IGNoZWNrIHZhbGlkYXRpb24KLy8gaWYgZGlzYWJsZWQKaWYoIXZhbCYmIXRoaXMuZGlzYWJsZWQpe3RoaXMuaGFzRm9jdXNlZD10cnVlO3RoaXMudmFsaWRhdGVPbkJsdXImJnRoaXMudmFsaWRhdGUoKTt9fSxpc1Jlc2V0dGluZzpmdW5jdGlvbiBpc1Jlc2V0dGluZygpe3ZhciBfdGhpcz10aGlzO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtfdGhpcy5oYXNJbnB1dD1mYWxzZTtfdGhpcy5oYXNGb2N1c2VkPWZhbHNlO190aGlzLmlzUmVzZXR0aW5nPWZhbHNlO190aGlzLnZhbGlkYXRlKCk7fSwwKTt9LGhhc0Vycm9yOmZ1bmN0aW9uIGhhc0Vycm9yKHZhbCl7aWYodGhpcy5zaG91bGRWYWxpZGF0ZSl7dGhpcy4kZW1pdCgndXBkYXRlOmVycm9yJyx2YWwpO319LHZhbHVlOmZ1bmN0aW9uIHZhbHVlKHZhbCl7dGhpcy5sYXp5VmFsdWU9dmFsO319LGJlZm9yZU1vdW50OmZ1bmN0aW9uIGJlZm9yZU1vdW50KCl7dGhpcy52YWxpZGF0ZSgpO30sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy5mb3JtJiZ0aGlzLmZvcm0ucmVnaXN0ZXIodGhpcyk7fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXt0aGlzLmZvcm0mJnRoaXMuZm9ybS51bnJlZ2lzdGVyKHRoaXMpO30sbWV0aG9kczp7Z2VuSW50ZXJuYWxNZXNzYWdlczpmdW5jdGlvbiBnZW5JbnRlcm5hbE1lc3NhZ2VzKG1lc3NhZ2VzKXtpZighbWVzc2FnZXMpcmV0dXJuW107ZWxzZSBpZihBcnJheS5pc0FycmF5KG1lc3NhZ2VzKSlyZXR1cm4gbWVzc2FnZXM7ZWxzZSByZXR1cm5bbWVzc2FnZXNdO30sLyoqIEBwdWJsaWMgKi9yZXNldDpmdW5jdGlvbiByZXNldCgpe3RoaXMuaXNSZXNldHRpbmc9dHJ1ZTt0aGlzLmludGVybmFsVmFsdWU9QXJyYXkuaXNBcnJheSh0aGlzLmludGVybmFsVmFsdWUpP1tdOnVuZGVmaW5lZDt9LC8qKiBAcHVibGljICovcmVzZXRWYWxpZGF0aW9uOmZ1bmN0aW9uIHJlc2V0VmFsaWRhdGlvbigpe3RoaXMuaXNSZXNldHRpbmc9dHJ1ZTt9LC8qKiBAcHVibGljICovdmFsaWRhdGU6ZnVuY3Rpb24gdmFsaWRhdGUoZm9yY2UsdmFsdWUpe2lmKGZvcmNlPT09dm9pZCAwKXtmb3JjZT1mYWxzZTt9dmFyIGVycm9yQnVja2V0PVtdO3ZhbHVlPXZhbHVlfHx0aGlzLmludGVybmFsVmFsdWU7aWYoZm9yY2UpdGhpcy5oYXNJbnB1dD10aGlzLmhhc0ZvY3VzZWQ9dHJ1ZTtmb3IodmFyIGluZGV4PTA7aW5kZXg8dGhpcy5ydWxlcy5sZW5ndGg7aW5kZXgrKyl7dmFyIHJ1bGU9dGhpcy5ydWxlc1tpbmRleF07dmFyIHZhbGlkPXR5cGVvZiBydWxlPT09J2Z1bmN0aW9uJz9ydWxlKHZhbHVlKTpydWxlO2lmKHR5cGVvZiB2YWxpZD09PSdzdHJpbmcnKXtlcnJvckJ1Y2tldC5wdXNoKHZhbGlkKTt9ZWxzZSBpZih0eXBlb2YgdmFsaWQhPT0nYm9vbGVhbicpe09iamVjdChfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImNvbnNvbGVFcnJvciJdKSgiUnVsZXMgc2hvdWxkIHJldHVybiBhIHN0cmluZyBvciBib29sZWFuLCByZWNlaXZlZCAnIitfdHlwZW9mKHZhbGlkKSsiJyBpbnN0ZWFkIix0aGlzKTt9fXRoaXMuZXJyb3JCdWNrZXQ9ZXJyb3JCdWNrZXQ7dGhpcy52YWxpZD1lcnJvckJ1Y2tldC5sZW5ndGg9PT0wO3JldHVybiB0aGlzLnZhbGlkO319fSk7LyoqKi99LC8qKiovIi4vc3JjL3NlcnZpY2VzL2FwcGxpY2F0aW9uL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9zZXJ2aWNlcy9hcHBsaWNhdGlvbi9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBBcHBsaWNhdGlvbiAqLyAvKioqL2Z1bmN0aW9uIHNyY1NlcnZpY2VzQXBwbGljYXRpb25JbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIkFwcGxpY2F0aW9uIixmdW5jdGlvbigpe3JldHVybiBBcHBsaWNhdGlvbjt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfc2VydmljZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3NlcnZpY2UgKi8iLi9zcmMvc2VydmljZXMvc2VydmljZS9pbmRleC50cyIpO3ZhciBfX2V4dGVuZHM9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19leHRlbmRzfHxmdW5jdGlvbigpe3ZhciBfZXh0ZW5kU3RhdGljcz1mdW5jdGlvbiBleHRlbmRTdGF0aWNzKGQsYil7X2V4dGVuZFN0YXRpY3M9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKGQsYil7ZC5fX3Byb3RvX189Yjt9fHxmdW5jdGlvbihkLGIpe2Zvcih2YXIgcCBpbiBiKXtpZihiLmhhc093blByb3BlcnR5KHApKWRbcF09YltwXTt9fTtyZXR1cm4gX2V4dGVuZFN0YXRpY3MoZCxiKTt9O3JldHVybiBmdW5jdGlvbihkLGIpe19leHRlbmRTdGF0aWNzKGQsYik7ZnVuY3Rpb24gX18oKXt0aGlzLmNvbnN0cnVjdG9yPWQ7fWQucHJvdG90eXBlPWI9PT1udWxsP09iamVjdC5jcmVhdGUoYik6KF9fLnByb3RvdHlwZT1iLnByb3RvdHlwZSxuZXcgX18oKSk7fTt9KCk7Ly8gRXh0ZW5zaW9ucwp2YXIgQXBwbGljYXRpb249LyoqIEBjbGFzcyAqL2Z1bmN0aW9uKF9zdXBlcil7X19leHRlbmRzKEFwcGxpY2F0aW9uLF9zdXBlcik7ZnVuY3Rpb24gQXBwbGljYXRpb24oKXt2YXIgX3RoaXM9X3N1cGVyIT09bnVsbCYmX3N1cGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpcztfdGhpcy5iYXI9MDtfdGhpcy50b3A9MDtfdGhpcy5sZWZ0PTA7X3RoaXMuaW5zZXRGb290ZXI9MDtfdGhpcy5yaWdodD0wO190aGlzLmJvdHRvbT0wO190aGlzLmZvb3Rlcj0wO190aGlzLmFwcGxpY2F0aW9uPXtiYXI6e30sdG9wOnt9LGxlZnQ6e30saW5zZXRGb290ZXI6e30scmlnaHQ6e30sYm90dG9tOnt9LGZvb3Rlcjp7fX07cmV0dXJuIF90aGlzO31BcHBsaWNhdGlvbi5wcm90b3R5cGUucmVnaXN0ZXI9ZnVuY3Rpb24odWlkLGxvY2F0aW9uLHNpemUpe3RoaXMuYXBwbGljYXRpb25bbG9jYXRpb25dW3VpZF09c2l6ZTt0aGlzLnVwZGF0ZShsb2NhdGlvbik7fTtBcHBsaWNhdGlvbi5wcm90b3R5cGUudW5yZWdpc3Rlcj1mdW5jdGlvbih1aWQsbG9jYXRpb24pe2lmKHRoaXMuYXBwbGljYXRpb25bbG9jYXRpb25dW3VpZF09PW51bGwpcmV0dXJuO2RlbGV0ZSB0aGlzLmFwcGxpY2F0aW9uW2xvY2F0aW9uXVt1aWRdO3RoaXMudXBkYXRlKGxvY2F0aW9uKTt9O0FwcGxpY2F0aW9uLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24obG9jYXRpb24pe3RoaXNbbG9jYXRpb25dPU9iamVjdC52YWx1ZXModGhpcy5hcHBsaWNhdGlvbltsb2NhdGlvbl0pLnJlZHVjZShmdW5jdGlvbihhY2MsY3VyKXtyZXR1cm4gYWNjK2N1cjt9LDApO307QXBwbGljYXRpb24ucHJvcGVydHk9J2FwcGxpY2F0aW9uJztyZXR1cm4gQXBwbGljYXRpb247fShfc2VydmljZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJTZXJ2aWNlIl0pOy8qKiovfSwvKioqLyIuL3NyYy9zZXJ2aWNlcy9icmVha3BvaW50L2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL3NlcnZpY2VzL2JyZWFrcG9pbnQvaW5kZXgudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBCcmVha3BvaW50ICovIC8qKiovZnVuY3Rpb24gc3JjU2VydmljZXNCcmVha3BvaW50SW5kZXhUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJCcmVha3BvaW50IixmdW5jdGlvbigpe3JldHVybiBCcmVha3BvaW50O30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9zZXJ2aWNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vc2VydmljZSAqLyIuL3NyYy9zZXJ2aWNlcy9zZXJ2aWNlL2luZGV4LnRzIik7dmFyIF9fZXh0ZW5kcz11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2V4dGVuZHN8fGZ1bmN0aW9uKCl7dmFyIF9leHRlbmRTdGF0aWNzPWZ1bmN0aW9uIGV4dGVuZFN0YXRpY3MoZCxiKXtfZXh0ZW5kU3RhdGljcz1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oZCxiKXtkLl9fcHJvdG9fXz1iO318fGZ1bmN0aW9uKGQsYil7Zm9yKHZhciBwIGluIGIpe2lmKGIuaGFzT3duUHJvcGVydHkocCkpZFtwXT1iW3BdO319O3JldHVybiBfZXh0ZW5kU3RhdGljcyhkLGIpO307cmV0dXJuIGZ1bmN0aW9uKGQsYil7X2V4dGVuZFN0YXRpY3MoZCxiKTtmdW5jdGlvbiBfXygpe3RoaXMuY29uc3RydWN0b3I9ZDt9ZC5wcm90b3R5cGU9Yj09PW51bGw/T2JqZWN0LmNyZWF0ZShiKTooX18ucHJvdG90eXBlPWIucHJvdG90eXBlLG5ldyBfXygpKTt9O30oKTt2YXIgX19hc3NpZ249dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19hc3NpZ258fGZ1bmN0aW9uKCl7X19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApKXRbcF09c1twXTt9fXJldHVybiB0O307cmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt9Oy8vIEV4dGVuc2lvbnMKdmFyIEJyZWFrcG9pbnQ9LyoqIEBjbGFzcyAqL2Z1bmN0aW9uKF9zdXBlcil7X19leHRlbmRzKEJyZWFrcG9pbnQsX3N1cGVyKTtmdW5jdGlvbiBCcmVha3BvaW50KG9wdGlvbnMpe2lmKG9wdGlvbnM9PT12b2lkIDApe29wdGlvbnM9e307fXZhciBfdGhpcz1fc3VwZXIuY2FsbCh0aGlzKXx8dGhpczsvLyBQdWJsaWMKX3RoaXMueHM9ZmFsc2U7X3RoaXMuc209ZmFsc2U7X3RoaXMubWQ9ZmFsc2U7X3RoaXMubGc9ZmFsc2U7X3RoaXMueGw9ZmFsc2U7X3RoaXMueHNPbmx5PWZhbHNlO190aGlzLnNtT25seT1mYWxzZTtfdGhpcy5zbUFuZERvd249ZmFsc2U7X3RoaXMuc21BbmRVcD1mYWxzZTtfdGhpcy5tZE9ubHk9ZmFsc2U7X3RoaXMubWRBbmREb3duPWZhbHNlO190aGlzLm1kQW5kVXA9ZmFsc2U7X3RoaXMubGdPbmx5PWZhbHNlO190aGlzLmxnQW5kRG93bj1mYWxzZTtfdGhpcy5sZ0FuZFVwPWZhbHNlO190aGlzLnhsT25seT1mYWxzZTtfdGhpcy5uYW1lPScnO190aGlzLmhlaWdodD0wO190aGlzLndpZHRoPTA7X3RoaXMudGhyZXNob2xkcz17eHM6NjAwLHNtOjk2MCxtZDoxMjgwLGxnOjE5MjB9O190aGlzLnNjcm9sbEJhcldpZHRoPTE2O190aGlzLnJlc2l6ZVRpbWVvdXQ9MDtfdGhpcy50aHJlc2hvbGRzPV9fYXNzaWduKHt9LF90aGlzLnRocmVzaG9sZHMsb3B0aW9ucy50aHJlc2hvbGRzKTtfdGhpcy5zY3JvbGxCYXJXaWR0aD1vcHRpb25zLnNjcm9sbEJhcldpZHRofHxfdGhpcy5zY3JvbGxCYXJXaWR0aDtfdGhpcy5pbml0KCk7cmV0dXJuIF90aGlzO31CcmVha3BvaW50LnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7LyogaXN0YW5idWwgaWdub3JlIGlmICovaWYodHlwZW9mIHdpbmRvdz09PSd1bmRlZmluZWQnKXJldHVybjt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJyx0aGlzLm9uUmVzaXplLmJpbmQodGhpcykse3Bhc3NpdmU6dHJ1ZX0pO3RoaXMudXBkYXRlKCk7fTtCcmVha3BvaW50LnByb3RvdHlwZS5vblJlc2l6ZT1mdW5jdGlvbigpe2NsZWFyVGltZW91dCh0aGlzLnJlc2l6ZVRpbWVvdXQpOy8vIEFkZGVkIGRlYm91bmNlIHRvIG1hdGNoIHdoYXQKLy8gdi1yZXNpemUgdXNlZCB0byBkbyBidXQgd2FzCi8vIHJlbW92ZWQgZHVlIHRvIGEgbWVtb3J5IGxlYWsKLy8gaHR0cHM6Ly9naXRodWIuY29tL3Z1ZXRpZnlqcy92dWV0aWZ5L3B1bGwvMjk5Nwp0aGlzLnJlc2l6ZVRpbWVvdXQ9d2luZG93LnNldFRpbWVvdXQodGhpcy51cGRhdGUuYmluZCh0aGlzKSwyMDApO307LyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1zdGF0ZW1lbnRzICovQnJlYWtwb2ludC5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7dmFyIGhlaWdodD10aGlzLmdldENsaWVudEhlaWdodCgpO3ZhciB3aWR0aD10aGlzLmdldENsaWVudFdpZHRoKCk7dmFyIHhzPXdpZHRoPHRoaXMudGhyZXNob2xkcy54czt2YXIgc209d2lkdGg8dGhpcy50aHJlc2hvbGRzLnNtJiYheHM7dmFyIG1kPXdpZHRoPHRoaXMudGhyZXNob2xkcy5tZC10aGlzLnNjcm9sbEJhcldpZHRoJiYhKHNtfHx4cyk7dmFyIGxnPXdpZHRoPHRoaXMudGhyZXNob2xkcy5sZy10aGlzLnNjcm9sbEJhcldpZHRoJiYhKG1kfHxzbXx8eHMpO3ZhciB4bD13aWR0aD49dGhpcy50aHJlc2hvbGRzLmxnLXRoaXMuc2Nyb2xsQmFyV2lkdGg7dGhpcy5oZWlnaHQ9aGVpZ2h0O3RoaXMud2lkdGg9d2lkdGg7dGhpcy54cz14czt0aGlzLnNtPXNtO3RoaXMubWQ9bWQ7dGhpcy5sZz1sZzt0aGlzLnhsPXhsO3RoaXMueHNPbmx5PXhzO3RoaXMuc21Pbmx5PXNtO3RoaXMuc21BbmREb3duPSh4c3x8c20pJiYhKG1kfHxsZ3x8eGwpO3RoaXMuc21BbmRVcD0heHMmJihzbXx8bWR8fGxnfHx4bCk7dGhpcy5tZE9ubHk9bWQ7dGhpcy5tZEFuZERvd249KHhzfHxzbXx8bWQpJiYhKGxnfHx4bCk7dGhpcy5tZEFuZFVwPSEoeHN8fHNtKSYmKG1kfHxsZ3x8eGwpO3RoaXMubGdPbmx5PWxnO3RoaXMubGdBbmREb3duPSh4c3x8c218fG1kfHxsZykmJiF4bDt0aGlzLmxnQW5kVXA9ISh4c3x8c218fG1kKSYmKGxnfHx4bCk7dGhpcy54bE9ubHk9eGw7c3dpdGNoKHRydWUpe2Nhc2UgeHM6dGhpcy5uYW1lPSd4cyc7YnJlYWs7Y2FzZSBzbTp0aGlzLm5hbWU9J3NtJzticmVhaztjYXNlIG1kOnRoaXMubmFtZT0nbWQnO2JyZWFrO2Nhc2UgbGc6dGhpcy5uYW1lPSdsZyc7YnJlYWs7ZGVmYXVsdDp0aGlzLm5hbWU9J3hsJzticmVhazt9fTsvLyBDcm9zcy1icm93c2VyIHN1cHBvcnQgYXMgZGVzY3JpYmVkIGluOgovLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMjQ4MDgxCkJyZWFrcG9pbnQucHJvdG90eXBlLmdldENsaWVudFdpZHRoPWZ1bmN0aW9uKCl7LyogaXN0YW5idWwgaWdub3JlIGlmICovaWYodHlwZW9mIGRvY3VtZW50PT09J3VuZGVmaW5lZCcpcmV0dXJuIDA7Ly8gU1NSCnJldHVybiBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgsd2luZG93LmlubmVyV2lkdGh8fDApO307QnJlYWtwb2ludC5wcm90b3R5cGUuZ2V0Q2xpZW50SGVpZ2h0PWZ1bmN0aW9uKCl7LyogaXN0YW5idWwgaWdub3JlIGlmICovaWYodHlwZW9mIGRvY3VtZW50PT09J3VuZGVmaW5lZCcpcmV0dXJuIDA7Ly8gU1NSCnJldHVybiBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LHdpbmRvdy5pbm5lckhlaWdodHx8MCk7fTtCcmVha3BvaW50LnByb3BlcnR5PSdicmVha3BvaW50JztyZXR1cm4gQnJlYWtwb2ludDt9KF9zZXJ2aWNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIlNlcnZpY2UiXSk7LyoqKi99LC8qKiovIi4vc3JjL3NlcnZpY2VzL2dvdG8vZWFzaW5nLXBhdHRlcm5zLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9zZXJ2aWNlcy9nb3RvL2Vhc2luZy1wYXR0ZXJucy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBsaW5lYXIsIGVhc2VJblF1YWQsIGVhc2VPdXRRdWFkLCBlYXNlSW5PdXRRdWFkLCBlYXNlSW5DdWJpYywgZWFzZU91dEN1YmljLCBlYXNlSW5PdXRDdWJpYywgZWFzZUluUXVhcnQsIGVhc2VPdXRRdWFydCwgZWFzZUluT3V0UXVhcnQsIGVhc2VJblF1aW50LCBlYXNlT3V0UXVpbnQsIGVhc2VJbk91dFF1aW50ICovIC8qKiovZnVuY3Rpb24gc3JjU2VydmljZXNHb3RvRWFzaW5nUGF0dGVybnNUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJsaW5lYXIiLGZ1bmN0aW9uKCl7cmV0dXJuIGxpbmVhcjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZWFzZUluUXVhZCIsZnVuY3Rpb24oKXtyZXR1cm4gZWFzZUluUXVhZDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZWFzZU91dFF1YWQiLGZ1bmN0aW9uKCl7cmV0dXJuIGVhc2VPdXRRdWFkO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJlYXNlSW5PdXRRdWFkIixmdW5jdGlvbigpe3JldHVybiBlYXNlSW5PdXRRdWFkO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJlYXNlSW5DdWJpYyIsZnVuY3Rpb24oKXtyZXR1cm4gZWFzZUluQ3ViaWM7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImVhc2VPdXRDdWJpYyIsZnVuY3Rpb24oKXtyZXR1cm4gZWFzZU91dEN1YmljO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJlYXNlSW5PdXRDdWJpYyIsZnVuY3Rpb24oKXtyZXR1cm4gZWFzZUluT3V0Q3ViaWM7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImVhc2VJblF1YXJ0IixmdW5jdGlvbigpe3JldHVybiBlYXNlSW5RdWFydDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZWFzZU91dFF1YXJ0IixmdW5jdGlvbigpe3JldHVybiBlYXNlT3V0UXVhcnQ7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImVhc2VJbk91dFF1YXJ0IixmdW5jdGlvbigpe3JldHVybiBlYXNlSW5PdXRRdWFydDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZWFzZUluUXVpbnQiLGZ1bmN0aW9uKCl7cmV0dXJuIGVhc2VJblF1aW50O30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJlYXNlT3V0UXVpbnQiLGZ1bmN0aW9uKCl7cmV0dXJuIGVhc2VPdXRRdWludDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZWFzZUluT3V0UXVpbnQiLGZ1bmN0aW9uKCl7cmV0dXJuIGVhc2VJbk91dFF1aW50O30pOy8vIGxpbmVhcgp2YXIgbGluZWFyPWZ1bmN0aW9uIGxpbmVhcih0KXtyZXR1cm4gdDt9Oy8vIGFjY2VsZXJhdGluZyBmcm9tIHplcm8gdmVsb2NpdHkKdmFyIGVhc2VJblF1YWQ9ZnVuY3Rpb24gZWFzZUluUXVhZCh0KXtyZXR1cm4gTWF0aC5wb3codCwyKTt9Oy8vIGRlY2VsZXJhdGluZyB0byB6ZXJvIHZlbG9jaXR5CnZhciBlYXNlT3V0UXVhZD1mdW5jdGlvbiBlYXNlT3V0UXVhZCh0KXtyZXR1cm4gdCooMi10KTt9Oy8vIGFjY2VsZXJhdGlvbiB1bnRpbCBoYWxmd2F5LCB0aGVuIGRlY2VsZXJhdGlvbgp2YXIgZWFzZUluT3V0UXVhZD1mdW5jdGlvbiBlYXNlSW5PdXRRdWFkKHQpe3JldHVybiB0PDAuNT8yKk1hdGgucG93KHQsMik6LTErKDQtMip0KSp0O307Ly8gYWNjZWxlcmF0aW5nIGZyb20gemVybyB2ZWxvY2l0eQp2YXIgZWFzZUluQ3ViaWM9ZnVuY3Rpb24gZWFzZUluQ3ViaWModCl7cmV0dXJuIE1hdGgucG93KHQsMyk7fTsvLyBkZWNlbGVyYXRpbmcgdG8gemVybyB2ZWxvY2l0eQp2YXIgZWFzZU91dEN1YmljPWZ1bmN0aW9uIGVhc2VPdXRDdWJpYyh0KXtyZXR1cm4gTWF0aC5wb3coLS10LDMpKzE7fTsvLyBhY2NlbGVyYXRpb24gdW50aWwgaGFsZndheSwgdGhlbiBkZWNlbGVyYXRpb24KdmFyIGVhc2VJbk91dEN1YmljPWZ1bmN0aW9uIGVhc2VJbk91dEN1YmljKHQpe3JldHVybiB0PDAuNT80Kk1hdGgucG93KHQsMyk6KHQtMSkqKDIqdC0yKSooMip0LTIpKzE7fTsvLyBhY2NlbGVyYXRpbmcgZnJvbSB6ZXJvIHZlbG9jaXR5CnZhciBlYXNlSW5RdWFydD1mdW5jdGlvbiBlYXNlSW5RdWFydCh0KXtyZXR1cm4gTWF0aC5wb3codCw0KTt9Oy8vIGRlY2VsZXJhdGluZyB0byB6ZXJvIHZlbG9jaXR5CnZhciBlYXNlT3V0UXVhcnQ9ZnVuY3Rpb24gZWFzZU91dFF1YXJ0KHQpe3JldHVybiAxLU1hdGgucG93KC0tdCw0KTt9Oy8vIGFjY2VsZXJhdGlvbiB1bnRpbCBoYWxmd2F5LCB0aGVuIGRlY2VsZXJhdGlvbgp2YXIgZWFzZUluT3V0UXVhcnQ9ZnVuY3Rpb24gZWFzZUluT3V0UXVhcnQodCl7cmV0dXJuIHQ8MC41PzgqdCp0KnQqdDoxLTgqLS10KnQqdCp0O307Ly8gYWNjZWxlcmF0aW5nIGZyb20gemVybyB2ZWxvY2l0eQp2YXIgZWFzZUluUXVpbnQ9ZnVuY3Rpb24gZWFzZUluUXVpbnQodCl7cmV0dXJuIE1hdGgucG93KHQsNSk7fTsvLyBkZWNlbGVyYXRpbmcgdG8gemVybyB2ZWxvY2l0eQp2YXIgZWFzZU91dFF1aW50PWZ1bmN0aW9uIGVhc2VPdXRRdWludCh0KXtyZXR1cm4gMStNYXRoLnBvdygtLXQsNSk7fTsvLyBhY2NlbGVyYXRpb24gdW50aWwgaGFsZndheSwgdGhlbiBkZWNlbGVyYXRpb24KdmFyIGVhc2VJbk91dFF1aW50PWZ1bmN0aW9uIGVhc2VJbk91dFF1aW50KHQpe3JldHVybiB0PDAuNT8xNipNYXRoLnBvdyh0LDUpOjErMTYqTWF0aC5wb3coLS10LDUpO307LyoqKi99LC8qKiovIi4vc3JjL3NlcnZpY2VzL2dvdG8vaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvc2VydmljZXMvZ290by9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQsIEdvdG8gKi8gLyoqKi9mdW5jdGlvbiBzcmNTZXJ2aWNlc0dvdG9JbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImRlZmF1bHQiLGZ1bmN0aW9uKCl7cmV0dXJuIGdvVG87fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIkdvdG8iLGZ1bmN0aW9uKCl7cmV0dXJuIEdvdG87fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3NlcnZpY2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9zZXJ2aWNlICovIi4vc3JjL3NlcnZpY2VzL3NlcnZpY2UvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZWFzaW5nX3BhdHRlcm5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9lYXNpbmctcGF0dGVybnMgKi8iLi9zcmMvc2VydmljZXMvZ290by9lYXNpbmctcGF0dGVybnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbCAqLyIuL3NyYy9zZXJ2aWNlcy9nb3RvL3V0aWwudHMiKTt2YXIgX19leHRlbmRzPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fZXh0ZW5kc3x8ZnVuY3Rpb24oKXt2YXIgX2V4dGVuZFN0YXRpY3M9ZnVuY3Rpb24gZXh0ZW5kU3RhdGljcyhkLGIpe19leHRlbmRTdGF0aWNzPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbihkLGIpe2QuX19wcm90b19fPWI7fXx8ZnVuY3Rpb24oZCxiKXtmb3IodmFyIHAgaW4gYil7aWYoYi5oYXNPd25Qcm9wZXJ0eShwKSlkW3BdPWJbcF07fX07cmV0dXJuIF9leHRlbmRTdGF0aWNzKGQsYik7fTtyZXR1cm4gZnVuY3Rpb24oZCxiKXtfZXh0ZW5kU3RhdGljcyhkLGIpO2Z1bmN0aW9uIF9fKCl7dGhpcy5jb25zdHJ1Y3Rvcj1kO31kLnByb3RvdHlwZT1iPT09bnVsbD9PYmplY3QuY3JlYXRlKGIpOihfXy5wcm90b3R5cGU9Yi5wcm90b3R5cGUsbmV3IF9fKCkpO307fSgpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gRXh0ZW5zaW9ucwovLyBVdGlsaXRpZXMKZnVuY3Rpb24gZ29UbyhfdGFyZ2V0LF9zZXR0aW5ncyl7aWYoX3NldHRpbmdzPT09dm9pZCAwKXtfc2V0dGluZ3M9e307fXZhciBzZXR0aW5ncz1fX2Fzc2lnbih7Y29udGFpbmVyOmRvY3VtZW50LnNjcm9sbGluZ0VsZW1lbnR8fGRvY3VtZW50LmJvZHl8fGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxkdXJhdGlvbjo1MDAsb2Zmc2V0OjAsZWFzaW5nOidlYXNlSW5PdXRDdWJpYycsYXBwT2Zmc2V0OnRydWV9LF9zZXR0aW5ncyk7dmFyIGNvbnRhaW5lcj1PYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZ2V0Q29udGFpbmVyIl0pKHNldHRpbmdzLmNvbnRhaW5lcik7LyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9pZihzZXR0aW5ncy5hcHBPZmZzZXQmJmdvVG8uZnJhbWV3b3JrLmFwcGxpY2F0aW9uKXt2YXIgaXNEcmF3ZXI9Y29udGFpbmVyLmNsYXNzTGlzdC5jb250YWlucygndi1uYXZpZ2F0aW9uLWRyYXdlcicpO3ZhciBpc0NsaXBwZWQ9Y29udGFpbmVyLmNsYXNzTGlzdC5jb250YWlucygndi1uYXZpZ2F0aW9uLWRyYXdlci0tY2xpcHBlZCcpO3ZhciBfYT1nb1RvLmZyYW1ld29yay5hcHBsaWNhdGlvbixiYXI9X2EuYmFyLHRvcD1fYS50b3A7c2V0dGluZ3Mub2Zmc2V0Kz1iYXI7LyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9pZighaXNEcmF3ZXJ8fGlzQ2xpcHBlZClzZXR0aW5ncy5vZmZzZXQrPXRvcDt9dmFyIHN0YXJ0VGltZT1wZXJmb3JtYW5jZS5ub3coKTt2YXIgdGFyZ2V0TG9jYXRpb247aWYodHlwZW9mIF90YXJnZXQ9PT0nbnVtYmVyJyl7dGFyZ2V0TG9jYXRpb249T2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImdldE9mZnNldCJdKShfdGFyZ2V0KS1zZXR0aW5ncy5vZmZzZXQ7fWVsc2V7dGFyZ2V0TG9jYXRpb249T2JqZWN0KF91dGlsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImdldE9mZnNldCJdKShfdGFyZ2V0KS1PYmplY3QoX3V0aWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZ2V0T2Zmc2V0Il0pKGNvbnRhaW5lciktc2V0dGluZ3Mub2Zmc2V0O312YXIgc3RhcnRMb2NhdGlvbj1jb250YWluZXIuc2Nyb2xsVG9wO2lmKHRhcmdldExvY2F0aW9uPT09c3RhcnRMb2NhdGlvbilyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRhcmdldExvY2F0aW9uKTt2YXIgZWFzZT10eXBlb2Ygc2V0dGluZ3MuZWFzaW5nPT09J2Z1bmN0aW9uJz9zZXR0aW5ncy5lYXNpbmc6X2Vhc2luZ19wYXR0ZXJuc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fW3NldHRpbmdzLmVhc2luZ107LyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9pZighZWFzZSl0aHJvdyBuZXcgVHlwZUVycm9yKCJFYXNpbmcgZnVuY3Rpb24gXCIiK3NldHRpbmdzLmVhc2luZysiXCIgbm90IGZvdW5kLiIpOy8vIENhbm5vdCBiZSB0ZXN0ZWQgcHJvcGVybHkgaW4ganNkb20KLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnByb21pc2UtbXVzdC1jb21wbGV0ZQovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlKXtyZXR1cm4gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uIHN0ZXAoY3VycmVudFRpbWUpe3ZhciB0aW1lRWxhcHNlZD1jdXJyZW50VGltZS1zdGFydFRpbWU7dmFyIHByb2dyZXNzPU1hdGguYWJzKHNldHRpbmdzLmR1cmF0aW9uP01hdGgubWluKHRpbWVFbGFwc2VkL3NldHRpbmdzLmR1cmF0aW9uLDEpOjEpO2NvbnRhaW5lci5zY3JvbGxUb3A9TWF0aC5mbG9vcihzdGFydExvY2F0aW9uKyh0YXJnZXRMb2NhdGlvbi1zdGFydExvY2F0aW9uKSplYXNlKHByb2dyZXNzKSk7dmFyIGNsaWVudEhlaWdodD1jb250YWluZXI9PT1kb2N1bWVudC5ib2R5P2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQ6Y29udGFpbmVyLmNsaWVudEhlaWdodDtpZihwcm9ncmVzcz09PTF8fGNsaWVudEhlaWdodCtjb250YWluZXIuc2Nyb2xsVG9wPT09Y29udGFpbmVyLnNjcm9sbEhlaWdodCl7cmV0dXJuIHJlc29sdmUodGFyZ2V0TG9jYXRpb24pO31yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc3RlcCk7fSk7fSk7fWdvVG8uZnJhbWV3b3JrPXt9O2dvVG8uaW5pdD1mdW5jdGlvbigpe307dmFyIEdvdG89LyoqIEBjbGFzcyAqL2Z1bmN0aW9uKF9zdXBlcil7X19leHRlbmRzKEdvdG8sX3N1cGVyKTtmdW5jdGlvbiBHb3RvKCl7dmFyIF90aGlzPV9zdXBlci5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBnb1RvO31Hb3RvLnByb3BlcnR5PSdnb1RvJztyZXR1cm4gR290bzt9KF9zZXJ2aWNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIlNlcnZpY2UiXSk7LyoqKi99LC8qKiovIi4vc3JjL3NlcnZpY2VzL2dvdG8vdXRpbC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL3NlcnZpY2VzL2dvdG8vdXRpbC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZ2V0T2Zmc2V0LCBnZXRDb250YWluZXIgKi8gLyoqKi9mdW5jdGlvbiBzcmNTZXJ2aWNlc0dvdG9VdGlsVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZ2V0T2Zmc2V0IixmdW5jdGlvbigpe3JldHVybiBnZXRPZmZzZXQ7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdldENvbnRhaW5lciIsZnVuY3Rpb24oKXtyZXR1cm4gZ2V0Q29udGFpbmVyO30pOy8vIFJldHVybiB0YXJnZXQncyBjdW11bGF0aXZlIG9mZnNldCBmcm9tIHRoZSB0b3AKZnVuY3Rpb24gZ2V0T2Zmc2V0KHRhcmdldCl7aWYodHlwZW9mIHRhcmdldD09PSdudW1iZXInKXtyZXR1cm4gdGFyZ2V0O312YXIgZWw9JCh0YXJnZXQpO2lmKCFlbCl7dGhyb3cgdHlwZW9mIHRhcmdldD09PSdzdHJpbmcnP25ldyBFcnJvcigiVGFyZ2V0IGVsZW1lbnQgXCIiK3RhcmdldCsiXCIgbm90IGZvdW5kLiIpOm5ldyBUeXBlRXJyb3IoIlRhcmdldCBtdXN0IGJlIGEgTnVtYmVyL1NlbGVjdG9yL0hUTUxFbGVtZW50L1Z1ZUNvbXBvbmVudCwgcmVjZWl2ZWQgIit0eXBlKHRhcmdldCkrIiBpbnN0ZWFkLiIpO312YXIgdG90YWxPZmZzZXQ9MDt3aGlsZShlbCl7dG90YWxPZmZzZXQrPWVsLm9mZnNldFRvcDtlbD1lbC5vZmZzZXRQYXJlbnQ7fXJldHVybiB0b3RhbE9mZnNldDt9ZnVuY3Rpb24gZ2V0Q29udGFpbmVyKGNvbnRhaW5lcil7dmFyIGVsPSQoY29udGFpbmVyKTtpZihlbClyZXR1cm4gZWw7dGhyb3cgdHlwZW9mIGNvbnRhaW5lcj09PSdzdHJpbmcnP25ldyBFcnJvcigiQ29udGFpbmVyIGVsZW1lbnQgXCIiK2NvbnRhaW5lcisiXCIgbm90IGZvdW5kLiIpOm5ldyBUeXBlRXJyb3IoIkNvbnRhaW5lciBtdXN0IGJlIGEgU2VsZWN0b3IvSFRNTEVsZW1lbnQvVnVlQ29tcG9uZW50LCByZWNlaXZlZCAiK3R5cGUoY29udGFpbmVyKSsiIGluc3RlYWQuIik7fWZ1bmN0aW9uIHR5cGUoZWwpe3JldHVybiBlbD09bnVsbD9lbDplbC5jb25zdHJ1Y3Rvci5uYW1lO31mdW5jdGlvbiAkKGVsKXtpZih0eXBlb2YgZWw9PT0nc3RyaW5nJyl7cmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWwpO31lbHNlIGlmKGVsJiZlbC5faXNWdWUpe3JldHVybiBlbC4kZWw7fWVsc2UgaWYoZWwgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCl7cmV0dXJuIGVsO31lbHNle3JldHVybiBudWxsO319LyoqKi99LC8qKiovIi4vc3JjL3NlcnZpY2VzL2ljb25zL2luZGV4LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9zZXJ2aWNlcy9pY29ucy9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBJY29ucyAqLyAvKioqL2Z1bmN0aW9uIHNyY1NlcnZpY2VzSWNvbnNJbmRleFRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIkljb25zIixmdW5jdGlvbigpe3JldHVybiBJY29uczt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfc2VydmljZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3NlcnZpY2UgKi8iLi9zcmMvc2VydmljZXMvc2VydmljZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9wcmVzZXRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9wcmVzZXRzICovIi4vc3JjL3NlcnZpY2VzL2ljb25zL3ByZXNldHMvaW5kZXgudHMiKTt2YXIgX19leHRlbmRzPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fZXh0ZW5kc3x8ZnVuY3Rpb24oKXt2YXIgX2V4dGVuZFN0YXRpY3M9ZnVuY3Rpb24gZXh0ZW5kU3RhdGljcyhkLGIpe19leHRlbmRTdGF0aWNzPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbihkLGIpe2QuX19wcm90b19fPWI7fXx8ZnVuY3Rpb24oZCxiKXtmb3IodmFyIHAgaW4gYil7aWYoYi5oYXNPd25Qcm9wZXJ0eShwKSlkW3BdPWJbcF07fX07cmV0dXJuIF9leHRlbmRTdGF0aWNzKGQsYik7fTtyZXR1cm4gZnVuY3Rpb24oZCxiKXtfZXh0ZW5kU3RhdGljcyhkLGIpO2Z1bmN0aW9uIF9fKCl7dGhpcy5jb25zdHJ1Y3Rvcj1kO31kLnByb3RvdHlwZT1iPT09bnVsbD9PYmplY3QuY3JlYXRlKGIpOihfXy5wcm90b3R5cGU9Yi5wcm90b3R5cGUsbmV3IF9fKCkpO307fSgpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307Ly8gRXh0ZW5zaW9ucwovLyBQcmVzZXRzCnZhciBJY29ucz0vKiogQGNsYXNzICovZnVuY3Rpb24oX3N1cGVyKXtfX2V4dGVuZHMoSWNvbnMsX3N1cGVyKTtmdW5jdGlvbiBJY29ucyhvcHRpb25zKXtpZihvcHRpb25zPT09dm9pZCAwKXtvcHRpb25zPXt9O312YXIgX3RoaXM9X3N1cGVyLmNhbGwodGhpcyl8fHRoaXM7X3RoaXMuaWNvbmZvbnQ9J21kaSc7X3RoaXMudmFsdWVzPV9wcmVzZXRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXVtfdGhpcy5pY29uZm9udF07aWYob3B0aW9ucy5pY29uZm9udClfdGhpcy5pY29uZm9udD1vcHRpb25zLmljb25mb250O190aGlzLnZhbHVlcz1fX2Fzc2lnbih7fSxfcHJlc2V0c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il1bX3RoaXMuaWNvbmZvbnRdLG9wdGlvbnMudmFsdWVzfHx7fSk7cmV0dXJuIF90aGlzO31JY29ucy5wcm9wZXJ0eT0naWNvbnMnO3JldHVybiBJY29uczt9KF9zZXJ2aWNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIlNlcnZpY2UiXSk7LyoqKi99LC8qKiovIi4vc3JjL3NlcnZpY2VzL2ljb25zL3ByZXNldHMvZmEudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvc2VydmljZXMvaWNvbnMvcHJlc2V0cy9mYS50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNTZXJ2aWNlc0ljb25zUHJlc2V0c0ZhVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTt2YXIgaWNvbnM9e2NvbXBsZXRlOidmYXMgZmEtY2hlY2snLGNhbmNlbDonZmFzIGZhLXRpbWVzLWNpcmNsZScsY2xvc2U6J2ZhcyBmYS10aW1lcycsZGVsZXRlOidmYXMgZmEtdGltZXMtY2lyY2xlJyxjbGVhcjonZmFzIGZhLXRpbWVzLWNpcmNsZScsc3VjY2VzczonZmFzIGZhLWNoZWNrLWNpcmNsZScsaW5mbzonZmFzIGZhLWluZm8tY2lyY2xlJyx3YXJuaW5nOidmYXMgZmEtZXhjbGFtYXRpb24nLGVycm9yOidmYXMgZmEtZXhjbGFtYXRpb24tdHJpYW5nbGUnLHByZXY6J2ZhcyBmYS1jaGV2cm9uLWxlZnQnLG5leHQ6J2ZhcyBmYS1jaGV2cm9uLXJpZ2h0JyxjaGVja2JveE9uOidmYXMgZmEtY2hlY2stc3F1YXJlJyxjaGVja2JveE9mZjonZmFyIGZhLXNxdWFyZScsY2hlY2tib3hJbmRldGVybWluYXRlOidmYXMgZmEtbWludXMtc3F1YXJlJyxkZWxpbWl0ZXI6J2ZhcyBmYS1jaXJjbGUnLHNvcnQ6J2ZhcyBmYS1zb3J0LXVwJyxleHBhbmQ6J2ZhcyBmYS1jaGV2cm9uLWRvd24nLG1lbnU6J2ZhcyBmYS1iYXJzJyxzdWJncm91cDonZmFzIGZhLWNhcmV0LWRvd24nLGRyb3Bkb3duOidmYXMgZmEtY2FyZXQtZG93bicscmFkaW9PbjonZmFyIGZhLWRvdC1jaXJjbGUnLHJhZGlvT2ZmOidmYXIgZmEtY2lyY2xlJyxlZGl0OidmYXMgZmEtZWRpdCcscmF0aW5nRW1wdHk6J2ZhciBmYS1zdGFyJyxyYXRpbmdGdWxsOidmYXMgZmEtc3RhcicscmF0aW5nSGFsZjonZmFzIGZhLXN0YXItaGFsZicsbG9hZGluZzonZmFzIGZhLXN5bmMnLGZpcnN0OidmYXMgZmEtc3RlcC1iYWNrd2FyZCcsbGFzdDonZmFzIGZhLXN0ZXAtZm9yd2FyZCcsdW5mb2xkOidmYXMgZmEtYXJyb3dzLWFsdC12JyxmaWxlOidmYXMgZmEtcGFwZXJjbGlwJyxwbHVzOidmYXMgZmEtcGx1cycsbWludXM6J2ZhcyBmYS1taW51cyd9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09aWNvbnM7LyoqKi99LC8qKiovIi4vc3JjL3NlcnZpY2VzL2ljb25zL3ByZXNldHMvZmE0LnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9zZXJ2aWNlcy9pY29ucy9wcmVzZXRzL2ZhNC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBkZWZhdWx0ICovIC8qKiovZnVuY3Rpb24gc3JjU2VydmljZXNJY29uc1ByZXNldHNGYTRUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO3ZhciBpY29ucz17Y29tcGxldGU6J2ZhIGZhLWNoZWNrJyxjYW5jZWw6J2ZhIGZhLXRpbWVzLWNpcmNsZScsY2xvc2U6J2ZhIGZhLXRpbWVzJyxkZWxldGU6J2ZhIGZhLXRpbWVzLWNpcmNsZScsY2xlYXI6J2ZhIGZhLXRpbWVzLWNpcmNsZScsc3VjY2VzczonZmEgZmEtY2hlY2stY2lyY2xlJyxpbmZvOidmYSBmYS1pbmZvLWNpcmNsZScsd2FybmluZzonZmEgZmEtZXhjbGFtYXRpb24nLGVycm9yOidmYSBmYS1leGNsYW1hdGlvbi10cmlhbmdsZScscHJldjonZmEgZmEtY2hldnJvbi1sZWZ0JyxuZXh0OidmYSBmYS1jaGV2cm9uLXJpZ2h0JyxjaGVja2JveE9uOidmYSBmYS1jaGVjay1zcXVhcmUnLGNoZWNrYm94T2ZmOidmYXIgZmEtc3F1YXJlJyxjaGVja2JveEluZGV0ZXJtaW5hdGU6J2ZhIGZhLW1pbnVzLXNxdWFyZScsZGVsaW1pdGVyOidmYSBmYS1jaXJjbGUnLHNvcnQ6J2ZhIGZhLXNvcnQtdXAnLGV4cGFuZDonZmEgZmEtY2hldnJvbi1kb3duJyxtZW51OidmYSBmYS1iYXJzJyxzdWJncm91cDonZmEgZmEtY2FyZXQtZG93bicsZHJvcGRvd246J2ZhIGZhLWNhcmV0LWRvd24nLHJhZGlvT246J2ZhIGZhLWRvdC1jaXJjbGUtbycscmFkaW9PZmY6J2ZhIGZhLWNpcmNsZS1vJyxlZGl0OidmYSBmYS1wZW5jaWwnLHJhdGluZ0VtcHR5OidmYSBmYS1zdGFyLW8nLHJhdGluZ0Z1bGw6J2ZhIGZhLXN0YXInLHJhdGluZ0hhbGY6J2ZhIGZhLXN0YXItaGFsZi1vJyxsb2FkaW5nOidmYSBmYS1yZWZyZXNoJyxmaXJzdDonZmEgZmEtc3RlcC1iYWNrd2FyZCcsbGFzdDonZmEgZmEtc3RlcC1mb3J3YXJkJyx1bmZvbGQ6J2ZhIGZhLWFuZ2xlLWRvdWJsZS1kb3duJyxmaWxlOidmYSBmYS1wYXBlcmNsaXAnLHBsdXM6J2ZhIGZhLXBsdXMnLG1pbnVzOidmYSBmYS1taW51cyd9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi9fX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il09aWNvbnM7LyoqKi99LC8qKiovIi4vc3JjL3NlcnZpY2VzL2ljb25zL3ByZXNldHMvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvc2VydmljZXMvaWNvbnMvcHJlc2V0cy9pbmRleC50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNTZXJ2aWNlc0ljb25zUHJlc2V0c0luZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWRpX3N2Z19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4vbWRpLXN2ZyAqLyIuL3NyYy9zZXJ2aWNlcy9pY29ucy9wcmVzZXRzL21kaS1zdmcudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL21kICovIi4vc3JjL3NlcnZpY2VzL2ljb25zL3ByZXNldHMvbWQudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWRpX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9tZGkgKi8iLi9zcmMvc2VydmljZXMvaWNvbnMvcHJlc2V0cy9tZGkudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZmFfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2ZhICovIi4vc3JjL3NlcnZpY2VzL2ljb25zL3ByZXNldHMvZmEudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfZmE0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9mYTQgKi8iLi9zcmMvc2VydmljZXMvaWNvbnMvcHJlc2V0cy9mYTQudHMiKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdC5mcmVlemUoe21kaVN2ZzpfbWRpX3N2Z19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0sbWQ6X21kX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSxtZGk6X21kaV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0sZmE6X2ZhX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSxmYTQ6X2ZhNF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il19KTsvKioqL30sLyoqKi8iLi9zcmMvc2VydmljZXMvaWNvbnMvcHJlc2V0cy9tZC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9zZXJ2aWNlcy9pY29ucy9wcmVzZXRzL21kLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY1NlcnZpY2VzSWNvbnNQcmVzZXRzTWRUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO3ZhciBpY29ucz17Y29tcGxldGU6J2NoZWNrJyxjYW5jZWw6J2NhbmNlbCcsY2xvc2U6J2Nsb3NlJyxkZWxldGU6J2NhbmNlbCcsY2xlYXI6J2NsZWFyJyxzdWNjZXNzOidjaGVja19jaXJjbGUnLGluZm86J2luZm8nLHdhcm5pbmc6J3ByaW9yaXR5X2hpZ2gnLGVycm9yOid3YXJuaW5nJyxwcmV2OidjaGV2cm9uX2xlZnQnLG5leHQ6J2NoZXZyb25fcmlnaHQnLGNoZWNrYm94T246J2NoZWNrX2JveCcsY2hlY2tib3hPZmY6J2NoZWNrX2JveF9vdXRsaW5lX2JsYW5rJyxjaGVja2JveEluZGV0ZXJtaW5hdGU6J2luZGV0ZXJtaW5hdGVfY2hlY2tfYm94JyxkZWxpbWl0ZXI6J2ZpYmVyX21hbnVhbF9yZWNvcmQnLHNvcnQ6J2Fycm93X3Vwd2FyZCcsZXhwYW5kOidrZXlib2FyZF9hcnJvd19kb3duJyxtZW51OidtZW51JyxzdWJncm91cDonYXJyb3dfZHJvcF9kb3duJyxkcm9wZG93bjonYXJyb3dfZHJvcF9kb3duJyxyYWRpb09uOidyYWRpb19idXR0b25fY2hlY2tlZCcscmFkaW9PZmY6J3JhZGlvX2J1dHRvbl91bmNoZWNrZWQnLGVkaXQ6J2VkaXQnLHJhdGluZ0VtcHR5OidzdGFyX2JvcmRlcicscmF0aW5nRnVsbDonc3RhcicscmF0aW5nSGFsZjonc3Rhcl9oYWxmJyxsb2FkaW5nOidjYWNoZWQnLGZpcnN0OidmaXJzdF9wYWdlJyxsYXN0OidsYXN0X3BhZ2UnLHVuZm9sZDondW5mb2xkX21vcmUnLGZpbGU6J2F0dGFjaF9maWxlJyxwbHVzOidhZGQnLG1pbnVzOidyZW1vdmUnfTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPWljb25zOy8qKiovfSwvKioqLyIuL3NyYy9zZXJ2aWNlcy9pY29ucy9wcmVzZXRzL21kaS1zdmcudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9zZXJ2aWNlcy9pY29ucy9wcmVzZXRzL21kaS1zdmcudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNTZXJ2aWNlc0ljb25zUHJlc2V0c01kaVN2Z1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7dmFyIGljb25zPXtjb21wbGV0ZTonTTIxLDdMOSwxOUwzLjUsMTMuNUw0LjkxLDEyLjA5TDksMTYuMTdMMTkuNTksNS41OUwyMSw3WicsY2FuY2VsOidNMTIsMkMxNy41MywyIDIyLDYuNDcgMjIsMTJDMjIsMTcuNTMgMTcuNTMsMjIgMTIsMjJDNi40NywyMiAyLDE3LjUzIDIsMTJDMiw2LjQ3IDYuNDcsMiAxMiwyTTE1LjU5LDdMMTIsMTAuNTlMOC40MSw3TDcsOC40MUwxMC41OSwxMkw3LDE1LjU5TDguNDEsMTdMMTIsMTMuNDFMMTUuNTksMTdMMTcsMTUuNTlMMTMuNDEsMTJMMTcsOC40MUwxNS41OSw3WicsY2xvc2U6J00xOSw2LjQxTDE3LjU5LDVMMTIsMTAuNTlMNi40MSw1TDUsNi40MUwxMC41OSwxMkw1LDE3LjU5TDYuNDEsMTlMMTIsMTMuNDFMMTcuNTksMTlMMTksMTcuNTlMMTMuNDEsMTJMMTksNi40MVonLGRlbGV0ZTonTTEyLDJDMTcuNTMsMiAyMiw2LjQ3IDIyLDEyQzIyLDE3LjUzIDE3LjUzLDIyIDEyLDIyQzYuNDcsMjIgMiwxNy41MyAyLDEyQzIsNi40NyA2LjQ3LDIgMTIsMk0xNS41OSw3TDEyLDEwLjU5TDguNDEsN0w3LDguNDFMMTAuNTksMTJMNywxNS41OUw4LjQxLDE3TDEyLDEzLjQxTDE1LjU5LDE3TDE3LDE1LjU5TDEzLjQxLDEyTDE3LDguNDFMMTUuNTksN1onLGNsZWFyOidNMTksNi40MUwxNy41OSw1TDEyLDEwLjU5TDYuNDEsNUw1LDYuNDFMMTAuNTksMTJMNSwxNy41OUw2LjQxLDE5TDEyLDEzLjQxTDE3LjU5LDE5TDE5LDE3LjU5TDEzLjQxLDEyTDE5LDYuNDFaJyxzdWNjZXNzOidNMTIsMkMxNy41MiwyIDIyLDYuNDggMjIsMTJDMjIsMTcuNTIgMTcuNTIsMjIgMTIsMjJDNi40OCwyMiAyLDE3LjUyIDIsMTJDMiw2LjQ4IDYuNDgsMiAxMiwyTTExLDE2LjVMMTgsOS41TDE2LjU5LDguMDlMMTEsMTMuNjdMNy45MSwxMC41OUw2LjUsMTJMMTEsMTYuNVonLGluZm86J00xMyw5SDExVjdIMTNNMTMsMTdIMTFWMTFIMTNNMTIsMkM2LjQ4LDIgMiw2LjQ4IDIsMTJDMiwxNy41MiA2LjQ4LDIyIDEyLDIyQzE3LjUyLDIyIDIyLDE3LjUyIDIyLDEyQzIyLDYuNDggMTcuNTIsMiAxMiwyWicsd2FybmluZzonTTExLDQuNUgxM1YxNS41SDExVjQuNU0xMywxNy41VjE5LjVIMTFWMTcuNUgxM1onLGVycm9yOidNMTMsMTRIMTFWMTBIMTNNMTMsMThIMTFWMTZIMTNNMSwyMUgyM0wxMiwyTDEsMjFaJyxwcmV2OidNMTUuNDEsMTYuNThMMTAuODMsMTJMMTUuNDEsNy40MUwxNCw2TDgsMTJMMTQsMThMMTUuNDEsMTYuNThaJyxuZXh0OidNOC41OSwxNi41OEwxMy4xNywxMkw4LjU5LDcuNDFMMTAsNkwxNiwxMkwxMCwxOEw4LjU5LDE2LjU4WicsY2hlY2tib3hPbjonTTEwLDE3TDUsMTJMNi40MSwxMC41OEwxMCwxNC4xN0wxNy41OSw2LjU4TDE5LDhNMTksM0g1QzMuODksMyAzLDMuODkgMyw1VjE5QzMsMjAuMSAzLjksMjEgNSwyMUgxOUMyMC4xLDIxIDIxLDIwLjEgMjEsMTlWNUMyMSwzLjg5IDIwLjEsMyAxOSwzWicsY2hlY2tib3hPZmY6J00xOSwzSDVDMy44OSwzIDMsMy44OSAzLDVWMTlDMywyMC4xIDMuOSwyMSA1LDIxSDE5QzIwLjEsMjEgMjEsMjAuMSAyMSwxOVY1QzIxLDMuODkgMjAuMSwzIDE5LDNNMTksNVYxOUg1VjVIMTlaJyxjaGVja2JveEluZGV0ZXJtaW5hdGU6J00xNywxM0g3VjExSDE3TTE5LDNINUMzLjg5LDMgMywzLjg5IDMsNVYxOUMzLDIwLjEgMy45LDIxIDUsMjFIMTlDMjAuMSwyMSAyMSwyMC4xIDIxLDE5VjVDMjEsMy44OSAyMC4xLDMgMTksM1onLGRlbGltaXRlcjonTTEyLDJDNi40OCwyIDIsNi40OCAyLDEyQzIsMTcuNTIgNi40OCwyMiAxMiwyMkMxNy41MiwyMiAyMiwxNy41MiAyMiwxMkMyMiw2LjQ4IDE3LjUyLDIgMTIsMlonLHNvcnQ6J00xMywyMEgxMVY4TDUuNSwxMy41TDQuMDgsMTIuMDhMMTIsNC4xNkwxOS45MiwxMi4wOEwxOC41LDEzLjVMMTMsOFYyMFonLGV4cGFuZDonTTcuNDEsOC41OEwxMiwxMy4xN0wxNi41OSw4LjU4TDE4LDEwTDEyLDE2TDYsMTBMNy40MSw4LjU4WicsbWVudTonTTMsNkgyMVY4SDNWNk0zLDExSDIxVjEzSDNWMTFNMywxNkgyMVYxOEgzVjE2Wicsc3ViZ3JvdXA6J003LDEwTDEyLDE1TDE3LDEwSDdaJyxkcm9wZG93bjonTTcsMTBMMTIsMTVMMTcsMTBIN1onLHJhZGlvT246J00xMiwyMEM3LjU4LDIwIDQsMTYuNDIgNCwxMkM0LDcuNTggNy41OCw0IDEyLDRDMTYuNDIsNCAyMCw3LjU4IDIwLDEyQzIwLDE2LjQyIDE2LjQyLDIwIDEyLDIwTTEyLDJDNi40OCwyIDIsNi40OCAyLDEyQzIsMTcuNTIgNi40OCwyMiAxMiwyMkMxNy41MiwyMiAyMiwxNy41MiAyMiwxMkMyMiw2LjQ4IDE3LjUyLDIgMTIsMk0xMiw3QzkuMjQsNyA3LDkuMjQgNywxMkM3LDE0Ljc2IDkuMjQsMTcgMTIsMTdDMTQuNzYsMTcgMTcsMTQuNzYgMTcsMTJDMTcsOS4yNCAxNC43Niw3IDEyLDdaJyxyYWRpb09mZjonTTEyLDIwQzcuNTgsMjAgNCwxNi40MiA0LDEyQzQsNy41OCA3LjU4LDQgMTIsNEMxNi40Miw0IDIwLDcuNTggMjAsMTJDMjAsMTYuNDIgMTYuNDIsMjAgMTIsMjBNMTIsMkM2LjQ4LDIgMiw2LjQ4IDIsMTJDMiwxNy41MiA2LjQ4LDIyIDEyLDIyQzE3LjUyLDIyIDIyLDE3LjUyIDIyLDEyQzIyLDYuNDggMTcuNTIsMiAxMiwyWicsZWRpdDonTTIwLjcxLDcuMDRDMjEuMSw2LjY1IDIxLjEsNiAyMC43MSw1LjYzTDE4LjM3LDMuMjlDMTgsMi45IDE3LjM1LDIuOSAxNi45NiwzLjI5TDE1LjEyLDUuMTJMMTguODcsOC44N00zLDE3LjI1VjIxSDYuNzVMMTcuODEsOS45M0wxNC4wNiw2LjE4TDMsMTcuMjVaJyxyYXRpbmdFbXB0eTonTTEyLDE1LjM5TDguMjQsMTcuNjZMOS4yMywxMy4zOEw1LjkxLDEwLjVMMTAuMjksMTAuMTNMMTIsNi4wOUwxMy43MSwxMC4xM0wxOC4wOSwxMC41TDE0Ljc3LDEzLjM4TDE1Ljc2LDE3LjY2TTIyLDkuMjRMMTQuODEsOC42M0wxMiwyTDkuMTksOC42M0wyLDkuMjRMNy40NSwxMy45N0w1LjgyLDIxTDEyLDE3LjI3TDE4LjE4LDIxTDE2LjU0LDEzLjk3TDIyLDkuMjRaJyxyYXRpbmdGdWxsOidNMTIsMTcuMjdMMTguMTgsMjFMMTYuNTQsMTMuOTdMMjIsOS4yNEwxNC44MSw4LjYyTDEyLDJMOS4xOSw4LjYyTDIsOS4yNEw3LjQ1LDEzLjk3TDUuODIsMjFMMTIsMTcuMjdaJyxyYXRpbmdIYWxmOidNMTIsMTUuNFY2LjFMMTMuNzEsMTAuMTNMMTguMDksMTAuNUwxNC43NywxMy4zOUwxNS43NiwxNy42N00yMiw5LjI0TDE0LjgxLDguNjNMMTIsMkw5LjE5LDguNjNMMiw5LjI0TDcuNDUsMTMuOTdMNS44MiwyMUwxMiwxNy4yN0wxOC4xOCwyMUwxNi41NCwxMy45N0wyMiw5LjI0WicsbG9hZGluZzonTTE5LDhMMTUsMTJIMThDMTgsMTUuMzEgMTUuMzEsMTggMTIsMThDMTEsMTggMTAuMDMsMTcuNzUgOS4yLDE3LjNMNy43NCwxOC43NkM4Ljk3LDE5LjU0IDEwLjQzLDIwIDEyLDIwQzE2LjQyLDIwIDIwLDE2LjQyIDIwLDEySDIzTTYsMTJDNiw4LjY5IDguNjksNiAxMiw2QzEzLDYgMTMuOTcsNi4yNSAxNC44LDYuN0wxNi4yNiw1LjI0QzE1LjAzLDQuNDYgMTMuNTcsNCAxMiw0QzcuNTgsNCA0LDcuNTggNCwxMkgxTDUsMTZMOSwxMicsZmlyc3Q6J00xOC40MSwxNi41OUwxMy44MiwxMkwxOC40MSw3LjQxTDE3LDZMMTEsMTJMMTcsMThMMTguNDEsMTYuNTlNNiw2SDhWMThINlY2WicsbGFzdDonTTUuNTksNy40MUwxMC4xOCwxMkw1LjU5LDE2LjU5TDcsMThMMTMsMTJMNyw2TDUuNTksNy40MU0xNiw2SDE4VjE4SDE2VjZaJyx1bmZvbGQ6J00xMiwxOC4xN0w4LjgzLDE1TDcuNDIsMTYuNDFMMTIsMjFMMTYuNTksMTYuNDFMMTUuMTcsMTVNMTIsNS44M0wxNS4xNyw5TDE2LjU4LDcuNTlMMTIsM0w3LjQxLDcuNTlMOC44Myw5TDEyLDUuODNaJyxmaWxlOidNMTYuNSw2VjE3LjVDMTYuNSwxOS43MSAxNC43MSwyMS41IDEyLjUsMjEuNUMxMC4yOSwyMS41IDguNSwxOS43MSA4LjUsMTcuNVY1QzguNSwzLjYyIDkuNjIsMi41IDExLDIuNUMxMi4zOCwyLjUgMTMuNSwzLjYyIDEzLjUsNVYxNS41QzEzLjUsMTYuMDUgMTMuMDUsMTYuNSAxMi41LDE2LjVDMTEuOTUsMTYuNSAxMS41LDE2LjA1IDExLjUsMTUuNVY2SDEwVjE1LjVDMTAsMTYuODggMTEuMTIsMTggMTIuNSwxOEMxMy44OCwxOCAxNSwxNi44OCAxNSwxNS41VjVDMTUsMi43OSAxMy4yMSwxIDExLDFDOC43OSwxIDcsMi43OSA3LDVWMTcuNUM3LDIwLjU0IDkuNDYsMjMgMTIuNSwyM0MxNS41NCwyMyAxOCwyMC41NCAxOCwxNy41VjZIMTYuNVonLHBsdXM6J00xOSwxM0gxM1YxOUgxMVYxM0g1VjExSDExVjVIMTNWMTFIMTlWMTNaJyxtaW51czonTTE5LDEzSDVWMTFIMTlWMTNaJ307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1pY29uczsvKioqL30sLyoqKi8iLi9zcmMvc2VydmljZXMvaWNvbnMvcHJlc2V0cy9tZGkudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL3NlcnZpY2VzL2ljb25zL3ByZXNldHMvbWRpLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNTZXJ2aWNlc0ljb25zUHJlc2V0c01kaVRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7dmFyIGljb25zPXtjb21wbGV0ZTonbWRpLWNoZWNrJyxjYW5jZWw6J21kaS1jbG9zZS1jaXJjbGUnLGNsb3NlOidtZGktY2xvc2UnLGRlbGV0ZTonbWRpLWNsb3NlLWNpcmNsZScsY2xlYXI6J21kaS1jbG9zZScsc3VjY2VzczonbWRpLWNoZWNrLWNpcmNsZScsaW5mbzonbWRpLWluZm9ybWF0aW9uJyx3YXJuaW5nOidtZGktZXhjbGFtYXRpb24nLGVycm9yOidtZGktYWxlcnQnLHByZXY6J21kaS1jaGV2cm9uLWxlZnQnLG5leHQ6J21kaS1jaGV2cm9uLXJpZ2h0JyxjaGVja2JveE9uOidtZGktY2hlY2tib3gtbWFya2VkJyxjaGVja2JveE9mZjonbWRpLWNoZWNrYm94LWJsYW5rLW91dGxpbmUnLGNoZWNrYm94SW5kZXRlcm1pbmF0ZTonbWRpLW1pbnVzLWJveCcsZGVsaW1pdGVyOidtZGktY2lyY2xlJyxzb3J0OidtZGktYXJyb3ctdXAnLGV4cGFuZDonbWRpLWNoZXZyb24tZG93bicsbWVudTonbWRpLW1lbnUnLHN1Ymdyb3VwOidtZGktbWVudS1kb3duJyxkcm9wZG93bjonbWRpLW1lbnUtZG93bicscmFkaW9PbjonbWRpLXJhZGlvYm94LW1hcmtlZCcscmFkaW9PZmY6J21kaS1yYWRpb2JveC1ibGFuaycsZWRpdDonbWRpLXBlbmNpbCcscmF0aW5nRW1wdHk6J21kaS1zdGFyLW91dGxpbmUnLHJhdGluZ0Z1bGw6J21kaS1zdGFyJyxyYXRpbmdIYWxmOidtZGktc3Rhci1oYWxmJyxsb2FkaW5nOidtZGktY2FjaGVkJyxmaXJzdDonbWRpLXBhZ2UtZmlyc3QnLGxhc3Q6J21kaS1wYWdlLWxhc3QnLHVuZm9sZDonbWRpLXVuZm9sZC1tb3JlLWhvcml6b250YWwnLGZpbGU6J21kaS1wYXBlcmNsaXAnLHBsdXM6J21kaS1wbHVzJyxtaW51czonbWRpLW1pbnVzJ307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL19fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXT1pY29uczsvKioqL30sLyoqKi8iLi9zcmMvc2VydmljZXMvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL3NlcnZpY2VzL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IEFwcGxpY2F0aW9uLCBCcmVha3BvaW50LCBHb3RvLCBJY29ucywgTGFuZywgVGhlbWUgKi8gLyoqKi9mdW5jdGlvbiBzcmNTZXJ2aWNlc0luZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfYXBwbGljYXRpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2FwcGxpY2F0aW9uICovIi4vc3JjL3NlcnZpY2VzL2FwcGxpY2F0aW9uL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiQXBwbGljYXRpb24iLGZ1bmN0aW9uKCl7cmV0dXJuIF9hcHBsaWNhdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJBcHBsaWNhdGlvbiJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9icmVha3BvaW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9icmVha3BvaW50ICovIi4vc3JjL3NlcnZpY2VzL2JyZWFrcG9pbnQvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJCcmVha3BvaW50IixmdW5jdGlvbigpe3JldHVybiBfYnJlYWtwb2ludF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJCcmVha3BvaW50Il07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2dvdG9fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dvdG8gKi8iLi9zcmMvc2VydmljZXMvZ290by9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIkdvdG8iLGZ1bmN0aW9uKCl7cmV0dXJuIF9nb3RvX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bIkdvdG8iXTt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfaWNvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2ljb25zICovIi4vc3JjL3NlcnZpY2VzL2ljb25zL2luZGV4LnRzIik7LyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiSWNvbnMiLGZ1bmN0aW9uKCl7cmV0dXJuIF9pY29uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJJY29ucyJdO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9sYW5nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9sYW5nICovIi4vc3JjL3NlcnZpY2VzL2xhbmcvaW5kZXgudHMiKTsvKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJMYW5nIixmdW5jdGlvbigpe3JldHVybiBfbGFuZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJMYW5nIl07fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3RoZW1lX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi90aGVtZSAqLyIuL3NyYy9zZXJ2aWNlcy90aGVtZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlRoZW1lIixmdW5jdGlvbigpe3JldHVybiBfdGhlbWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siVGhlbWUiXTt9KTsvKioqL30sLyoqKi8iLi9zcmMvc2VydmljZXMvbGFuZy9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9zZXJ2aWNlcy9sYW5nL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogTGFuZyAqLyAvKioqL2Z1bmN0aW9uIHNyY1NlcnZpY2VzTGFuZ0luZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiTGFuZyIsZnVuY3Rpb24oKXtyZXR1cm4gTGFuZzt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfc2VydmljZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3NlcnZpY2UgKi8iLi9zcmMvc2VydmljZXMvc2VydmljZS9pbmRleC50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9sb2NhbGVfZW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9sb2NhbGUvZW4gKi8iLi9zcmMvbG9jYWxlL2VuLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpO3ZhciBfX2V4dGVuZHM9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19leHRlbmRzfHxmdW5jdGlvbigpe3ZhciBfZXh0ZW5kU3RhdGljcz1mdW5jdGlvbiBleHRlbmRTdGF0aWNzKGQsYil7X2V4dGVuZFN0YXRpY3M9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKGQsYil7ZC5fX3Byb3RvX189Yjt9fHxmdW5jdGlvbihkLGIpe2Zvcih2YXIgcCBpbiBiKXtpZihiLmhhc093blByb3BlcnR5KHApKWRbcF09YltwXTt9fTtyZXR1cm4gX2V4dGVuZFN0YXRpY3MoZCxiKTt9O3JldHVybiBmdW5jdGlvbihkLGIpe19leHRlbmRTdGF0aWNzKGQsYik7ZnVuY3Rpb24gX18oKXt0aGlzLmNvbnN0cnVjdG9yPWQ7fWQucHJvdG90eXBlPWI9PT1udWxsP09iamVjdC5jcmVhdGUoYik6KF9fLnByb3RvdHlwZT1iLnByb3RvdHlwZSxuZXcgX18oKSk7fTt9KCk7dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9O3ZhciBfX3NwcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3NwcmVhZHx8ZnVuY3Rpb24oKXtmb3IodmFyIGFyPVtdLGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXthcj1hci5jb25jYXQoX19yZWFkKGFyZ3VtZW50c1tpXSkpO31yZXR1cm4gYXI7fTsvLyBFeHRlbnNpb25zCi8vIExhbmd1YWdlCi8vIFV0aWxpdGllcwp2YXIgTEFOR19QUkVGSVg9JyR2dWV0aWZ5Lic7dmFyIGZhbGxiYWNrPVN5bWJvbCgnTGFuZyBmYWxsYmFjaycpO2Z1bmN0aW9uIGdldFRyYW5zbGF0aW9uKGxvY2FsZSxrZXksdXNpbmdGYWxsYmFjayl7aWYodXNpbmdGYWxsYmFjaz09PXZvaWQgMCl7dXNpbmdGYWxsYmFjaz1mYWxzZTt9dmFyIHNob3J0S2V5PWtleS5yZXBsYWNlKExBTkdfUFJFRklYLCcnKTt2YXIgdHJhbnNsYXRpb249T2JqZWN0KF91dGlsX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZ2V0T2JqZWN0VmFsdWVCeVBhdGgiXSkobG9jYWxlLHNob3J0S2V5LGZhbGxiYWNrKTtpZih0cmFuc2xhdGlvbj09PWZhbGxiYWNrKXtpZih1c2luZ0ZhbGxiYWNrKXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJjb25zb2xlRXJyb3IiXSkoIlRyYW5zbGF0aW9uIGtleSBcIiIrc2hvcnRLZXkrIlwiIG5vdCBmb3VuZCBpbiBmYWxsYmFjayIpO3RyYW5zbGF0aW9uPWtleTt9ZWxzZXtPYmplY3QoX3V0aWxfY29uc29sZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJjb25zb2xlV2FybiJdKSgiVHJhbnNsYXRpb24ga2V5IFwiIitzaG9ydEtleSsiXCIgbm90IGZvdW5kLCBmYWxsaW5nIGJhY2sgdG8gZGVmYXVsdCIpO3RyYW5zbGF0aW9uPWdldFRyYW5zbGF0aW9uKF9sb2NhbGVfZW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdLGtleSx0cnVlKTt9fXJldHVybiB0cmFuc2xhdGlvbjt9dmFyIExhbmc9LyoqIEBjbGFzcyAqL2Z1bmN0aW9uKF9zdXBlcil7X19leHRlbmRzKExhbmcsX3N1cGVyKTtmdW5jdGlvbiBMYW5nKG9wdGlvbnMpe2lmKG9wdGlvbnM9PT12b2lkIDApe29wdGlvbnM9e307fXZhciBfdGhpcz1fc3VwZXIuY2FsbCh0aGlzKXx8dGhpcztfdGhpcy5jdXJyZW50PW9wdGlvbnMuY3VycmVudHx8J2VuJztfdGhpcy5sb2NhbGVzPU9iamVjdC5hc3NpZ24oe2VuOl9sb2NhbGVfZW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdfSxvcHRpb25zLmxvY2FsZXMpO190aGlzLnRyYW5zbGF0b3I9b3B0aW9ucy50O3JldHVybiBfdGhpczt9TGFuZy5wcm90b3R5cGUudD1mdW5jdGlvbihrZXkpe3ZhciBwYXJhbXM9W107Zm9yKHZhciBfaT0xO19pPGFyZ3VtZW50cy5sZW5ndGg7X2krKyl7cGFyYW1zW19pLTFdPWFyZ3VtZW50c1tfaV07fWlmKCFrZXkuc3RhcnRzV2l0aChMQU5HX1BSRUZJWCkpcmV0dXJuIHRoaXMucmVwbGFjZShrZXkscGFyYW1zKTtpZih0aGlzLnRyYW5zbGF0b3IpcmV0dXJuIHRoaXMudHJhbnNsYXRvci5hcHBseSh0aGlzLF9fc3ByZWFkKFtrZXldLHBhcmFtcykpO3ZhciB0cmFuc2xhdGlvbj1nZXRUcmFuc2xhdGlvbih0aGlzLmxvY2FsZXNbdGhpcy5jdXJyZW50XSxrZXkpO3JldHVybiB0aGlzLnJlcGxhY2UodHJhbnNsYXRpb24scGFyYW1zKTt9O0xhbmcucHJvdG90eXBlLnJlcGxhY2U9ZnVuY3Rpb24oc3RyLHBhcmFtcyl7cmV0dXJuIHN0ci5yZXBsYWNlKC9ceyhcZCspXH0vZyxmdW5jdGlvbihtYXRjaCxpbmRleCl7LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9yZXR1cm4gU3RyaW5nKHBhcmFtc1sraW5kZXhdKTt9KTt9O0xhbmcucHJvcGVydHk9J2xhbmcnO3JldHVybiBMYW5nO30oX3NlcnZpY2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siU2VydmljZSJdKTsvKioqL30sLyoqKi8iLi9zcmMvc2VydmljZXMvc2VydmljZS9pbmRleC50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9zZXJ2aWNlcy9zZXJ2aWNlL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogU2VydmljZSAqLyAvKioqL2Z1bmN0aW9uIHNyY1NlcnZpY2VzU2VydmljZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiU2VydmljZSIsZnVuY3Rpb24oKXtyZXR1cm4gU2VydmljZTt9KTt2YXIgU2VydmljZT0vKiogQGNsYXNzICovZnVuY3Rpb24oKXtmdW5jdGlvbiBTZXJ2aWNlKCl7dGhpcy5mcmFtZXdvcms9e307fVNlcnZpY2UucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24ocm9vdCxzc3JDb250ZXh0KXt9O3JldHVybiBTZXJ2aWNlO30oKTsvKioqL30sLyoqKi8iLi9zcmMvc2VydmljZXMvdGhlbWUvaW5kZXgudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL3NlcnZpY2VzL3RoZW1lL2luZGV4LnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFRoZW1lICovIC8qKiovZnVuY3Rpb24gc3JjU2VydmljZXNUaGVtZUluZGV4VHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiVGhlbWUiLGZ1bmN0aW9uKCl7cmV0dXJuIFRoZW1lO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9zZXJ2aWNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vc2VydmljZSAqLyIuL3NyYy9zZXJ2aWNlcy9zZXJ2aWNlL2luZGV4LnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlscyAqLyIuL3NyYy9zZXJ2aWNlcy90aGVtZS91dGlscy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIHZ1ZSAqLyJ2dWUiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18pO3ZhciBfX2V4dGVuZHM9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19leHRlbmRzfHxmdW5jdGlvbigpe3ZhciBfZXh0ZW5kU3RhdGljcz1mdW5jdGlvbiBleHRlbmRTdGF0aWNzKGQsYil7X2V4dGVuZFN0YXRpY3M9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKGQsYil7ZC5fX3Byb3RvX189Yjt9fHxmdW5jdGlvbihkLGIpe2Zvcih2YXIgcCBpbiBiKXtpZihiLmhhc093blByb3BlcnR5KHApKWRbcF09YltwXTt9fTtyZXR1cm4gX2V4dGVuZFN0YXRpY3MoZCxiKTt9O3JldHVybiBmdW5jdGlvbihkLGIpe19leHRlbmRTdGF0aWNzKGQsYik7ZnVuY3Rpb24gX18oKXt0aGlzLmNvbnN0cnVjdG9yPWQ7fWQucHJvdG90eXBlPWI9PT1udWxsP09iamVjdC5jcmVhdGUoYik6KF9fLnByb3RvdHlwZT1iLnByb3RvdHlwZSxuZXcgX18oKSk7fTt9KCk7LyogZXNsaW50LWRpc2FibGUgbm8tbXVsdGktc3BhY2VzICovIC8vIEV4dGVuc2lvbnMKLy8gVXRpbGl0aWVzCi8vIFR5cGVzCnZhciBUaGVtZT0vKiogQGNsYXNzICovZnVuY3Rpb24oX3N1cGVyKXtfX2V4dGVuZHMoVGhlbWUsX3N1cGVyKTtmdW5jdGlvbiBUaGVtZShvcHRpb25zKXtpZihvcHRpb25zPT09dm9pZCAwKXtvcHRpb25zPXt9O312YXIgX3RoaXM9X3N1cGVyLmNhbGwodGhpcyl8fHRoaXM7X3RoaXMuZGlzYWJsZWQ9ZmFsc2U7X3RoaXMudGhlbWVzPXtsaWdodDp7cHJpbWFyeTonIzE5NzZEMicsc2Vjb25kYXJ5OicjNDI0MjQyJyxhY2NlbnQ6JyM4MkIxRkYnLGVycm9yOicjRkY1MjUyJyxpbmZvOicjMjE5NkYzJyxzdWNjZXNzOicjNENBRjUwJyx3YXJuaW5nOicjRkI4QzAwJ30sZGFyazp7cHJpbWFyeTonIzIxOTZGMycsc2Vjb25kYXJ5OicjNDI0MjQyJyxhY2NlbnQ6JyNGRjQwODEnLGVycm9yOicjRkY1MjUyJyxpbmZvOicjMjE5NkYzJyxzdWNjZXNzOicjNENBRjUwJyx3YXJuaW5nOicjRkI4QzAwJ319O190aGlzLmRlZmF1bHRzPV90aGlzLnRoZW1lcztfdGhpcy5pc0Rhcms9bnVsbDtfdGhpcy52dWVJbnN0YW5jZT1udWxsO190aGlzLnZ1ZU1ldGE9bnVsbDtpZihvcHRpb25zLmRpc2FibGUpe190aGlzLmRpc2FibGVkPXRydWU7cmV0dXJuIF90aGlzO31fdGhpcy5vcHRpb25zPW9wdGlvbnMub3B0aW9ucztfdGhpcy5kYXJrPUJvb2xlYW4ob3B0aW9ucy5kYXJrKTt2YXIgdGhlbWVzPW9wdGlvbnMudGhlbWVzfHx7fTtfdGhpcy50aGVtZXM9e2Rhcms6X3RoaXMuZmlsbFZhcmlhbnQodGhlbWVzLmRhcmssdHJ1ZSksbGlnaHQ6X3RoaXMuZmlsbFZhcmlhbnQodGhlbWVzLmxpZ2h0LGZhbHNlKX07cmV0dXJuIF90aGlzO31PYmplY3QuZGVmaW5lUHJvcGVydHkoVGhlbWUucHJvdG90eXBlLCJjc3MiLHsvLyBXaGVuIHNldHRpbmcgY3NzLCBjaGVjayBmb3IgZWxlbWVudAovLyBhbmQgYXBwbHkgbmV3IHZhbHVlcwpzZXQ6ZnVuY3Rpb24gc2V0KHZhbCl7aWYodGhpcy52dWVNZXRhKXtpZih0aGlzLmlzVnVlTWV0YTIzKXt0aGlzLmFwcGx5VnVlTWV0YTIzKCk7fXJldHVybjt9dGhpcy5jaGVja09yQ3JlYXRlU3R5bGVFbGVtZW50KCkmJih0aGlzLnN0eWxlRWwuaW5uZXJIVE1MPXZhbCk7fSxlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWV9KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoVGhlbWUucHJvdG90eXBlLCJkYXJrIix7Z2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiBCb29sZWFuKHRoaXMuaXNEYXJrKTt9LHNldDpmdW5jdGlvbiBzZXQodmFsKXt2YXIgb2xkRGFyaz10aGlzLmlzRGFyazt0aGlzLmlzRGFyaz12YWw7Ly8gT25seSBhcHBseSB0aGVtZSBhZnRlciBkYXJrCi8vIGhhcyBhbHJlYWR5IGJlZW4gc2V0IGJlZm9yZQpvbGREYXJrIT1udWxsJiZ0aGlzLmFwcGx5VGhlbWUoKTt9LGVudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZX0pOy8vIEFwcGx5IGN1cnJlbnQgdGhlbWUgZGVmYXVsdAovLyBvbmx5IGNhbGxlZCBvbiBjbGllbnQgc2lkZQpUaGVtZS5wcm90b3R5cGUuYXBwbHlUaGVtZT1mdW5jdGlvbigpe2lmKHRoaXMuZGlzYWJsZWQpcmV0dXJuIHRoaXMuY2xlYXJDc3MoKTt0aGlzLmNzcz10aGlzLmdlbmVyYXRlZFN0eWxlczt9O1RoZW1lLnByb3RvdHlwZS5jbGVhckNzcz1mdW5jdGlvbigpe3RoaXMuY3NzPScnO307Ly8gSW5pdGlhbGl6ZSB0aGVtZSBmb3IgU1NSIGFuZCBTUEEKLy8gQXR0YWNoIHRvIHNzckNvbnRleHQgaGVhZCBvcgovLyBhcHBseSBuZXcgdGhlbWUgdG8gZG9jdW1lbnQKVGhlbWUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24ocm9vdCxzc3JDb250ZXh0KXtpZih0aGlzLmRpc2FibGVkKXJldHVybjsvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL2lmKHJvb3QuJG1ldGEpe3RoaXMuaW5pdFZ1ZU1ldGEocm9vdCk7fWVsc2UgaWYoc3NyQ29udGV4dCl7dGhpcy5pbml0U1NSKHNzckNvbnRleHQpO310aGlzLmluaXRUaGVtZSgpO307Ly8gQWxsb3dzIGZvciB5b3UgdG8gc2V0IHRhcmdldCB0aGVtZQpUaGVtZS5wcm90b3R5cGUuc2V0VGhlbWU9ZnVuY3Rpb24odGhlbWUsdmFsdWUpe3RoaXMudGhlbWVzW3RoZW1lXT1PYmplY3QuYXNzaWduKHRoaXMudGhlbWVzW3RoZW1lXSx2YWx1ZSk7dGhpcy5hcHBseVRoZW1lKCk7fTsvLyBSZXNldCB0aGVtZSBkZWZhdWx0cwpUaGVtZS5wcm90b3R5cGUucmVzZXRUaGVtZXM9ZnVuY3Rpb24oKXt0aGlzLnRoZW1lcy5saWdodD1PYmplY3QuYXNzaWduKHt9LHRoaXMuZGVmYXVsdHMubGlnaHQpO3RoaXMudGhlbWVzLmRhcms9T2JqZWN0LmFzc2lnbih7fSx0aGlzLmRlZmF1bHRzLmRhcmspO3RoaXMuYXBwbHlUaGVtZSgpO307Ly8gQ2hlY2sgZm9yIGV4aXN0ZW5jZSBvZiBzdHlsZSBlbGVtZW50ClRoZW1lLnByb3RvdHlwZS5jaGVja09yQ3JlYXRlU3R5bGVFbGVtZW50PWZ1bmN0aW9uKCl7dGhpcy5zdHlsZUVsPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2dWV0aWZ5LXRoZW1lLXN0eWxlc2hlZXQnKTsvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2lmKHRoaXMuc3R5bGVFbClyZXR1cm4gdHJ1ZTt0aGlzLmdlblN0eWxlRWxlbWVudCgpOy8vIElmIGRvZXNuJ3QgaGF2ZSBpdCwgY3JlYXRlIGl0CnJldHVybiBCb29sZWFuKHRoaXMuc3R5bGVFbCk7fTtUaGVtZS5wcm90b3R5cGUuZmlsbFZhcmlhbnQ9ZnVuY3Rpb24odGhlbWUsZGFyayl7aWYodGhlbWU9PT12b2lkIDApe3RoZW1lPXt9O312YXIgZGVmYXVsdFRoZW1lPXRoaXMudGhlbWVzW2Rhcms/J2RhcmsnOidsaWdodCddO3JldHVybiBPYmplY3QuYXNzaWduKHt9LGRlZmF1bHRUaGVtZSx0aGVtZSk7fTsvLyBHZW5lcmF0ZSB0aGUgc3R5bGUgZWxlbWVudAovLyBpZiBhcHBsaWNhYmxlClRoZW1lLnByb3RvdHlwZS5nZW5TdHlsZUVsZW1lbnQ9ZnVuY3Rpb24oKXsvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9pZih0eXBlb2YgZG9jdW1lbnQ9PT0ndW5kZWZpbmVkJylyZXR1cm47LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi92YXIgb3B0aW9ucz10aGlzLm9wdGlvbnN8fHt9O3RoaXMuc3R5bGVFbD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO3RoaXMuc3R5bGVFbC50eXBlPSd0ZXh0L2Nzcyc7dGhpcy5zdHlsZUVsLmlkPSd2dWV0aWZ5LXRoZW1lLXN0eWxlc2hlZXQnO2lmKG9wdGlvbnMuY3NwTm9uY2Upe3RoaXMuc3R5bGVFbC5zZXRBdHRyaWJ1dGUoJ25vbmNlJyxvcHRpb25zLmNzcE5vbmNlKTt9ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCh0aGlzLnN0eWxlRWwpO307VGhlbWUucHJvdG90eXBlLmluaXRWdWVNZXRhPWZ1bmN0aW9uKHJvb3Qpe3ZhciBfdGhpcz10aGlzO3RoaXMudnVlTWV0YT1yb290LiRtZXRhKCk7aWYodGhpcy5pc1Z1ZU1ldGEyMyl7Ly8gdnVlLW1ldGEgbmVlZHMgdG8gYXBwbHkgYWZ0ZXIgbW91bnRlZCgpCnJvb3QuJG5leHRUaWNrKGZ1bmN0aW9uKCl7X3RoaXMuYXBwbHlWdWVNZXRhMjMoKTt9KTtyZXR1cm47fXZhciBtZXRhS2V5TmFtZT10eXBlb2YgdGhpcy52dWVNZXRhLmdldE9wdGlvbnM9PT0nZnVuY3Rpb24nP3RoaXMudnVlTWV0YS5nZXRPcHRpb25zKCkua2V5TmFtZTonbWV0YUluZm8nO3ZhciBtZXRhSW5mbz1yb290LiRvcHRpb25zW21ldGFLZXlOYW1lXXx8e307cm9vdC4kb3B0aW9uc1ttZXRhS2V5TmFtZV09ZnVuY3Rpb24oKXttZXRhSW5mby5zdHlsZT1tZXRhSW5mby5zdHlsZXx8W107dmFyIHZ1ZXRpZnlTdHlsZXNoZWV0PW1ldGFJbmZvLnN0eWxlLmZpbmQoZnVuY3Rpb24ocyl7cmV0dXJuIHMuaWQ9PT0ndnVldGlmeS10aGVtZS1zdHlsZXNoZWV0Jzt9KTtpZighdnVldGlmeVN0eWxlc2hlZXQpe21ldGFJbmZvLnN0eWxlLnB1c2goe2Nzc1RleHQ6X3RoaXMuZ2VuZXJhdGVkU3R5bGVzLHR5cGU6J3RleHQvY3NzJyxpZDondnVldGlmeS10aGVtZS1zdHlsZXNoZWV0Jyxub25jZTooX3RoaXMub3B0aW9uc3x8e30pLmNzcE5vbmNlfSk7fWVsc2V7dnVldGlmeVN0eWxlc2hlZXQuY3NzVGV4dD1fdGhpcy5nZW5lcmF0ZWRTdHlsZXM7fXJldHVybiBtZXRhSW5mbzt9O307VGhlbWUucHJvdG90eXBlLmFwcGx5VnVlTWV0YTIzPWZ1bmN0aW9uKCl7dmFyIHNldD10aGlzLnZ1ZU1ldGEuYWRkQXBwKCd2dWV0aWZ5Jykuc2V0O3NldCh7c3R5bGU6W3tjc3NUZXh0OnRoaXMuZ2VuZXJhdGVkU3R5bGVzLHR5cGU6J3RleHQvY3NzJyxpZDondnVldGlmeS10aGVtZS1zdHlsZXNoZWV0Jyxub25jZToodGhpcy5vcHRpb25zfHx7fSkuY3NwTm9uY2V9XX0pO307VGhlbWUucHJvdG90eXBlLmluaXRTU1I9ZnVuY3Rpb24oc3NyQ29udGV4dCl7dmFyIG9wdGlvbnM9dGhpcy5vcHRpb25zfHx7fTsvLyBTU1IKdmFyIG5vbmNlPW9wdGlvbnMuY3NwTm9uY2U/IiBub25jZT1cIiIrb3B0aW9ucy5jc3BOb25jZSsiXCIiOicnO3NzckNvbnRleHQuaGVhZD1zc3JDb250ZXh0LmhlYWR8fCcnO3NzckNvbnRleHQuaGVhZCs9IjxzdHlsZSB0eXBlPVwidGV4dC9jc3NcIiBpZD1cInZ1ZXRpZnktdGhlbWUtc3R5bGVzaGVldFwiIitub25jZSsiPiIrdGhpcy5nZW5lcmF0ZWRTdHlsZXMrIjwvc3R5bGU+Ijt9O1RoZW1lLnByb3RvdHlwZS5pbml0VGhlbWU9ZnVuY3Rpb24oKXt2YXIgX3RoaXM9dGhpczsvLyBPbmx5IHdhdGNoIGZvciByZWFjdGl2aXR5IG9uIGNsaWVudCBzaWRlCmlmKHR5cGVvZiBkb2N1bWVudD09PSd1bmRlZmluZWQnKXJldHVybjsvLyBJZiB3ZSBnZXQgaGVyZSBzb21laG93LCBlbnN1cmUKLy8gZXhpc3RpbmcgaW5zdGFuY2UgaXMgcmVtb3ZlZAppZih0aGlzLnZ1ZUluc3RhbmNlKXRoaXMudnVlSW5zdGFuY2UuJGRlc3Ryb3koKTsvLyBVc2UgVnVlIGluc3RhbmNlIHRvIHRyYWNrIHJlYWN0aXZpdHkKLy8gVE9ETzogVXBkYXRlIHRvIHVzZSBSRkMgaWYgbWVyZ2VkCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy9yZmNzL2Jsb2IvYWR2YW5jZWQtcmVhY3Rpdml0eS1hcGkvYWN0aXZlLXJmY3MvMDAwMC1hZHZhbmNlZC1yZWFjdGl2aXR5LWFwaS5tZAp0aGlzLnZ1ZUluc3RhbmNlPW5ldyB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX19kZWZhdWx0LmEoe2RhdGE6e3RoZW1lczp0aGlzLnRoZW1lc30sd2F0Y2g6e3RoZW1lczp7aW1tZWRpYXRlOnRydWUsZGVlcDp0cnVlLGhhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcigpe3JldHVybiBfdGhpcy5hcHBseVRoZW1lKCk7fX19fSk7fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoVGhlbWUucHJvdG90eXBlLCJjdXJyZW50VGhlbWUiLHtnZXQ6ZnVuY3Rpb24gZ2V0KCl7dmFyIHRhcmdldD10aGlzLmRhcms/J2RhcmsnOidsaWdodCc7cmV0dXJuIHRoaXMudGhlbWVzW3RhcmdldF07fSxlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWV9KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoVGhlbWUucHJvdG90eXBlLCJnZW5lcmF0ZWRTdHlsZXMiLHtnZXQ6ZnVuY3Rpb24gZ2V0KCl7dmFyIHRoZW1lPXRoaXMucGFyc2VkVGhlbWU7LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi92YXIgb3B0aW9ucz10aGlzLm9wdGlvbnN8fHt9O3ZhciBjc3M7aWYob3B0aW9ucy50aGVtZUNhY2hlIT1udWxsKXtjc3M9b3B0aW9ucy50aGVtZUNhY2hlLmdldCh0aGVtZSk7LyogaXN0YW5idWwgaWdub3JlIGlmICovaWYoY3NzIT1udWxsKXJldHVybiBjc3M7fWNzcz1fdXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZ2VuU3R5bGVzIl0odGhlbWUsb3B0aW9ucy5jdXN0b21Qcm9wZXJ0aWVzKTtpZihvcHRpb25zLm1pbmlmeVRoZW1lIT1udWxsKXtjc3M9b3B0aW9ucy5taW5pZnlUaGVtZShjc3MpO31pZihvcHRpb25zLnRoZW1lQ2FjaGUhPW51bGwpe29wdGlvbnMudGhlbWVDYWNoZS5zZXQodGhlbWUsY3NzKTt9cmV0dXJuIGNzczt9LGVudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShUaGVtZS5wcm90b3R5cGUsInBhcnNlZFRoZW1lIix7Z2V0OmZ1bmN0aW9uIGdldCgpey8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovdmFyIHRoZW1lPXRoaXMuY3VycmVudFRoZW1lfHx7fTtyZXR1cm4gX3V0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bInBhcnNlIl0odGhlbWUpO30sZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlfSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KFRoZW1lLnByb3RvdHlwZSwiaXNWdWVNZXRhMjMiLHsvLyBJcyB1c2luZyB2Mi4zIG9mIHZ1ZS1tZXRhCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9udXh0L3Z1ZS1tZXRhL3JlbGVhc2VzL3RhZy92Mi4zLjAKZ2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0eXBlb2YgdGhpcy52dWVNZXRhLmFkZEFwcD09PSdmdW5jdGlvbic7fSxlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWV9KTtUaGVtZS5wcm9wZXJ0eT0ndGhlbWUnO3JldHVybiBUaGVtZTt9KF9zZXJ2aWNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bIlNlcnZpY2UiXSk7LyoqKi99LC8qKiovIi4vc3JjL3NlcnZpY2VzL3RoZW1lL3V0aWxzLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9zZXJ2aWNlcy90aGVtZS91dGlscy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBwYXJzZSwgZ2VuU3R5bGVzLCBnZW5WYXJpYXRpb25zLCBsaWdodGVuLCBkYXJrZW4gKi8gLyoqKi9mdW5jdGlvbiBzcmNTZXJ2aWNlc1RoZW1lVXRpbHNUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJwYXJzZSIsZnVuY3Rpb24oKXtyZXR1cm4gcGFyc2U7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdlblN0eWxlcyIsZnVuY3Rpb24oKXtyZXR1cm4gZ2VuU3R5bGVzO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJnZW5WYXJpYXRpb25zIixmdW5jdGlvbigpe3JldHVybiBnZW5WYXJpYXRpb25zO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJsaWdodGVuIixmdW5jdGlvbigpe3JldHVybiBsaWdodGVuO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJkYXJrZW4iLGZ1bmN0aW9uKCl7cmV0dXJuIGRhcmtlbjt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfdXRpbF9jb2xvclV0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb2xvclV0aWxzICovIi4vc3JjL3V0aWwvY29sb3JVdGlscy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF91dGlsX2NvbG9yX3RyYW5zZm9ybVNSR0JfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi91dGlsL2NvbG9yL3RyYW5zZm9ybVNSR0IgKi8iLi9zcmMvdXRpbC9jb2xvci90cmFuc2Zvcm1TUkdCLnRzIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfY29sb3JfdHJhbnNmb3JtQ0lFTEFCX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vLi4vdXRpbC9jb2xvci90cmFuc2Zvcm1DSUVMQUIgKi8iLi9zcmMvdXRpbC9jb2xvci90cmFuc2Zvcm1DSUVMQUIudHMiKTtmdW5jdGlvbiBfdHlwZW9mKG9iail7aWYodHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJl90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcik9PT0ic3ltYm9sIil7X3R5cGVvZj1mdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIF90eXBlb2YyKG9iaik7fTt9ZWxzZXtfdHlwZW9mPWZ1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gb2JqJiZ0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb2JqLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZvYmohPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOl90eXBlb2YyKG9iaik7fTt9cmV0dXJuIF90eXBlb2Yob2JqKTt9dmFyIF9fcmVzdD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3Jlc3R8fGZ1bmN0aW9uKHMsZSl7dmFyIHQ9e307Zm9yKHZhciBwIGluIHMpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLHApJiZlLmluZGV4T2YocCk8MCl0W3BdPXNbcF07fWlmKHMhPW51bGwmJnR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzPT09ImZ1bmN0aW9uIilmb3IodmFyIGk9MCxwPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7aTxwLmxlbmd0aDtpKyspe2lmKGUuaW5kZXhPZihwW2ldKTwwJiZPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocyxwW2ldKSl0W3BbaV1dPXNbcFtpXV07fXJldHVybiB0O307dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9O2Z1bmN0aW9uIHBhcnNlKHRoZW1lLGlzSXRlbSl7aWYoaXNJdGVtPT09dm9pZCAwKXtpc0l0ZW09ZmFsc2U7fXZhciBhbmNob3I9dGhlbWUuYW5jaG9yLHZhcmlhbnQ9X19yZXN0KHRoZW1lLFsiYW5jaG9yIl0pO3ZhciBjb2xvcnM9T2JqZWN0LmtleXModmFyaWFudCk7dmFyIHBhcnNlZFRoZW1lPXt9O2Zvcih2YXIgaT0wO2k8Y29sb3JzLmxlbmd0aDsrK2kpe3ZhciBuYW1lPWNvbG9yc1tpXTt2YXIgdmFsdWU9dGhlbWVbbmFtZV07aWYodmFsdWU9PW51bGwpY29udGludWU7aWYoaXNJdGVtKXsvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL2lmKG5hbWU9PT0nYmFzZSd8fG5hbWUuc3RhcnRzV2l0aCgnbGlnaHRlbicpfHxuYW1lLnN0YXJ0c1dpdGgoJ2RhcmtlbicpKXtwYXJzZWRUaGVtZVtuYW1lXT1PYmplY3QoX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjb2xvclRvSGV4Il0pKHZhbHVlKTt9fWVsc2UgaWYoX3R5cGVvZih2YWx1ZSk9PT0nb2JqZWN0Jyl7cGFyc2VkVGhlbWVbbmFtZV09cGFyc2UodmFsdWUsdHJ1ZSk7fWVsc2V7cGFyc2VkVGhlbWVbbmFtZV09Z2VuVmFyaWF0aW9ucyhuYW1lLE9iamVjdChfdXRpbF9jb2xvclV0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImNvbG9yVG9JbnQiXSkodmFsdWUpKTt9fWlmKCFpc0l0ZW0pe3BhcnNlZFRoZW1lLmFuY2hvcj1hbmNob3J8fHBhcnNlZFRoZW1lLmJhc2V8fHBhcnNlZFRoZW1lLnByaW1hcnkuYmFzZTt9cmV0dXJuIHBhcnNlZFRoZW1lO30vKioKICogR2VuZXJhdGUgdGhlIENTUyBmb3IgYSBiYXNlIGNvbG9yICgucHJpbWFyeSkKICovdmFyIGdlbkJhc2VDb2xvcj1mdW5jdGlvbiBnZW5CYXNlQ29sb3IobmFtZSx2YWx1ZSl7cmV0dXJuIlxuLnYtYXBwbGljYXRpb24gLiIrbmFtZSsiIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIit2YWx1ZSsiICFpbXBvcnRhbnQ7XG4gIGJvcmRlci1jb2xvcjogIit2YWx1ZSsiICFpbXBvcnRhbnQ7XG59XG4udi1hcHBsaWNhdGlvbiAuIituYW1lKyItLXRleHQge1xuICBjb2xvcjogIit2YWx1ZSsiICFpbXBvcnRhbnQ7XG4gIGNhcmV0LWNvbG9yOiAiK3ZhbHVlKyIgIWltcG9ydGFudDtcbn0iO307LyoqCiAqIEdlbmVyYXRlIHRoZSBDU1MgZm9yIGEgdmFyaWFudCBjb2xvciAoLnByaW1hcnkuZGFya2VuLTIpCiAqL3ZhciBnZW5WYXJpYW50Q29sb3I9ZnVuY3Rpb24gZ2VuVmFyaWFudENvbG9yKG5hbWUsdmFyaWFudCx2YWx1ZSl7dmFyIF9hPV9fcmVhZCh2YXJpYW50LnNwbGl0KC8oXGQpLywyKSwyKSx0eXBlPV9hWzBdLG49X2FbMV07cmV0dXJuIlxuLnYtYXBwbGljYXRpb24gLiIrbmFtZSsiLiIrdHlwZSsiLSIrbisiIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIit2YWx1ZSsiICFpbXBvcnRhbnQ7XG4gIGJvcmRlci1jb2xvcjogIit2YWx1ZSsiICFpbXBvcnRhbnQ7XG59XG4udi1hcHBsaWNhdGlvbiAuIituYW1lKyItLXRleHQudGV4dC0tIit0eXBlKyItIituKyIge1xuICBjb2xvcjogIit2YWx1ZSsiICFpbXBvcnRhbnQ7XG4gIGNhcmV0LWNvbG9yOiAiK3ZhbHVlKyIgIWltcG9ydGFudDtcbn0iO307dmFyIGdlbkNvbG9yVmFyaWFibGVOYW1lPWZ1bmN0aW9uIGdlbkNvbG9yVmFyaWFibGVOYW1lKG5hbWUsdmFyaWFudCl7aWYodmFyaWFudD09PXZvaWQgMCl7dmFyaWFudD0nYmFzZSc7fXJldHVybiItLXYtIituYW1lKyItIit2YXJpYW50O307dmFyIGdlbkNvbG9yVmFyaWFibGU9ZnVuY3Rpb24gZ2VuQ29sb3JWYXJpYWJsZShuYW1lLHZhcmlhbnQpe2lmKHZhcmlhbnQ9PT12b2lkIDApe3ZhcmlhbnQ9J2Jhc2UnO31yZXR1cm4idmFyKCIrZ2VuQ29sb3JWYXJpYWJsZU5hbWUobmFtZSx2YXJpYW50KSsiKSI7fTtmdW5jdGlvbiBnZW5TdHlsZXModGhlbWUsY3NzVmFyKXtpZihjc3NWYXI9PT12b2lkIDApe2Nzc1Zhcj1mYWxzZTt9dmFyIGFuY2hvcj10aGVtZS5hbmNob3IsdmFyaWFudD1fX3Jlc3QodGhlbWUsWyJhbmNob3IiXSk7dmFyIGNvbG9ycz1PYmplY3Qua2V5cyh2YXJpYW50KTtpZighY29sb3JzLmxlbmd0aClyZXR1cm4nJzt2YXIgdmFyaWFibGVzQ3NzPScnO3ZhciBjc3M9Jyc7dmFyIGFDb2xvcj1jc3NWYXI/Z2VuQ29sb3JWYXJpYWJsZSgnYW5jaG9yJyk6YW5jaG9yO2Nzcys9Ii52LWFwcGxpY2F0aW9uIGEgeyBjb2xvcjogIithQ29sb3IrIjsgfSI7Y3NzVmFyJiYodmFyaWFibGVzQ3NzKz0iICAiK2dlbkNvbG9yVmFyaWFibGVOYW1lKCdhbmNob3InKSsiOiAiK2FuY2hvcisiO1xuIik7Zm9yKHZhciBpPTA7aTxjb2xvcnMubGVuZ3RoOysraSl7dmFyIG5hbWU9Y29sb3JzW2ldO3ZhciB2YWx1ZT10aGVtZVtuYW1lXTtjc3MrPWdlbkJhc2VDb2xvcihuYW1lLGNzc1Zhcj9nZW5Db2xvclZhcmlhYmxlKG5hbWUpOnZhbHVlLmJhc2UpO2Nzc1ZhciYmKHZhcmlhYmxlc0Nzcys9IiAgIitnZW5Db2xvclZhcmlhYmxlTmFtZShuYW1lKSsiOiAiK3ZhbHVlLmJhc2UrIjtcbiIpO3ZhciB2YXJpYW50cz1PYmplY3Qua2V5cyh2YWx1ZSk7Zm9yKHZhciBpXzE9MDtpXzE8dmFyaWFudHMubGVuZ3RoOysraV8xKXt2YXIgdmFyaWFudF8xPXZhcmlhbnRzW2lfMV07dmFyIHZhcmlhbnRWYWx1ZT12YWx1ZVt2YXJpYW50XzFdO2lmKHZhcmlhbnRfMT09PSdiYXNlJyljb250aW51ZTtjc3MrPWdlblZhcmlhbnRDb2xvcihuYW1lLHZhcmlhbnRfMSxjc3NWYXI/Z2VuQ29sb3JWYXJpYWJsZShuYW1lLHZhcmlhbnRfMSk6dmFyaWFudFZhbHVlKTtjc3NWYXImJih2YXJpYWJsZXNDc3MrPSIgICIrZ2VuQ29sb3JWYXJpYWJsZU5hbWUobmFtZSx2YXJpYW50XzEpKyI6ICIrdmFyaWFudFZhbHVlKyI7XG4iKTt9fWlmKGNzc1Zhcil7dmFyaWFibGVzQ3NzPSI6cm9vdCB7XG4iK3ZhcmlhYmxlc0NzcysifVxuXG4iO31yZXR1cm4gdmFyaWFibGVzQ3NzK2Nzczt9ZnVuY3Rpb24gZ2VuVmFyaWF0aW9ucyhuYW1lLHZhbHVlKXt2YXIgdmFsdWVzPXtiYXNlOk9iamVjdChfdXRpbF9jb2xvclV0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImludFRvSGV4Il0pKHZhbHVlKX07Zm9yKHZhciBpPTU7aT4wOy0taSl7dmFsdWVzWyJsaWdodGVuIitpXT1PYmplY3QoX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJpbnRUb0hleCJdKShsaWdodGVuKHZhbHVlLGkpKTt9Zm9yKHZhciBpPTE7aTw9NDsrK2kpe3ZhbHVlc1siZGFya2VuIitpXT1PYmplY3QoX3V0aWxfY29sb3JVdGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJpbnRUb0hleCJdKShkYXJrZW4odmFsdWUsaSkpO31yZXR1cm4gdmFsdWVzO31mdW5jdGlvbiBsaWdodGVuKHZhbHVlLGFtb3VudCl7dmFyIGxhYj1fdXRpbF9jb2xvcl90cmFuc2Zvcm1DSUVMQUJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZnJvbVhZWiJdKF91dGlsX2NvbG9yX3RyYW5zZm9ybVNSR0JfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1sidG9YWVoiXSh2YWx1ZSkpO2xhYlswXT1sYWJbMF0rYW1vdW50KjEwO3JldHVybiBfdXRpbF9jb2xvcl90cmFuc2Zvcm1TUkdCX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImZyb21YWVoiXShfdXRpbF9jb2xvcl90cmFuc2Zvcm1DSUVMQUJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sidG9YWVoiXShsYWIpKTt9ZnVuY3Rpb24gZGFya2VuKHZhbHVlLGFtb3VudCl7dmFyIGxhYj1fdXRpbF9jb2xvcl90cmFuc2Zvcm1DSUVMQUJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZnJvbVhZWiJdKF91dGlsX2NvbG9yX3RyYW5zZm9ybVNSR0JfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1sidG9YWVoiXSh2YWx1ZSkpO2xhYlswXT1sYWJbMF0tYW1vdW50KjEwO3JldHVybiBfdXRpbF9jb2xvcl90cmFuc2Zvcm1TUkdCX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImZyb21YWVoiXShfdXRpbF9jb2xvcl90cmFuc2Zvcm1DSUVMQUJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sidG9YWVoiXShsYWIpKTt9LyoqKi99LC8qKiovIi4vc3JjL3N0eWxlcy9jb21wb25lbnRzL19zZWxlY3Rpb24tY29udHJvbHMuc2FzcyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL3N0eWxlcy9jb21wb25lbnRzL19zZWxlY3Rpb24tY29udHJvbHMuc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi8gLyoqKi9mdW5jdGlvbiBzcmNTdHlsZXNDb21wb25lbnRzX3NlbGVjdGlvbkNvbnRyb2xzU2Fzcyhtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KLyoqKi99LC8qKiovIi4vc3JjL3N0eWxlcy9tYWluLnNhc3MiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvc3R5bGVzL21haW4uc2FzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovIC8qKiovZnVuY3Rpb24gc3JjU3R5bGVzTWFpblNhc3MobW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7Ly8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCi8qKiovfSwvKioqLyIuL3NyYy91dGlsL1RoZW1lUHJvdmlkZXIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy91dGlsL1RoZW1lUHJvdmlkZXIudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGRlZmF1bHQgKi8gLyoqKi9mdW5jdGlvbiBzcmNVdGlsVGhlbWVQcm92aWRlclRzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9taXhpbnMvdGhlbWVhYmxlICovIi4vc3JjL21peGlucy90aGVtZWFibGUvaW5kZXgudHMiKTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciBfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9taXhpbnMgKi8iLi9zcmMvdXRpbC9taXhpbnMudHMiKTsvKiBAdnVlL2NvbXBvbmVudCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdChfbWl4aW5zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkoX21peGluc190aGVtZWFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKS5leHRlbmQoe25hbWU6J3RoZW1lLXByb3ZpZGVyJyxwcm9wczp7cm9vdDpCb29sZWFufSxjb21wdXRlZDp7aXNEYXJrOmZ1bmN0aW9uIGlzRGFyaygpe3JldHVybiB0aGlzLnJvb3Q/dGhpcy5yb290SXNEYXJrOl9taXhpbnNfdGhlbWVhYmxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXS5vcHRpb25zLmNvbXB1dGVkLmlzRGFyay5jYWxsKHRoaXMpO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoKXtyZXR1cm4gdGhpcy4kc2xvdHMuZGVmYXVsdCYmdGhpcy4kc2xvdHMuZGVmYXVsdC5maW5kKGZ1bmN0aW9uKG5vZGUpe3JldHVybiFub2RlLmlzQ29tbWVudCYmbm9kZS50ZXh0IT09JyAnO30pO319KTsvKioqL30sLyoqKi8iLi9zcmMvdXRpbC9jb2xvci90cmFuc2Zvcm1DSUVMQUIudHMiOi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL3V0aWwvY29sb3IvdHJhbnNmb3JtQ0lFTEFCLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8gLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGZyb21YWVosIHRvWFlaICovIC8qKiovZnVuY3Rpb24gc3JjVXRpbENvbG9yVHJhbnNmb3JtQ0lFTEFCVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZnJvbVhZWiIsZnVuY3Rpb24oKXtyZXR1cm4gZnJvbVhZWjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywidG9YWVoiLGZ1bmN0aW9uKCl7cmV0dXJuIHRvWFlaO30pO3ZhciBkZWx0YT0wLjIwNjg5NjU1MTcyNDEzNzkzOy8vIDbDtzI5CnZhciBjaWVsYWJGb3J3YXJkVHJhbnNmb3JtPWZ1bmN0aW9uIGNpZWxhYkZvcndhcmRUcmFuc2Zvcm0odCl7cmV0dXJuIHQ+TWF0aC5wb3coZGVsdGEsMyk/TWF0aC5jYnJ0KHQpOnQvKDMqTWF0aC5wb3coZGVsdGEsMikpKzQvMjk7fTt2YXIgY2llbGFiUmV2ZXJzZVRyYW5zZm9ybT1mdW5jdGlvbiBjaWVsYWJSZXZlcnNlVHJhbnNmb3JtKHQpe3JldHVybiB0PmRlbHRhP01hdGgucG93KHQsMyk6MypNYXRoLnBvdyhkZWx0YSwyKSoodC00LzI5KTt9O2Z1bmN0aW9uIGZyb21YWVooeHl6KXt2YXIgdHJhbnNmb3JtPWNpZWxhYkZvcndhcmRUcmFuc2Zvcm07dmFyIHRyYW5zZm9ybWVkWT10cmFuc2Zvcm0oeHl6WzFdKTtyZXR1cm5bMTE2KnRyYW5zZm9ybWVkWS0xNiw1MDAqKHRyYW5zZm9ybSh4eXpbMF0vMC45NTA0NyktdHJhbnNmb3JtZWRZKSwyMDAqKHRyYW5zZm9ybWVkWS10cmFuc2Zvcm0oeHl6WzJdLzEuMDg4ODMpKV07fWZ1bmN0aW9uIHRvWFlaKGxhYil7dmFyIHRyYW5zZm9ybT1jaWVsYWJSZXZlcnNlVHJhbnNmb3JtO3ZhciBMbj0obGFiWzBdKzE2KS8xMTY7cmV0dXJuW3RyYW5zZm9ybShMbitsYWJbMV0vNTAwKSowLjk1MDQ3LHRyYW5zZm9ybShMbiksdHJhbnNmb3JtKExuLWxhYlsyXS8yMDApKjEuMDg4ODNdO30vKioqL30sLyoqKi8iLi9zcmMvdXRpbC9jb2xvci90cmFuc2Zvcm1TUkdCLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvdXRpbC9jb2xvci90cmFuc2Zvcm1TUkdCLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBmcm9tWFlaLCB0b1hZWiAqLyAvKioqL2Z1bmN0aW9uIHNyY1V0aWxDb2xvclRyYW5zZm9ybVNSR0JUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJmcm9tWFlaIixmdW5jdGlvbigpe3JldHVybiBmcm9tWFlaO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJ0b1hZWiIsZnVuY3Rpb24oKXtyZXR1cm4gdG9YWVo7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fPV9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL3V0aWwvaGVscGVycyAqLyIuL3NyYy91dGlsL2hlbHBlcnMudHMiKTsvLyBGb3IgY29udmVydGluZyBYWVogdG8gc1JHQgp2YXIgc3JnYkZvcndhcmRNYXRyaXg9W1szLjI0MDYsLTEuNTM3MiwtMC40OTg2XSxbLTAuOTY4OSwxLjg3NTgsMC4wNDE1XSxbMC4wNTU3LC0wLjIwNDAsMS4wNTcwXV07Ly8gRm9yd2FyZCBnYW1tYSBhZGp1c3QKdmFyIHNyZ2JGb3J3YXJkVHJhbnNmb3JtPWZ1bmN0aW9uIHNyZ2JGb3J3YXJkVHJhbnNmb3JtKEMpe3JldHVybiBDPD0wLjAwMzEzMDg/QyoxMi45MjoxLjA1NSpNYXRoLnBvdyhDLDEvMi40KS0wLjA1NTt9Oy8vIEZvciBjb252ZXJ0aW5nIHNSR0IgdG8gWFlaCnZhciBzcmdiUmV2ZXJzZU1hdHJpeD1bWzAuNDEyNCwwLjM1NzYsMC4xODA1XSxbMC4yMTI2LDAuNzE1MiwwLjA3MjJdLFswLjAxOTMsMC4xMTkyLDAuOTUwNV1dOy8vIFJldmVyc2UgZ2FtbWEgYWRqdXN0CnZhciBzcmdiUmV2ZXJzZVRyYW5zZm9ybT1mdW5jdGlvbiBzcmdiUmV2ZXJzZVRyYW5zZm9ybShDKXtyZXR1cm4gQzw9MC4wNDA0NT9DLzEyLjkyOk1hdGgucG93KChDKzAuMDU1KS8xLjA1NSwyLjQpO307ZnVuY3Rpb24gZnJvbVhZWih4eXope3ZhciByZ2I9QXJyYXkoMyk7dmFyIHRyYW5zZm9ybT1zcmdiRm9yd2FyZFRyYW5zZm9ybTt2YXIgbWF0cml4PXNyZ2JGb3J3YXJkTWF0cml4Oy8vIE1hdHJpeCB0cmFuc2Zvcm0sIHRoZW4gZ2FtbWEgYWRqdXN0bWVudApmb3IodmFyIGk9MDtpPDM7KytpKXtyZ2JbaV09TWF0aC5yb3VuZChPYmplY3QoX3V0aWxfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjbGFtcCJdKSh0cmFuc2Zvcm0obWF0cml4W2ldWzBdKnh5elswXSttYXRyaXhbaV1bMV0qeHl6WzFdK21hdHJpeFtpXVsyXSp4eXpbMl0pKSoyNTUpO30vLyBSZXNjYWxlIGJhY2sgdG8gWzAsIDI1NV0KcmV0dXJuKHJnYlswXTw8MTYpKyhyZ2JbMV08PDgpKyhyZ2JbMl08PDApO31mdW5jdGlvbiB0b1hZWihyZ2Ipe3ZhciB4eXo9WzAsMCwwXTt2YXIgdHJhbnNmb3JtPXNyZ2JSZXZlcnNlVHJhbnNmb3JtO3ZhciBtYXRyaXg9c3JnYlJldmVyc2VNYXRyaXg7Ly8gUmVzY2FsZSBmcm9tIFswLCAyNTVdIHRvIFswLCAxXSB0aGVuIGFkanVzdCBzUkdCIGdhbW1hIHRvIGxpbmVhciBSR0IKdmFyIHI9dHJhbnNmb3JtKChyZ2I+PjE2JjB4ZmYpLzI1NSk7dmFyIGc9dHJhbnNmb3JtKChyZ2I+PjgmMHhmZikvMjU1KTt2YXIgYj10cmFuc2Zvcm0oKHJnYj4+MCYweGZmKS8yNTUpOy8vIE1hdHJpeCBjb2xvciBzcGFjZSB0cmFuc2Zvcm0KZm9yKHZhciBpPTA7aTwzOysraSl7eHl6W2ldPW1hdHJpeFtpXVswXSpyK21hdHJpeFtpXVsxXSpnK21hdHJpeFtpXVsyXSpiO31yZXR1cm4geHl6O30vKioqL30sLyoqKi8iLi9zcmMvdXRpbC9jb2xvclV0aWxzLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvdXRpbC9jb2xvclV0aWxzLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBjb2xvclRvSW50LCBpbnRUb0hleCwgY29sb3JUb0hleCwgSFNWQXRvUkdCQSwgUkdCQXRvSFNWQSwgSFNWQXRvSFNMQSwgSFNMQXRvSFNWQSwgUkdCQXRvQ1NTLCBSR0J0b0NTUywgUkdCQXRvSGV4LCBIZXhUb1JHQkEsIEhleFRvSFNWQSwgSFNWQXRvSGV4LCBwYXJzZUhleCwgUkdCdG9JbnQsIGNvbnRyYXN0UmF0aW8gKi8gLyoqKi9mdW5jdGlvbiBzcmNVdGlsQ29sb3JVdGlsc1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImNvbG9yVG9JbnQiLGZ1bmN0aW9uKCl7cmV0dXJuIGNvbG9yVG9JbnQ7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImludFRvSGV4IixmdW5jdGlvbigpe3JldHVybiBpbnRUb0hleDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiY29sb3JUb0hleCIsZnVuY3Rpb24oKXtyZXR1cm4gY29sb3JUb0hleDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiSFNWQXRvUkdCQSIsZnVuY3Rpb24oKXtyZXR1cm4gSFNWQXRvUkdCQTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiUkdCQXRvSFNWQSIsZnVuY3Rpb24oKXtyZXR1cm4gUkdCQXRvSFNWQTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiSFNWQXRvSFNMQSIsZnVuY3Rpb24oKXtyZXR1cm4gSFNWQXRvSFNMQTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiSFNMQXRvSFNWQSIsZnVuY3Rpb24oKXtyZXR1cm4gSFNMQXRvSFNWQTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiUkdCQXRvQ1NTIixmdW5jdGlvbigpe3JldHVybiBSR0JBdG9DU1M7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIlJHQnRvQ1NTIixmdW5jdGlvbigpe3JldHVybiBSR0J0b0NTUzt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiUkdCQXRvSGV4IixmdW5jdGlvbigpe3JldHVybiBSR0JBdG9IZXg7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIkhleFRvUkdCQSIsZnVuY3Rpb24oKXtyZXR1cm4gSGV4VG9SR0JBO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJIZXhUb0hTVkEiLGZ1bmN0aW9uKCl7cmV0dXJuIEhleFRvSFNWQTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiSFNWQXRvSGV4IixmdW5jdGlvbigpe3JldHVybiBIU1ZBdG9IZXg7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sInBhcnNlSGV4IixmdW5jdGlvbigpe3JldHVybiBwYXJzZUhleDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiUkdCdG9JbnQiLGZ1bmN0aW9uKCl7cmV0dXJuIFJHQnRvSW50O30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJjb250cmFzdFJhdGlvIixmdW5jdGlvbigpe3JldHVybiBjb250cmFzdFJhdGlvO30pOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9jb25zb2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jb25zb2xlICovIi4vc3JjL3V0aWwvY29uc29sZS50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9oZWxwZXJzICovIi4vc3JjL3V0aWwvaGVscGVycy50cyIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIF9jb2xvcl90cmFuc2Zvcm1TUkdCX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jb2xvci90cmFuc2Zvcm1TUkdCICovIi4vc3JjL3V0aWwvY29sb3IvdHJhbnNmb3JtU1JHQi50cyIpO3ZhciBfX2Fzc2lnbj11bmRlZmluZWQmJnVuZGVmaW5lZC5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtfX2Fzc2lnbj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIHMsaT0xLG49YXJndW1lbnRzLmxlbmd0aDtpPG47aSsrKXtzPWFyZ3VtZW50c1tpXTtmb3IodmFyIHAgaW4gcyl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkpdFtwXT1zW3BdO319cmV0dXJuIHQ7fTtyZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpO307dmFyIF9fcmVhZD11bmRlZmluZWQmJnVuZGVmaW5lZC5fX3JlYWR8fGZ1bmN0aW9uKG8sbil7dmFyIG09dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9bU3ltYm9sLml0ZXJhdG9yXTtpZighbSlyZXR1cm4gbzt2YXIgaT1tLmNhbGwobykscixhcj1bXSxlO3RyeXt3aGlsZSgobj09PXZvaWQgMHx8bi0tPjApJiYhKHI9aS5uZXh0KCkpLmRvbmUpe2FyLnB1c2goci52YWx1ZSk7fX1jYXRjaChlcnJvcil7ZT17ZXJyb3I6ZXJyb3J9O31maW5hbGx5e3RyeXtpZihyJiYhci5kb25lJiYobT1pWyJyZXR1cm4iXSkpbS5jYWxsKGkpO31maW5hbGx5e2lmKGUpdGhyb3cgZS5lcnJvcjt9fXJldHVybiBhcjt9O2Z1bmN0aW9uIGNvbG9yVG9JbnQoY29sb3Ipe3ZhciByZ2I7aWYodHlwZW9mIGNvbG9yPT09J251bWJlcicpe3JnYj1jb2xvcjt9ZWxzZSBpZih0eXBlb2YgY29sb3I9PT0nc3RyaW5nJyl7dmFyIGM9Y29sb3JbMF09PT0nIyc/Y29sb3Iuc3Vic3RyaW5nKDEpOmNvbG9yO2lmKGMubGVuZ3RoPT09Myl7Yz1jLnNwbGl0KCcnKS5tYXAoZnVuY3Rpb24oY2hhcil7cmV0dXJuIGNoYXIrY2hhcjt9KS5qb2luKCcnKTt9aWYoYy5sZW5ndGghPT02KXtPYmplY3QoX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siY29uc29sZVdhcm4iXSkoIiciK2NvbG9yKyInIGlzIG5vdCBhIHZhbGlkIHJnYiBjb2xvciIpO31yZ2I9cGFyc2VJbnQoYywxNik7fWVsc2V7dGhyb3cgbmV3IFR5cGVFcnJvcigiQ29sb3JzIGNhbiBvbmx5IGJlIG51bWJlcnMgb3Igc3RyaW5ncywgcmVjaWV2ZWQgIisoY29sb3I9PW51bGw/Y29sb3I6Y29sb3IuY29uc3RydWN0b3IubmFtZSkrIiBpbnN0ZWFkIik7fWlmKHJnYjwwKXtPYmplY3QoX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siY29uc29sZVdhcm4iXSkoIkNvbG9ycyBjYW5ub3QgYmUgbmVnYXRpdmU6ICciK2NvbG9yKyInIik7cmdiPTA7fWVsc2UgaWYocmdiPjB4ZmZmZmZmfHxpc05hTihyZ2IpKXtPYmplY3QoX2NvbnNvbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siY29uc29sZVdhcm4iXSkoIiciK2NvbG9yKyInIGlzIG5vdCBhIHZhbGlkIHJnYiBjb2xvciIpO3JnYj0weGZmZmZmZjt9cmV0dXJuIHJnYjt9ZnVuY3Rpb24gaW50VG9IZXgoY29sb3Ipe3ZhciBoZXhDb2xvcj1jb2xvci50b1N0cmluZygxNik7aWYoaGV4Q29sb3IubGVuZ3RoPDYpaGV4Q29sb3I9JzAnLnJlcGVhdCg2LWhleENvbG9yLmxlbmd0aCkraGV4Q29sb3I7cmV0dXJuJyMnK2hleENvbG9yO31mdW5jdGlvbiBjb2xvclRvSGV4KGNvbG9yKXtyZXR1cm4gaW50VG9IZXgoY29sb3JUb0ludChjb2xvcikpO30vKioKICogQ29udmVydHMgSFNWQSB0byBSR0JBLiBCYXNlZCBvbiBmb3JtdWxhIGZyb20gaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSFNMX2FuZF9IU1YKICoKICogQHBhcmFtIGNvbG9yIEhTVkEgY29sb3IgYXMgYW4gYXJyYXkgWzAtMzYwLCAwLTEsIDAtMSwgMC0xXQogKi9mdW5jdGlvbiBIU1ZBdG9SR0JBKGhzdmEpe3ZhciBoPWhzdmEuaCxzPWhzdmEucyx2PWhzdmEudixhPWhzdmEuYTt2YXIgZj1mdW5jdGlvbiBmKG4pe3ZhciBrPShuK2gvNjApJTY7cmV0dXJuIHYtdipzKk1hdGgubWF4KE1hdGgubWluKGssNC1rLDEpLDApO307dmFyIHJnYj1bZig1KSxmKDMpLGYoMSldLm1hcChmdW5jdGlvbih2KXtyZXR1cm4gTWF0aC5yb3VuZCh2KjI1NSk7fSk7cmV0dXJue3I6cmdiWzBdLGc6cmdiWzFdLGI6cmdiWzJdLGE6YX07fS8qKgogKiBDb252ZXJ0cyBSR0JBIHRvIEhTVkEuIEJhc2VkIG9uIGZvcm11bGEgZnJvbSBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9IU0xfYW5kX0hTVgogKgogKiBAcGFyYW0gY29sb3IgUkdCQSBjb2xvciBhcyBhbiBhcnJheSBbMC0yNTUsIDAtMjU1LCAwLTI1NSwgMC0xXQogKi9mdW5jdGlvbiBSR0JBdG9IU1ZBKHJnYmEpe2lmKCFyZ2JhKXJldHVybntoOjAsczoxLHY6MSxhOjF9O3ZhciByPXJnYmEuci8yNTU7dmFyIGc9cmdiYS5nLzI1NTt2YXIgYj1yZ2JhLmIvMjU1O3ZhciBtYXg9TWF0aC5tYXgocixnLGIpO3ZhciBtaW49TWF0aC5taW4ocixnLGIpO3ZhciBoPTA7aWYobWF4IT09bWluKXtpZihtYXg9PT1yKXtoPTYwKigwKyhnLWIpLyhtYXgtbWluKSk7fWVsc2UgaWYobWF4PT09Zyl7aD02MCooMisoYi1yKS8obWF4LW1pbikpO31lbHNlIGlmKG1heD09PWIpe2g9NjAqKDQrKHItZykvKG1heC1taW4pKTt9fWlmKGg8MCloPWgrMzYwO3ZhciBzPW1heD09PTA/MDoobWF4LW1pbikvbWF4O3ZhciBoc3Y9W2gscyxtYXhdO3JldHVybntoOmhzdlswXSxzOmhzdlsxXSx2OmhzdlsyXSxhOnJnYmEuYX07fWZ1bmN0aW9uIEhTVkF0b0hTTEEoaHN2YSl7dmFyIGg9aHN2YS5oLHM9aHN2YS5zLHY9aHN2YS52LGE9aHN2YS5hO3ZhciBsPXYtdipzLzI7dmFyIHNwcmltZT1sPT09MXx8bD09PTA/MDoodi1sKS9NYXRoLm1pbihsLDEtbCk7cmV0dXJue2g6aCxzOnNwcmltZSxsOmwsYTphfTt9ZnVuY3Rpb24gSFNMQXRvSFNWQShoc2wpe3ZhciBoPWhzbC5oLHM9aHNsLnMsbD1oc2wubCxhPWhzbC5hO3ZhciB2PWwrcypNYXRoLm1pbihsLDEtbCk7dmFyIHNwcmltZT12PT09MD8wOjItMipsL3Y7cmV0dXJue2g6aCxzOnNwcmltZSx2OnYsYTphfTt9ZnVuY3Rpb24gUkdCQXRvQ1NTKHJnYmEpe3JldHVybiJyZ2JhKCIrcmdiYS5yKyIsICIrcmdiYS5nKyIsICIrcmdiYS5iKyIsICIrcmdiYS5hKyIpIjt9ZnVuY3Rpb24gUkdCdG9DU1MocmdiYSl7cmV0dXJuIFJHQkF0b0NTUyhfX2Fzc2lnbih7fSxyZ2JhLHthOjF9KSk7fWZ1bmN0aW9uIFJHQkF0b0hleChyZ2JhKXt2YXIgdG9IZXg9ZnVuY3Rpb24gdG9IZXgodil7dmFyIGg9TWF0aC5yb3VuZCh2KS50b1N0cmluZygxNik7cmV0dXJuKCcwMCcuc3Vic3RyKDAsMi1oLmxlbmd0aCkraCkudG9VcHBlckNhc2UoKTt9O3JldHVybiIjIitbdG9IZXgocmdiYS5yKSx0b0hleChyZ2JhLmcpLHRvSGV4KHJnYmEuYiksdG9IZXgoTWF0aC5yb3VuZChyZ2JhLmEqMjU1KSldLmpvaW4oJycpO31mdW5jdGlvbiBIZXhUb1JHQkEoaGV4KXt2YXIgcmdiYT1PYmplY3QoX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siY2h1bmsiXSkoaGV4LnNsaWNlKDEpLDIpLm1hcChmdW5jdGlvbihjKXtyZXR1cm4gcGFyc2VJbnQoYywxNik7fSk7cmV0dXJue3I6cmdiYVswXSxnOnJnYmFbMV0sYjpyZ2JhWzJdLGE6TWF0aC5yb3VuZChyZ2JhWzNdLzI1NSoxMDApLzEwMH07fWZ1bmN0aW9uIEhleFRvSFNWQShoZXgpe3ZhciByZ2I9SGV4VG9SR0JBKGhleCk7cmV0dXJuIFJHQkF0b0hTVkEocmdiKTt9ZnVuY3Rpb24gSFNWQXRvSGV4KGhzdmEpe3JldHVybiBSR0JBdG9IZXgoSFNWQXRvUkdCQShoc3ZhKSk7fWZ1bmN0aW9uIHBhcnNlSGV4KGhleCl7aWYoaGV4LnN0YXJ0c1dpdGgoJyMnKSl7aGV4PWhleC5zbGljZSgxKTt9aGV4PWhleC5yZXBsYWNlKC8oW14wLTlhLWZdKS9naSwnRicpO2lmKGhleC5sZW5ndGg9PT0zKXtoZXg9aGV4LnNwbGl0KCcnKS5tYXAoZnVuY3Rpb24oeCl7cmV0dXJuIHgreDt9KS5qb2luKCcnKTt9aWYoaGV4Lmxlbmd0aD09PTYpe2hleD1PYmplY3QoX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1sicGFkRW5kIl0pKGhleCw4LCdGJyk7fWVsc2V7aGV4PU9iamVjdChfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJwYWRFbmQiXSkoT2JqZWN0KF9oZWxwZXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bInBhZEVuZCJdKShoZXgsNiksOCwnRicpO31yZXR1cm4oIiMiK2hleCkudG9VcHBlckNhc2UoKS5zdWJzdHIoMCw5KTt9ZnVuY3Rpb24gUkdCdG9JbnQocmdiYSl7cmV0dXJuKHJnYmEucjw8MTYpKyhyZ2JhLmc8PDgpK3JnYmEuYjt9LyoqCiAqIFJldHVybnMgdGhlIGNvbnRyYXN0IHJhdGlvICgxLTIxKSBiZXR3ZWVuIHR3byBjb2xvcnMuCiAqCiAqIEBwYXJhbSBjMSBGaXJzdCBjb2xvcgogKiBAcGFyYW0gYzIgU2Vjb25kIGNvbG9yCiAqL2Z1bmN0aW9uIGNvbnRyYXN0UmF0aW8oYzEsYzIpe3ZhciBfYT1fX3JlYWQoT2JqZWN0KF9jb2xvcl90cmFuc2Zvcm1TUkdCX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bInRvWFlaIl0pKFJHQnRvSW50KGMxKSksMikseTE9X2FbMV07dmFyIF9iPV9fcmVhZChPYmplY3QoX2NvbG9yX3RyYW5zZm9ybVNSR0JfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1sidG9YWVoiXSkoUkdCdG9JbnQoYzIpKSwyKSx5Mj1fYlsxXTtyZXR1cm4oTWF0aC5tYXgoeTEseTIpKzAuMDUpLyhNYXRoLm1pbih5MSx5MikrMC4wNSk7fS8qKiovfSwvKioqLyIuL3NyYy91dGlsL2NvbG9ycy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvdXRpbC9jb2xvcnMudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY1V0aWxDb2xvcnNUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO3ZhciByZWQ9T2JqZWN0LmZyZWV6ZSh7YmFzZTonI2Y0NDMzNicsbGlnaHRlbjU6JyNmZmViZWUnLGxpZ2h0ZW40OicjZmZjZGQyJyxsaWdodGVuMzonI2VmOWE5YScsbGlnaHRlbjI6JyNlNTczNzMnLGxpZ2h0ZW4xOicjZWY1MzUwJyxkYXJrZW4xOicjZTUzOTM1JyxkYXJrZW4yOicjZDMyZjJmJyxkYXJrZW4zOicjYzYyODI4JyxkYXJrZW40OicjYjcxYzFjJyxhY2NlbnQxOicjZmY4YTgwJyxhY2NlbnQyOicjZmY1MjUyJyxhY2NlbnQzOicjZmYxNzQ0JyxhY2NlbnQ0OicjZDUwMDAwJ30pO3ZhciBwaW5rPU9iamVjdC5mcmVlemUoe2Jhc2U6JyNlOTFlNjMnLGxpZ2h0ZW41OicjZmNlNGVjJyxsaWdodGVuNDonI2Y4YmJkMCcsbGlnaHRlbjM6JyNmNDhmYjEnLGxpZ2h0ZW4yOicjZjA2MjkyJyxsaWdodGVuMTonI2VjNDA3YScsZGFya2VuMTonI2Q4MWI2MCcsZGFya2VuMjonI2MyMTg1YicsZGFya2VuMzonI2FkMTQ1NycsZGFya2VuNDonIzg4MGU0ZicsYWNjZW50MTonI2ZmODBhYicsYWNjZW50MjonI2ZmNDA4MScsYWNjZW50MzonI2Y1MDA1NycsYWNjZW50NDonI2M1MTE2Mid9KTt2YXIgcHVycGxlPU9iamVjdC5mcmVlemUoe2Jhc2U6JyM5YzI3YjAnLGxpZ2h0ZW41OicjZjNlNWY1JyxsaWdodGVuNDonI2UxYmVlNycsbGlnaHRlbjM6JyNjZTkzZDgnLGxpZ2h0ZW4yOicjYmE2OGM4JyxsaWdodGVuMTonI2FiNDdiYycsZGFya2VuMTonIzhlMjRhYScsZGFya2VuMjonIzdiMWZhMicsZGFya2VuMzonIzZhMWI5YScsZGFya2VuNDonIzRhMTQ4YycsYWNjZW50MTonI2VhODBmYycsYWNjZW50MjonI2UwNDBmYicsYWNjZW50MzonI2Q1MDBmOScsYWNjZW50NDonI2FhMDBmZid9KTt2YXIgZGVlcFB1cnBsZT1PYmplY3QuZnJlZXplKHtiYXNlOicjNjczYWI3JyxsaWdodGVuNTonI2VkZTdmNicsbGlnaHRlbjQ6JyNkMWM0ZTknLGxpZ2h0ZW4zOicjYjM5ZGRiJyxsaWdodGVuMjonIzk1NzVjZCcsbGlnaHRlbjE6JyM3ZTU3YzInLGRhcmtlbjE6JyM1ZTM1YjEnLGRhcmtlbjI6JyM1MTJkYTgnLGRhcmtlbjM6JyM0NTI3YTAnLGRhcmtlbjQ6JyMzMTFiOTInLGFjY2VudDE6JyNiMzg4ZmYnLGFjY2VudDI6JyM3YzRkZmYnLGFjY2VudDM6JyM2NTFmZmYnLGFjY2VudDQ6JyM2MjAwZWEnfSk7dmFyIGluZGlnbz1PYmplY3QuZnJlZXplKHtiYXNlOicjM2Y1MWI1JyxsaWdodGVuNTonI2U4ZWFmNicsbGlnaHRlbjQ6JyNjNWNhZTknLGxpZ2h0ZW4zOicjOWZhOGRhJyxsaWdodGVuMjonIzc5ODZjYicsbGlnaHRlbjE6JyM1YzZiYzAnLGRhcmtlbjE6JyMzOTQ5YWInLGRhcmtlbjI6JyMzMDNmOWYnLGRhcmtlbjM6JyMyODM1OTMnLGRhcmtlbjQ6JyMxYTIzN2UnLGFjY2VudDE6JyM4YzllZmYnLGFjY2VudDI6JyM1MzZkZmUnLGFjY2VudDM6JyMzZDVhZmUnLGFjY2VudDQ6JyMzMDRmZmUnfSk7dmFyIGJsdWU9T2JqZWN0LmZyZWV6ZSh7YmFzZTonIzIxOTZmMycsbGlnaHRlbjU6JyNlM2YyZmQnLGxpZ2h0ZW40OicjYmJkZWZiJyxsaWdodGVuMzonIzkwY2FmOScsbGlnaHRlbjI6JyM2NGI1ZjYnLGxpZ2h0ZW4xOicjNDJhNWY1JyxkYXJrZW4xOicjMWU4OGU1JyxkYXJrZW4yOicjMTk3NmQyJyxkYXJrZW4zOicjMTU2NWMwJyxkYXJrZW40OicjMGQ0N2ExJyxhY2NlbnQxOicjODJiMWZmJyxhY2NlbnQyOicjNDQ4YWZmJyxhY2NlbnQzOicjMjk3OWZmJyxhY2NlbnQ0OicjMjk2MmZmJ30pO3ZhciBsaWdodEJsdWU9T2JqZWN0LmZyZWV6ZSh7YmFzZTonIzAzYTlmNCcsbGlnaHRlbjU6JyNlMWY1ZmUnLGxpZ2h0ZW40OicjYjNlNWZjJyxsaWdodGVuMzonIzgxZDRmYScsbGlnaHRlbjI6JyM0ZmMzZjcnLGxpZ2h0ZW4xOicjMjliNmY2JyxkYXJrZW4xOicjMDM5YmU1JyxkYXJrZW4yOicjMDI4OGQxJyxkYXJrZW4zOicjMDI3N2JkJyxkYXJrZW40OicjMDE1NzliJyxhY2NlbnQxOicjODBkOGZmJyxhY2NlbnQyOicjNDBjNGZmJyxhY2NlbnQzOicjMDBiMGZmJyxhY2NlbnQ0OicjMDA5MWVhJ30pO3ZhciBjeWFuPU9iamVjdC5mcmVlemUoe2Jhc2U6JyMwMGJjZDQnLGxpZ2h0ZW41OicjZTBmN2ZhJyxsaWdodGVuNDonI2IyZWJmMicsbGlnaHRlbjM6JyM4MGRlZWEnLGxpZ2h0ZW4yOicjNGRkMGUxJyxsaWdodGVuMTonIzI2YzZkYScsZGFya2VuMTonIzAwYWNjMScsZGFya2VuMjonIzAwOTdhNycsZGFya2VuMzonIzAwODM4ZicsZGFya2VuNDonIzAwNjA2NCcsYWNjZW50MTonIzg0ZmZmZicsYWNjZW50MjonIzE4ZmZmZicsYWNjZW50MzonIzAwZTVmZicsYWNjZW50NDonIzAwYjhkNCd9KTt2YXIgdGVhbD1PYmplY3QuZnJlZXplKHtiYXNlOicjMDA5Njg4JyxsaWdodGVuNTonI2UwZjJmMScsbGlnaHRlbjQ6JyNiMmRmZGInLGxpZ2h0ZW4zOicjODBjYmM0JyxsaWdodGVuMjonIzRkYjZhYycsbGlnaHRlbjE6JyMyNmE2OWEnLGRhcmtlbjE6JyMwMDg5N2InLGRhcmtlbjI6JyMwMDc5NmInLGRhcmtlbjM6JyMwMDY5NWMnLGRhcmtlbjQ6JyMwMDRkNDAnLGFjY2VudDE6JyNhN2ZmZWInLGFjY2VudDI6JyM2NGZmZGEnLGFjY2VudDM6JyMxZGU5YjYnLGFjY2VudDQ6JyMwMGJmYTUnfSk7dmFyIGdyZWVuPU9iamVjdC5mcmVlemUoe2Jhc2U6JyM0Y2FmNTAnLGxpZ2h0ZW41OicjZThmNWU5JyxsaWdodGVuNDonI2M4ZTZjOScsbGlnaHRlbjM6JyNhNWQ2YTcnLGxpZ2h0ZW4yOicjODFjNzg0JyxsaWdodGVuMTonIzY2YmI2YScsZGFya2VuMTonIzQzYTA0NycsZGFya2VuMjonIzM4OGUzYycsZGFya2VuMzonIzJlN2QzMicsZGFya2VuNDonIzFiNWUyMCcsYWNjZW50MTonI2I5ZjZjYScsYWNjZW50MjonIzY5ZjBhZScsYWNjZW50MzonIzAwZTY3NicsYWNjZW50NDonIzAwYzg1Myd9KTt2YXIgbGlnaHRHcmVlbj1PYmplY3QuZnJlZXplKHtiYXNlOicjOGJjMzRhJyxsaWdodGVuNTonI2YxZjhlOScsbGlnaHRlbjQ6JyNkY2VkYzgnLGxpZ2h0ZW4zOicjYzVlMWE1JyxsaWdodGVuMjonI2FlZDU4MScsbGlnaHRlbjE6JyM5Y2NjNjUnLGRhcmtlbjE6JyM3Y2IzNDInLGRhcmtlbjI6JyM2ODlmMzgnLGRhcmtlbjM6JyM1NThiMmYnLGRhcmtlbjQ6JyMzMzY5MWUnLGFjY2VudDE6JyNjY2ZmOTAnLGFjY2VudDI6JyNiMmZmNTknLGFjY2VudDM6JyM3NmZmMDMnLGFjY2VudDQ6JyM2NGRkMTcnfSk7dmFyIGxpbWU9T2JqZWN0LmZyZWV6ZSh7YmFzZTonI2NkZGMzOScsbGlnaHRlbjU6JyNmOWZiZTcnLGxpZ2h0ZW40OicjZjBmNGMzJyxsaWdodGVuMzonI2U2ZWU5YycsbGlnaHRlbjI6JyNkY2U3NzUnLGxpZ2h0ZW4xOicjZDRlMTU3JyxkYXJrZW4xOicjYzBjYTMzJyxkYXJrZW4yOicjYWZiNDJiJyxkYXJrZW4zOicjOWU5ZDI0JyxkYXJrZW40OicjODI3NzE3JyxhY2NlbnQxOicjZjRmZjgxJyxhY2NlbnQyOicjZWVmZjQxJyxhY2NlbnQzOicjYzZmZjAwJyxhY2NlbnQ0OicjYWVlYTAwJ30pO3ZhciB5ZWxsb3c9T2JqZWN0LmZyZWV6ZSh7YmFzZTonI2ZmZWIzYicsbGlnaHRlbjU6JyNmZmZkZTcnLGxpZ2h0ZW40OicjZmZmOWM0JyxsaWdodGVuMzonI2ZmZjU5ZCcsbGlnaHRlbjI6JyNmZmYxNzYnLGxpZ2h0ZW4xOicjZmZlZTU4JyxkYXJrZW4xOicjZmRkODM1JyxkYXJrZW4yOicjZmJjMDJkJyxkYXJrZW4zOicjZjlhODI1JyxkYXJrZW40OicjZjU3ZjE3JyxhY2NlbnQxOicjZmZmZjhkJyxhY2NlbnQyOicjZmZmZjAwJyxhY2NlbnQzOicjZmZlYTAwJyxhY2NlbnQ0OicjZmZkNjAwJ30pO3ZhciBhbWJlcj1PYmplY3QuZnJlZXplKHtiYXNlOicjZmZjMTA3JyxsaWdodGVuNTonI2ZmZjhlMScsbGlnaHRlbjQ6JyNmZmVjYjMnLGxpZ2h0ZW4zOicjZmZlMDgyJyxsaWdodGVuMjonI2ZmZDU0ZicsbGlnaHRlbjE6JyNmZmNhMjgnLGRhcmtlbjE6JyNmZmIzMDAnLGRhcmtlbjI6JyNmZmEwMDAnLGRhcmtlbjM6JyNmZjhmMDAnLGRhcmtlbjQ6JyNmZjZmMDAnLGFjY2VudDE6JyNmZmU1N2YnLGFjY2VudDI6JyNmZmQ3NDAnLGFjY2VudDM6JyNmZmM0MDAnLGFjY2VudDQ6JyNmZmFiMDAnfSk7dmFyIG9yYW5nZT1PYmplY3QuZnJlZXplKHtiYXNlOicjZmY5ODAwJyxsaWdodGVuNTonI2ZmZjNlMCcsbGlnaHRlbjQ6JyNmZmUwYjInLGxpZ2h0ZW4zOicjZmZjYzgwJyxsaWdodGVuMjonI2ZmYjc0ZCcsbGlnaHRlbjE6JyNmZmE3MjYnLGRhcmtlbjE6JyNmYjhjMDAnLGRhcmtlbjI6JyNmNTdjMDAnLGRhcmtlbjM6JyNlZjZjMDAnLGRhcmtlbjQ6JyNlNjUxMDAnLGFjY2VudDE6JyNmZmQxODAnLGFjY2VudDI6JyNmZmFiNDAnLGFjY2VudDM6JyNmZjkxMDAnLGFjY2VudDQ6JyNmZjZkMDAnfSk7dmFyIGRlZXBPcmFuZ2U9T2JqZWN0LmZyZWV6ZSh7YmFzZTonI2ZmNTcyMicsbGlnaHRlbjU6JyNmYmU5ZTcnLGxpZ2h0ZW40OicjZmZjY2JjJyxsaWdodGVuMzonI2ZmYWI5MScsbGlnaHRlbjI6JyNmZjhhNjUnLGxpZ2h0ZW4xOicjZmY3MDQzJyxkYXJrZW4xOicjZjQ1MTFlJyxkYXJrZW4yOicjZTY0YTE5JyxkYXJrZW4zOicjZDg0MzE1JyxkYXJrZW40OicjYmYzNjBjJyxhY2NlbnQxOicjZmY5ZTgwJyxhY2NlbnQyOicjZmY2ZTQwJyxhY2NlbnQzOicjZmYzZDAwJyxhY2NlbnQ0OicjZGQyYzAwJ30pO3ZhciBicm93bj1PYmplY3QuZnJlZXplKHtiYXNlOicjNzk1NTQ4JyxsaWdodGVuNTonI2VmZWJlOScsbGlnaHRlbjQ6JyNkN2NjYzgnLGxpZ2h0ZW4zOicjYmNhYWE0JyxsaWdodGVuMjonI2ExODg3ZicsbGlnaHRlbjE6JyM4ZDZlNjMnLGRhcmtlbjE6JyM2ZDRjNDEnLGRhcmtlbjI6JyM1ZDQwMzcnLGRhcmtlbjM6JyM0ZTM0MmUnLGRhcmtlbjQ6JyMzZTI3MjMnfSk7dmFyIGJsdWVHcmV5PU9iamVjdC5mcmVlemUoe2Jhc2U6JyM2MDdkOGInLGxpZ2h0ZW41OicjZWNlZmYxJyxsaWdodGVuNDonI2NmZDhkYycsbGlnaHRlbjM6JyNiMGJlYzUnLGxpZ2h0ZW4yOicjOTBhNGFlJyxsaWdodGVuMTonIzc4OTA5YycsZGFya2VuMTonIzU0NmU3YScsZGFya2VuMjonIzQ1NWE2NCcsZGFya2VuMzonIzM3NDc0ZicsZGFya2VuNDonIzI2MzIzOCd9KTt2YXIgZ3JleT1PYmplY3QuZnJlZXplKHtiYXNlOicjOWU5ZTllJyxsaWdodGVuNTonI2ZhZmFmYScsbGlnaHRlbjQ6JyNmNWY1ZjUnLGxpZ2h0ZW4zOicjZWVlZWVlJyxsaWdodGVuMjonI2UwZTBlMCcsbGlnaHRlbjE6JyNiZGJkYmQnLGRhcmtlbjE6JyM3NTc1NzUnLGRhcmtlbjI6JyM2MTYxNjEnLGRhcmtlbjM6JyM0MjQyNDInLGRhcmtlbjQ6JyMyMTIxMjEnfSk7dmFyIHNoYWRlcz1PYmplY3QuZnJlZXplKHtibGFjazonIzAwMDAwMCcsd2hpdGU6JyNmZmZmZmYnLHRyYW5zcGFyZW50Oid0cmFuc3BhcmVudCd9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPU9iamVjdC5mcmVlemUoe3JlZDpyZWQscGluazpwaW5rLHB1cnBsZTpwdXJwbGUsZGVlcFB1cnBsZTpkZWVwUHVycGxlLGluZGlnbzppbmRpZ28sYmx1ZTpibHVlLGxpZ2h0Qmx1ZTpsaWdodEJsdWUsY3lhbjpjeWFuLHRlYWw6dGVhbCxncmVlbjpncmVlbixsaWdodEdyZWVuOmxpZ2h0R3JlZW4sbGltZTpsaW1lLHllbGxvdzp5ZWxsb3csYW1iZXI6YW1iZXIsb3JhbmdlOm9yYW5nZSxkZWVwT3JhbmdlOmRlZXBPcmFuZ2UsYnJvd246YnJvd24sYmx1ZUdyZXk6Ymx1ZUdyZXksZ3JleTpncmV5LHNoYWRlczpzaGFkZXN9KTsvKioqL30sLyoqKi8iLi9zcmMvdXRpbC9jb25zb2xlLnRzIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvdXRpbC9jb25zb2xlLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBleHBvcnRzIHByb3ZpZGVkOiBjb25zb2xlSW5mbywgY29uc29sZVdhcm4sIGNvbnNvbGVFcnJvciwgZGVwcmVjYXRlLCBicmVha2luZywgcmVtb3ZlZCAqLyAvKioqL2Z1bmN0aW9uIHNyY1V0aWxDb25zb2xlVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiY29uc29sZUluZm8iLGZ1bmN0aW9uKCl7cmV0dXJuIGNvbnNvbGVJbmZvO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJjb25zb2xlV2FybiIsZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZVdhcm47fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImNvbnNvbGVFcnJvciIsZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZUVycm9yO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJkZXByZWNhdGUiLGZ1bmN0aW9uKCl7cmV0dXJuIGRlcHJlY2F0ZTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiYnJlYWtpbmciLGZ1bmN0aW9uKCl7cmV0dXJuIGJyZWFraW5nO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJyZW1vdmVkIixmdW5jdGlvbigpe3JldHVybiByZW1vdmVkO30pO2Z1bmN0aW9uIGNyZWF0ZU1lc3NhZ2UobWVzc2FnZSx2bSxwYXJlbnQpe2lmKHBhcmVudCl7dm09e19pc1Z1ZTp0cnVlLCRwYXJlbnQ6cGFyZW50LCRvcHRpb25zOnZtfTt9aWYodm0pey8vIE9ubHkgc2hvdyBlYWNoIG1lc3NhZ2Ugb25jZSBwZXIgaW5zdGFuY2UKdm0uJF9hbHJlYWR5V2FybmVkPXZtLiRfYWxyZWFkeVdhcm5lZHx8W107aWYodm0uJF9hbHJlYWR5V2FybmVkLmluY2x1ZGVzKG1lc3NhZ2UpKXJldHVybjt2bS4kX2FscmVhZHlXYXJuZWQucHVzaChtZXNzYWdlKTt9cmV0dXJuIltWdWV0aWZ5XSAiK21lc3NhZ2UrKHZtP2dlbmVyYXRlQ29tcG9uZW50VHJhY2Uodm0pOicnKTt9ZnVuY3Rpb24gY29uc29sZUluZm8obWVzc2FnZSx2bSxwYXJlbnQpe3ZhciBuZXdNZXNzYWdlPWNyZWF0ZU1lc3NhZ2UobWVzc2FnZSx2bSxwYXJlbnQpO25ld01lc3NhZ2UhPW51bGwmJmNvbnNvbGUuaW5mbyhuZXdNZXNzYWdlKTt9ZnVuY3Rpb24gY29uc29sZVdhcm4obWVzc2FnZSx2bSxwYXJlbnQpe3ZhciBuZXdNZXNzYWdlPWNyZWF0ZU1lc3NhZ2UobWVzc2FnZSx2bSxwYXJlbnQpO25ld01lc3NhZ2UhPW51bGwmJmNvbnNvbGUud2FybihuZXdNZXNzYWdlKTt9ZnVuY3Rpb24gY29uc29sZUVycm9yKG1lc3NhZ2Usdm0scGFyZW50KXt2YXIgbmV3TWVzc2FnZT1jcmVhdGVNZXNzYWdlKG1lc3NhZ2Usdm0scGFyZW50KTtuZXdNZXNzYWdlIT1udWxsJiZjb25zb2xlLmVycm9yKG5ld01lc3NhZ2UpO31mdW5jdGlvbiBkZXByZWNhdGUob3JpZ2luYWwscmVwbGFjZW1lbnQsdm0scGFyZW50KXtjb25zb2xlV2FybigiW1VQR1JBREVdICciK29yaWdpbmFsKyInIGlzIGRlcHJlY2F0ZWQsIHVzZSAnIityZXBsYWNlbWVudCsiJyBpbnN0ZWFkLiIsdm0scGFyZW50KTt9ZnVuY3Rpb24gYnJlYWtpbmcob3JpZ2luYWwscmVwbGFjZW1lbnQsdm0scGFyZW50KXtjb25zb2xlRXJyb3IoIltCUkVBS0lOR10gJyIrb3JpZ2luYWwrIicgaGFzIGJlZW4gcmVtb3ZlZCwgdXNlICciK3JlcGxhY2VtZW50KyInIGluc3RlYWQuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIHVwZ3JhZGUgZ3VpZGUgaHR0cHM6Ly9naXRodWIuY29tL3Z1ZXRpZnlqcy92dWV0aWZ5L3JlbGVhc2VzL3RhZy92Mi4wLjAjdXNlci1jb250ZW50LXVwZ3JhZGUtZ3VpZGUiLHZtLHBhcmVudCk7fWZ1bmN0aW9uIHJlbW92ZWQob3JpZ2luYWwsdm0scGFyZW50KXtjb25zb2xlV2FybigiW1JFTU9WRURdICciK29yaWdpbmFsKyInIGhhcyBiZWVuIHJlbW92ZWQuIFlvdSBjYW4gc2FmZWx5IG9taXQgaXQuIix2bSxwYXJlbnQpO30vKioKICogU2hhbWVsZXNzbHkgc3RvbGVuIGZyb20gdnVlanMvdnVlL2Jsb2IvZGV2L3NyYy9jb3JlL3V0aWwvZGVidWcuanMKICovdmFyIGNsYXNzaWZ5UkU9Lyg/Ol58Wy1fXSkoXHcpL2c7dmFyIGNsYXNzaWZ5PWZ1bmN0aW9uIGNsYXNzaWZ5KHN0cil7cmV0dXJuIHN0ci5yZXBsYWNlKGNsYXNzaWZ5UkUsZnVuY3Rpb24oYyl7cmV0dXJuIGMudG9VcHBlckNhc2UoKTt9KS5yZXBsYWNlKC9bLV9dL2csJycpO307ZnVuY3Rpb24gZm9ybWF0Q29tcG9uZW50TmFtZSh2bSxpbmNsdWRlRmlsZSl7aWYodm0uJHJvb3Q9PT12bSl7cmV0dXJuJzxSb290Pic7fXZhciBvcHRpb25zPXR5cGVvZiB2bT09PSdmdW5jdGlvbicmJnZtLmNpZCE9bnVsbD92bS5vcHRpb25zOnZtLl9pc1Z1ZT92bS4kb3B0aW9uc3x8dm0uY29uc3RydWN0b3Iub3B0aW9uczp2bXx8e307dmFyIG5hbWU9b3B0aW9ucy5uYW1lfHxvcHRpb25zLl9jb21wb25lbnRUYWc7dmFyIGZpbGU9b3B0aW9ucy5fX2ZpbGU7aWYoIW5hbWUmJmZpbGUpe3ZhciBtYXRjaD1maWxlLm1hdGNoKC8oW14vXFxdKylcLnZ1ZSQvKTtuYW1lPW1hdGNoJiZtYXRjaFsxXTt9cmV0dXJuKG5hbWU/IjwiK2NsYXNzaWZ5KG5hbWUpKyI+IjoiPEFub255bW91cz4iKSsoZmlsZSYmaW5jbHVkZUZpbGUhPT1mYWxzZT8iIGF0ICIrZmlsZTonJyk7fWZ1bmN0aW9uIGdlbmVyYXRlQ29tcG9uZW50VHJhY2Uodm0pe2lmKHZtLl9pc1Z1ZSYmdm0uJHBhcmVudCl7dmFyIHRyZWU9W107dmFyIGN1cnJlbnRSZWN1cnNpdmVTZXF1ZW5jZT0wO3doaWxlKHZtKXtpZih0cmVlLmxlbmd0aD4wKXt2YXIgbGFzdD10cmVlW3RyZWUubGVuZ3RoLTFdO2lmKGxhc3QuY29uc3RydWN0b3I9PT12bS5jb25zdHJ1Y3Rvcil7Y3VycmVudFJlY3Vyc2l2ZVNlcXVlbmNlKys7dm09dm0uJHBhcmVudDtjb250aW51ZTt9ZWxzZSBpZihjdXJyZW50UmVjdXJzaXZlU2VxdWVuY2U+MCl7dHJlZVt0cmVlLmxlbmd0aC0xXT1bbGFzdCxjdXJyZW50UmVjdXJzaXZlU2VxdWVuY2VdO2N1cnJlbnRSZWN1cnNpdmVTZXF1ZW5jZT0wO319dHJlZS5wdXNoKHZtKTt2bT12bS4kcGFyZW50O31yZXR1cm4nXG5cbmZvdW5kIGluXG5cbicrdHJlZS5tYXAoZnVuY3Rpb24odm0saSl7cmV0dXJuIiIrKGk9PT0wPyctLS0+ICc6JyAnLnJlcGVhdCg1K2kqMikpKyhBcnJheS5pc0FycmF5KHZtKT9mb3JtYXRDb21wb25lbnROYW1lKHZtWzBdKSsiLi4uICgiK3ZtWzFdKyIgcmVjdXJzaXZlIGNhbGxzKSI6Zm9ybWF0Q29tcG9uZW50TmFtZSh2bSkpO30pLmpvaW4oJ1xuJyk7fWVsc2V7cmV0dXJuIlxuXG4oZm91bmQgaW4gIitmb3JtYXRDb21wb25lbnROYW1lKHZtKSsiKSI7fX0vKioqL30sLyoqKi8iLi9zcmMvdXRpbC9kZWR1cGVNb2RlbExpc3RlbmVycy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy91dGlsL2RlZHVwZU1vZGVsTGlzdGVuZXJzLnRzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY1V0aWxEZWR1cGVNb2RlbExpc3RlbmVyc1RzKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImRlZmF1bHQiLGZ1bmN0aW9uKCl7cmV0dXJuIGRlZHVwZU1vZGVsTGlzdGVuZXJzO30pOy8qKgogKiBSZW1vdmVzIGR1cGxpY2F0ZSBgQGlucHV0YCBsaXN0ZW5lcnMgd2hlbgogKiB1c2luZyB2LW1vZGVsIHdpdGggZnVuY3Rpb25hbCBjb21wb25lbnRzCiAqCiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3Z1ZXRpZnlqcy92dWV0aWZ5L2lzc3Vlcy80NDYwCiAqL2Z1bmN0aW9uIGRlZHVwZU1vZGVsTGlzdGVuZXJzKGRhdGEpe2lmKGRhdGEubW9kZWwmJmRhdGEub24mJmRhdGEub24uaW5wdXQpe2lmKEFycmF5LmlzQXJyYXkoZGF0YS5vbi5pbnB1dCkpe3ZhciBpPWRhdGEub24uaW5wdXQuaW5kZXhPZihkYXRhLm1vZGVsLmNhbGxiYWNrKTtpZihpPi0xKWRhdGEub24uaW5wdXQuc3BsaWNlKGksMSk7fWVsc2V7ZGVsZXRlIGRhdGEub24uaW5wdXQ7fX19LyoqKi99LC8qKiovIi4vc3JjL3V0aWwvaGVscGVycy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL3V0aWwvaGVscGVycy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogY3JlYXRlU2ltcGxlRnVuY3Rpb25hbCwgY3JlYXRlU2ltcGxlVHJhbnNpdGlvbiwgY3JlYXRlSmF2YVNjcmlwdFRyYW5zaXRpb24sIGRpcmVjdGl2ZUNvbmZpZywgYWRkT25jZUV2ZW50TGlzdGVuZXIsIHBhc3NpdmVTdXBwb3J0ZWQsIGFkZFBhc3NpdmVFdmVudExpc3RlbmVyLCBnZXROZXN0ZWRWYWx1ZSwgZGVlcEVxdWFsLCBnZXRPYmplY3RWYWx1ZUJ5UGF0aCwgZ2V0UHJvcGVydHlGcm9tSXRlbSwgY3JlYXRlUmFuZ2UsIGdldFpJbmRleCwgZXNjYXBlSFRNTCwgZmlsdGVyT2JqZWN0T25LZXlzLCBjb252ZXJ0VG9Vbml0LCBrZWJhYkNhc2UsIGlzT2JqZWN0LCBrZXlDb2RlcywgcmVtYXBJbnRlcm5hbEljb24sIGtleXMsIGNhbWVsaXplLCBhcnJheURpZmYsIHVwcGVyRmlyc3QsIGdyb3VwQnlQcm9wZXJ0eSwgd3JhcEluQXJyYXksIHNvcnRJdGVtcywgZGVmYXVsdEZpbHRlciwgc2VhcmNoSXRlbXMsIGdldFNsb3RUeXBlLCBkZWJvdW5jZSwgZ2V0UHJlZml4ZWRTY29wZWRTbG90cywgZ2V0U2xvdCwgY2xhbXAsIHBhZEVuZCwgY2h1bmssIGh1bWFuUmVhZGFibGVGaWxlU2l6ZSwgY2FtZWxpemVPYmplY3RLZXlzICovIC8qKiovZnVuY3Rpb24gc3JjVXRpbEhlbHBlcnNUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJjcmVhdGVTaW1wbGVGdW5jdGlvbmFsIixmdW5jdGlvbigpe3JldHVybiBjcmVhdGVTaW1wbGVGdW5jdGlvbmFsO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJjcmVhdGVTaW1wbGVUcmFuc2l0aW9uIixmdW5jdGlvbigpe3JldHVybiBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJjcmVhdGVKYXZhU2NyaXB0VHJhbnNpdGlvbiIsZnVuY3Rpb24oKXtyZXR1cm4gY3JlYXRlSmF2YVNjcmlwdFRyYW5zaXRpb247fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImRpcmVjdGl2ZUNvbmZpZyIsZnVuY3Rpb24oKXtyZXR1cm4gZGlyZWN0aXZlQ29uZmlnO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJhZGRPbmNlRXZlbnRMaXN0ZW5lciIsZnVuY3Rpb24oKXtyZXR1cm4gYWRkT25jZUV2ZW50TGlzdGVuZXI7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sInBhc3NpdmVTdXBwb3J0ZWQiLGZ1bmN0aW9uKCl7cmV0dXJuIHBhc3NpdmVTdXBwb3J0ZWQ7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImFkZFBhc3NpdmVFdmVudExpc3RlbmVyIixmdW5jdGlvbigpe3JldHVybiBhZGRQYXNzaXZlRXZlbnRMaXN0ZW5lcjt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZ2V0TmVzdGVkVmFsdWUiLGZ1bmN0aW9uKCl7cmV0dXJuIGdldE5lc3RlZFZhbHVlO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJkZWVwRXF1YWwiLGZ1bmN0aW9uKCl7cmV0dXJuIGRlZXBFcXVhbDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZ2V0T2JqZWN0VmFsdWVCeVBhdGgiLGZ1bmN0aW9uKCl7cmV0dXJuIGdldE9iamVjdFZhbHVlQnlQYXRoO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJnZXRQcm9wZXJ0eUZyb21JdGVtIixmdW5jdGlvbigpe3JldHVybiBnZXRQcm9wZXJ0eUZyb21JdGVtO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJjcmVhdGVSYW5nZSIsZnVuY3Rpb24oKXtyZXR1cm4gY3JlYXRlUmFuZ2U7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdldFpJbmRleCIsZnVuY3Rpb24oKXtyZXR1cm4gZ2V0WkluZGV4O30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJlc2NhcGVIVE1MIixmdW5jdGlvbigpe3JldHVybiBlc2NhcGVIVE1MO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJmaWx0ZXJPYmplY3RPbktleXMiLGZ1bmN0aW9uKCl7cmV0dXJuIGZpbHRlck9iamVjdE9uS2V5czt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiY29udmVydFRvVW5pdCIsZnVuY3Rpb24oKXtyZXR1cm4gY29udmVydFRvVW5pdDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywia2ViYWJDYXNlIixmdW5jdGlvbigpe3JldHVybiBrZWJhYkNhc2U7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImlzT2JqZWN0IixmdW5jdGlvbigpe3JldHVybiBpc09iamVjdDt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywia2V5Q29kZXMiLGZ1bmN0aW9uKCl7cmV0dXJuIGtleUNvZGVzO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJyZW1hcEludGVybmFsSWNvbiIsZnVuY3Rpb24oKXtyZXR1cm4gcmVtYXBJbnRlcm5hbEljb247fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImtleXMiLGZ1bmN0aW9uKCl7cmV0dXJuIGtleXM7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImNhbWVsaXplIixmdW5jdGlvbigpe3JldHVybiBjYW1lbGl6ZTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiYXJyYXlEaWZmIixmdW5jdGlvbigpe3JldHVybiBhcnJheURpZmY7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sInVwcGVyRmlyc3QiLGZ1bmN0aW9uKCl7cmV0dXJuIHVwcGVyRmlyc3Q7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdyb3VwQnlQcm9wZXJ0eSIsZnVuY3Rpb24oKXtyZXR1cm4gZ3JvdXBCeVByb3BlcnR5O30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJ3cmFwSW5BcnJheSIsZnVuY3Rpb24oKXtyZXR1cm4gd3JhcEluQXJyYXk7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sInNvcnRJdGVtcyIsZnVuY3Rpb24oKXtyZXR1cm4gc29ydEl0ZW1zO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJkZWZhdWx0RmlsdGVyIixmdW5jdGlvbigpe3JldHVybiBkZWZhdWx0RmlsdGVyO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJzZWFyY2hJdGVtcyIsZnVuY3Rpb24oKXtyZXR1cm4gc2VhcmNoSXRlbXM7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImdldFNsb3RUeXBlIixmdW5jdGlvbigpe3JldHVybiBnZXRTbG90VHlwZTt9KTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZGVib3VuY2UiLGZ1bmN0aW9uKCl7cmV0dXJuIGRlYm91bmNlO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJnZXRQcmVmaXhlZFNjb3BlZFNsb3RzIixmdW5jdGlvbigpe3JldHVybiBnZXRQcmVmaXhlZFNjb3BlZFNsb3RzO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJnZXRTbG90IixmdW5jdGlvbigpe3JldHVybiBnZXRTbG90O30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJjbGFtcCIsZnVuY3Rpb24oKXtyZXR1cm4gY2xhbXA7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sInBhZEVuZCIsZnVuY3Rpb24oKXtyZXR1cm4gcGFkRW5kO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJjaHVuayIsZnVuY3Rpb24oKXtyZXR1cm4gY2h1bms7fSk7LyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sImh1bWFuUmVhZGFibGVGaWxlU2l6ZSIsZnVuY3Rpb24oKXtyZXR1cm4gaHVtYW5SZWFkYWJsZUZpbGVTaXplO30pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJjYW1lbGl6ZU9iamVjdEtleXMiLGZ1bmN0aW9uKCl7cmV0dXJuIGNhbWVsaXplT2JqZWN0S2V5czt9KTsvKiBoYXJtb255IGltcG9ydCAqL3ZhciB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISB2dWUgKi8idnVlIik7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTtmdW5jdGlvbiBfdHlwZW9mKG9iail7aWYodHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJl90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcik9PT0ic3ltYm9sIil7X3R5cGVvZj1mdW5jdGlvbiBfdHlwZW9mKG9iail7cmV0dXJuIF90eXBlb2YyKG9iaik7fTt9ZWxzZXtfdHlwZW9mPWZ1bmN0aW9uIF90eXBlb2Yob2JqKXtyZXR1cm4gb2JqJiZ0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb2JqLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZvYmohPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOl90eXBlb2YyKG9iaik7fTt9cmV0dXJuIF90eXBlb2Yob2JqKTt9dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTt2YXIgX19yZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fcmVhZHx8ZnVuY3Rpb24obyxuKXt2YXIgbT10eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb1tTeW1ib2wuaXRlcmF0b3JdO2lmKCFtKXJldHVybiBvO3ZhciBpPW0uY2FsbChvKSxyLGFyPVtdLGU7dHJ5e3doaWxlKChuPT09dm9pZCAwfHxuLS0+MCkmJiEocj1pLm5leHQoKSkuZG9uZSl7YXIucHVzaChyLnZhbHVlKTt9fWNhdGNoKGVycm9yKXtlPXtlcnJvcjplcnJvcn07fWZpbmFsbHl7dHJ5e2lmKHImJiFyLmRvbmUmJihtPWlbInJldHVybiJdKSltLmNhbGwoaSk7fWZpbmFsbHl7aWYoZSl0aHJvdyBlLmVycm9yO319cmV0dXJuIGFyO307dmFyIF9fc3ByZWFkPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fc3ByZWFkfHxmdW5jdGlvbigpe2Zvcih2YXIgYXI9W10saT0wO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe2FyPWFyLmNvbmNhdChfX3JlYWQoYXJndW1lbnRzW2ldKSk7fXJldHVybiBhcjt9O2Z1bmN0aW9uIGNyZWF0ZVNpbXBsZUZ1bmN0aW9uYWwoYyxlbCxuYW1lKXtpZihlbD09PXZvaWQgMCl7ZWw9J2Rpdic7fXJldHVybiB2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0LmEuZXh0ZW5kKHtuYW1lOm5hbWV8fGMucmVwbGFjZSgvX18vZywnLScpLGZ1bmN0aW9uYWw6dHJ1ZSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgsX2Epe3ZhciBkYXRhPV9hLmRhdGEsY2hpbGRyZW49X2EuY2hpbGRyZW47ZGF0YS5zdGF0aWNDbGFzcz0oYysiICIrKGRhdGEuc3RhdGljQ2xhc3N8fCcnKSkudHJpbSgpO3JldHVybiBoKGVsLGRhdGEsY2hpbGRyZW4pO319KTt9ZnVuY3Rpb24gbWVyZ2VUcmFuc2l0aW9ucyh0cmFuc2l0aW9ucyxhcnJheSl7aWYoQXJyYXkuaXNBcnJheSh0cmFuc2l0aW9ucykpcmV0dXJuIHRyYW5zaXRpb25zLmNvbmNhdChhcnJheSk7aWYodHJhbnNpdGlvbnMpYXJyYXkucHVzaCh0cmFuc2l0aW9ucyk7cmV0dXJuIGFycmF5O31mdW5jdGlvbiBjcmVhdGVTaW1wbGVUcmFuc2l0aW9uKG5hbWUsb3JpZ2luLG1vZGUpe2lmKG9yaWdpbj09PXZvaWQgMCl7b3JpZ2luPSd0b3AgY2VudGVyIDAnO31yZXR1cm57bmFtZTpuYW1lLGZ1bmN0aW9uYWw6dHJ1ZSxwcm9wczp7Z3JvdXA6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSxoaWRlT25MZWF2ZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LGxlYXZlQWJzb2x1dGU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSxtb2RlOnt0eXBlOlN0cmluZyxkZWZhdWx0Om1vZGV9LG9yaWdpbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDpvcmlnaW59fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgsY29udGV4dCl7dmFyIHRhZz0idHJhbnNpdGlvbiIrKGNvbnRleHQucHJvcHMuZ3JvdXA/Jy1ncm91cCc6JycpO2NvbnRleHQuZGF0YT1jb250ZXh0LmRhdGF8fHt9O2NvbnRleHQuZGF0YS5wcm9wcz17bmFtZTpuYW1lLG1vZGU6Y29udGV4dC5wcm9wcy5tb2RlfTtjb250ZXh0LmRhdGEub249Y29udGV4dC5kYXRhLm9ufHx7fTtpZighT2JqZWN0LmlzRXh0ZW5zaWJsZShjb250ZXh0LmRhdGEub24pKXtjb250ZXh0LmRhdGEub249X19hc3NpZ24oe30sY29udGV4dC5kYXRhLm9uKTt9dmFyIG91ckJlZm9yZUVudGVyPVtdO3ZhciBvdXJMZWF2ZT1bXTt2YXIgYWJzb2x1dGU9ZnVuY3Rpb24gYWJzb2x1dGUoZWwpe3JldHVybiBlbC5zdHlsZS5wb3NpdGlvbj0nYWJzb2x1dGUnO307b3VyQmVmb3JlRW50ZXIucHVzaChmdW5jdGlvbihlbCl7ZWwuc3R5bGUudHJhbnNmb3JtT3JpZ2luPWNvbnRleHQucHJvcHMub3JpZ2luO2VsLnN0eWxlLndlYmtpdFRyYW5zZm9ybU9yaWdpbj1jb250ZXh0LnByb3BzLm9yaWdpbjt9KTtpZihjb250ZXh0LnByb3BzLmxlYXZlQWJzb2x1dGUpb3VyTGVhdmUucHVzaChhYnNvbHV0ZSk7aWYoY29udGV4dC5wcm9wcy5oaWRlT25MZWF2ZSl7b3VyTGVhdmUucHVzaChmdW5jdGlvbihlbCl7cmV0dXJuIGVsLnN0eWxlLmRpc3BsYXk9J25vbmUnO30pO312YXIgX2E9Y29udGV4dC5kYXRhLm9uLGJlZm9yZUVudGVyPV9hLmJlZm9yZUVudGVyLGxlYXZlPV9hLmxlYXZlOy8vIFR5cGUgc2F5cyBGdW5jdGlvbiB8IEZ1bmN0aW9uW10gYnV0Ci8vIHdpbGwgb25seSB3b3JrIGlmIHByb3ZpZGVkIGEgZnVuY3Rpb24KY29udGV4dC5kYXRhLm9uLmJlZm9yZUVudGVyPWZ1bmN0aW9uKCl7cmV0dXJuIG1lcmdlVHJhbnNpdGlvbnMoYmVmb3JlRW50ZXIsb3VyQmVmb3JlRW50ZXIpO307Y29udGV4dC5kYXRhLm9uLmxlYXZlPW1lcmdlVHJhbnNpdGlvbnMobGVhdmUsb3VyTGVhdmUpO3JldHVybiBoKHRhZyxjb250ZXh0LmRhdGEsY29udGV4dC5jaGlsZHJlbik7fX07fWZ1bmN0aW9uIGNyZWF0ZUphdmFTY3JpcHRUcmFuc2l0aW9uKG5hbWUsZnVuY3Rpb25zLG1vZGUpe2lmKG1vZGU9PT12b2lkIDApe21vZGU9J2luLW91dCc7fXJldHVybntuYW1lOm5hbWUsZnVuY3Rpb25hbDp0cnVlLHByb3BzOnttb2RlOnt0eXBlOlN0cmluZyxkZWZhdWx0Om1vZGV9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgsY29udGV4dCl7dmFyIGRhdGE9e3Byb3BzOl9fYXNzaWduKHt9LGNvbnRleHQucHJvcHMse25hbWU6bmFtZX0pLG9uOmZ1bmN0aW9uc307cmV0dXJuIGgoJ3RyYW5zaXRpb24nLGRhdGEsY29udGV4dC5jaGlsZHJlbik7fX07fWZ1bmN0aW9uIGRpcmVjdGl2ZUNvbmZpZyhiaW5kaW5nLGRlZmF1bHRzKXtpZihkZWZhdWx0cz09PXZvaWQgMCl7ZGVmYXVsdHM9e307fXJldHVybiBfX2Fzc2lnbih7fSxkZWZhdWx0cyxiaW5kaW5nLm1vZGlmaWVycyx7dmFsdWU6YmluZGluZy5hcmd9LGJpbmRpbmcudmFsdWV8fHt9KTt9ZnVuY3Rpb24gYWRkT25jZUV2ZW50TGlzdGVuZXIoZWwsZXZlbnROYW1lLGNiLG9wdGlvbnMpe2lmKG9wdGlvbnM9PT12b2lkIDApe29wdGlvbnM9ZmFsc2U7fXZhciBvbmNlPWZ1bmN0aW9uIG9uY2UoZXZlbnQpe2NiKGV2ZW50KTtlbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSxvbmNlLG9wdGlvbnMpO307ZWwuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsb25jZSxvcHRpb25zKTt9dmFyIHBhc3NpdmVTdXBwb3J0ZWQ9ZmFsc2U7dHJ5e2lmKHR5cGVvZiB3aW5kb3chPT0ndW5kZWZpbmVkJyl7dmFyIHRlc3RMaXN0ZW5lck9wdHM9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCdwYXNzaXZlJyx7Z2V0OmZ1bmN0aW9uIGdldCgpe3Bhc3NpdmVTdXBwb3J0ZWQ9dHJ1ZTt9fSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Rlc3RMaXN0ZW5lcicsdGVzdExpc3RlbmVyT3B0cyx0ZXN0TGlzdGVuZXJPcHRzKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigndGVzdExpc3RlbmVyJyx0ZXN0TGlzdGVuZXJPcHRzLHRlc3RMaXN0ZW5lck9wdHMpO319Y2F0Y2goZSl7Y29uc29sZS53YXJuKGUpO31mdW5jdGlvbiBhZGRQYXNzaXZlRXZlbnRMaXN0ZW5lcihlbCxldmVudCxjYixvcHRpb25zKXtlbC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LGNiLHBhc3NpdmVTdXBwb3J0ZWQ/b3B0aW9uczpmYWxzZSk7fWZ1bmN0aW9uIGdldE5lc3RlZFZhbHVlKG9iaixwYXRoLGZhbGxiYWNrKXt2YXIgbGFzdD1wYXRoLmxlbmd0aC0xO2lmKGxhc3Q8MClyZXR1cm4gb2JqPT09dW5kZWZpbmVkP2ZhbGxiYWNrOm9iajtmb3IodmFyIGk9MDtpPGxhc3Q7aSsrKXtpZihvYmo9PW51bGwpe3JldHVybiBmYWxsYmFjazt9b2JqPW9ialtwYXRoW2ldXTt9aWYob2JqPT1udWxsKXJldHVybiBmYWxsYmFjaztyZXR1cm4gb2JqW3BhdGhbbGFzdF1dPT09dW5kZWZpbmVkP2ZhbGxiYWNrOm9ialtwYXRoW2xhc3RdXTt9ZnVuY3Rpb24gZGVlcEVxdWFsKGEsYil7aWYoYT09PWIpcmV0dXJuIHRydWU7aWYoYSBpbnN0YW5jZW9mIERhdGUmJmIgaW5zdGFuY2VvZiBEYXRlKXsvLyBJZiB0aGUgdmFsdWVzIGFyZSBEYXRlLCB0aGV5IHdlcmUgY29udmVydCB0byB0aW1lc3RhbXAgd2l0aCBnZXRUaW1lIGFuZCBjb21wYXJlIGl0CmlmKGEuZ2V0VGltZSgpIT09Yi5nZXRUaW1lKCkpcmV0dXJuIGZhbHNlO31pZihhIT09T2JqZWN0KGEpfHxiIT09T2JqZWN0KGIpKXsvLyBJZiB0aGUgdmFsdWVzIGFyZW4ndCBvYmplY3RzLCB0aGV5IHdlcmUgYWxyZWFkeSBjaGVja2VkIGZvciBlcXVhbGl0eQpyZXR1cm4gZmFsc2U7fXZhciBwcm9wcz1PYmplY3Qua2V5cyhhKTtpZihwcm9wcy5sZW5ndGghPT1PYmplY3Qua2V5cyhiKS5sZW5ndGgpey8vIERpZmZlcmVudCBudW1iZXIgb2YgcHJvcHMsIGRvbid0IGJvdGhlciB0byBjaGVjawpyZXR1cm4gZmFsc2U7fXJldHVybiBwcm9wcy5ldmVyeShmdW5jdGlvbihwKXtyZXR1cm4gZGVlcEVxdWFsKGFbcF0sYltwXSk7fSk7fWZ1bmN0aW9uIGdldE9iamVjdFZhbHVlQnlQYXRoKG9iaixwYXRoLGZhbGxiYWNrKXsvLyBjcmVkaXQ6IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNjQ5MTQ2My9hY2Nlc3NpbmctbmVzdGVkLWphdmFzY3JpcHQtb2JqZWN0cy13aXRoLXN0cmluZy1rZXkjY29tbWVudDU1Mjc4NDEzXzY0OTE2MjEKaWYob2JqPT1udWxsfHwhcGF0aHx8dHlwZW9mIHBhdGghPT0nc3RyaW5nJylyZXR1cm4gZmFsbGJhY2s7aWYob2JqW3BhdGhdIT09dW5kZWZpbmVkKXJldHVybiBvYmpbcGF0aF07cGF0aD1wYXRoLnJlcGxhY2UoL1xbKFx3KylcXS9nLCcuJDEnKTsvLyBjb252ZXJ0IGluZGV4ZXMgdG8gcHJvcGVydGllcwpwYXRoPXBhdGgucmVwbGFjZSgvXlwuLywnJyk7Ly8gc3RyaXAgYSBsZWFkaW5nIGRvdApyZXR1cm4gZ2V0TmVzdGVkVmFsdWUob2JqLHBhdGguc3BsaXQoJy4nKSxmYWxsYmFjayk7fWZ1bmN0aW9uIGdldFByb3BlcnR5RnJvbUl0ZW0oaXRlbSxwcm9wZXJ0eSxmYWxsYmFjayl7aWYocHJvcGVydHk9PW51bGwpcmV0dXJuIGl0ZW09PT11bmRlZmluZWQ/ZmFsbGJhY2s6aXRlbTtpZihpdGVtIT09T2JqZWN0KGl0ZW0pKXJldHVybiBmYWxsYmFjaz09PXVuZGVmaW5lZD9pdGVtOmZhbGxiYWNrO2lmKHR5cGVvZiBwcm9wZXJ0eT09PSdzdHJpbmcnKXJldHVybiBnZXRPYmplY3RWYWx1ZUJ5UGF0aChpdGVtLHByb3BlcnR5LGZhbGxiYWNrKTtpZihBcnJheS5pc0FycmF5KHByb3BlcnR5KSlyZXR1cm4gZ2V0TmVzdGVkVmFsdWUoaXRlbSxwcm9wZXJ0eSxmYWxsYmFjayk7aWYodHlwZW9mIHByb3BlcnR5IT09J2Z1bmN0aW9uJylyZXR1cm4gZmFsbGJhY2s7dmFyIHZhbHVlPXByb3BlcnR5KGl0ZW0sZmFsbGJhY2spO3JldHVybiB0eXBlb2YgdmFsdWU9PT0ndW5kZWZpbmVkJz9mYWxsYmFjazp2YWx1ZTt9ZnVuY3Rpb24gY3JlYXRlUmFuZ2UobGVuZ3RoKXtyZXR1cm4gQXJyYXkuZnJvbSh7bGVuZ3RoOmxlbmd0aH0sZnVuY3Rpb24odixrKXtyZXR1cm4gazt9KTt9ZnVuY3Rpb24gZ2V0WkluZGV4KGVsKXtpZighZWx8fGVsLm5vZGVUeXBlIT09Tm9kZS5FTEVNRU5UX05PREUpcmV0dXJuIDA7dmFyIGluZGV4PSt3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbCkuZ2V0UHJvcGVydHlWYWx1ZSgnei1pbmRleCcpO2lmKCFpbmRleClyZXR1cm4gZ2V0WkluZGV4KGVsLnBhcmVudE5vZGUpO3JldHVybiBpbmRleDt9dmFyIHRhZ3NUb1JlcGxhY2U9eycmJzonJmFtcDsnLCc8JzonJmx0OycsJz4nOicmZ3Q7J307ZnVuY3Rpb24gZXNjYXBlSFRNTChzdHIpe3JldHVybiBzdHIucmVwbGFjZSgvWyY8Pl0vZyxmdW5jdGlvbih0YWcpe3JldHVybiB0YWdzVG9SZXBsYWNlW3RhZ118fHRhZzt9KTt9ZnVuY3Rpb24gZmlsdGVyT2JqZWN0T25LZXlzKG9iaixrZXlzKXt2YXIgZmlsdGVyZWQ9e307Zm9yKHZhciBpPTA7aTxrZXlzLmxlbmd0aDtpKyspe3ZhciBrZXk9a2V5c1tpXTtpZih0eXBlb2Ygb2JqW2tleV0hPT0ndW5kZWZpbmVkJyl7ZmlsdGVyZWRba2V5XT1vYmpba2V5XTt9fXJldHVybiBmaWx0ZXJlZDt9ZnVuY3Rpb24gY29udmVydFRvVW5pdChzdHIsdW5pdCl7aWYodW5pdD09PXZvaWQgMCl7dW5pdD0ncHgnO31pZihzdHI9PW51bGx8fHN0cj09PScnKXtyZXR1cm4gdW5kZWZpbmVkO31lbHNlIGlmKGlzTmFOKCtzdHIpKXtyZXR1cm4gU3RyaW5nKHN0cik7fWVsc2V7cmV0dXJuIiIrTnVtYmVyKHN0cikrdW5pdDt9fWZ1bmN0aW9uIGtlYmFiQ2FzZShzdHIpe3JldHVybihzdHJ8fCcnKS5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCckMS0kMicpLnRvTG93ZXJDYXNlKCk7fWZ1bmN0aW9uIGlzT2JqZWN0KG9iail7cmV0dXJuIG9iaiE9PW51bGwmJl90eXBlb2Yob2JqKT09PSdvYmplY3QnO30vLyBLZXlib2FyZEV2ZW50LmtleUNvZGUgYWxpYXNlcwp2YXIga2V5Q29kZXM9T2JqZWN0LmZyZWV6ZSh7ZW50ZXI6MTMsdGFiOjksZGVsZXRlOjQ2LGVzYzoyNyxzcGFjZTozMix1cDozOCxkb3duOjQwLGxlZnQ6MzcscmlnaHQ6MzksZW5kOjM1LGhvbWU6MzYsZGVsOjQ2LGJhY2tzcGFjZTo4LGluc2VydDo0NSxwYWdldXA6MzMscGFnZWRvd246MzR9KTsvLyBUaGlzIHJlbWFwcyBpbnRlcm5hbCBuYW1lcyBsaWtlICckY2FuY2VsJyBvciAnJHZ1ZXRpZnkuaWNvbnMuY2FuY2VsJwovLyB0byB0aGUgY3VycmVudCBuYW1lIG9yIGNvbXBvbmVudCBmb3IgdGhhdCBpY29uLgpmdW5jdGlvbiByZW1hcEludGVybmFsSWNvbih2bSxpY29uTmFtZSl7aWYoIWljb25OYW1lLnN0YXJ0c1dpdGgoJyQnKSl7cmV0dXJuIGljb25OYW1lO30vLyBHZXQgdGhlIHRhcmdldCBpY29uIG5hbWUKdmFyIGljb25QYXRoPSIkdnVldGlmeS5pY29ucy52YWx1ZXMuIitpY29uTmFtZS5zcGxpdCgnJCcpLnBvcCgpLnNwbGl0KCcuJykucG9wKCk7Ly8gTm93IGxvb2sgdXAgaWNvbiBpbmRpcmVjdGlvbiBuYW1lLAovLyBlLmcuICckdnVldGlmeS5pY29ucy52YWx1ZXMuY2FuY2VsJwpyZXR1cm4gZ2V0T2JqZWN0VmFsdWVCeVBhdGgodm0saWNvblBhdGgsaWNvbk5hbWUpO31mdW5jdGlvbiBrZXlzKG8pe3JldHVybiBPYmplY3Qua2V5cyhvKTt9LyoqCiAqIENhbWVsaXplIGEgaHlwaGVuLWRlbGltaXRlZCBzdHJpbmcuCiAqL3ZhciBjYW1lbGl6ZVJFPS8tKFx3KS9nO3ZhciBjYW1lbGl6ZT1mdW5jdGlvbiBjYW1lbGl6ZShzdHIpe3JldHVybiBzdHIucmVwbGFjZShjYW1lbGl6ZVJFLGZ1bmN0aW9uKF8sYyl7cmV0dXJuIGM/Yy50b1VwcGVyQ2FzZSgpOicnO30pO307LyoqCiAqIFJldHVybnMgdGhlIHNldCBkaWZmZXJlbmNlIG9mIEIgYW5kIEEsIGkuZS4gdGhlIHNldCBvZiBlbGVtZW50cyBpbiBCIGJ1dCBub3QgaW4gQQogKi9mdW5jdGlvbiBhcnJheURpZmYoYSxiKXt2YXIgZGlmZj1bXTtmb3IodmFyIGk9MDtpPGIubGVuZ3RoO2krKyl7aWYoYS5pbmRleE9mKGJbaV0pPDApZGlmZi5wdXNoKGJbaV0pO31yZXR1cm4gZGlmZjt9LyoqCiAqIE1ha2VzIHRoZSBmaXJzdCBjaGFyYWN0ZXIgb2YgYSBzdHJpbmcgdXBwZXJjYXNlCiAqL2Z1bmN0aW9uIHVwcGVyRmlyc3Qoc3RyKXtyZXR1cm4gc3RyLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK3N0ci5zbGljZSgxKTt9ZnVuY3Rpb24gZ3JvdXBCeVByb3BlcnR5KHhzLGtleSl7cmV0dXJuIHhzLnJlZHVjZShmdW5jdGlvbihydix4KXsocnZbeFtrZXldXT1ydlt4W2tleV1dfHxbXSkucHVzaCh4KTtyZXR1cm4gcnY7fSx7fSk7fWZ1bmN0aW9uIHdyYXBJbkFycmF5KHYpe3JldHVybiB2IT1udWxsP0FycmF5LmlzQXJyYXkodik/djpbdl06W107fWZ1bmN0aW9uIHNvcnRJdGVtcyhpdGVtcyxzb3J0Qnksc29ydERlc2MsbG9jYWxlLGN1c3RvbVNvcnRlcnMpe2lmKHNvcnRCeT09PW51bGx8fCFzb3J0QnkubGVuZ3RoKXJldHVybiBpdGVtczt2YXIgc3RyaW5nQ29sbGF0b3I9bmV3IEludGwuQ29sbGF0b3IobG9jYWxlLHtzZW5zaXRpdml0eTonYWNjZW50Jyx1c2FnZTonc29ydCd9KTtyZXR1cm4gaXRlbXMuc29ydChmdW5jdGlvbihhLGIpe3ZhciBfYSxfYjtmb3IodmFyIGk9MDtpPHNvcnRCeS5sZW5ndGg7aSsrKXt2YXIgc29ydEtleT1zb3J0QnlbaV07dmFyIHNvcnRBPWdldE9iamVjdFZhbHVlQnlQYXRoKGEsc29ydEtleSk7dmFyIHNvcnRCPWdldE9iamVjdFZhbHVlQnlQYXRoKGIsc29ydEtleSk7aWYoc29ydERlc2NbaV0pe19hPV9fcmVhZChbc29ydEIsc29ydEFdLDIpLHNvcnRBPV9hWzBdLHNvcnRCPV9hWzFdO31pZihjdXN0b21Tb3J0ZXJzJiZjdXN0b21Tb3J0ZXJzW3NvcnRLZXldKXt2YXIgY3VzdG9tUmVzdWx0PWN1c3RvbVNvcnRlcnNbc29ydEtleV0oc29ydEEsc29ydEIpO2lmKCFjdXN0b21SZXN1bHQpY29udGludWU7cmV0dXJuIGN1c3RvbVJlc3VsdDt9Ly8gQ2hlY2sgaWYgYm90aCBjYW5ub3QgYmUgZXZhbHVhdGVkCmlmKHNvcnRBPT09bnVsbCYmc29ydEI9PT1udWxsKXtjb250aW51ZTt9X2I9X19yZWFkKFtzb3J0QSxzb3J0Ql0ubWFwKGZ1bmN0aW9uKHMpe3JldHVybihzfHwnJykudG9TdHJpbmcoKS50b0xvY2FsZUxvd2VyQ2FzZSgpO30pLDIpLHNvcnRBPV9iWzBdLHNvcnRCPV9iWzFdO2lmKHNvcnRBIT09c29ydEIpe2lmKCFpc05hTihzb3J0QSkmJiFpc05hTihzb3J0QikpcmV0dXJuIE51bWJlcihzb3J0QSktTnVtYmVyKHNvcnRCKTtyZXR1cm4gc3RyaW5nQ29sbGF0b3IuY29tcGFyZShzb3J0QSxzb3J0Qik7fX1yZXR1cm4gMDt9KTt9ZnVuY3Rpb24gZGVmYXVsdEZpbHRlcih2YWx1ZSxzZWFyY2gsaXRlbSl7cmV0dXJuIHZhbHVlIT1udWxsJiZzZWFyY2ghPW51bGwmJnR5cGVvZiB2YWx1ZSE9PSdib29sZWFuJyYmdmFsdWUudG9TdHJpbmcoKS50b0xvY2FsZUxvd2VyQ2FzZSgpLmluZGV4T2Yoc2VhcmNoLnRvTG9jYWxlTG93ZXJDYXNlKCkpIT09LTE7fWZ1bmN0aW9uIHNlYXJjaEl0ZW1zKGl0ZW1zLHNlYXJjaCl7aWYoIXNlYXJjaClyZXR1cm4gaXRlbXM7c2VhcmNoPXNlYXJjaC50b1N0cmluZygpLnRvTG93ZXJDYXNlKCk7aWYoc2VhcmNoLnRyaW0oKT09PScnKXJldHVybiBpdGVtcztyZXR1cm4gaXRlbXMuZmlsdGVyKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBPYmplY3Qua2V5cyhpdGVtKS5zb21lKGZ1bmN0aW9uKGtleSl7cmV0dXJuIGRlZmF1bHRGaWx0ZXIoZ2V0T2JqZWN0VmFsdWVCeVBhdGgoaXRlbSxrZXkpLHNlYXJjaCxpdGVtKTt9KTt9KTt9LyoqCiAqIFJldHVybnM6CiAqICAtICdub3JtYWwnIGZvciBvbGQgc3R5bGUgc2xvdHMgLSBgPHRlbXBsYXRlIHNsb3Q9ImRlZmF1bHQiPmAKICogIC0gJ3Njb3BlZCcgZm9yIG9sZCBzdHlsZSBzY29wZWQgc2xvdHMgKGA8dGVtcGxhdGUgc2xvdD0iZGVmYXVsdCIgc2xvdC1zY29wZT0iZGF0YSI+YCkgb3IgYm91bmQgdi1zbG90IChgI2RlZmF1bHQ9ImRhdGEiYCkKICogIC0gJ3Ytc2xvdCcgZm9yIHVuYm91bmQgdi1zbG90IChgI2RlZmF1bHRgKSAtIG9ubHkgaWYgdGhlIHRoaXJkIHBhcmFtIGlzIHRydWUsIG90aGVyd2lzZSBjb3VudHMgYXMgc2NvcGVkCiAqL2Z1bmN0aW9uIGdldFNsb3RUeXBlKHZtLG5hbWUsc3BsaXQpe2lmKHZtLiRzbG90c1tuYW1lXSYmdm0uJHNjb3BlZFNsb3RzW25hbWVdJiZ2bS4kc2NvcGVkU2xvdHNbbmFtZV0ubmFtZSl7cmV0dXJuIHNwbGl0Pyd2LXNsb3QnOidzY29wZWQnO31pZih2bS4kc2xvdHNbbmFtZV0pcmV0dXJuJ25vcm1hbCc7aWYodm0uJHNjb3BlZFNsb3RzW25hbWVdKXJldHVybidzY29wZWQnO31mdW5jdGlvbiBkZWJvdW5jZShmbixkZWxheSl7dmFyIHRpbWVvdXRJZD0wO3JldHVybiBmdW5jdGlvbigpe3ZhciBhcmdzPVtdO2Zvcih2YXIgX2k9MDtfaTxhcmd1bWVudHMubGVuZ3RoO19pKyspe2FyZ3NbX2ldPWFyZ3VtZW50c1tfaV07fWNsZWFyVGltZW91dCh0aW1lb3V0SWQpO3RpbWVvdXRJZD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIGZuLmFwcGx5KHZvaWQgMCxfX3NwcmVhZChhcmdzKSk7fSxkZWxheSk7fTt9ZnVuY3Rpb24gZ2V0UHJlZml4ZWRTY29wZWRTbG90cyhwcmVmaXgsc2NvcGVkU2xvdHMpe3JldHVybiBPYmplY3Qua2V5cyhzY29wZWRTbG90cykuZmlsdGVyKGZ1bmN0aW9uKGspe3JldHVybiBrLnN0YXJ0c1dpdGgocHJlZml4KTt9KS5yZWR1Y2UoZnVuY3Rpb24ob2JqLGspe29ialtrLnJlcGxhY2UocHJlZml4LCcnKV09c2NvcGVkU2xvdHNba107cmV0dXJuIG9iajt9LHt9KTt9ZnVuY3Rpb24gZ2V0U2xvdCh2bSxuYW1lLGRhdGEsb3B0aW9uYWwpe2lmKG5hbWU9PT12b2lkIDApe25hbWU9J2RlZmF1bHQnO31pZihvcHRpb25hbD09PXZvaWQgMCl7b3B0aW9uYWw9ZmFsc2U7fWlmKHZtLiRzY29wZWRTbG90c1tuYW1lXSl7cmV0dXJuIHZtLiRzY29wZWRTbG90c1tuYW1lXShkYXRhKTt9ZWxzZSBpZih2bS4kc2xvdHNbbmFtZV0mJighZGF0YXx8b3B0aW9uYWwpKXtyZXR1cm4gdm0uJHNsb3RzW25hbWVdO31yZXR1cm4gdW5kZWZpbmVkO31mdW5jdGlvbiBjbGFtcCh2YWx1ZSxtaW4sbWF4KXtpZihtaW49PT12b2lkIDApe21pbj0wO31pZihtYXg9PT12b2lkIDApe21heD0xO31yZXR1cm4gTWF0aC5tYXgobWluLE1hdGgubWluKG1heCx2YWx1ZSkpO31mdW5jdGlvbiBwYWRFbmQoc3RyLGxlbmd0aCxjaGFyKXtpZihjaGFyPT09dm9pZCAwKXtjaGFyPScwJzt9cmV0dXJuIHN0citjaGFyLnJlcGVhdChNYXRoLm1heCgwLGxlbmd0aC1zdHIubGVuZ3RoKSk7fWZ1bmN0aW9uIGNodW5rKHN0cixzaXplKXtpZihzaXplPT09dm9pZCAwKXtzaXplPTE7fXZhciBjaHVua2VkPVtdO3ZhciBpbmRleD0wO3doaWxlKGluZGV4PHN0ci5sZW5ndGgpe2NodW5rZWQucHVzaChzdHIuc3Vic3RyKGluZGV4LHNpemUpKTtpbmRleCs9c2l6ZTt9cmV0dXJuIGNodW5rZWQ7fWZ1bmN0aW9uIGh1bWFuUmVhZGFibGVGaWxlU2l6ZShieXRlcyxiaW5hcnkpe2lmKGJpbmFyeT09PXZvaWQgMCl7YmluYXJ5PWZhbHNlO312YXIgYmFzZT1iaW5hcnk/MTAyNDoxMDAwO2lmKGJ5dGVzPGJhc2Upe3JldHVybiBieXRlcysiIEIiO312YXIgcHJlZml4PWJpbmFyeT9bJ0tpJywnTWknLCdHaSddOlsnaycsJ00nLCdHJ107dmFyIHVuaXQ9LTE7d2hpbGUoTWF0aC5hYnMoYnl0ZXMpPj1iYXNlJiZ1bml0PHByZWZpeC5sZW5ndGgtMSl7Ynl0ZXMvPWJhc2U7Kyt1bml0O31yZXR1cm4gYnl0ZXMudG9GaXhlZCgxKSsiICIrcHJlZml4W3VuaXRdKyJCIjt9ZnVuY3Rpb24gY2FtZWxpemVPYmplY3RLZXlzKG9iail7aWYoIW9iailyZXR1cm57fTtyZXR1cm4gT2JqZWN0LmtleXMob2JqKS5yZWR1Y2UoZnVuY3Rpb24obyxrZXkpe29bY2FtZWxpemUoa2V5KV09b2JqW2tleV07cmV0dXJuIG87fSx7fSk7fS8qKiovfSwvKioqLyIuL3NyYy91dGlsL21lcmdlRGF0YS50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvdXRpbC9tZXJnZURhdGEudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY1V0aWxNZXJnZURhdGFUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJkZWZhdWx0IixmdW5jdGlvbigpe3JldHVybiBtZXJnZURhdGE7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgX2hlbHBlcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXz1fX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2hlbHBlcnMgKi8iLi9zcmMvdXRpbC9oZWxwZXJzLnRzIik7dmFyIF9fYXNzaWduPXVuZGVmaW5lZCYmdW5kZWZpbmVkLl9fYXNzaWdufHxmdW5jdGlvbigpe19fYXNzaWduPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgcyxpPTEsbj1hcmd1bWVudHMubGVuZ3RoO2k8bjtpKyspe3M9YXJndW1lbnRzW2ldO2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSl0W3BdPXNbcF07fX1yZXR1cm4gdDt9O3JldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7fTt2YXIgX192YWx1ZXM9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX192YWx1ZXN8fGZ1bmN0aW9uKG8pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl0saT0wO2lmKG0pcmV0dXJuIG0uY2FsbChvKTtyZXR1cm57bmV4dDpmdW5jdGlvbiBuZXh0KCl7aWYobyYmaT49by5sZW5ndGgpbz12b2lkIDA7cmV0dXJue3ZhbHVlOm8mJm9baSsrXSxkb25lOiFvfTt9fTt9O3ZhciBfX3JlYWQ9dW5kZWZpbmVkJiZ1bmRlZmluZWQuX19yZWFkfHxmdW5jdGlvbihvLG4pe3ZhciBtPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvW1N5bWJvbC5pdGVyYXRvcl07aWYoIW0pcmV0dXJuIG87dmFyIGk9bS5jYWxsKG8pLHIsYXI9W10sZTt0cnl7d2hpbGUoKG49PT12b2lkIDB8fG4tLT4wKSYmIShyPWkubmV4dCgpKS5kb25lKXthci5wdXNoKHIudmFsdWUpO319Y2F0Y2goZXJyb3Ipe2U9e2Vycm9yOmVycm9yfTt9ZmluYWxseXt0cnl7aWYociYmIXIuZG9uZSYmKG09aVsicmV0dXJuIl0pKW0uY2FsbChpKTt9ZmluYWxseXtpZihlKXRocm93IGUuZXJyb3I7fX1yZXR1cm4gYXI7fTt2YXIgcGF0dGVybj17c3R5bGVMaXN0Oi87KD8hW14oXSpcKSkvZyxzdHlsZVByb3A6LzooLiopL307ZnVuY3Rpb24gcGFyc2VTdHlsZShzdHlsZSl7dmFyIGVfMSxfYTt2YXIgc3R5bGVNYXA9e307dHJ5e2Zvcih2YXIgX2I9X192YWx1ZXMoc3R5bGUuc3BsaXQocGF0dGVybi5zdHlsZUxpc3QpKSxfYz1fYi5uZXh0KCk7IV9jLmRvbmU7X2M9X2IubmV4dCgpKXt2YXIgcz1fYy52YWx1ZTt2YXIgX2Q9X19yZWFkKHMuc3BsaXQocGF0dGVybi5zdHlsZVByb3ApLDIpLGtleT1fZFswXSx2YWw9X2RbMV07a2V5PWtleS50cmltKCk7aWYoIWtleSl7Y29udGludWU7fS8vIE1heSBiZSB1bmRlZmluZWQgaWYgdGhlIGBrZXk6IHZhbHVlYCBwYWlyIGlzIGluY29tcGxldGUuCmlmKHR5cGVvZiB2YWw9PT0nc3RyaW5nJyl7dmFsPXZhbC50cmltKCk7fXN0eWxlTWFwW09iamVjdChfaGVscGVyc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJjYW1lbGl6ZSJdKShrZXkpXT12YWw7fX1jYXRjaChlXzFfMSl7ZV8xPXtlcnJvcjplXzFfMX07fWZpbmFsbHl7dHJ5e2lmKF9jJiYhX2MuZG9uZSYmKF9hPV9iLnJldHVybikpX2EuY2FsbChfYik7fWZpbmFsbHl7aWYoZV8xKXRocm93IGVfMS5lcnJvcjt9fXJldHVybiBzdHlsZU1hcDt9ZnVuY3Rpb24gbWVyZ2VEYXRhKCl7dmFyIGVfMixfYSxlXzMsX2I7dmFyIG1lcmdlVGFyZ2V0PXt9O3ZhciBpPWFyZ3VtZW50cy5sZW5ndGg7dmFyIHByb3A7dmFyIGV2ZW50Oy8vIEFsbG93IGZvciB2YXJpYWRpYyBhcmd1bWVudCBsZW5ndGguCndoaWxlKGktLSl7dHJ5ey8vIEl0ZXJhdGUgdGhyb3VnaCB0aGUgZGF0YSBwcm9wZXJ0aWVzIGFuZCBleGVjdXRlIG1lcmdlIHN0cmF0ZWdpZXMKLy8gT2JqZWN0LmtleXMgZWxpbWluYXRlcyBuZWVkIGZvciBoYXNPd25Qcm9wZXJ0eSBjYWxsCmZvcih2YXIgX2M9KGVfMj12b2lkIDAsX192YWx1ZXMoT2JqZWN0LmtleXMoYXJndW1lbnRzW2ldKSkpLF9kPV9jLm5leHQoKTshX2QuZG9uZTtfZD1fYy5uZXh0KCkpe3Byb3A9X2QudmFsdWU7c3dpdGNoKHByb3Apey8vIEFycmF5IG1lcmdlIHN0cmF0ZWd5IChhcnJheSBjb25jYXRlbmF0aW9uKQpjYXNlJ2NsYXNzJzpjYXNlJ3N0eWxlJzpjYXNlJ2RpcmVjdGl2ZXMnOmlmKCFBcnJheS5pc0FycmF5KG1lcmdlVGFyZ2V0W3Byb3BdKSl7bWVyZ2VUYXJnZXRbcHJvcF09W107fWlmKHByb3A9PT0nc3R5bGUnKXt2YXIgc3R5bGU9dm9pZCAwO2lmKEFycmF5LmlzQXJyYXkoYXJndW1lbnRzW2ldLnN0eWxlKSl7c3R5bGU9YXJndW1lbnRzW2ldLnN0eWxlO31lbHNle3N0eWxlPVthcmd1bWVudHNbaV0uc3R5bGVdO31mb3IodmFyIGo9MDtqPHN0eWxlLmxlbmd0aDtqKyspe3ZhciBzPXN0eWxlW2pdO2lmKHR5cGVvZiBzPT09J3N0cmluZycpe3N0eWxlW2pdPXBhcnNlU3R5bGUocyk7fX1hcmd1bWVudHNbaV0uc3R5bGU9c3R5bGU7fS8vIFJlcGFja2FnaW5nIGluIGFuIGFycmF5IGFsbG93cyBWdWUgcnVudGltZQovLyB0byBtZXJnZSBjbGFzcy9zdHlsZSBiaW5kaW5ncyByZWdhcmRsZXNzIG9mIHR5cGUuCm1lcmdlVGFyZ2V0W3Byb3BdPW1lcmdlVGFyZ2V0W3Byb3BdLmNvbmNhdChhcmd1bWVudHNbaV1bcHJvcF0pO2JyZWFrOy8vIFNwYWNlIGRlbGltaXRlZCBzdHJpbmcgY29uY2F0ZW5hdGlvbiBzdHJhdGVneQpjYXNlJ3N0YXRpY0NsYXNzJzppZighYXJndW1lbnRzW2ldW3Byb3BdKXticmVhazt9aWYobWVyZ2VUYXJnZXRbcHJvcF09PT11bmRlZmluZWQpe21lcmdlVGFyZ2V0W3Byb3BdPScnO31pZihtZXJnZVRhcmdldFtwcm9wXSl7Ly8gTm90IGFuIGVtcHR5IHN0cmluZywgc28gY29uY2F0ZW5hdGUKbWVyZ2VUYXJnZXRbcHJvcF0rPScgJzt9bWVyZ2VUYXJnZXRbcHJvcF0rPWFyZ3VtZW50c1tpXVtwcm9wXS50cmltKCk7YnJlYWs7Ly8gT2JqZWN0LCB0aGUgcHJvcGVydGllcyBvZiB3aGljaCB0byBtZXJnZSB2aWEgYXJyYXkgbWVyZ2Ugc3RyYXRlZ3kgKGFycmF5IGNvbmNhdGVuYXRpb24pLgovLyBDYWxsYmFjayBtZXJnZSBzdHJhdGVneSBtZXJnZXMgY2FsbGJhY2tzIHRvIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGFycmF5LAovLyBzbyB0aGF0IHRoZSBsYXN0IGRlZmluZWQgY2FsbGJhY2sgd2lsbCBiZSBpbnZva2VkIGZpcnN0LgovLyBUaGlzIGlzIGRvbmUgc2luY2UgdG8gbWltaWMgaG93IE9iamVjdC5hc3NpZ24gbWVyZ2luZwovLyB1c2VzIHRoZSBsYXN0IGdpdmVuIHZhbHVlIHRvIGFzc2lnbi4KY2FzZSdvbic6Y2FzZSduYXRpdmVPbic6aWYoIW1lcmdlVGFyZ2V0W3Byb3BdKXttZXJnZVRhcmdldFtwcm9wXT17fTt9dmFyIGxpc3RlbmVycz1tZXJnZVRhcmdldFtwcm9wXTt0cnl7Zm9yKHZhciBfZT0oZV8zPXZvaWQgMCxfX3ZhbHVlcyhPYmplY3Qua2V5cyhhcmd1bWVudHNbaV1bcHJvcF18fHt9KSkpLF9mPV9lLm5leHQoKTshX2YuZG9uZTtfZj1fZS5uZXh0KCkpe2V2ZW50PV9mLnZhbHVlOy8vIENvbmNhdCBmdW5jdGlvbiB0byBhcnJheSBvZiBmdW5jdGlvbnMgaWYgY2FsbGJhY2sgcHJlc2VudC4KaWYobGlzdGVuZXJzW2V2ZW50XSl7Ly8gSW5zZXJ0IGN1cnJlbnQgaXRlcmF0aW9uIGRhdGEgaW4gYmVnaW5uaW5nIG9mIG1lcmdlZCBhcnJheS4KbGlzdGVuZXJzW2V2ZW50XT1BcnJheSgpLmNvbmNhdCgvLyBlc2xpbnQtZGlzYWJsZS1saW5lCmxpc3RlbmVyc1tldmVudF0sYXJndW1lbnRzW2ldW3Byb3BdW2V2ZW50XSk7fWVsc2V7Ly8gU3RyYWlnaHQgYXNzaWduLgpsaXN0ZW5lcnNbZXZlbnRdPWFyZ3VtZW50c1tpXVtwcm9wXVtldmVudF07fX19Y2F0Y2goZV8zXzEpe2VfMz17ZXJyb3I6ZV8zXzF9O31maW5hbGx5e3RyeXtpZihfZiYmIV9mLmRvbmUmJihfYj1fZS5yZXR1cm4pKV9iLmNhbGwoX2UpO31maW5hbGx5e2lmKGVfMyl0aHJvdyBlXzMuZXJyb3I7fX1icmVhazsvLyBPYmplY3QgbWVyZ2Ugc3RyYXRlZ3kKY2FzZSdhdHRycyc6Y2FzZSdwcm9wcyc6Y2FzZSdkb21Qcm9wcyc6Y2FzZSdzY29wZWRTbG90cyc6Y2FzZSdzdGF0aWNTdHlsZSc6Y2FzZSdob29rJzpjYXNlJ3RyYW5zaXRpb24nOmlmKCFtZXJnZVRhcmdldFtwcm9wXSl7bWVyZ2VUYXJnZXRbcHJvcF09e307fW1lcmdlVGFyZ2V0W3Byb3BdPV9fYXNzaWduKHt9LGFyZ3VtZW50c1tpXVtwcm9wXSxtZXJnZVRhcmdldFtwcm9wXSk7YnJlYWs7Ly8gUmVhc3NpZ25tZW50IHN0cmF0ZWd5IChubyBtZXJnZSkKY2FzZSdzbG90JzpjYXNlJ2tleSc6Y2FzZSdyZWYnOmNhc2UndGFnJzpjYXNlJ3Nob3cnOmNhc2Una2VlcEFsaXZlJzpkZWZhdWx0OmlmKCFtZXJnZVRhcmdldFtwcm9wXSl7bWVyZ2VUYXJnZXRbcHJvcF09YXJndW1lbnRzW2ldW3Byb3BdO319fX1jYXRjaChlXzJfMSl7ZV8yPXtlcnJvcjplXzJfMX07fWZpbmFsbHl7dHJ5e2lmKF9kJiYhX2QuZG9uZSYmKF9hPV9jLnJldHVybikpX2EuY2FsbChfYyk7fWZpbmFsbHl7aWYoZV8yKXRocm93IGVfMi5lcnJvcjt9fX1yZXR1cm4gbWVyZ2VUYXJnZXQ7fS8qKiovfSwvKioqLyIuL3NyYy91dGlsL21peGlucy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvdXRpbC9taXhpbnMudHMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY1V0aWxNaXhpbnNUcyhtb2R1bGUsX193ZWJwYWNrX2V4cG9ydHNfXyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7X193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOy8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqL19fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCJkZWZhdWx0IixmdW5jdGlvbigpe3JldHVybiBtaXhpbnM7fSk7LyogaGFybW9ueSBpbXBvcnQgKi92YXIgdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX189X193ZWJwYWNrX3JlcXVpcmVfXygvKiEgdnVlICovInZ1ZSIpOy8qIGhhcm1vbnkgaW1wb3J0ICovdmFyIHZ1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7LyogZXNsaW50LWRpc2FibGUgbWF4LWxlbiwgaW1wb3J0L2V4cG9ydCwgbm8tdXNlLWJlZm9yZS1kZWZpbmUgKi9mdW5jdGlvbiBtaXhpbnMoKXt2YXIgYXJncz1bXTtmb3IodmFyIF9pPTA7X2k8YXJndW1lbnRzLmxlbmd0aDtfaSsrKXthcmdzW19pXT1hcmd1bWVudHNbX2ldO31yZXR1cm4gdnVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdC5hLmV4dGVuZCh7bWl4aW5zOmFyZ3N9KTt9LyoqKi99LC8qKiovIi4vc3JjL3V0aWwvcmVidWlsZEZ1bmN0aW9uYWxTbG90cy50cyI6LyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL3V0aWwvcmVidWlsZEZ1bmN0aW9uYWxTbG90cy50cyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqLyAvKioqL2Z1bmN0aW9uIHNyY1V0aWxSZWJ1aWxkRnVuY3Rpb25hbFNsb3RzVHMobW9kdWxlLF9fd2VicGFja19leHBvcnRzX18sX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsvKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi9fX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywiZGVmYXVsdCIsZnVuY3Rpb24oKXtyZXR1cm4gcmVidWlsZEZ1bmN0aW9uYWxTbG90czt9KTtmdW5jdGlvbiByZWJ1aWxkRnVuY3Rpb25hbFNsb3RzKHNsb3RzLGgpe3ZhciBjaGlsZHJlbj1bXTtmb3IodmFyIHNsb3QgaW4gc2xvdHMpe2lmKHNsb3RzLmhhc093blByb3BlcnR5KHNsb3QpKXtjaGlsZHJlbi5wdXNoKGgoJ3RlbXBsYXRlJyx7c2xvdDpzbG90fSxzbG90c1tzbG90XSkpO319cmV0dXJuIGNoaWxkcmVuO30vKioqL30sLyoqKi8idnVlIjovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIGV4dGVybmFsIHsiY29tbW9uanMiOiJ2dWUiLCJjb21tb25qczIiOiJ2dWUiLCJhbWQiOiJ2dWUiLCJyb290IjoiVnVlIn0gKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovIC8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqLyAvKioqL2Z1bmN0aW9uIHZ1ZShtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9X19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV92dWVfXzsvKioqL30vKioqKioqL30pWyJkZWZhdWx0Il0pO30pOw=="},{"version":3,"sources":["webpack://Vuetify/webpack/universalModuleDefinition","webpack://Vuetify/webpack/bootstrap","webpack://Vuetify/src/components/VAlert/VAlert.sass?1abe","webpack://Vuetify/src/components/VAlert/VAlert.ts","webpack://Vuetify/src/components/VAlert/index.ts","webpack://Vuetify/src/components/VApp/VApp.sass?ebab","webpack://Vuetify/src/components/VApp/VApp.ts","webpack://Vuetify/src/components/VApp/index.ts","webpack://Vuetify/src/components/VAppBar/VAppBar.sass?46dc","webpack://Vuetify/src/components/VAppBar/VAppBar.ts","webpack://Vuetify/src/components/VAppBar/VAppBarNavIcon.ts","webpack://Vuetify/src/components/VAppBar/index.ts","webpack://Vuetify/src/components/VAutocomplete/VAutocomplete.sass?2bfc","webpack://Vuetify/src/components/VAutocomplete/VAutocomplete.ts","webpack://Vuetify/src/components/VAutocomplete/index.ts","webpack://Vuetify/src/components/VAvatar/VAvatar.sass?ea0a","webpack://Vuetify/src/components/VAvatar/VAvatar.ts","webpack://Vuetify/src/components/VAvatar/index.ts","webpack://Vuetify/src/components/VBadge/VBadge.sass?b2e9","webpack://Vuetify/src/components/VBadge/VBadge.ts","webpack://Vuetify/src/components/VBadge/index.ts","webpack://Vuetify/src/components/VBanner/VBanner.sass?b082","webpack://Vuetify/src/components/VBanner/VBanner.ts","webpack://Vuetify/src/components/VBanner/index.ts","webpack://Vuetify/src/components/VBottomNavigation/VBottomNavigation.sass?89d4","webpack://Vuetify/src/components/VBottomNavigation/VBottomNavigation.ts","webpack://Vuetify/src/components/VBottomNavigation/index.ts","webpack://Vuetify/src/components/VBottomSheet/VBottomSheet.sass?2c2f","webpack://Vuetify/src/components/VBottomSheet/VBottomSheet.ts","webpack://Vuetify/src/components/VBottomSheet/index.ts","webpack://Vuetify/src/components/VBreadcrumbs/VBreadcrumbs.sass?5d32","webpack://Vuetify/src/components/VBreadcrumbs/VBreadcrumbs.ts","webpack://Vuetify/src/components/VBreadcrumbs/VBreadcrumbsItem.ts","webpack://Vuetify/src/components/VBreadcrumbs/index.ts","webpack://Vuetify/src/components/VBtn/VBtn.sass?f71c","webpack://Vuetify/src/components/VBtn/VBtn.ts","webpack://Vuetify/src/components/VBtn/index.ts","webpack://Vuetify/src/components/VBtnToggle/VBtnToggle.sass?29d1","webpack://Vuetify/src/components/VBtnToggle/VBtnToggle.ts","webpack://Vuetify/src/components/VBtnToggle/index.ts","webpack://Vuetify/src/components/VCalendar/VCalendar.ts","webpack://Vuetify/src/components/VCalendar/VCalendarDaily.sass?7d60","webpack://Vuetify/src/components/VCalendar/VCalendarDaily.ts","webpack://Vuetify/src/components/VCalendar/VCalendarMonthly.ts","webpack://Vuetify/src/components/VCalendar/VCalendarWeekly.sass?da37","webpack://Vuetify/src/components/VCalendar/VCalendarWeekly.ts","webpack://Vuetify/src/components/VCalendar/index.ts","webpack://Vuetify/src/components/VCalendar/mixins/calendar-base.ts","webpack://Vuetify/src/components/VCalendar/mixins/calendar-with-events.sass?c737","webpack://Vuetify/src/components/VCalendar/mixins/calendar-with-events.ts","webpack://Vuetify/src/components/VCalendar/mixins/calendar-with-intervals.ts","webpack://Vuetify/src/components/VCalendar/mixins/mouse.ts","webpack://Vuetify/src/components/VCalendar/mixins/times.ts","webpack://Vuetify/src/components/VCalendar/util/events.ts","webpack://Vuetify/src/components/VCalendar/util/props.ts","webpack://Vuetify/src/components/VCalendar/util/timestamp.ts","webpack://Vuetify/src/components/VCard/VCard.sass?432c","webpack://Vuetify/src/components/VCard/VCard.ts","webpack://Vuetify/src/components/VCard/index.ts","webpack://Vuetify/src/components/VCarousel/VCarousel.sass?cf6b","webpack://Vuetify/src/components/VCarousel/VCarousel.ts","webpack://Vuetify/src/components/VCarousel/VCarouselItem.ts","webpack://Vuetify/src/components/VCarousel/index.ts","webpack://Vuetify/src/components/VCheckbox/VCheckbox.sass?579c","webpack://Vuetify/src/components/VCheckbox/VCheckbox.ts","webpack://Vuetify/src/components/VCheckbox/VSimpleCheckbox.sass?f313","webpack://Vuetify/src/components/VCheckbox/VSimpleCheckbox.ts","webpack://Vuetify/src/components/VCheckbox/index.ts","webpack://Vuetify/src/components/VChip/VChip.sass?d9b1","webpack://Vuetify/src/components/VChip/VChip.ts","webpack://Vuetify/src/components/VChip/index.ts","webpack://Vuetify/src/components/VChipGroup/VChipGroup.sass?9200","webpack://Vuetify/src/components/VChipGroup/VChipGroup.ts","webpack://Vuetify/src/components/VChipGroup/index.ts","webpack://Vuetify/src/components/VColorPicker/VColorPicker.sass?3828","webpack://Vuetify/src/components/VColorPicker/VColorPicker.ts","webpack://Vuetify/src/components/VColorPicker/VColorPickerCanvas.sass?7afe","webpack://Vuetify/src/components/VColorPicker/VColorPickerCanvas.ts","webpack://Vuetify/src/components/VColorPicker/VColorPickerEdit.sass?0cc1","webpack://Vuetify/src/components/VColorPicker/VColorPickerEdit.ts","webpack://Vuetify/src/components/VColorPicker/VColorPickerPreview.sass?7c72","webpack://Vuetify/src/components/VColorPicker/VColorPickerPreview.ts","webpack://Vuetify/src/components/VColorPicker/VColorPickerSwatches.sass?b86e","webpack://Vuetify/src/components/VColorPicker/VColorPickerSwatches.ts","webpack://Vuetify/src/components/VColorPicker/index.ts","webpack://Vuetify/src/components/VColorPicker/util/index.ts","webpack://Vuetify/src/components/VCombobox/VCombobox.ts","webpack://Vuetify/src/components/VCombobox/index.ts","webpack://Vuetify/src/components/VContent/VContent.sass?21b9","webpack://Vuetify/src/components/VContent/VContent.ts","webpack://Vuetify/src/components/VContent/index.ts","webpack://Vuetify/src/components/VCounter/VCounter.sass?9935","webpack://Vuetify/src/components/VCounter/VCounter.ts","webpack://Vuetify/src/components/VCounter/index.ts","webpack://Vuetify/src/components/VData/VData.ts","webpack://Vuetify/src/components/VData/index.ts","webpack://Vuetify/src/components/VDataIterator/VDataFooter.sass?f251","webpack://Vuetify/src/components/VDataIterator/VDataFooter.ts","webpack://Vuetify/src/components/VDataIterator/VDataIterator.ts","webpack://Vuetify/src/components/VDataIterator/index.ts","webpack://Vuetify/src/components/VDataTable/MobileRow.ts","webpack://Vuetify/src/components/VDataTable/Row.ts","webpack://Vuetify/src/components/VDataTable/RowGroup.ts","webpack://Vuetify/src/components/VDataTable/VDataTable.sass?2658","webpack://Vuetify/src/components/VDataTable/VDataTable.ts","webpack://Vuetify/src/components/VDataTable/VDataTableHeader.sass?8802","webpack://Vuetify/src/components/VDataTable/VDataTableHeader.ts","webpack://Vuetify/src/components/VDataTable/VDataTableHeaderDesktop.ts","webpack://Vuetify/src/components/VDataTable/VDataTableHeaderMobile.ts","webpack://Vuetify/src/components/VDataTable/VEditDialog.sass?279b","webpack://Vuetify/src/components/VDataTable/VEditDialog.ts","webpack://Vuetify/src/components/VDataTable/VSimpleTable.sass?ad92","webpack://Vuetify/src/components/VDataTable/VSimpleTable.ts","webpack://Vuetify/src/components/VDataTable/VVirtualTable.sass?01d1","webpack://Vuetify/src/components/VDataTable/VVirtualTable.ts","webpack://Vuetify/src/components/VDataTable/index.ts","webpack://Vuetify/src/components/VDataTable/mixins/header.ts","webpack://Vuetify/src/components/VDatePicker/VDatePicker.ts","webpack://Vuetify/src/components/VDatePicker/VDatePickerDateTable.ts","webpack://Vuetify/src/components/VDatePicker/VDatePickerHeader.sass?9d27","webpack://Vuetify/src/components/VDatePicker/VDatePickerHeader.ts","webpack://Vuetify/src/components/VDatePicker/VDatePickerMonthTable.ts","webpack://Vuetify/src/components/VDatePicker/VDatePickerTable.sass?616a","webpack://Vuetify/src/components/VDatePicker/VDatePickerTitle.ts","webpack://Vuetify/src/components/VDatePicker/VDatePickerYears.sass?226a","webpack://Vuetify/src/components/VDatePicker/VDatePickerYears.ts","webpack://Vuetify/src/components/VDatePicker/index.ts","webpack://Vuetify/src/components/VDatePicker/mixins/date-picker-table.ts","webpack://Vuetify/src/components/VDatePicker/util/createNativeLocaleFormatter.ts","webpack://Vuetify/src/components/VDatePicker/util/index.ts","webpack://Vuetify/src/components/VDatePicker/util/isDateAllowed.ts","webpack://Vuetify/src/components/VDatePicker/util/monthChange.ts","webpack://Vuetify/src/components/VDatePicker/util/pad.ts","webpack://Vuetify/src/components/VDialog/VDialog.sass?1c32","webpack://Vuetify/src/components/VDialog/VDialog.ts","webpack://Vuetify/src/components/VDialog/index.ts","webpack://Vuetify/src/components/VDivider/VDivider.sass?a4bd","webpack://Vuetify/src/components/VDivider/VDivider.ts","webpack://Vuetify/src/components/VDivider/index.ts","webpack://Vuetify/src/components/VExpansionPanel/VExpansionPanel.sass?9695","webpack://Vuetify/src/components/VExpansionPanel/VExpansionPanel.ts","webpack://Vuetify/src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack://Vuetify/src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack://Vuetify/src/components/VExpansionPanel/VExpansionPanels.ts","webpack://Vuetify/src/components/VExpansionPanel/index.ts","webpack://Vuetify/src/components/VFileInput/VFileInput.sass?b874","webpack://Vuetify/src/components/VFileInput/VFileInput.ts","webpack://Vuetify/src/components/VFileInput/index.ts","webpack://Vuetify/src/components/VFooter/VFooter.sass?3308","webpack://Vuetify/src/components/VFooter/VFooter.ts","webpack://Vuetify/src/components/VFooter/index.ts","webpack://Vuetify/src/components/VForm/VForm.ts","webpack://Vuetify/src/components/VForm/index.ts","webpack://Vuetify/src/components/VGrid/VCol.ts","webpack://Vuetify/src/components/VGrid/VContainer.ts","webpack://Vuetify/src/components/VGrid/VFlex.ts","webpack://Vuetify/src/components/VGrid/VGrid.sass?7fb7","webpack://Vuetify/src/components/VGrid/VLayout.ts","webpack://Vuetify/src/components/VGrid/VRow.ts","webpack://Vuetify/src/components/VGrid/VSpacer.ts","webpack://Vuetify/src/components/VGrid/_grid.sass?9102","webpack://Vuetify/src/components/VGrid/grid.ts","webpack://Vuetify/src/components/VGrid/index.ts","webpack://Vuetify/src/components/VHover/VHover.ts","webpack://Vuetify/src/components/VHover/index.ts","webpack://Vuetify/src/components/VIcon/VIcon.sass?2565","webpack://Vuetify/src/components/VIcon/VIcon.ts","webpack://Vuetify/src/components/VIcon/index.ts","webpack://Vuetify/src/components/VImg/VImg.sass?a7f2","webpack://Vuetify/src/components/VImg/VImg.ts","webpack://Vuetify/src/components/VImg/index.ts","webpack://Vuetify/src/components/VInput/VInput.sass?fbfa","webpack://Vuetify/src/components/VInput/VInput.ts","webpack://Vuetify/src/components/VInput/index.ts","webpack://Vuetify/src/components/VItemGroup/VItem.ts","webpack://Vuetify/src/components/VItemGroup/VItemGroup.sass?1d04","webpack://Vuetify/src/components/VItemGroup/VItemGroup.ts","webpack://Vuetify/src/components/VItemGroup/index.ts","webpack://Vuetify/src/components/VLabel/VLabel.sass?f309","webpack://Vuetify/src/components/VLabel/VLabel.ts","webpack://Vuetify/src/components/VLabel/index.ts","webpack://Vuetify/src/components/VLazy/VLazy.ts","webpack://Vuetify/src/components/VLazy/index.ts","webpack://Vuetify/src/components/VList/VList.sass?a8fa","webpack://Vuetify/src/components/VList/VList.ts","webpack://Vuetify/src/components/VList/VListGroup.sass?381c","webpack://Vuetify/src/components/VList/VListGroup.ts","webpack://Vuetify/src/components/VList/VListItem.sass?1844","webpack://Vuetify/src/components/VList/VListItem.ts","webpack://Vuetify/src/components/VList/VListItemAction.ts","webpack://Vuetify/src/components/VList/VListItemAvatar.ts","webpack://Vuetify/src/components/VList/VListItemGroup.sass?9b35","webpack://Vuetify/src/components/VList/VListItemGroup.ts","webpack://Vuetify/src/components/VList/VListItemIcon.ts","webpack://Vuetify/src/components/VList/index.ts","webpack://Vuetify/src/components/VMenu/VMenu.sass?4838","webpack://Vuetify/src/components/VMenu/VMenu.ts","webpack://Vuetify/src/components/VMenu/index.ts","webpack://Vuetify/src/components/VMessages/VMessages.sass?47ac","webpack://Vuetify/src/components/VMessages/VMessages.ts","webpack://Vuetify/src/components/VMessages/index.ts","webpack://Vuetify/src/components/VNavigationDrawer/VNavigationDrawer.sass?f268","webpack://Vuetify/src/components/VNavigationDrawer/VNavigationDrawer.ts","webpack://Vuetify/src/components/VNavigationDrawer/index.ts","webpack://Vuetify/src/components/VOverflowBtn/VOverflowBtn.sass?c13f","webpack://Vuetify/src/components/VOverflowBtn/VOverflowBtn.ts","webpack://Vuetify/src/components/VOverflowBtn/index.ts","webpack://Vuetify/src/components/VOverlay/VOverlay.sass?9a01","webpack://Vuetify/src/components/VOverlay/VOverlay.ts","webpack://Vuetify/src/components/VOverlay/index.ts","webpack://Vuetify/src/components/VPagination/VPagination.sass?e0ea","webpack://Vuetify/src/components/VPagination/VPagination.ts","webpack://Vuetify/src/components/VPagination/index.ts","webpack://Vuetify/src/components/VParallax/VParallax.sass?90f5","webpack://Vuetify/src/components/VParallax/VParallax.ts","webpack://Vuetify/src/components/VParallax/index.ts","webpack://Vuetify/src/components/VPicker/VPicker.sass?c65f","webpack://Vuetify/src/components/VPicker/VPicker.ts","webpack://Vuetify/src/components/VPicker/index.ts","webpack://Vuetify/src/components/VProgressCircular/VProgressCircular.sass?fce7","webpack://Vuetify/src/components/VProgressCircular/VProgressCircular.ts","webpack://Vuetify/src/components/VProgressCircular/index.ts","webpack://Vuetify/src/components/VProgressLinear/VProgressLinear.sass?84fa","webpack://Vuetify/src/components/VProgressLinear/VProgressLinear.ts","webpack://Vuetify/src/components/VProgressLinear/index.ts","webpack://Vuetify/src/components/VRadioGroup/VRadio.sass?80a6","webpack://Vuetify/src/components/VRadioGroup/VRadio.ts","webpack://Vuetify/src/components/VRadioGroup/VRadioGroup.sass?07fe","webpack://Vuetify/src/components/VRadioGroup/VRadioGroup.ts","webpack://Vuetify/src/components/VRadioGroup/index.ts","webpack://Vuetify/src/components/VRangeSlider/VRangeSlider.sass?cd33","webpack://Vuetify/src/components/VRangeSlider/VRangeSlider.ts","webpack://Vuetify/src/components/VRangeSlider/index.ts","webpack://Vuetify/src/components/VRating/VRating.sass?4cc0","webpack://Vuetify/src/components/VRating/VRating.ts","webpack://Vuetify/src/components/VRating/index.ts","webpack://Vuetify/src/components/VResponsive/VResponsive.sass?7743","webpack://Vuetify/src/components/VResponsive/VResponsive.ts","webpack://Vuetify/src/components/VResponsive/index.ts","webpack://Vuetify/src/components/VSelect/VSelect.sass?c2cc","webpack://Vuetify/src/components/VSelect/VSelect.ts","webpack://Vuetify/src/components/VSelect/VSelectList.ts","webpack://Vuetify/src/components/VSelect/index.ts","webpack://Vuetify/src/components/VSheet/VSheet.sass?c75d","webpack://Vuetify/src/components/VSheet/VSheet.ts","webpack://Vuetify/src/components/VSheet/index.ts","webpack://Vuetify/src/components/VSkeletonLoader/VSkeletonLoader.sass?114f","webpack://Vuetify/src/components/VSkeletonLoader/VSkeletonLoader.ts","webpack://Vuetify/src/components/VSkeletonLoader/index.ts","webpack://Vuetify/src/components/VSlideGroup/VSlideGroup.sass?bca3","webpack://Vuetify/src/components/VSlideGroup/VSlideGroup.ts","webpack://Vuetify/src/components/VSlideGroup/VSlideItem.ts","webpack://Vuetify/src/components/VSlideGroup/index.ts","webpack://Vuetify/src/components/VSlider/VSlider.sass?4461","webpack://Vuetify/src/components/VSlider/VSlider.ts","webpack://Vuetify/src/components/VSlider/index.ts","webpack://Vuetify/src/components/VSnackbar/VSnackbar.sass?5a12","webpack://Vuetify/src/components/VSnackbar/VSnackbar.ts","webpack://Vuetify/src/components/VSnackbar/index.ts","webpack://Vuetify/src/components/VSparkline/VSparkline.sass?5569","webpack://Vuetify/src/components/VSparkline/VSparkline.ts","webpack://Vuetify/src/components/VSparkline/helpers/core.ts","webpack://Vuetify/src/components/VSparkline/helpers/math.ts","webpack://Vuetify/src/components/VSparkline/helpers/path.ts","webpack://Vuetify/src/components/VSparkline/index.ts","webpack://Vuetify/src/components/VSpeedDial/VSpeedDial.sass?c0fe","webpack://Vuetify/src/components/VSpeedDial/VSpeedDial.ts","webpack://Vuetify/src/components/VSpeedDial/index.ts","webpack://Vuetify/src/components/VStepper/VStepper.sass?0570","webpack://Vuetify/src/components/VStepper/VStepper.ts","webpack://Vuetify/src/components/VStepper/VStepperContent.ts","webpack://Vuetify/src/components/VStepper/VStepperStep.ts","webpack://Vuetify/src/components/VStepper/index.ts","webpack://Vuetify/src/components/VSubheader/VSubheader.sass?9e88","webpack://Vuetify/src/components/VSubheader/VSubheader.ts","webpack://Vuetify/src/components/VSubheader/index.ts","webpack://Vuetify/src/components/VSwitch/VSwitch.sass?0077","webpack://Vuetify/src/components/VSwitch/VSwitch.ts","webpack://Vuetify/src/components/VSwitch/index.ts","webpack://Vuetify/src/components/VSystemBar/VSystemBar.sass?2165","webpack://Vuetify/src/components/VSystemBar/VSystemBar.ts","webpack://Vuetify/src/components/VSystemBar/index.ts","webpack://Vuetify/src/components/VTabs/VTab.ts","webpack://Vuetify/src/components/VTabs/VTabItem.ts","webpack://Vuetify/src/components/VTabs/VTabs.sass?ce2f","webpack://Vuetify/src/components/VTabs/VTabs.ts","webpack://Vuetify/src/components/VTabs/VTabsBar.ts","webpack://Vuetify/src/components/VTabs/VTabsItems.ts","webpack://Vuetify/src/components/VTabs/VTabsSlider.ts","webpack://Vuetify/src/components/VTabs/index.ts","webpack://Vuetify/src/components/VTextField/VTextField.sass?54b8","webpack://Vuetify/src/components/VTextField/VTextField.ts","webpack://Vuetify/src/components/VTextField/index.ts","webpack://Vuetify/src/components/VTextarea/VTextarea.sass?349b","webpack://Vuetify/src/components/VTextarea/VTextarea.ts","webpack://Vuetify/src/components/VTextarea/index.ts","webpack://Vuetify/src/components/VTimePicker/VTimePicker.ts","webpack://Vuetify/src/components/VTimePicker/VTimePickerClock.sass?174d","webpack://Vuetify/src/components/VTimePicker/VTimePickerClock.ts","webpack://Vuetify/src/components/VTimePicker/VTimePickerTitle.sass?32d0","webpack://Vuetify/src/components/VTimePicker/VTimePickerTitle.ts","webpack://Vuetify/src/components/VTimePicker/index.ts","webpack://Vuetify/src/components/VTimeline/VTimeline.sass?d932","webpack://Vuetify/src/components/VTimeline/VTimeline.ts","webpack://Vuetify/src/components/VTimeline/VTimelineItem.ts","webpack://Vuetify/src/components/VTimeline/index.ts","webpack://Vuetify/src/components/VToolbar/VToolbar.sass?04ff","webpack://Vuetify/src/components/VToolbar/VToolbar.ts","webpack://Vuetify/src/components/VToolbar/index.ts","webpack://Vuetify/src/components/VTooltip/VTooltip.sass?896f","webpack://Vuetify/src/components/VTooltip/VTooltip.ts","webpack://Vuetify/src/components/VTooltip/index.ts","webpack://Vuetify/src/components/VTreeview/VTreeview.sass?35d4","webpack://Vuetify/src/components/VTreeview/VTreeview.ts","webpack://Vuetify/src/components/VTreeview/VTreeviewNode.ts","webpack://Vuetify/src/components/VTreeview/index.ts","webpack://Vuetify/src/components/VTreeview/util/filterTreeItems.ts","webpack://Vuetify/src/components/VWindow/VWindow.sass?4cce","webpack://Vuetify/src/components/VWindow/VWindow.ts","webpack://Vuetify/src/components/VWindow/VWindowItem.ts","webpack://Vuetify/src/components/VWindow/index.ts","webpack://Vuetify/src/components/index.ts","webpack://Vuetify/src/components/transitions/expand-transition.ts","webpack://Vuetify/src/components/transitions/index.ts","webpack://Vuetify/src/directives/click-outside/index.ts","webpack://Vuetify/src/directives/index.ts","webpack://Vuetify/src/directives/intersect/index.ts","webpack://Vuetify/src/directives/mutate/index.ts","webpack://Vuetify/src/directives/resize/index.ts","webpack://Vuetify/src/directives/ripple/VRipple.sass?4e9f","webpack://Vuetify/src/directives/ripple/index.ts","webpack://Vuetify/src/directives/scroll/index.ts","webpack://Vuetify/src/directives/touch/index.ts","webpack://Vuetify/src/framework.ts","webpack://Vuetify/src/index.ts","webpack://Vuetify/src/install.ts","webpack://Vuetify/src/locale/en.ts","webpack://Vuetify/src/mixins/activatable/index.ts","webpack://Vuetify/src/mixins/applicationable/index.ts","webpack://Vuetify/src/mixins/binds-attrs/index.ts","webpack://Vuetify/src/mixins/bootable/index.ts","webpack://Vuetify/src/mixins/button-group/index.ts","webpack://Vuetify/src/mixins/colorable/index.ts","webpack://Vuetify/src/mixins/comparable/index.ts","webpack://Vuetify/src/mixins/delayable/index.ts","webpack://Vuetify/src/mixins/dependent/index.ts","webpack://Vuetify/src/mixins/detachable/index.ts","webpack://Vuetify/src/mixins/elevatable/index.ts","webpack://Vuetify/src/mixins/filterable/index.ts","webpack://Vuetify/src/mixins/groupable/index.ts","webpack://Vuetify/src/mixins/loadable/index.ts","webpack://Vuetify/src/mixins/localable/index.ts","webpack://Vuetify/src/mixins/measurable/index.ts","webpack://Vuetify/src/mixins/menuable/index.ts","webpack://Vuetify/src/mixins/overlayable/index.ts","webpack://Vuetify/src/mixins/picker-button/index.ts","webpack://Vuetify/src/mixins/picker/index.ts","webpack://Vuetify/src/mixins/positionable/index.ts","webpack://Vuetify/src/mixins/proxyable/index.ts","webpack://Vuetify/src/mixins/registrable/index.ts","webpack://Vuetify/src/mixins/returnable/index.ts","webpack://Vuetify/src/mixins/rippleable/index.ts","webpack://Vuetify/src/mixins/routable/index.ts","webpack://Vuetify/src/mixins/scrollable/index.ts","webpack://Vuetify/src/mixins/selectable/index.ts","webpack://Vuetify/src/mixins/sizeable/index.ts","webpack://Vuetify/src/mixins/ssr-bootable/index.ts","webpack://Vuetify/src/mixins/stackable/index.ts","webpack://Vuetify/src/mixins/themeable/index.ts","webpack://Vuetify/src/mixins/toggleable/index.ts","webpack://Vuetify/src/mixins/transitionable/index.ts","webpack://Vuetify/src/mixins/translatable/index.ts","webpack://Vuetify/src/mixins/validatable/index.ts","webpack://Vuetify/src/services/application/index.ts","webpack://Vuetify/src/services/breakpoint/index.ts","webpack://Vuetify/src/services/goto/easing-patterns.ts","webpack://Vuetify/src/services/goto/index.ts","webpack://Vuetify/src/services/goto/util.ts","webpack://Vuetify/src/services/icons/index.ts","webpack://Vuetify/src/services/icons/presets/fa.ts","webpack://Vuetify/src/services/icons/presets/fa4.ts","webpack://Vuetify/src/services/icons/presets/index.ts","webpack://Vuetify/src/services/icons/presets/md.ts","webpack://Vuetify/src/services/icons/presets/mdi-svg.ts","webpack://Vuetify/src/services/icons/presets/mdi.ts","webpack://Vuetify/src/services/index.ts","webpack://Vuetify/src/services/lang/index.ts","webpack://Vuetify/src/services/service/index.ts","webpack://Vuetify/src/services/theme/index.ts","webpack://Vuetify/src/services/theme/utils.ts","webpack://Vuetify/src/styles/components/_selection-controls.sass?c5b7","webpack://Vuetify/src/util/ThemeProvider.ts","webpack://Vuetify/src/util/color/transformCIELAB.ts","webpack://Vuetify/src/util/color/transformSRGB.ts","webpack://Vuetify/src/util/colorUtils.ts","webpack://Vuetify/src/util/colors.ts","webpack://Vuetify/src/util/console.ts","webpack://Vuetify/src/util/dedupeModelListeners.ts","webpack://Vuetify/src/util/helpers.ts","webpack://Vuetify/src/util/mergeData.ts","webpack://Vuetify/src/util/mixins.ts","webpack://Vuetify/src/util/rebuildFunctionalSlots.ts","webpack:/Vuetify/external {\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"amd\":\"vue\",\"root\":\"Vue\"}"],"names":[],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"vue\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vuetify\"] = factory(require(\"vue\"));\n\telse\n\t\troot[\"Vuetify\"] = factory(root[\"Vue\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_vue__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VAlert.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\nimport Transitionable from '../../mixins/transitionable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNodeData } from 'vue'\nimport { VNode } from 'vue/types'\n\n/* @vue/component */\nexport default mixins(\n  VSheet,\n  Toggleable,\n  Transitionable\n).extend({\n  name: 'v-alert',\n\n  props: {\n    border: {\n      type: String,\n      validator (val: string) {\n        return [\n          'top',\n          'right',\n          'bottom',\n          'left',\n        ].includes(val)\n      },\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    coloredBorder: Boolean,\n    dense: Boolean,\n    dismissible: Boolean,\n    icon: {\n      default: '',\n      type: [Boolean, String],\n      validator (val: boolean | string) {\n        return typeof val === 'string' || val === false\n      },\n    },\n    outlined: Boolean,\n    prominent: Boolean,\n    text: Boolean,\n    type: {\n      type: String,\n      validator (val: string) {\n        return [\n          'info',\n          'error',\n          'success',\n          'warning',\n        ].includes(val)\n      },\n    },\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  computed: {\n    __cachedBorder (): VNode | null {\n      if (!this.border) return null\n\n      let data: VNodeData = {\n        staticClass: 'v-alert__border',\n        class: {\n          [`v-alert__border--${this.border}`]: true,\n        },\n      }\n\n      if (this.coloredBorder) {\n        data = this.setBackgroundColor(this.computedColor, data)\n        data.class['v-alert__border--has-color'] = true\n      }\n\n      return this.$createElement('div', data)\n    },\n    __cachedDismissible (): VNode | null {\n      if (!this.dismissible) return null\n\n      const color = this.iconColor\n\n      return this.$createElement(VBtn, {\n        staticClass: 'v-alert__dismissible',\n        props: {\n          color,\n          icon: true,\n          small: true,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: () => (this.isActive = false),\n        },\n      }, [\n        this.$createElement(VIcon, {\n          props: { color },\n        }, '$cancel'),\n      ])\n    },\n    __cachedIcon (): VNode | null {\n      if (!this.computedIcon) return null\n\n      return this.$createElement(VIcon, {\n        staticClass: 'v-alert__icon',\n        props: { color: this.iconColor },\n      }, this.computedIcon)\n    },\n    classes (): object {\n      const classes: Record<string, boolean> = {\n        ...VSheet.options.computed.classes.call(this),\n        'v-alert--border': Boolean(this.border),\n        'v-alert--dense': this.dense,\n        'v-alert--outlined': this.outlined,\n        'v-alert--prominent': this.prominent,\n        'v-alert--text': this.text,\n      }\n\n      if (this.border) {\n        classes[`v-alert--border-${this.border}`] = true\n      }\n\n      return classes\n    },\n    computedColor (): string {\n      return this.color || this.type\n    },\n    computedIcon (): string | boolean {\n      if (this.icon === false) return false\n      if (typeof this.icon === 'string' && this.icon) return this.icon\n      if (!['error', 'info', 'success', 'warning'].includes(this.type)) return false\n\n      return `$${this.type}`\n    },\n    hasColoredIcon (): boolean {\n      return (\n        this.hasText ||\n        (Boolean(this.border) && this.coloredBorder)\n      )\n    },\n    hasText (): boolean {\n      return this.text || this.outlined\n    },\n    iconColor (): string | undefined {\n      return this.hasColoredIcon ? this.computedColor : undefined\n    },\n    isDark (): boolean {\n      if (\n        this.type &&\n        !this.coloredBorder &&\n        !this.outlined\n      ) return true\n\n      return Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('outline')) {\n      breaking('outline', 'outlined', this)\n    }\n  },\n\n  methods: {\n    genWrapper (): VNode {\n      const children = [\n        this.$slots.prepend || this.__cachedIcon,\n        this.genContent(),\n        this.__cachedBorder,\n        this.$slots.append,\n        this.$scopedSlots.close\n          ? this.$scopedSlots.close({ toggle: this.toggle })\n          : this.__cachedDismissible,\n      ]\n\n      const data: VNodeData = {\n        staticClass: 'v-alert__wrapper',\n      }\n\n      return this.$createElement('div', data, children)\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-alert__content',\n      }, this.$slots.default)\n    },\n    genAlert (): VNode {\n      let data: VNodeData = {\n        staticClass: 'v-alert',\n        attrs: {\n          role: 'alert',\n        },\n        class: this.classes,\n        style: this.styles,\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }\n\n      if (!this.coloredBorder) {\n        const setColor = this.hasText ? this.setTextColor : this.setBackgroundColor\n        data = setColor(this.computedColor, data)\n      }\n\n      return this.$createElement('div', data, [this.genWrapper()])\n    },\n    /** @public */\n    toggle () {\n      this.isActive = !this.isActive\n    },\n  },\n\n  render (h): VNode {\n    const render = this.genAlert()\n\n    if (!this.transition) return render\n\n    return h('transition', {\n      props: {\n        name: this.transition,\n        origin: this.origin,\n        mode: this.mode,\n      },\n    }, [render])\n  },\n})\n","import VAlert from './VAlert'\n\nexport { VAlert }\nexport default VAlert\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VApp.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  Themeable\n).extend({\n  name: 'v-app',\n\n  props: {\n    dark: {\n      type: Boolean,\n      default: undefined,\n    },\n    id: {\n      type: String,\n      default: 'app',\n    },\n    light: {\n      type: Boolean,\n      default: undefined,\n    },\n  },\n\n  computed: {\n    isDark (): boolean {\n      return this.$vuetify.theme.dark\n    },\n  },\n\n  beforeCreate () {\n    if (!this.$vuetify || (this.$vuetify === this.$root as any)) {\n      throw new Error('Vuetify is not properly initialized, see https://vuetifyjs.com/getting-started/quick-start#bootstrapping-the-vuetify-object')\n    }\n  },\n\n  render (h) {\n    const wrapper = h('div', { staticClass: 'v-application--wrap' }, this.$slots.default)\n\n    return h('div', {\n      staticClass: 'v-application',\n      class: {\n        'v-application--is-rtl': this.$vuetify.rtl,\n        'v-application--is-ltr': !this.$vuetify.rtl,\n        ...this.themeClasses,\n      },\n      attrs: { 'data-app': true },\n      domProps: { id: this.id },\n    }, [wrapper])\n  },\n})\n","import VApp from './VApp'\n\nexport { VApp }\nexport default VApp\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VAppBar.sass'\n\n// Extensions\nimport VToolbar from '../VToolbar/VToolbar'\n\n// Directives\nimport Scroll from '../../directives/scroll'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Scrollable from '../../mixins/scrollable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  VToolbar,\n  Scrollable,\n  SSRBootable,\n  Toggleable,\n  Applicationable('top', [\n    'clippedLeft',\n    'clippedRight',\n    'computedHeight',\n    'invertedScroll',\n    'isExtended',\n    'isProminent',\n    'value',\n  ])\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n\n  directives: { Scroll },\n\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data () {\n    return {\n      isActive: this.value,\n    }\n  },\n\n  computed: {\n    applicationProperty (): string {\n      return !this.bottom ? 'top' : 'bottom'\n    },\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.invertedScroll ||\n          this.elevateOnScroll ||\n          this.hideOnScroll ||\n          this.collapseOnScroll ||\n          this.isBooted ||\n          // If falsey, user has provided an\n          // explicit value which should\n          // overwrite anything we do\n          !this.value\n        )\n      )\n    },\n    classes (): object {\n      return {\n        ...VToolbar.options.computed.classes.call(this),\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll,\n      }\n    },\n    computedContentHeight (): number {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this)\n\n      const height = this.computedOriginalHeight\n\n      const min = this.dense ? 48 : 56\n      const max = height\n      const difference = max - min\n      const iteration = difference / this.computedScrollThreshold\n      const offset = this.currentScroll * iteration\n\n      return Math.max(min, max - offset)\n    },\n    computedFontSize (): number | undefined {\n      if (!this.isProminent) return undefined\n\n      const max = this.dense ? 96 : 128\n      const difference = max - this.computedContentHeight\n      const increment = 0.00347\n\n      // 1.5rem to a minimum of 1.25rem\n      return Number((1.50 - difference * increment).toFixed(2))\n    },\n    computedLeft (): number {\n      if (!this.app || this.clippedLeft) return 0\n\n      return this.$vuetify.application.left\n    },\n    computedMarginTop (): number {\n      if (!this.app) return 0\n\n      return this.$vuetify.application.bar\n    },\n    computedOpacity (): number | undefined {\n      if (!this.fadeImgOnScroll) return undefined\n\n      const opacity = Math.max(\n        (this.computedScrollThreshold - this.currentScroll) / this.computedScrollThreshold,\n        0\n      )\n\n      return Number(parseFloat(opacity).toFixed(2))\n    },\n    computedOriginalHeight (): number {\n      let height = VToolbar.options.computed.computedContentHeight.call(this)\n      if (this.isExtended) height += parseInt(this.extensionHeight)\n      return height\n    },\n    computedRight (): number {\n      if (!this.app || this.clippedRight) return 0\n\n      return this.$vuetify.application.right\n    },\n    computedScrollThreshold (): number {\n      if (this.scrollThreshold) return Number(this.scrollThreshold)\n\n      return this.computedOriginalHeight - (this.dense ? 48 : 56)\n    },\n    computedTransform (): number {\n      if (\n        !this.canScroll ||\n        (this.elevateOnScroll && this.currentScroll === 0 && this.isActive)\n      ) return 0\n\n      if (this.isActive) return 0\n\n      const scrollOffScreen = this.scrollOffScreen\n        ? this.computedHeight\n        : this.computedContentHeight\n\n      return this.bottom ? scrollOffScreen : -scrollOffScreen\n    },\n    hideShadow (): boolean {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 ||\n          this.computedTransform < 0\n      }\n\n      return (\n        !this.isExtended ||\n        this.scrollOffScreen\n      ) && this.computedTransform !== 0\n    },\n    isCollapsed (): boolean {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this)\n      }\n\n      return this.currentScroll > 0\n    },\n    isProminent (): boolean {\n      return (\n        VToolbar.options.computed.isProminent.call(this) ||\n        this.shrinkOnScroll\n      )\n    },\n    styles (): object {\n      return {\n        ...VToolbar.options.computed.styles.call(this),\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: `translateY(${convertToUnit(this.computedTransform)})`,\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight),\n      }\n    },\n  },\n\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform () {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (\n        !this.canScroll ||\n        (!this.clippedLeft && !this.clippedRight)\n      ) return\n\n      this.callUpdate()\n    },\n    invertedScroll (val: boolean) {\n      this.isActive = !val\n    },\n  },\n\n  created () {\n    if (this.invertedScroll) this.isActive = false\n  },\n\n  methods: {\n    genBackground () {\n      const render = VToolbar.options.methods.genBackground.call(this)\n\n      render.data = this._b(render.data || {}, render.tag!, {\n        style: { opacity: this.computedOpacity },\n      })\n\n      return render\n    },\n    updateApplication (): number {\n      return this.invertedScroll\n        ? 0\n        : this.computedHeight + this.computedTransform\n    },\n    thresholdMet () {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold\n        return\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp\n      }\n\n      this.savedScroll = this.currentScroll\n    },\n  },\n\n  render (h): VNode {\n    const render = VToolbar.options.render.call(this, h)\n\n    render.data = render.data || {}\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || []\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return render\n  },\n})\n","// Components\nimport VIcon from '../VIcon'\nimport VBtn from '../VBtn/VBtn'\n\n// Types\nimport Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'v-app-bar-nav-icon',\n\n  functional: true,\n\n  render (h, { slots, listeners, props, data }) {\n    const d = Object.assign(data, {\n      staticClass: (`v-app-bar__nav-icon ${data.staticClass || ''}`).trim(),\n      props: {\n        ...props,\n        icon: true,\n      },\n      on: listeners,\n    })\n\n    const defaultSlot = slots().default\n\n    return h(VBtn, d, defaultSlot || [h(VIcon, '$menu')])\n  },\n})\n","import VAppBar from './VAppBar'\nimport VAppBarNavIcon from './VAppBarNavIcon'\n\nexport { VAppBar, VAppBarNavIcon }\n\nexport default {\n  $_vuetify_subcomponents: {\n    VAppBar,\n    VAppBarNavIcon,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropType } from 'vue'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | undefined>,\n      default: undefined,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => this.filter(item, String(this.internalSearch), String(this.getText(item))))\n    },\n    internalSearch: {\n      get (): string | undefined {\n        return this.lazySearch\n      },\n      set (val: any) {\n        this.lazySearch = val\n\n        this.$emit('update:search-input', val)\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = undefined\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty || !this.multiple) return\n\n      if (![\n        keyCodes.backspace,\n        keyCodes.left,\n        keyCodes.right,\n        keyCodes.delete,\n      ].includes(keyCode)) return\n\n      const index = this.selectedItems.length - 1\n\n      if (keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = index\n        } else {\n          this.selectedIndex--\n        }\n      } else if (keyCode === keyCodes.right) {\n        if (this.selectedIndex >= index) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (this.selectedIndex === -1) {\n        this.selectedIndex = index\n        return\n      }\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n\n      if ([\n        keyCodes.backspace,\n        keyCodes.delete,\n      ].includes(keyCode) &&\n        !this.getDisabled(currentItem)\n      ) {\n        const newIndex = this.selectedIndex === index\n          ? this.selectedIndex - 1\n          : this.selectedItems[this.selectedIndex + 1]\n            ? this.selectedIndex\n            : -1\n\n        if (newIndex === -1) {\n          this.setValue(this.multiple ? [] : undefined)\n        } else {\n          this.selectItem(currentItem)\n        }\n\n        this.selectedIndex = newIndex\n      }\n    },\n    clearableCallback () {\n      this.internalSearch = undefined\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = input.data || {}\n      input.data.attrs = input.data.attrs || {}\n      input.data.attrs.autocomplete = input.data.attrs.autocomplete || 'disabled'\n\n      input.data.domProps = input.data.domProps || {}\n      input.data.domProps.value = this.internalSearch\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections () {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick () {\n      if (this.isDisabled) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown () {\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData!.setData('text/plain', currentItemText)\n      event.clipboardData!.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","import VAutocomplete from './VAutocomplete'\n\nexport { VAutocomplete }\nexport default VAutocomplete\n","// extracted by mini-css-extract-plugin","import './VAvatar.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Measurable from '../../mixins/measurable'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Colorable,\n  Measurable\n  /* @vue/component */\n).extend({\n  name: 'v-avatar',\n\n  props: {\n    left: Boolean,\n    right: Boolean,\n    size: {\n      type: [Number, String],\n      default: 48,\n    },\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-avatar--left': this.left,\n        'v-avatar--right': this.right,\n        'v-avatar--tile': this.tile,\n      }\n    },\n    styles (): object {\n      return {\n        height: convertToUnit(this.size),\n        minWidth: convertToUnit(this.size),\n        width: convertToUnit(this.size),\n        ...this.measurableStyles,\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-avatar',\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    }\n\n    return h('div', this.setBackgroundColor(this.color, data), this.$slots.default)\n  },\n})\n","import VAvatar from './VAvatar'\n\nexport { VAvatar }\nexport default VAvatar\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VBadge.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Toggleable from '../../mixins/toggleable'\nimport { factory as PositionableFactory } from '../../mixins/positionable'\nimport Transitionable from '../../mixins/transitionable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Colorable,\n  Toggleable,\n  PositionableFactory(['left', 'bottom']),\n  Transitionable\n/* @vue/component */\n).extend({\n  name: 'v-badge',\n\n  props: {\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    overlap: Boolean,\n    transition: {\n      type: String,\n      default: 'fab-transition',\n    },\n    value: {\n      default: true,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-badge--bottom': this.bottom,\n        'v-badge--left': this.left,\n        'v-badge--overlap': this.overlap,\n      }\n    },\n  },\n\n  render (h): VNode {\n    const badge = this.$slots.badge && [h('span', this.setBackgroundColor(this.color, {\n      staticClass: 'v-badge__badge',\n      attrs: this.$attrs,\n      directives: [{\n        name: 'show',\n        value: this.isActive,\n      }],\n    }), this.$slots.badge)]\n\n    return h('span', {\n      staticClass: 'v-badge',\n      class: this.classes,\n    }, [\n      this.$slots.default,\n      this.transition ? h('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          mode: this.mode,\n        },\n      }, badge) : badge,\n    ])\n  },\n})\n","import VBadge from './VBadge'\n\nexport { VBadge }\nexport default VBadge\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VBanner.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VAvatar from '../VAvatar'\nimport VIcon from '../VIcon'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Toggleable from '../../mixins/toggleable'\n\n// Types\nimport { VNode } from 'vue/types'\nimport mixins from '../../util/mixins'\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  VSheet,\n  Toggleable\n).extend({\n  name: 'v-banner',\n\n  inheritAttrs: false,\n\n  props: {\n    icon: String,\n    iconColor: String,\n    mobileBreakPoint: {\n      type: [Number, String],\n      default: 960,\n    } as PropValidator<string | number>,\n    singleLine: Boolean,\n    sticky: Boolean,\n    tile: {\n      type: Boolean,\n      default: true,\n    },\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-banner--has-icon': this.hasIcon,\n        'v-banner--is-mobile': this.isMobile,\n        'v-banner--single-line': this.singleLine,\n        'v-banner--sticky': this.sticky,\n      }\n    },\n    hasActions (): boolean {\n      return Boolean(this.$slots.actions || this.$scopedSlots.actions)\n    },\n    hasIcon (): boolean {\n      return Boolean(this.icon || this.$slots.icon)\n    },\n    isMobile (): boolean {\n      return this.$vuetify.breakpoint.width < Number(this.mobileBreakPoint)\n    },\n    styles (): object {\n      const styles = VSheet.options.computed.styles.call(this)\n\n      if (!this.sticky) return styles\n\n      const { bar, top } = this.$vuetify.application\n\n      return {\n        ...styles,\n        position: 'sticky',\n        top: `${bar + top}px`,\n        zIndex: 1,\n      }\n    },\n  },\n\n  methods: {\n    /** @public */\n    toggle () {\n      this.isActive = !this.isActive\n    },\n    iconClick (e: MouseEvent) {\n      this.$emit('click:icon', e)\n    },\n    genIcon () {\n      if (!this.hasIcon) return undefined\n\n      let content\n\n      if (this.icon) {\n        content = this.$createElement(VIcon, {\n          props: {\n            color: this.iconColor,\n            size: 28,\n          },\n        }, [this.icon])\n      } else {\n        content = this.$slots.icon\n      }\n\n      return this.$createElement(VAvatar, {\n        staticClass: 'v-banner__icon',\n        props: {\n          color: this.color,\n          size: 40,\n        },\n        on: {\n          click: this.iconClick,\n        },\n      }, [content])\n    },\n    genText () {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__text',\n      }, this.$slots.default)\n    },\n    genActions () {\n      if (!this.hasActions) return undefined\n\n      const children = this.$scopedSlots.actions ? this.$scopedSlots.actions({\n        dismiss: () => this.isActive = false,\n      }) : this.$slots.actions\n\n      return this.$createElement('div', {\n        staticClass: 'v-banner__actions',\n      }, children)\n    },\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__content',\n      }, [\n        this.genIcon(),\n        this.genText(),\n      ])\n    },\n    genWrapper () {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__wrapper',\n      }, [\n        this.genContent(),\n        this.genActions(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, [\n      h('div', {\n        staticClass: 'v-banner',\n        class: this.classes,\n        style: this.styles,\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }, [this.genWrapper()]),\n    ])\n  },\n})\n","import VBanner from './VBanner'\n\nexport { VBanner }\nexport default VBanner\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VBottomNavigation.sass'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport ButtonGroup from '../../mixins/button-group'\nimport Colorable from '../../mixins/colorable'\nimport Measurable from '../../mixins/measurable'\nimport Proxyable from '../../mixins/proxyable'\nimport Scrollable from '../../mixins/scrollable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Applicationable('bottom', [\n    'height',\n    'inputValue',\n  ]),\n  Colorable,\n  Measurable,\n  ToggleableFactory('inputValue'),\n  Proxyable,\n  Scrollable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-bottom-navigation',\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-btn--active',\n    },\n    backgroundColor: String,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: 56,\n    },\n    hideOnScroll: Boolean,\n    horizontal: Boolean,\n    inputValue: {\n      type: Boolean,\n      default: true,\n    },\n    mandatory: Boolean,\n    shift: Boolean,\n  },\n\n  data () {\n    return {\n      isActive: this.inputValue,\n    }\n  },\n\n  computed: {\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.hideOnScroll ||\n          !this.inputValue\n        )\n      )\n    },\n    classes (): object {\n      return {\n        'v-bottom-navigation--absolute': this.absolute,\n        'v-bottom-navigation--grow': this.grow,\n        'v-bottom-navigation--fixed': !this.absolute && (this.app || this.fixed),\n        'v-bottom-navigation--horizontal': this.horizontal,\n        'v-bottom-navigation--shift': this.shift,\n      }\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n        transform: this.isActive ? 'none' : 'translateY(100%)',\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('active')) {\n      breaking('active.sync', 'value or v-model', this)\n    }\n  },\n\n  methods: {\n    thresholdMet () {\n      this.isActive = !this.isScrollingUp\n      this.$emit('update:input-value', this.isActive)\n    },\n    updateApplication (): number {\n      return this.$el\n        ? this.$el.clientHeight\n        : 0\n    },\n    updateValue (val: any) {\n      this.$emit('change', val)\n    },\n  },\n\n  render (h): VNode {\n    const data = this.setBackgroundColor(this.backgroundColor, {\n      staticClass: 'v-bottom-navigation',\n      class: this.classes,\n      style: this.styles,\n      props: {\n        activeClass: this.activeClass,\n        mandatory: Boolean(\n          this.mandatory ||\n          this.value !== undefined\n        ),\n        value: this.internalValue,\n      },\n      on: { change: this.updateValue },\n    })\n\n    if (this.canScroll) {\n      data.directives = data.directives || []\n\n      data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return h(ButtonGroup, this.setTextColor(this.color, data), this.$slots.default)\n  },\n})\n","import VBottomNavigation from './VBottomNavigation'\n\nexport { VBottomNavigation }\nexport default VBottomNavigation\n","// extracted by mini-css-extract-plugin","import './VBottomSheet.sass'\n\n// Extensions\nimport VDialog from '../VDialog/VDialog'\n\n/* @vue/component */\nexport default VDialog.extend({\n  name: 'v-bottom-sheet',\n\n  props: {\n    inset: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'auto',\n    },\n    transition: {\n      type: String,\n      default: 'bottom-sheet-transition',\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VDialog.options.computed.classes.call(this),\n        'v-bottom-sheet': true,\n        'v-bottom-sheet--inset': this.inset,\n      }\n    },\n  },\n})\n","import VBottomSheet from './VBottomSheet'\n\nexport { VBottomSheet }\nexport default VBottomSheet\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VBreadcrumbs.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport { VBreadcrumbsDivider, VBreadcrumbsItem } from '.'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-breadcrumbs',\n\n  props: {\n    divider: {\n      type: String,\n      default: '/',\n    },\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    large: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-breadcrumbs--large': this.large,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genDivider () {\n      return this.$createElement(VBreadcrumbsDivider, this.$slots.divider ? this.$slots.divider : this.divider)\n    },\n    genItems () {\n      const items = []\n      const hasSlot = !!this.$scopedSlots.item\n      const keys = []\n\n      for (let i = 0; i < this.items.length; i++) {\n        const item = this.items[i]\n\n        keys.push(item.text)\n\n        if (hasSlot) items.push(this.$scopedSlots.item!({ item }))\n        else items.push(this.$createElement(VBreadcrumbsItem, { key: keys.join('.'), props: item }, [item.text]))\n\n        if (i < this.items.length - 1) items.push(this.genDivider())\n      }\n\n      return items\n    },\n  },\n\n  render (h): VNode {\n    const children = this.$slots.default || this.genItems()\n\n    return h('ul', {\n      staticClass: 'v-breadcrumbs',\n      class: this.classes,\n    }, children)\n  },\n})\n","import Routable from '../../mixins/routable'\n\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(Routable).extend({\n  name: 'v-breadcrumbs-item',\n\n  props: {\n    // In a breadcrumb, the currently\n    // active item should be dimmed\n    activeClass: {\n      type: String,\n      default: 'v-breadcrumbs__item--disabled',\n    },\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-breadcrumbs__item': true,\n        [this.activeClass]: this.disabled,\n      }\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    return h('li', [\n      h(tag, {\n        ...data,\n        attrs: {\n          ...data.attrs,\n          'aria-current': this.isActive && this.isLink ? 'page' : undefined,\n        },\n      }, this.$slots.default),\n    ])\n  },\n})\n","import VBreadcrumbs from './VBreadcrumbs'\nimport VBreadcrumbsItem from './VBreadcrumbsItem'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VBreadcrumbsDivider = createSimpleFunctional('v-breadcrumbs__divider', 'li')\n\nexport { VBreadcrumbs, VBreadcrumbsItem, VBreadcrumbsDivider }\n\nexport default {\n  $_vuetify_subcomponents: {\n    VBreadcrumbs,\n    VBreadcrumbsItem,\n    VBreadcrumbsDivider,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VBtn.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VProgressCircular from '../VProgressCircular'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Positionable from '../../mixins/positionable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { RippleOptions } from '../../directives/ripple'\n\nconst baseMixins = mixins(\n  VSheet,\n  Routable,\n  Positionable,\n  Sizeable,\n  GroupableFactory('btnToggle'),\n  ToggleableFactory('inputValue')\n  /* @vue/component */\n)\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-btn',\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.btnToggle) return ''\n\n        return this.btnToggle.activeClass\n      },\n    } as any as PropValidator<string>,\n    block: Boolean,\n    depressed: Boolean,\n    fab: Boolean,\n    icon: Boolean,\n    loading: Boolean,\n    outlined: Boolean,\n    retainFocusOnClick: Boolean,\n    rounded: Boolean,\n    tag: {\n      type: String,\n      default: 'button',\n    },\n    text: Boolean,\n    type: {\n      type: String,\n      default: 'button',\n    },\n    value: null as any as PropValidator<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-btn--active',\n  }),\n\n  computed: {\n    classes (): any {\n      return {\n        'v-btn': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-btn--absolute': this.absolute,\n        'v-btn--block': this.block,\n        'v-btn--bottom': this.bottom,\n        'v-btn--contained': this.contained,\n        'v-btn--depressed': (this.depressed) || this.outlined,\n        'v-btn--disabled': this.disabled,\n        'v-btn--fab': this.fab,\n        'v-btn--fixed': this.fixed,\n        'v-btn--flat': this.isFlat,\n        'v-btn--icon': this.icon,\n        'v-btn--left': this.left,\n        'v-btn--loading': this.loading,\n        'v-btn--outlined': this.outlined,\n        'v-btn--right': this.right,\n        'v-btn--round': this.isRound,\n        'v-btn--rounded': this.rounded,\n        'v-btn--router': this.to,\n        'v-btn--text': this.text,\n        'v-btn--tile': this.tile,\n        'v-btn--top': this.top,\n        ...this.themeClasses,\n        ...this.groupClasses,\n        ...this.elevationClasses,\n        ...this.sizeableClasses,\n      }\n    },\n    contained (): boolean {\n      return Boolean(\n        !this.isFlat &&\n        !this.depressed &&\n        // Contained class only adds elevation\n        // is not needed if user provides value\n        !this.elevation\n      )\n    },\n    computedRipple (): RippleOptions | boolean {\n      const defaultRipple = this.icon || this.fab ? { circle: true } : true\n      if (this.disabled) return false\n      else return this.ripple != null ? this.ripple : defaultRipple\n    },\n    isFlat (): boolean {\n      return Boolean(\n        this.icon ||\n        this.text ||\n        this.outlined\n      )\n    },\n    isRound (): boolean {\n      return Boolean(\n        this.icon ||\n        this.fab\n      )\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n      }\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['flat', 'text'],\n      ['outline', 'outlined'],\n      ['round', 'rounded'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      !this.retainFocusOnClick && !this.fab && e.detail && this.$el.blur()\n      this.$emit('click', e)\n\n      this.btnToggle && this.toggle()\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-btn__content',\n      }, this.$slots.default)\n    },\n    genLoader (): VNode {\n      return this.$createElement('span', {\n        class: 'v-btn__loader',\n      }, this.$slots.loader || [this.$createElement(VProgressCircular, {\n        props: {\n          indeterminate: true,\n          size: 23,\n          width: 2,\n        },\n      })])\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genContent(),\n      this.loading && this.genLoader(),\n    ]\n    const setColor = !this.isFlat ? this.setBackgroundColor : this.setTextColor\n    const { tag, data } = this.generateRouteLink()\n\n    if (tag === 'button') {\n      data.attrs!.type = this.type\n      data.attrs!.disabled = this.disabled\n    }\n    data.attrs!.value = ['string', 'number'].includes(typeof this.value)\n      ? this.value\n      : JSON.stringify(this.value)\n\n    return h(tag, this.disabled ? data : setColor(this.color, data), children)\n  },\n})\n","import VBtn from './VBtn'\n\nexport { VBtn }\nexport default VBtn\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VBtnToggle.sass'\n\n// Mixins\nimport ButtonGroup from '../../mixins/button-group'\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  ButtonGroup,\n  Colorable\n).extend({\n  name: 'v-btn-toggle',\n\n  props: {\n    backgroundColor: String,\n    borderless: Boolean,\n    dense: Boolean,\n    group: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...ButtonGroup.options.computed.classes.call(this),\n        'v-btn-toggle': true,\n        'v-btn-toggle--borderless': this.borderless,\n        'v-btn-toggle--dense': this.dense,\n        'v-btn-toggle--group': this.group,\n        'v-btn-toggle--rounded': this.rounded,\n        'v-btn-toggle--shaped': this.shaped,\n        'v-btn-toggle--tile': this.tile,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genData () {\n      const data = this.setTextColor(this.color, {\n        ...ButtonGroup.options.methods.genData.call(this),\n      })\n\n      if (this.group) return data\n\n      return this.setBackgroundColor(this.backgroundColor, data)\n    },\n  },\n})\n","import VBtnToggle from './VBtnToggle'\n\nexport { VBtnToggle }\nexport default VBtnToggle\n","// Styles\n// import '../../stylus/components/_calendar-daily.styl'\n\n// Types\nimport { VNode, Component } from 'vue'\n\n// Mixins\nimport CalendarWithEvents from './mixins/calendar-with-events'\n\n// Util\nimport props from './util/props'\nimport {\n  DAYS_IN_MONTH_MAX,\n  DAY_MIN,\n  DAYS_IN_WEEK,\n  VTimestamp,\n  VTime,\n  parseTimestamp,\n  validateTimestamp,\n  relativeDays,\n  nextDay,\n  prevDay,\n  copyTimestamp,\n  updateFormatted,\n  updateWeekday,\n  updateRelative,\n  getStartOfMonth,\n  getEndOfMonth,\n} from './util/timestamp'\n\n// Calendars\nimport VCalendarMonthly from './VCalendarMonthly'\nimport VCalendarDaily from './VCalendarDaily'\nimport VCalendarWeekly from './VCalendarWeekly'\n\n// Types\ninterface VCalendarRenderProps {\n  start: VTimestamp\n  end: VTimestamp\n  component: string | Component\n  maxDays: number\n}\n\n/* @vue/component */\nexport default CalendarWithEvents.extend({\n  name: 'v-calendar',\n\n  props: {\n    ...props.calendar,\n    ...props.weeks,\n    ...props.intervals,\n  },\n\n  data: () => ({\n    lastStart: null as VTimestamp | null,\n    lastEnd: null as VTimestamp | null,\n  }),\n\n  computed: {\n    parsedValue (): VTimestamp {\n      return (validateTimestamp(this.value)\n        ? parseTimestamp(this.value)\n        : (this.parsedStart || this.times.today)) as VTimestamp\n    },\n    renderProps (): VCalendarRenderProps {\n      const around = this.parsedValue\n      let component: any = null\n      let maxDays = this.maxDays\n      let start = around\n      let end = around\n      switch (this.type) {\n        case 'month':\n          component = VCalendarMonthly\n          start = getStartOfMonth(around)\n          end = getEndOfMonth(around)\n          break\n        case 'week':\n          component = VCalendarDaily\n          start = this.getStartOfWeek(around)\n          end = this.getEndOfWeek(around)\n          maxDays = 7\n          break\n        case 'day':\n          component = VCalendarDaily\n          maxDays = 1\n          break\n        case '4day':\n          component = VCalendarDaily\n          end = relativeDays(copyTimestamp(end), nextDay, 4)\n          updateFormatted(end)\n          maxDays = 4\n          break\n        case 'custom-weekly':\n          component = VCalendarWeekly\n          start = this.parsedStart || around\n          end = this.parsedEnd\n          break\n        case 'custom-daily':\n          component = VCalendarDaily\n          start = this.parsedStart || around\n          end = this.parsedEnd\n          break\n        default:\n          throw new Error(this.type + ' is not a valid Calendar type')\n      }\n\n      return { component, start, end, maxDays }\n    },\n  },\n\n  watch: {\n    renderProps: 'checkChange',\n  },\n\n  mounted () {\n    this.updateEventVisibility()\n  },\n\n  updated () {\n    this.updateEventVisibility()\n  },\n\n  methods: {\n    checkChange (): void {\n      const { start, end } = this.renderProps\n      if (start !== this.lastStart || end !== this.lastEnd) {\n        this.lastStart = start\n        this.lastEnd = end\n        this.$emit('change', { start, end })\n      }\n    },\n    move (amount = 1): void {\n      const moved = copyTimestamp(this.parsedValue)\n      const forward = amount > 0\n      const mover = forward ? nextDay : prevDay\n      const limit = forward ? DAYS_IN_MONTH_MAX : DAY_MIN\n      let times = forward ? amount : -amount\n\n      while (--times >= 0) {\n        switch (this.type) {\n          case 'month':\n            moved.day = limit\n            mover(moved)\n            break\n          case 'week':\n            relativeDays(moved, mover, DAYS_IN_WEEK)\n            break\n          case 'day':\n            const index = moved.weekday\n            const days = forward ? this.weekdaySkips[index] : this.weekdaySkipsReverse[index]\n            relativeDays(moved, mover, days)\n            break\n          case '4day':\n            relativeDays(moved, mover, 4)\n            break\n        }\n      }\n\n      updateWeekday(moved)\n      updateFormatted(moved)\n      updateRelative(moved, this.times.now)\n\n      this.$emit('input', moved.date)\n      this.$emit('moved', moved)\n    },\n    next (amount = 1): void {\n      this.move(amount)\n    },\n    prev (amount = 1): void {\n      this.move(-amount)\n    },\n    timeToY (time: VTime, clamp = true): number | false {\n      const c = this.$children[0] as any\n      if (c && c.timeToY) {\n        return c.timeToY(time, clamp)\n      } else {\n        return false\n      }\n    },\n    minutesToPixels (minutes: number): number {\n      const c = this.$children[0] as any\n      if (c && c.minutesToPixels) {\n        return c.minutesToPixels(minutes)\n      } else {\n        return -1\n      }\n    },\n    scrollToTime (time: VTime): boolean {\n      const c = this.$children[0] as any\n      if (c && c.scrollToTime) {\n        return c.scrollToTime(time)\n      } else {\n        return false\n      }\n    },\n  },\n\n  render (h): VNode {\n    const { start, end, maxDays, component } = this.renderProps\n\n    return h(component, {\n      staticClass: 'v-calendar',\n      class: {\n        'v-calendar-events': !this.noEvents,\n      },\n      props: {\n        ...this.$props,\n        start: start.date,\n        end: end.date,\n        maxDays,\n      },\n      directives: [{\n        modifiers: { quiet: true },\n        name: 'resize',\n        value: this.updateEventVisibility,\n      }],\n      on: {\n        ...this.$listeners,\n        'click:date': (day: VTimestamp) => {\n          if (this.$listeners['input']) {\n            this.$emit('input', day.date)\n          }\n          if (this.$listeners['click:date']) {\n            this.$emit('click:date', day)\n          }\n        },\n      },\n      scopedSlots: this.getScopedSlots(),\n    })\n  },\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VCalendarDaily.sass'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Components\nimport VBtn from '../VBtn'\n\n// Mixins\nimport CalendarWithIntervals from './mixins/calendar-with-intervals'\n\n// Util\nimport { convertToUnit } from '../../util/helpers'\nimport { VTimestamp } from './util/timestamp'\n\n/* @vue/component */\nexport default CalendarWithIntervals.extend({\n  name: 'v-calendar-daily',\n\n  directives: { Resize },\n\n  data: () => ({\n    scrollPush: 0,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-calendar-daily': true,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init () {\n      this.$nextTick(this.onResize)\n    },\n    onResize () {\n      this.scrollPush = this.getScrollPush()\n    },\n    getScrollPush (): number {\n      const area = this.$refs.scrollArea as HTMLElement\n      const pane = this.$refs.pane as HTMLElement\n\n      return area && pane ? (area.offsetWidth - pane.offsetWidth) : 0\n    },\n    genHead (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily__head',\n        style: {\n          marginRight: this.scrollPush + 'px',\n        },\n      }, [\n        this.genHeadIntervals(),\n        ...this.genHeadDays(),\n      ])\n    },\n    genHeadIntervals (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily__intervals-head',\n      })\n    },\n    genHeadDays (): VNode[] {\n      return this.days.map(this.genHeadDay)\n    },\n    genHeadDay (day: VTimestamp, index: number): VNode {\n      const slot = this.$scopedSlots['day-header']\n\n      return this.$createElement('div', {\n        key: day.date,\n        staticClass: 'v-calendar-daily_head-day',\n        class: this.getRelativeClasses(day),\n        on: this.getDefaultMouseEventHandlers(':day', _e => {\n          return this.getSlotScope(day)\n        }),\n      }, [\n        this.genHeadWeekday(day),\n        this.genHeadDayLabel(day),\n        slot ? slot({ ...day, index }) : '',\n      ])\n    },\n    genHeadWeekday (day: VTimestamp): VNode {\n      const color = day.present ? this.color : undefined\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-calendar-daily_head-weekday',\n      }), this.weekdayFormatter(day, this.shortWeekdays))\n    },\n    genHeadDayLabel (day: VTimestamp): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily_head-day-label',\n      }, [\n        this.genHeadDayButton(day),\n      ])\n    },\n    genHeadDayButton (day: VTimestamp): VNode {\n      const color = day.present ? this.color : 'transparent'\n\n      return this.$createElement(VBtn, {\n        props: {\n          color,\n          fab: true,\n          depressed: true,\n        },\n        on: this.getMouseEventHandlers({\n          'click:date': { event: 'click', stop: true },\n          'contextmenu:date': { event: 'contextmenu', stop: true, prevent: true, result: false },\n        }, _e => {\n          return day\n        }),\n      }, this.dayFormatter(day, false))\n    },\n    genBody (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily__body',\n      }, [\n        this.genScrollArea(),\n      ])\n    },\n    genScrollArea (): VNode {\n      return this.$createElement('div', {\n        ref: 'scrollArea',\n        staticClass: 'v-calendar-daily__scroll-area',\n      }, [\n        this.genPane(),\n      ])\n    },\n    genPane (): VNode {\n      return this.$createElement('div', {\n        ref: 'pane',\n        staticClass: 'v-calendar-daily__pane',\n        style: {\n          height: convertToUnit(this.bodyHeight),\n        },\n      }, [\n        this.genDayContainer(),\n      ])\n    },\n    genDayContainer (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily__day-container',\n      }, [\n        this.genBodyIntervals(),\n        ...this.genDays(),\n      ])\n    },\n    genDays (): VNode[] {\n      return this.days.map(this.genDay)\n    },\n    genDay (day: VTimestamp, index: number): VNode {\n      const slot = this.$scopedSlots['day-body']\n      const scope = this.getSlotScope(day)\n\n      return this.$createElement('div', {\n        key: day.date,\n        staticClass: 'v-calendar-daily__day',\n        class: this.getRelativeClasses(day),\n        on: this.getDefaultMouseEventHandlers(':time', e => {\n          return this.getSlotScope(this.getTimestampAtEvent(e, day))\n        }),\n      }, [\n        ...this.genDayIntervals(index),\n        slot ? slot(scope) : '',\n      ])\n    },\n    genDayIntervals (index: number): VNode[] {\n      return this.intervals[index].map(this.genDayInterval)\n    },\n    genDayInterval (interval: VTimestamp): VNode {\n      const height: string | undefined = convertToUnit(this.intervalHeight)\n      const styler = this.intervalStyle || this.intervalStyleDefault\n      const slot = this.$scopedSlots.interval\n      const scope = this.getSlotScope(interval)\n\n      const data = {\n        key: interval.time,\n        staticClass: 'v-calendar-daily__day-interval',\n        style: {\n          height,\n          ...styler(interval),\n        },\n      }\n\n      const children = slot ? slot(scope) as VNodeChildren : undefined\n\n      return this.$createElement('div', data, children)\n    },\n    genBodyIntervals (): VNode {\n      const data = {\n        staticClass: 'v-calendar-daily__intervals-body',\n        on: this.getDefaultMouseEventHandlers(':interval', e => {\n          return this.getTimestampAtEvent(e, this.parsedStart)\n        }),\n      }\n\n      return this.$createElement('div', data, this.genIntervalLabels())\n    },\n    genIntervalLabels (): VNode[] | null {\n      if (!this.intervals.length) return null\n\n      return this.intervals[0].map(this.genIntervalLabel)\n    },\n    genIntervalLabel (interval: VTimestamp): VNode {\n      const height: string | undefined = convertToUnit(this.intervalHeight)\n      const short: boolean = this.shortIntervals\n      const shower = this.showIntervalLabel || this.showIntervalLabelDefault\n      const show = shower(interval)\n      const label = show ? this.intervalFormatter(interval, short) : undefined\n\n      return this.$createElement('div', {\n        key: interval.time,\n        staticClass: 'v-calendar-daily__interval',\n        style: {\n          height,\n        },\n      }, [\n        this.$createElement('div', {\n          staticClass: 'v-calendar-daily__interval-text',\n        }, label),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      class: this.classes,\n      nativeOn: {\n        dragstart: (e: MouseEvent) => {\n          e.preventDefault()\n        },\n      },\n      directives: [{\n        modifiers: { quiet: true },\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }, [\n      !this.hideHeader ? this.genHead() : '',\n      this.genBody(),\n    ])\n  },\n})\n","// Styles\nimport './VCalendarWeekly.sass'\n\n// Mixins\nimport VCalendarWeekly from './VCalendarWeekly'\n\n// Util\nimport { VTimestamp, parseTimestamp, getStartOfMonth, getEndOfMonth } from './util/timestamp'\n\n/* @vue/component */\nexport default VCalendarWeekly.extend({\n  name: 'v-calendar-monthly',\n\n  computed: {\n    staticClass (): string {\n      return 'v-calendar-monthly v-calendar-weekly'\n    },\n    parsedStart (): VTimestamp {\n      return getStartOfMonth(parseTimestamp(this.start) as VTimestamp)\n    },\n    parsedEnd (): VTimestamp {\n      return getEndOfMonth(parseTimestamp(this.end) as VTimestamp)\n    },\n  },\n\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VCalendarWeekly.sass'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\n\n// Components\nimport VBtn from '../VBtn'\n\n// Mixins\nimport CalendarBase from './mixins/calendar-base'\n\n// Util\nimport props from './util/props'\nimport {\n  VTimestamp,\n  VTimestampFormatter,\n  createDayList,\n  getDayIdentifier,\n  createNativeLocaleFormatter,\n} from './util/timestamp'\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'v-calendar-weekly',\n\n  props: props.weeks,\n\n  computed: {\n    staticClass (): string {\n      return 'v-calendar-weekly'\n    },\n    classes (): object {\n      return this.themeClasses\n    },\n    parsedMinWeeks (): number {\n      return parseInt(this.minWeeks)\n    },\n    days (): VTimestamp[] {\n      const minDays = this.parsedMinWeeks * this.weekdays.length\n      const start = this.getStartOfWeek(this.parsedStart)\n      const end = this.getEndOfWeek(this.parsedEnd)\n\n      return createDayList(\n        start,\n        end,\n        this.times.today,\n        this.weekdaySkips,\n        Number.MAX_SAFE_INTEGER,\n        minDays\n      )\n    },\n    todayWeek (): VTimestamp[] {\n      const today = this.times.today\n      const start = this.getStartOfWeek(today)\n      const end = this.getEndOfWeek(today)\n\n      return createDayList(\n        start,\n        end,\n        today,\n        this.weekdaySkips,\n        this.weekdays.length,\n        this.weekdays.length\n      )\n    },\n    monthFormatter (): VTimestampFormatter {\n      if (this.monthFormat) {\n        return this.monthFormat as VTimestampFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', month: 'long' }\n      const shortOptions = { timeZone: 'UTC', month: 'short' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (_tms, short) => short ? shortOptions : longOptions\n      )\n    },\n  },\n\n  methods: {\n    isOutside (day: VTimestamp): boolean {\n      const dayIdentifier = getDayIdentifier(day)\n\n      return dayIdentifier < getDayIdentifier(this.parsedStart) ||\n             dayIdentifier > getDayIdentifier(this.parsedEnd)\n    },\n    genHead (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__head',\n      }, this.genHeadDays())\n    },\n    genHeadDays (): VNode[] {\n      return this.todayWeek.map(this.genHeadDay)\n    },\n    genHeadDay (day: VTimestamp, index: number): VNode {\n      const outside = this.isOutside(this.days[index])\n      const color = day.present ? this.color : undefined\n\n      return this.$createElement('div', this.setTextColor(color, {\n        key: day.date,\n        staticClass: 'v-calendar-weekly__head-weekday',\n        class: this.getRelativeClasses(day, outside),\n      }), this.weekdayFormatter(day, this.shortWeekdays))\n    },\n    genWeeks (): VNode[] {\n      const days = this.days\n      const weekDays = this.weekdays.length\n      const weeks: VNode[] = []\n      for (let i = 0; i < days.length; i += weekDays) {\n        weeks.push(this.genWeek(days.slice(i, i + weekDays)))\n      }\n\n      return weeks\n    },\n    genWeek (week: VTimestamp[]): VNode {\n      return this.$createElement('div', {\n        key: week[0].date,\n        staticClass: 'v-calendar-weekly__week',\n      }, week.map(this.genDay))\n    },\n    genDay (day: VTimestamp, index: number): VNode {\n      const outside = this.isOutside(day)\n      const slot = this.$scopedSlots.day\n      const scope = { outside, index, ...day }\n\n      return this.$createElement('div', {\n        key: day.date,\n        staticClass: 'v-calendar-weekly__day',\n        class: this.getRelativeClasses(day, outside),\n        on: this.getDefaultMouseEventHandlers(':day', _e => day),\n      }, [\n        this.genDayLabel(day),\n        slot ? slot(scope) : '',\n        // renders the orginial month text\n        // (day.day === 1 && this.showMonthOnFirst) ? this.genDayMonth(day) : '',\n      ])\n    },\n    genDayLabel (day: VTimestamp): VNode {\n      const slot = this.$scopedSlots['day-label']\n\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__day-label',\n      }, [\n        slot ? slot(day) as VNodeChildren : this.genDayLabelButton(day),\n      ])\n    },\n    genDayLabelButton (day: VTimestamp): VNode {\n      const color = day.present ? this.color : 'transparent'\n      const hasMonth = day.day === 1 && this.showMonthOnFirst\n\n      return this.$createElement(VBtn, {\n        props: {\n          color,\n          fab: true,\n          depressed: true,\n          small: true,\n        },\n        on: this.getMouseEventHandlers({\n          'click:date': { event: 'click', stop: true },\n          'contextmenu:date': { event: 'contextmenu', stop: true, prevent: true, result: false },\n        }, _e => day),\n      }, hasMonth\n        ? this.monthFormatter(day, this.shortMonths) + ' ' + this.dayFormatter(day, false)\n        : this.dayFormatter(day, false)\n      )\n    },\n    genDayMonth (day: VTimestamp): VNode | string {\n      const color = day.present ? this.color : undefined\n      const slot = this.$scopedSlots['day-month']\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-calendar-weekly__day-month',\n      }), slot ? slot(day) as VNodeChildren : this.monthFormatter(day, this.shortMonths))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: this.staticClass,\n      class: this.classes,\n      nativeOn: {\n        dragstart: (e: MouseEvent) => {\n          e.preventDefault()\n        },\n      },\n    }, [\n      !this.hideHeader ? this.genHead() : '',\n      ...this.genWeeks(),\n    ])\n  },\n})\n","import VCalendar from './VCalendar'\nimport VCalendarDaily from './VCalendarDaily'\nimport VCalendarWeekly from './VCalendarWeekly'\nimport VCalendarMonthly from './VCalendarMonthly'\n\nexport { VCalendar, VCalendarDaily, VCalendarWeekly, VCalendarMonthly }\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCalendar,\n    VCalendarDaily,\n    VCalendarWeekly,\n    VCalendarMonthly,\n  },\n}\n","\n// Mixins\nimport mixins from '../../../util/mixins'\nimport Colorable from '../../../mixins/colorable'\nimport Localable from '../../../mixins/localable'\nimport Mouse from './mouse'\nimport Themeable from '../../../mixins/themeable'\nimport Times from './times'\n\n// Directives\nimport Resize from '../../../directives/resize'\n\n// Util\nimport props from '../util/props'\nimport {\n  VTimestamp,\n  VTimestampFormatter,\n  parseTimestamp,\n  getWeekdaySkips,\n  createDayList,\n  createNativeLocaleFormatter,\n  getStartOfWeek,\n  getEndOfWeek,\n} from '../util/timestamp'\n\nexport default mixins(\n  Colorable,\n  Localable,\n  Mouse,\n  Themeable,\n  Times\n/* @vue/component */\n).extend({\n  name: 'calendar-base',\n\n  directives: {\n    Resize,\n  },\n\n  props: props.base,\n\n  computed: {\n    weekdaySkips (): number[] {\n      return getWeekdaySkips(this.weekdays)\n    },\n    weekdaySkipsReverse (): number [] {\n      const reversed = this.weekdaySkips.slice()\n      reversed.reverse()\n      return reversed\n    },\n    parsedStart (): VTimestamp {\n      return parseTimestamp(this.start) as VTimestamp\n    },\n    parsedEnd (): VTimestamp {\n      return (this.end ? parseTimestamp(this.end) : this.parsedStart) as VTimestamp\n    },\n    days (): VTimestamp[] {\n      return createDayList(\n        this.parsedStart,\n        this.parsedEnd,\n        this.times.today,\n        this.weekdaySkips\n      )\n    },\n    dayFormatter (): VTimestampFormatter {\n      if (this.dayFormat) {\n        return this.dayFormat as VTimestampFormatter\n      }\n\n      const options = { timeZone: 'UTC', day: 'numeric' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (_tms, _short) => options\n      )\n    },\n    weekdayFormatter (): VTimestampFormatter {\n      if (this.weekdayFormat) {\n        return this.weekdayFormat as VTimestampFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', weekday: 'long' }\n      const shortOptions = { timeZone: 'UTC', weekday: 'short' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (_tms, short) => short ? shortOptions : longOptions\n      )\n    },\n  },\n\n  methods: {\n    getRelativeClasses (timestamp: VTimestamp, outside = false): object {\n      return {\n        'v-present': timestamp.present,\n        'v-past': timestamp.past,\n        'v-future': timestamp.future,\n        'v-outside': outside,\n      }\n    },\n    getStartOfWeek (timestamp: VTimestamp): VTimestamp {\n      return getStartOfWeek(timestamp, this.weekdays, this.times.today)\n    },\n    getEndOfWeek (timestamp: VTimestamp): VTimestamp {\n      return getEndOfWeek(timestamp, this.weekdays, this.times.today)\n    },\n    getFormatter (options: object): VTimestampFormatter {\n      return createNativeLocaleFormatter(\n        this.locale,\n        (_tms, _short) => options\n      )\n    },\n  },\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './calendar-with-events.sass'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n// Directives\nimport ripple from '../../../directives/ripple'\n\n// Mixins\nimport CalendarBase from './calendar-base'\n\n// Helpers\nimport { escapeHTML } from '../../../util/helpers'\n\n// Util\nimport props from '../util/props'\nimport {\n  VTimestamp,\n  getDayIdentifier,\n  parseTime,\n} from '../util/timestamp'\nimport {\n  VEventParsed,\n  VEventInput,\n  parseEvent,\n  isEventOn,\n} from '../util/events'\n\n// Types\ntype VColorFunction = (event: VEventInput) => string\n\ntype VNameFunction = (event: VEventParsed, timedEvent: boolean) => string\n\ntype VTimeToY = (time: VTimestamp | number | string) => number\n\ntype VEventResetCheck = (date: VTimestamp) => void\n\ntype VEventVisualGetOffset = (visual: VEventVisual, visuals: VEventVisual[]) => number\n\ntype VEventGetter = (day: VTimestamp) => VEventParsed[]\n\ntype VEventVisualGetter = (events: VEventParsed[], timed: boolean) => VEventVisual[]\n\ntype VEventVisualToNode<D> = (visual: VEventVisual, index: number, day: D) => VNode\n\ntype VDailyEventsMap = {\n  [date: string]: {\n    parent: HTMLElement\n    more: HTMLElement | null\n    events: HTMLElement[]\n  }\n}\n\ninterface VEventVisual {\n  offset: number\n  event: VEventParsed\n  columnCount: number\n  column: number\n}\n\ninterface VDaySlotScope extends VTimestamp {\n  outside: boolean\n  index: number\n}\n\ninterface VDayBodySlotScope extends VDaySlotScope {\n  timeToY: VTimeToY\n}\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'calendar-with-events',\n\n  directives: {\n    ripple,\n  },\n\n  props: props.events,\n\n  computed: {\n    noEvents (): boolean {\n      return this.events.length === 0\n    },\n    parsedEvents (): VEventParsed[] {\n      return this.events.map((input, index) => parseEvent(input, index, this.eventStart, this.eventEnd))\n    },\n    eventColorFunction (): VColorFunction {\n      return typeof this.eventColor === 'function'\n        ? this.eventColor as VColorFunction\n        : () => (this.eventColor as string)\n    },\n    eventTextColorFunction (): VColorFunction {\n      return typeof this.eventTextColor === 'function'\n        ? this.eventTextColor as VColorFunction\n        : () => (this.eventTextColor as string)\n    },\n    eventNameFunction (): VNameFunction {\n      return typeof this.eventName === 'function'\n        ? this.eventName as VNameFunction\n        : (event, timedEvent) => {\n          const name = escapeHTML(event.input[this.eventName as string] as string)\n          if (event.start.hasTime) {\n            if (timedEvent) {\n              const showStart = event.start.hour < 12 && event.end.hour >= 12\n              const start = this.formatTime(event.start, showStart)\n              const end = this.formatTime(event.end, true)\n              return `<strong>${name}</strong><br>${start} - ${end}`\n            } else {\n              const time = this.formatTime(event.start, true)\n              return `<strong>${time}</strong> ${name}`\n            }\n          }\n          return name\n        }\n    },\n  },\n\n  methods: {\n    formatTime (withTime: VTimestamp, ampm: boolean): string {\n      const suffix = ampm ? (withTime.hour < 12 ? 'a' : 'p') : ''\n      const hour = withTime.hour % 12 || 12\n      const minute = withTime.minute\n\n      return minute > 0\n        ? (minute < 10\n          ? `${hour}:0${minute}${suffix}`\n          : `${hour}:${minute}${suffix}`)\n        : `${hour}${suffix}`\n    },\n    updateEventVisibility () {\n      if (this.noEvents || !this.eventMore) {\n        return\n      }\n\n      const eventHeight = this.eventHeight\n      const eventsMap = this.getEventsMap()\n\n      for (const date in eventsMap) {\n        const { parent, events, more } = eventsMap[date]\n        if (!more) {\n          break\n        }\n        const parentBounds = parent.getBoundingClientRect()\n        const last = events.length - 1\n        let hide = false\n        let hidden = 0\n        for (let i = 0; i <= last; i++) {\n          if (!hide) {\n            const eventBounds = events[i].getBoundingClientRect()\n            hide = (eventBounds.bottom + eventHeight > parentBounds.bottom && i !== last) ||\n                   events[i].style.display === 'none'\n          }\n          if (hide) {\n            const id = events[i].getAttribute('data-event') as string\n            this.hideEvents(id)\n            hidden++\n          }\n        }\n\n        if (hide) {\n          more.style.display = ''\n          more.innerHTML = this.$vuetify.lang.t(this.eventMoreText, hidden)\n        } else {\n          more.style.display = 'none'\n        }\n      }\n    },\n    hideEvents (id: string) {\n      const elements = this.$refs.events as HTMLElement[]\n\n      elements.forEach(el => {\n        if (el.getAttribute('data-event') === id) {\n          el.style.display = 'none'\n        }\n      })\n    },\n    getEventsMap (): VDailyEventsMap {\n      const eventsMap: VDailyEventsMap = {}\n      const elements = this.$refs.events as HTMLElement[]\n\n      if (!elements || !elements.forEach) {\n        return eventsMap\n      }\n\n      elements.forEach(el => {\n        const date = el.getAttribute('data-date')\n        if (el.parentElement && date) {\n          if (!(date in eventsMap)) {\n            eventsMap[date] = {\n              parent: el.parentElement,\n              more: null,\n              events: [],\n            }\n          }\n          if (el.getAttribute('data-more')) {\n            eventsMap[date].more = el\n          } else {\n            eventsMap[date].events.push(el)\n            el.style.display = ''\n          }\n        }\n      })\n\n      return eventsMap\n    },\n    genDayEvent ({ offset, event }: VEventVisual, index: number, day: VDaySlotScope): VNode {\n      const eventHeight = this.eventHeight\n      const eventMarginBottom = this.eventMarginBottom\n      const relativeOffset = (offset - index) * (eventHeight + eventMarginBottom) // 1 = margin bottom\n      const dayIdentifier = getDayIdentifier(day)\n      const start = dayIdentifier === event.startIdentifier\n      const end = dayIdentifier === event.endIdentifier\n      const scope = { event: event.input, day, outside: day.outside, start, end, timed: false }\n\n      return this.genEvent(event, scope, start || day.index === 0, false, {\n        staticClass: 'v-event',\n        class: {\n          'v-event-start': start,\n          'v-event-end': end,\n        },\n        style: {\n          height: `${eventHeight}px`,\n          top: `${relativeOffset}px`,\n          'margin-bottom': `${eventMarginBottom}px`,\n        },\n        attrs: {\n          'data-date': day.date,\n          'data-event': event.index,\n        },\n        key: event.index,\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    genTimedEvent ({ offset, event, columnCount, column }: VEventVisual, index: number, day: VDayBodySlotScope): VNode {\n      const dayIdentifier = getDayIdentifier(day)\n      const start = event.startIdentifier >= dayIdentifier\n      const end = event.endIdentifier > dayIdentifier\n      const top = start ? day.timeToY(event.start) : 0\n      const bottom = end ? day.timeToY(1440) : day.timeToY(event.end)\n      const height = Math.max(this.eventHeight, bottom - top)\n      const left = columnCount === -1\n        ? offset * 5\n        : column * 100 / columnCount\n      const right = columnCount === -1\n        ? 0\n        : Math.max(0, (columnCount - column - 2) * 100 / columnCount + 10)\n      const scope = { event: event.input, day, outside: day.outside, start, end, timed: true }\n\n      return this.genEvent(event, scope, true, true, {\n        staticClass: 'v-event-timed',\n        style: {\n          top: `${top}px`,\n          height: `${height}px`,\n          left: `${left}%`,\n          right: `${right}%`,\n        },\n      })\n    },\n    genEvent (event: VEventParsed, scope: object, showName: boolean, timedEvent: boolean, data: VNodeData): VNode {\n      const slot = this.$scopedSlots.event\n      const text = this.eventTextColorFunction(event.input)\n      const background = this.eventColorFunction(event.input)\n\n      return this.$createElement('div',\n        this.setTextColor(text,\n          this.setBackgroundColor(background, {\n            on: this.getDefaultMouseEventHandlers(':event', nativeEvent => ({ ...scope, nativeEvent })),\n            directives: [{\n              name: 'ripple',\n              value: this.eventRipple != null ? this.eventRipple : true,\n            }],\n            ...data,\n          })\n        ), slot\n          ? slot(scope)\n          : (showName ? [this.genName(event, timedEvent)] : undefined)\n      )\n    },\n    genName (event: VEventParsed, timedEvent: boolean): VNode {\n      return this.$createElement('div', {\n        staticClass: 'pl-1',\n        domProps: {\n          innerHTML: this.eventNameFunction(event, timedEvent),\n        },\n      })\n    },\n    genMore (day: VTimestamp): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-event-more pl-1',\n        attrs: {\n          'data-date': day.date,\n          'data-more': 1,\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.eventRipple != null ? this.eventRipple : true,\n        }],\n        on: {\n          click: () => this.$emit('click:more', day),\n        },\n        style: {\n          display: 'none',\n        },\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    getEventsForDay (day: VTimestamp): VEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => isEventOn(event, identifier)\n      )\n    },\n    getEventsForDayAll (day: VTimestamp): VEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => event.allDay && isEventOn(event, identifier)\n      )\n    },\n    getEventsForDayTimed (day: VTimestamp): VEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => !event.allDay && isEventOn(event, identifier)\n      )\n    },\n    isSameColumn (a: VEventVisual, b: VEventVisual): boolean {\n      const astart = parseTime(a.event.start) as number\n      const bstart = parseTime(b.event.start) as number\n      const diff = astart - bstart\n      const abs = diff < 0 ? -diff : diff\n\n      return abs < this.eventOverlapThreshold\n    },\n    isOverlapping (a: VEventVisual, b: VEventVisual): boolean {\n      const astart = parseTime(a.event.start) as number\n      const bstart = parseTime(b.event.start) as number\n\n      if (a.offset < b.offset && bstart < astart) {\n        const aend = astart + this.eventOverlapThreshold\n        const bend = parseTime(b.event.end) as number\n        return !(astart >= bend || aend <= bstart)\n      }\n\n      return false\n    },\n    getScopedSlots () {\n      if (this.noEvents) {\n        return this.$scopedSlots\n      }\n\n      /**\n       * Over the span of a week (for example) we want to maintain an event in the same row (for weekly and monthly views).\n       * We keep track of those rows by indexToOffset. If the value in that array is -1, then we can place an event at that spot.\n       * For a daily view with timed events we arrange them based on columns and offsets. If two or more events start at around the\n       * same time (eventOverlapThreshold) they go into columns. If one event starts inside another it is indented the appropriate amount.\n       * If one event overlaps another after those adjustments are made those events are placed in columns together instead of any defined\n       * indents.\n       */\n\n      const parsedEvents = this.parsedEvents\n      const indexToOffset: number[] = parsedEvents.map(event => -1)\n      const resetOnWeekday = this.weekdays[0]\n\n      const checkReset: VEventResetCheck = day => {\n        if (day.weekday === resetOnWeekday) {\n          for (let i = 0; i < indexToOffset.length; i++) {\n            indexToOffset[i] = -1\n          }\n        }\n      }\n\n      const getOffset: VEventVisualGetOffset = (visual, visuals) => {\n        let offset = indexToOffset[visual.event.index]\n        if (offset === -1) {\n          let min = Number.MAX_SAFE_INTEGER\n          let max = -1\n          visuals.forEach(other => {\n            const otherOffset = indexToOffset[other.event.index]\n            if (otherOffset !== -1) {\n              min = Math.min(min, otherOffset)\n              max = Math.max(max, otherOffset)\n            }\n          })\n          offset = min > 0 && max !== -1 ? min - 1 : max + 1\n          indexToOffset[visual.event.index] = offset\n        }\n        return offset\n      }\n\n      const getVisuals: VEventVisualGetter = (events, timed) => {\n        const visuals: VEventVisual[] = events.map(event => ({ event, offset: 0, columnCount: -1, column: -1 }))\n        // sort events by start date/time\n        visuals.sort((a, b) => a.event.startTimestampIdentifier - b.event.startTimestampIdentifier)\n        if (timed) {\n          // timed events can be organized into columns\n          visuals.forEach(visual => {\n            if (visual.columnCount !== -1) {\n              return\n            }\n            const columns: VEventVisual[] = []\n            visuals.forEach(other => {\n              if (other.columnCount === -1 && this.isSameColumn(visual, other)) {\n                columns.push(other)\n              }\n            })\n            if (columns.length > 1) {\n              columns.forEach((visual, visualIndex) => {\n                visual.column = visualIndex\n                visual.columnCount = columns.length\n              })\n            }\n          })\n          // for any not organized into columns, if they overlap another event\n          // not in a column they are offset\n          visuals.forEach(visual => {\n            if (visual.columnCount === -1) {\n              visuals.forEach(other => {\n                const otherOffset = indexToOffset[other.event.index]\n                if (otherOffset !== -1 && other.event.endTimestampIdentifier <= visual.event.startTimestampIdentifier) {\n                  indexToOffset[other.event.index] = -1\n                }\n              })\n              visual.offset = getOffset(visual, visuals)\n            }\n          })\n          // for any not organized into columns, if a previous event overlaps this event\n          // join them into the columns\n          visuals.forEach(visual => {\n            if (visual.columnCount === -1) {\n              const columns: VEventVisual[] = [visual]\n              visuals.forEach(other => {\n                if (other !== visual && other.columnCount === -1 && this.isOverlapping(visual, other)) {\n                  columns.push(other)\n                }\n              })\n              if (columns.length > 1) {\n                columns.forEach((visual, visualIndex) => {\n                  visual.column = visualIndex\n                  visual.columnCount = columns.length\n                })\n              }\n            }\n          })\n        } else {\n          visuals.forEach(visual => {\n            visual.offset = getOffset(visual, visuals)\n          })\n        }\n        visuals.sort((a, b) => (a.offset - b.offset) || (a.column - b.column))\n        return visuals\n      }\n\n      const getSlotChildren = <D extends VDaySlotScope>(day: D, getter: VEventGetter, mapper: VEventVisualToNode<D>, timed: boolean) => {\n        checkReset(day)\n        const events = getter(day)\n        return events.length === 0\n          ? undefined\n          : getVisuals(events, timed).map((visual, index) => mapper(visual, index, day))\n      }\n\n      return {\n        ...this.$scopedSlots,\n        day: (day: VDaySlotScope) => {\n          const children = getSlotChildren(day, this.getEventsForDay, this.genDayEvent, false)\n          if (children && children.length > 0 && this.eventMore) {\n            children.push(this.genMore(day))\n          }\n          return children\n        },\n        'day-header': (day: VDaySlotScope) => {\n          return getSlotChildren(day, this.getEventsForDayAll, this.genDayEvent, false)\n        },\n        'day-body': (day: VDayBodySlotScope) => {\n          return [this.$createElement('div', {\n            staticClass: 'v-event-timed-container',\n          }, getSlotChildren(day, this.getEventsForDayTimed, this.genTimedEvent, true))]\n        },\n      }\n    },\n  },\n})\n","\n// Mixins\nimport CalendarBase from './calendar-base'\n\n// Util\nimport props from '../util/props'\nimport {\n  VTimestamp,\n  VTime,\n  VTimestampFormatter,\n  parseTime,\n  copyTimestamp,\n  updateMinutes,\n  createDayList,\n  createIntervalList,\n  createNativeLocaleFormatter,\n} from '../util/timestamp'\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'calendar-with-intervals',\n\n  props: props.intervals,\n\n  computed: {\n    parsedFirstInterval (): number {\n      return parseInt(this.firstInterval)\n    },\n    parsedIntervalMinutes (): number {\n      return parseInt(this.intervalMinutes)\n    },\n    parsedIntervalCount (): number {\n      return parseInt(this.intervalCount)\n    },\n    parsedIntervalHeight (): number {\n      return parseFloat(this.intervalHeight)\n    },\n    firstMinute (): number {\n      return this.parsedFirstInterval * this.parsedIntervalMinutes\n    },\n    bodyHeight (): number {\n      return this.parsedIntervalCount * this.parsedIntervalHeight\n    },\n    days (): VTimestamp[] {\n      return createDayList(\n        this.parsedStart,\n        this.parsedEnd,\n        this.times.today,\n        this.weekdaySkips,\n        this.maxDays\n      )\n    },\n    intervals (): VTimestamp[][] {\n      const days: VTimestamp[] = this.days\n      const first: number = this.parsedFirstInterval\n      const minutes: number = this.parsedIntervalMinutes\n      const count: number = this.parsedIntervalCount\n      const now: VTimestamp = this.times.now\n\n      return days.map(d => createIntervalList(d, first, minutes, count, now))\n    },\n    intervalFormatter (): VTimestampFormatter {\n      if (this.intervalFormat) {\n        return this.intervalFormat as VTimestampFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', hour12: true, hour: '2-digit', minute: '2-digit' }\n      const shortOptions = { timeZone: 'UTC', hour12: true, hour: 'numeric', minute: '2-digit' }\n      const shortHourOptions = { timeZone: 'UTC', hour12: true, hour: 'numeric' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (tms, short) => short ? (tms.minute === 0 ? shortHourOptions : shortOptions) : longOptions\n      )\n    },\n  },\n\n  methods: {\n    showIntervalLabelDefault (interval: VTimestamp): boolean {\n      const first: VTimestamp = this.intervals[0][0]\n      const isFirst: boolean = first.hour === interval.hour && first.minute === interval.minute\n      return !isFirst && interval.minute === 0\n    },\n    intervalStyleDefault (_interval: VTimestamp): object | undefined {\n      return undefined\n    },\n    getTimestampAtEvent (e: MouseEvent | TouchEvent, day: VTimestamp): VTimestamp {\n      const timestamp: VTimestamp = copyTimestamp(day)\n      const bounds = (e.currentTarget as HTMLElement).getBoundingClientRect()\n      const baseMinutes: number = this.firstMinute\n      const touchEvent: TouchEvent = e as TouchEvent\n      const mouseEvent: MouseEvent = e as MouseEvent\n      const touches: TouchList = touchEvent.changedTouches || touchEvent.touches\n      const clientY: number = touches && touches[0] ? touches[0].clientY : mouseEvent.clientY\n      const addIntervals: number = (clientY - bounds.top) / this.parsedIntervalHeight\n      const addMinutes: number = Math.floor(addIntervals * this.parsedIntervalMinutes)\n      const minutes: number = baseMinutes + addMinutes\n\n      return updateMinutes(timestamp, minutes, this.times.now)\n    },\n    getSlotScope (timestamp: VTimestamp): any {\n      const scope = copyTimestamp(timestamp) as any\n      scope.timeToY = this.timeToY\n      scope.minutesToPixels = this.minutesToPixels\n      return scope\n    },\n    scrollToTime (time: VTime): boolean {\n      const y = this.timeToY(time)\n      const pane = this.$refs.scrollArea as HTMLElement\n\n      if (y === false || !pane) {\n        return false\n      }\n\n      pane.scrollTop = y\n\n      return true\n    },\n    minutesToPixels (minutes: number): number {\n      return minutes / this.parsedIntervalMinutes * this.parsedIntervalHeight\n    },\n    timeToY (time: VTime, clamp = true): number | false {\n      const minutes = parseTime(time)\n\n      if (minutes === false) {\n        return false\n      }\n\n      const min: number = this.firstMinute\n      const gap: number = this.parsedIntervalCount * this.parsedIntervalMinutes\n      const delta: number = (minutes - min) / gap\n      let y: number = delta * this.bodyHeight\n\n      if (clamp) {\n        if (y < 0) {\n          y = 0\n        }\n        if (y > this.bodyHeight) {\n          y = this.bodyHeight\n        }\n      }\n\n      return y\n    },\n  },\n})\n","import Vue from 'vue'\n\nexport type MouseHandler = (e: MouseEvent | TouchEvent) => any\n\nexport type MouseEvents = {\n  [event: string]: {\n    event: string\n    passive?: boolean\n    capture?: boolean\n    once?: boolean\n    stop?: boolean\n    prevent?: boolean\n    button?: number\n    result?: any\n  }\n}\n\nexport type MouseEventsMap = {\n  [event: string]: MouseHandler | MouseHandler[]\n}\n\nexport default Vue.extend({\n  name: 'mouse',\n\n  methods: {\n    getDefaultMouseEventHandlers (suffix: string, getEvent: MouseHandler): MouseEventsMap {\n      return this.getMouseEventHandlers({\n        ['click' + suffix]: { event: 'click' },\n        ['contextmenu' + suffix]: { event: 'contextmenu', prevent: true, result: false },\n        ['mousedown' + suffix]: { event: 'mousedown' },\n        ['mousemove' + suffix]: { event: 'mousemove' },\n        ['mouseup' + suffix]: { event: 'mouseup' },\n        ['mouseenter' + suffix]: { event: 'mouseenter' },\n        ['mouseleave' + suffix]: { event: 'mouseleave' },\n        ['touchstart' + suffix]: { event: 'touchstart' },\n        ['touchmove' + suffix]: { event: 'touchmove' },\n        ['touchend' + suffix]: { event: 'touchend' },\n      }, getEvent)\n    },\n    getMouseEventHandlers (events: MouseEvents, getEvent: MouseHandler): MouseEventsMap {\n      const on: MouseEventsMap = {}\n\n      for (const event in events) {\n        const eventOptions = events[event]\n\n        if (!this.$listeners[event]) continue\n\n        // TODO somehow pull in modifiers\n\n        const prefix = eventOptions.passive ? '&' : ((eventOptions.once ? '~' : '') + (eventOptions.capture ? '!' : ''))\n        const key = prefix + eventOptions.event\n\n        const handler: MouseHandler = e => {\n          const mouseEvent: MouseEvent = e as MouseEvent\n          if (eventOptions.button === undefined || (mouseEvent.buttons > 0 && mouseEvent.button === eventOptions.button)) {\n            if (eventOptions.prevent) {\n              e.preventDefault()\n            }\n            if (eventOptions.stop) {\n              e.stopPropagation()\n            }\n            this.$emit(event, getEvent(e))\n          }\n\n          return eventOptions.result\n        }\n\n        if (key in on) {\n          /* istanbul ignore next */\n          if (Array.isArray(on[key])) {\n            (on[key] as MouseHandler[]).push(handler)\n          } else {\n            on[key] = [on[key], handler] as MouseHandler[]\n          }\n        } else {\n          on[key] = handler\n        }\n      }\n\n      return on\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport {\n  VTimestamp,\n  validateTimestamp,\n  parseTimestamp,\n  parseDate,\n} from '../util/timestamp'\n\nexport default Vue.extend({\n  name: 'times',\n\n  props: {\n    now: {\n      type: String,\n      validator: validateTimestamp,\n    },\n  },\n\n  data: () => ({\n    times: {\n      now: parseTimestamp('0000-00-00 00:00') as VTimestamp,\n      today: parseTimestamp('0000-00-00') as VTimestamp,\n    },\n  }),\n\n  computed: {\n    parsedNow (): VTimestamp | null {\n      return this.now ? parseTimestamp(this.now) : null\n    },\n  },\n\n  watch: {\n    parsedNow: 'updateTimes',\n  },\n\n  created () {\n    this.updateTimes()\n    this.setPresent()\n  },\n\n  methods: {\n    setPresent (): void {\n      this.times.now.present = this.times.today.present = true\n      this.times.now.past = this.times.today.past = false\n      this.times.now.future = this.times.today.future = false\n    },\n    updateTimes (): void {\n      const now: VTimestamp = this.parsedNow || this.getNow()\n      this.updateDay(now, this.times.now)\n      this.updateTime(now, this.times.now)\n      this.updateDay(now, this.times.today)\n    },\n    getNow (): VTimestamp {\n      return parseDate(new Date())\n    },\n    updateDay (now: VTimestamp, target: VTimestamp): void {\n      if (now.date !== target.date) {\n        target.year = now.year\n        target.month = now.month\n        target.day = now.day\n        target.weekday = now.weekday\n        target.date = now.date\n      }\n    },\n    updateTime (now: VTimestamp, target: VTimestamp): void {\n      if (now.time !== target.time) {\n        target.hour = now.hour\n        target.minute = now.minute\n        target.time = now.time\n      }\n    },\n  },\n})\n","import {\n  VTimestamp,\n  parseTimestamp,\n  getDayIdentifier,\n  getTimestampIdentifier,\n} from './timestamp'\n\nexport interface VEventInput {\n  [prop: string]: any\n}\n\nexport interface VEventParsed {\n  input: VEventInput\n  start: VTimestamp\n  startIdentifier: number\n  startTimestampIdentifier: number\n  end: VTimestamp\n  endIdentifier: number\n  endTimestampIdentifier: number\n  allDay: boolean\n  index: number\n}\n\nexport function parseEvent (input: VEventInput, index: number, startProperty: string, endProperty: string): VEventParsed {\n  if (!(startProperty in input)) {\n    throw new Error('The ' + startProperty + ' property is required on all events to be a valid timestamp in the format YYYY-MM-DD or YYYY-MM-DD hh:mm')\n  }\n\n  const start: VTimestamp = parseTimestamp(input[startProperty]) as VTimestamp\n  const end: VTimestamp = (input[endProperty] ? parseTimestamp(input[endProperty]) : start) as VTimestamp\n  const startIdentifier: number = getDayIdentifier(start)\n  const startTimestampIdentifier: number = getTimestampIdentifier(start)\n  const endIdentifier: number = getDayIdentifier(end)\n  const endTimestampIdentifier: number = getTimestampIdentifier(end)\n  const allDay: boolean = !start.hasTime\n\n  return { input, start, startIdentifier, startTimestampIdentifier, end, endIdentifier, endTimestampIdentifier, allDay, index }\n}\n\nexport function isEventOn (event: VEventParsed, dayIdentifier: number): boolean {\n  return dayIdentifier >= event.startIdentifier && dayIdentifier <= event.endIdentifier\n}\n\nexport function isEventOverlapping (event: VEventParsed, startIdentifier: number, endIdentifier: number): boolean {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier\n}\n","\nimport { validateTimestamp, parseDate } from './timestamp'\nimport { VEventInput } from './events'\nimport { PropValidator } from 'vue/types/options'\n\nexport default {\n  base: {\n    start: {\n      type: String,\n      validate: validateTimestamp,\n      default: () => parseDate(new Date()).date,\n    },\n    end: {\n      type: String,\n      validate: validateTimestamp,\n    },\n    weekdays: {\n      type: Array,\n      default: () => [0, 1, 2, 3, 4, 5, 6],\n    } as PropValidator<number[]>,\n    hideHeader: {\n      type: Boolean,\n      default: false,\n    },\n    shortWeekdays: {\n      type: Boolean,\n      default: true,\n    },\n    weekdayFormat: {\n      type: Function, // VTimestampFormatter,\n      default: null,\n    },\n    dayFormat: {\n      type: Function, // VTimestampFormatter,\n      default: null,\n    },\n  },\n  intervals: {\n    maxDays: {\n      type: Number,\n      default: 7,\n    },\n    shortIntervals: {\n      type: Boolean,\n      default: true,\n    },\n    intervalHeight: {\n      type: [Number, String],\n      default: 40,\n      validate: validateNumber,\n    },\n    intervalMinutes: {\n      type: [Number, String],\n      default: 60,\n      validate: validateNumber,\n    },\n    firstInterval: {\n      type: [Number, String],\n      default: 0,\n      validate: validateNumber,\n    },\n    intervalCount: {\n      type: [Number, String],\n      default: 24,\n      validate: validateNumber,\n    },\n    intervalFormat: {\n      type: Function, // VTimestampFormatter,\n      default: null,\n    },\n    intervalStyle: {\n      type: Function, // (interval: VTimestamp): object\n      default: null,\n    },\n    showIntervalLabel: {\n      type: Function, // (interval: VTimestamp): boolean\n      default: null,\n    },\n  },\n  weeks: {\n    minWeeks: {\n      validate: validateNumber,\n      default: 1,\n    },\n    shortMonths: {\n      type: Boolean,\n      default: true,\n    },\n    showMonthOnFirst: {\n      type: Boolean,\n      default: true,\n    },\n    monthFormat: {\n      type: Function, // VTimestampFormatter,\n      default: null,\n    },\n  },\n  calendar: {\n    type: {\n      type: String,\n      default: 'month',\n    },\n    value: {\n      type: String,\n      validate: validateTimestamp,\n    },\n  },\n  events: {\n    events: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<VEventInput[]>,\n    eventStart: {\n      type: String,\n      default: 'start',\n    },\n    eventEnd: {\n      type: String,\n      default: 'end',\n    },\n    eventHeight: {\n      type: Number,\n      default: 20,\n    },\n    eventColor: {\n      type: [String, Function],\n      default: 'secondary',\n    },\n    eventTextColor: {\n      type: [String, Function],\n      default: 'white',\n    },\n    eventName: {\n      type: [String, Function],\n      default: 'name',\n    },\n    eventOverlapThreshold: {\n      type: Number,\n      default: 60,\n    },\n    eventMore: {\n      type: Boolean,\n      default: true,\n    },\n    eventMoreText: {\n      type: String,\n      default: '$vuetify.calendar.moreEvents',\n    },\n    eventRipple: {\n      type: [Boolean, Object],\n      default: null,\n    },\n    eventMarginBottom: {\n      type: Number,\n      default: 1,\n    },\n  },\n}\n\nexport function validateNumber (input: any): boolean {\n  return isFinite(parseInt(input))\n}\n","\nexport const PARSE_REGEX: RegExp = /^(\\d{4})-(\\d{1,2})(-(\\d{1,2}))?([^\\d]+(\\d{1,2}))?(:(\\d{1,2}))?(:(\\d{1,2}))?$/\nexport const PARSE_TIME: RegExp = /(\\d\\d?)(:(\\d\\d?)|)(:(\\d\\d?)|)/\n\nexport const DAYS_IN_MONTH: number[] = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_IN_MONTH_LEAP: number[] = [0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_IN_MONTH_MIN = 28\nexport const DAYS_IN_MONTH_MAX = 31\nexport const MONTH_MAX = 12\nexport const MONTH_MIN = 1\nexport const DAY_MIN = 1\nexport const DAYS_IN_WEEK = 7\nexport const MINUTES_IN_HOUR = 60\nexport const HOURS_IN_DAY = 24\nexport const FIRST_HOUR = 0\n\nexport interface VTimestamp {\n  date: string\n  time: string\n  year: number\n  month: number\n  day: number\n  weekday: number\n  hour: number\n  minute: number\n  hasDay: boolean\n  hasTime: boolean\n  past: boolean\n  present: boolean\n  future: boolean\n}\n\nexport interface VTimeObject {\n  hour: number\n  minute: number\n}\n\nexport type VTime = number | string | VTimeObject\n\nexport type VTimestampFormatter = (timestamp: VTimestamp, short: boolean) => string\n\nexport type VTimestampFormatOptions = (timestamp: VTimestamp, short: boolean) => object\n\nexport type VTimestampOperation = (timestamp: VTimestamp) => VTimestamp\n\nexport function getStartOfWeek (timestamp: VTimestamp, weekdays: number[], today?: VTimestamp): VTimestamp {\n  const start = copyTimestamp(timestamp)\n  findWeekday(start, weekdays[0], prevDay)\n  updateFormatted(start)\n  if (today) {\n    updateRelative(start, today, start.hasTime)\n  }\n  return start\n}\n\nexport function getEndOfWeek (timestamp: VTimestamp, weekdays: number[], today?: VTimestamp): VTimestamp {\n  const end = copyTimestamp(timestamp)\n  findWeekday(end, weekdays[weekdays.length - 1])\n  updateFormatted(end)\n  if (today) {\n    updateRelative(end, today, end.hasTime)\n  }\n  return end\n}\n\nexport function getStartOfMonth (timestamp: VTimestamp): VTimestamp {\n  const start = copyTimestamp(timestamp)\n  start.day = DAY_MIN\n  updateWeekday(start)\n  updateFormatted(start)\n  return start\n}\n\nexport function getEndOfMonth (timestamp: VTimestamp): VTimestamp {\n  const end = copyTimestamp(timestamp)\n  end.day = daysInMonth(end.year, end.month)\n  updateWeekday(end)\n  updateFormatted(end)\n  return end\n}\n\nexport function parseTime (input: any): number | false {\n  if (typeof input === 'number') {\n    // when a number is given, it's minutes since 12:00am\n    return input\n  } else if (typeof input === 'string') {\n    // when a string is given, it's a hh:mm:ss format where seconds are optional\n    const parts = PARSE_TIME.exec(input)\n    if (!parts) {\n      return false\n    }\n    return parseInt(parts[1]) * 60 + parseInt(parts[3] || 0)\n  } else if (typeof input === 'object') {\n    // when an object is given, it must have hour and minute\n    if (typeof input.hour !== 'number' || typeof input.minute !== 'number') {\n      return false\n    }\n    return input.hour * 60 + input.minute\n  } else {\n    // unsupported type\n    return false\n  }\n}\n\nexport function validateTimestamp (input: any): boolean {\n  return !!PARSE_REGEX.exec(input)\n}\n\nexport function parseTimestamp (input: string, now?: VTimestamp): VTimestamp | null {\n  // YYYY-MM-DD hh:mm:ss\n  const parts = PARSE_REGEX.exec(input)\n\n  if (!parts) return null\n\n  const timestamp: VTimestamp = {\n    date: input,\n    time: '',\n    year: parseInt(parts[1]),\n    month: parseInt(parts[2]),\n    day: parseInt(parts[4]) || 1,\n    hour: parseInt(parts[6]) || 0,\n    minute: parseInt(parts[8]) || 0,\n    weekday: 0,\n    hasDay: !!parts[4],\n    hasTime: !!(parts[6] && parts[8]),\n    past: false,\n    present: false,\n    future: false,\n  }\n\n  updateWeekday(timestamp)\n  updateFormatted(timestamp)\n\n  if (now) {\n    updateRelative(timestamp, now, timestamp.hasTime)\n  }\n\n  return timestamp\n}\n\nexport function parseDate (date: Date): VTimestamp {\n  return updateFormatted({\n    date: '',\n    time: '',\n    year: date.getFullYear(),\n    month: date.getMonth() + 1,\n    day: date.getDate(),\n    weekday: date.getDay(),\n    hour: date.getHours(),\n    minute: date.getMinutes(),\n    hasDay: true,\n    hasTime: true,\n    past: false,\n    present: true,\n    future: false,\n  })\n}\n\nexport function getDayIdentifier (timestamp: VTimestamp): number {\n  return timestamp.year * 10000 + timestamp.month * 100 + timestamp.day\n}\n\nexport function getTimeIdentifier (timestamp: VTimestamp): number {\n  return timestamp.hour * 100 + timestamp.minute\n}\n\nexport function getTimestampIdentifier (timestamp: VTimestamp): number {\n  return getDayIdentifier(timestamp) * 10000 + getTimeIdentifier(timestamp)\n}\n\nexport function updateRelative (timestamp: VTimestamp, now: VTimestamp, time = false): VTimestamp {\n  let a = getDayIdentifier(now)\n  let b = getDayIdentifier(timestamp)\n  let present = a === b\n\n  if (timestamp.hasTime && time && present) {\n    a = getTimeIdentifier(now)\n    b = getTimeIdentifier(timestamp)\n    present = a === b\n  }\n\n  timestamp.past = b < a\n  timestamp.present = present\n  timestamp.future = b > a\n\n  return timestamp\n}\n\nexport function updateMinutes (timestamp: VTimestamp, minutes: number, now?: VTimestamp): VTimestamp {\n  timestamp.hasTime = true\n  timestamp.hour = Math.floor(minutes / MINUTES_IN_HOUR)\n  timestamp.minute = minutes % MINUTES_IN_HOUR\n  timestamp.time = getTime(timestamp)\n  if (now) {\n    updateRelative(timestamp, now, true)\n  }\n\n  return timestamp\n}\n\nexport function updateWeekday (timestamp: VTimestamp): VTimestamp {\n  timestamp.weekday = getWeekday(timestamp)\n\n  return timestamp\n}\n\nexport function updateFormatted (timestamp: VTimestamp): VTimestamp {\n  timestamp.time = getTime(timestamp)\n  timestamp.date = getDate(timestamp)\n\n  return timestamp\n}\n\nexport function getWeekday (timestamp: VTimestamp): number {\n  if (timestamp.hasDay) {\n    const _ = Math.floor\n    const k = timestamp.day\n    const m = ((timestamp.month + 9) % MONTH_MAX) + 1\n    const C = _(timestamp.year / 100)\n    const Y = (timestamp.year % 100) - (timestamp.month <= 2 ? 1 : 0)\n\n    return (((k + _(2.6 * m - 0.2) - 2 * C + Y + _(Y / 4) + _(C / 4)) % 7) + 7) % 7\n  }\n\n  return timestamp.weekday\n}\n\nexport function isLeapYear (year: number): boolean {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)\n}\n\nexport function daysInMonth (year: number, month: number) {\n  return isLeapYear(year) ? DAYS_IN_MONTH_LEAP[month] : DAYS_IN_MONTH[month]\n}\n\nexport function copyTimestamp (timestamp: VTimestamp): VTimestamp {\n  const { date, time, year, month, day, weekday, hour, minute, hasDay, hasTime, past, present, future } = timestamp\n\n  return { date, time, year, month, day, weekday, hour, minute, hasDay, hasTime, past, present, future }\n}\n\nexport function padNumber (x: number, length: number): string {\n  let padded = String(x)\n  while (padded.length < length) {\n    padded = '0' + padded\n  }\n\n  return padded\n}\n\nexport function getDate (timestamp: VTimestamp): string {\n  let str = `${padNumber(timestamp.year, 4)}-${padNumber(timestamp.month, 2)}`\n\n  if (timestamp.hasDay) str += `-${padNumber(timestamp.day, 2)}`\n\n  return str\n}\n\nexport function getTime (timestamp: VTimestamp): string {\n  if (!timestamp.hasTime) {\n    return ''\n  }\n\n  return `${padNumber(timestamp.hour, 2)}:${padNumber(timestamp.minute, 2)}`\n}\n\nexport function nextMinutes (timestamp: VTimestamp, minutes: number): VTimestamp {\n  timestamp.minute += minutes\n  while (timestamp.minute > MINUTES_IN_HOUR) {\n    timestamp.minute -= MINUTES_IN_HOUR\n    timestamp.hour++\n    if (timestamp.hour >= HOURS_IN_DAY) {\n      nextDay(timestamp)\n      timestamp.hour = FIRST_HOUR\n    }\n  }\n\n  return timestamp\n}\n\nexport function nextDay (timestamp: VTimestamp): VTimestamp {\n  timestamp.day++\n  timestamp.weekday = (timestamp.weekday + 1) % DAYS_IN_WEEK\n  if (timestamp.day > DAYS_IN_MONTH_MIN && timestamp.day > daysInMonth(timestamp.year, timestamp.month)) {\n    timestamp.day = DAY_MIN\n    timestamp.month++\n    if (timestamp.month > MONTH_MAX) {\n      timestamp.month = MONTH_MIN\n      timestamp.year++\n    }\n  }\n\n  return timestamp\n}\n\nexport function prevDay (timestamp: VTimestamp): VTimestamp {\n  timestamp.day--\n  timestamp.weekday = (timestamp.weekday + 6) % DAYS_IN_WEEK\n  if (timestamp.day < DAY_MIN) {\n    timestamp.month--\n    if (timestamp.month < MONTH_MIN) {\n      timestamp.year--\n      timestamp.month = MONTH_MAX\n    }\n    timestamp.day = daysInMonth(timestamp.year, timestamp.month)\n  }\n\n  return timestamp\n}\n\nexport function relativeDays (\n  timestamp: VTimestamp,\n  mover: VTimestampOperation = nextDay,\n  days = 1\n): VTimestamp {\n  while (--days >= 0) mover(timestamp)\n  return timestamp\n}\n\nexport function findWeekday (timestamp: VTimestamp, weekday: number,\n  mover: VTimestampOperation = nextDay, maxDays = 6): VTimestamp {\n  while (timestamp.weekday !== weekday && --maxDays >= 0) mover(timestamp)\n\n  return timestamp\n}\n\nexport function getWeekdaySkips (weekdays: number[]): number[] {\n  const skips: number[] = [1, 1, 1, 1, 1, 1, 1]\n  const filled: number[] = [0, 0, 0, 0, 0, 0, 0]\n  for (let i = 0; i < weekdays.length; i++) {\n    filled[weekdays[i]] = 1\n  }\n  for (let k = 0; k < DAYS_IN_WEEK; k++) {\n    let skip = 1\n    for (let j = 1; j < DAYS_IN_WEEK; j++) {\n      const next = (k + j) % DAYS_IN_WEEK\n      if (filled[next]) {\n        break\n      }\n      skip++\n    }\n    skips[k] = filled[k] * skip\n  }\n\n  return skips\n}\n\nexport function createDayList (\n  start: VTimestamp,\n  end: VTimestamp,\n  now: VTimestamp,\n  weekdaySkips: number[],\n  max = 42,\n  min = 0\n): VTimestamp[] {\n  const stop = getDayIdentifier(end)\n  const days: VTimestamp[] = []\n  let current = copyTimestamp(start)\n  let currentIdentifier = 0\n  let stopped = currentIdentifier === stop\n\n  if (stop < getDayIdentifier(start)) {\n    throw new Error('End date is earlier than start date.')\n  }\n\n  while ((!stopped || days.length < min) && days.length < max) {\n    currentIdentifier = getDayIdentifier(current)\n    stopped = stopped || currentIdentifier === stop\n    if (weekdaySkips[current.weekday] === 0) {\n      current = nextDay(current)\n      continue\n    }\n    const day = copyTimestamp(current)\n    updateFormatted(day)\n    updateRelative(day, now)\n    days.push(day)\n    current = relativeDays(current, nextDay, weekdaySkips[current.weekday])\n  }\n\n  if (!days.length) throw new Error('No dates found using specified start date, end date, and weekdays.')\n\n  return days\n}\n\nexport function createIntervalList (timestamp: VTimestamp, first: number,\n  minutes: number, count: number, now?: VTimestamp): VTimestamp[] {\n  const intervals: VTimestamp[] = []\n\n  for (let i = 0; i < count; i++) {\n    const mins = (first + i) * minutes\n    const int = copyTimestamp(timestamp)\n    intervals.push(updateMinutes(int, mins, now))\n  }\n\n  return intervals\n}\n\nexport function createNativeLocaleFormatter (locale: string, getOptions: VTimestampFormatOptions): VTimestampFormatter {\n  const emptyFormatter: VTimestampFormatter = (_t, _s) => ''\n\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return emptyFormatter\n  }\n\n  return (timestamp, short) => {\n    try {\n      const intlFormatter = new Intl.DateTimeFormat(locale || undefined, getOptions(timestamp, short))\n      const time = `${padNumber(timestamp.hour, 2)}:${padNumber(timestamp.minute, 2)}`\n      const date = timestamp.date\n      return intlFormatter.format(new Date(`${date}T${time}:00+00:00`))\n    } catch (e) {\n      return ''\n    }\n  }\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    outlined: Boolean,\n    raised: Boolean,\n    shaped: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.loading || this.disabled,\n        'v-card--outlined': this.outlined,\n        'v-card--raised': this.raised,\n        'v-card--shaped': this.shaped,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n","import VCard from './VCard'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VCardActions = createSimpleFunctional('v-card__actions')\nconst VCardSubtitle = createSimpleFunctional('v-card__subtitle')\nconst VCardText = createSimpleFunctional('v-card__text')\nconst VCardTitle = createSimpleFunctional('v-card__title')\n\nexport {\n  VCard,\n  VCardActions,\n  VCardSubtitle,\n  VCardText,\n  VCardTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCard,\n    VCardActions,\n    VCardSubtitle,\n    VCardText,\n    VCardTitle,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VCarousel.sass'\n\n// Extensions\nimport VWindow from '../VWindow/VWindow'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\nimport VProgressLinear from '../VProgressLinear'\n\n// Mixins\n// TODO: Move this into core components v2.0\nimport ButtonGroup from '../../mixins/button-group'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport default VWindow.extend({\n  name: 'v-carousel',\n\n  props: {\n    continuous: {\n      type: Boolean,\n      default: true,\n    },\n    cycle: Boolean,\n    delimiterIcon: {\n      type: String,\n      default: '$delimiter',\n    },\n    height: {\n      type: [Number, String],\n      default: 500,\n    },\n    hideDelimiters: Boolean,\n    hideDelimiterBackground: Boolean,\n    interval: {\n      type: [Number, String],\n      default: 6000,\n      validator: (value: string | number) => value > 0,\n    },\n    mandatory: {\n      type: Boolean,\n      default: true,\n    },\n    progress: Boolean,\n    progressColor: String,\n    showArrows: {\n      type: Boolean,\n      default: true,\n    },\n    verticalDelimiters: {\n      type: String,\n      default: undefined,\n    } as PropValidator<'' | 'left' | 'right'>,\n  },\n\n  data () {\n    return {\n      internalHeight: this.height,\n      slideTimeout: undefined as number | undefined,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VWindow.options.computed.classes.call(this),\n        'v-carousel': true,\n        'v-carousel--hide-delimiter-background': this.hideDelimiterBackground,\n        'v-carousel--vertical-delimiters': this.isVertical,\n      }\n    },\n    isDark (): boolean {\n      return this.dark || !this.light\n    },\n    isVertical (): boolean {\n      return this.verticalDelimiters != null\n    },\n  },\n\n  watch: {\n    internalValue: 'restartTimeout',\n    interval: 'restartTimeout',\n    height (val, oldVal) {\n      if (val === oldVal || !val) return\n      this.internalHeight = val\n    },\n    cycle (val) {\n      if (val) {\n        this.restartTimeout()\n      } else {\n        clearTimeout(this.slideTimeout)\n        this.slideTimeout = undefined\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('hide-controls')) {\n      breaking('hide-controls', ':show-arrows=\"false\"', this)\n    }\n  },\n\n  mounted () {\n    this.startTimeout()\n  },\n\n  methods: {\n    genControlIcons () {\n      if (this.isVertical) return null\n\n      return VWindow.options.methods.genControlIcons.call(this)\n    },\n    genDelimiters (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-carousel__controls',\n        style: {\n          left: this.verticalDelimiters === 'left' && this.isVertical ? 0 : 'auto',\n          right: this.verticalDelimiters === 'right' ? 0 : 'auto',\n        },\n      }, [this.genItems()])\n    },\n    genItems (): VNode {\n      const length = this.items.length\n      const children = []\n\n      for (let i = 0; i < length; i++) {\n        const child = this.$createElement(VBtn, {\n          staticClass: 'v-carousel__controls__item',\n          attrs: {\n            'aria-label': this.$vuetify.lang.t('$vuetify.carousel.ariaLabel.delimiter', i + 1, length),\n          },\n          props: {\n            icon: true,\n            small: true,\n            value: this.getValue(this.items[i], i),\n          },\n        }, [\n          this.$createElement(VIcon, {\n            props: { size: 18 },\n          }, this.delimiterIcon),\n        ])\n\n        children.push(child)\n      }\n\n      return this.$createElement(ButtonGroup, {\n        props: {\n          value: this.internalValue,\n          mandatory: this.mandatory,\n        },\n        on: {\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n      }, children)\n    },\n    genProgress () {\n      return this.$createElement(VProgressLinear, {\n        staticClass: 'v-carousel__progress',\n        props: {\n          color: this.progressColor,\n          value: (this.internalIndex + 1) / this.items.length * 100,\n        },\n      })\n    },\n    restartTimeout () {\n      this.slideTimeout && clearTimeout(this.slideTimeout)\n      this.slideTimeout = undefined\n\n      window.requestAnimationFrame(this.startTimeout)\n    },\n    startTimeout () {\n      if (!this.cycle) return\n\n      this.slideTimeout = window.setTimeout(this.next, +this.interval > 0 ? +this.interval : 6000)\n    },\n  },\n\n  render (h): VNode {\n    const render = VWindow.options.render.call(this, h)\n\n    render.data!.style = `height: ${convertToUnit(this.height)};`\n\n    /* istanbul ignore else */\n    if (!this.hideDelimiters) {\n      render.children!.push(this.genDelimiters())\n    }\n\n    /* istanbul ignore else */\n    if (this.progress || this.progressColor) {\n      render.children!.push(this.genProgress())\n    }\n\n    return render\n  },\n})\n","// Extensions\nimport VWindowItem from '../VWindow/VWindowItem'\n\n// Components\nimport { VImg } from '../VImg'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport Routable from '../../mixins/routable'\n\n// Types\nconst baseMixins = mixins(\n  VWindowItem,\n  Routable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-carousel-item',\n\n  inheritAttrs: false,\n\n  methods: {\n    genDefaultSlot () {\n      return [\n        this.$createElement(VImg, {\n          staticClass: 'v-carousel__item',\n          props: {\n            ...this.$attrs,\n            height: this.windowGroup.internalHeight,\n          },\n          on: this.$listeners,\n        }, [\n          this.$slots.default,\n          this.$createElement('template', {\n            slot: 'placeholder',\n          }, this.$slots.placeholder),\n        ]),\n      ]\n    },\n    genWindowItem () {\n      const { tag, data } = this.generateRouteLink()\n\n      data.staticClass = 'v-window-item'\n      data.directives!.push({\n        name: 'show',\n        value: this.isActive,\n      })\n\n      return this.$createElement(tag, data, this.showLazyContent(this.genDefaultSlot()))\n    },\n  },\n})\n","import VCarousel from './VCarousel'\nimport VCarouselItem from './VCarouselItem'\n\nexport { VCarousel, VCarouselItem }\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCarousel,\n    VCarouselItem,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.disabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput('checkbox', {\n          ...this.attrs$,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.validationState)),\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n","// extracted by mini-css-extract-plugin","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data }): VNode {\n    const children = []\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    const classes = {\n      'v-simple-checkbox': true,\n      'v-simple-checkbox--disabled': props.disabled,\n    }\n\n    return h('div', {\n      ...data,\n      class: classes,\n      on: {\n        click: (e: MouseEvent) => {\n          e.stopPropagation()\n\n          if (data.on && data.on.input && !props.disabled) {\n            wrapInArray(data.on.input).forEach(f => f(!props.value))\n          }\n        },\n      },\n    }, children)\n  },\n})\n","import VCheckbox from './VCheckbox'\nimport VSimpleCheckbox from './VSimpleCheckbox'\n\nexport { VCheckbox, VSimpleCheckbox }\nexport default {\n  $_vuetify_subcomponents: {\n    VCheckbox,\n    VSimpleCheckbox,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropValidator<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VChipGroup.sass'\n\n// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  BaseSlideGroup,\n  Colorable\n).extend({\n  name: 'v-chip-group',\n\n  provide () {\n    return {\n      chipGroup: this,\n    }\n  },\n\n  props: {\n    column: Boolean,\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-chip-group': true,\n        'v-chip-group--column': this.column,\n      }\n    },\n  },\n\n  watch: {\n    column (val) {\n      if (val) this.scrollOffset = 0\n\n      this.$nextTick(this.onResize)\n    },\n  },\n\n  methods: {\n    genData () {\n      return this.setTextColor(this.color, {\n        ...BaseSlideGroup.options.methods.genData.call(this),\n      })\n    },\n  },\n})\n","import VChipGroup from './VChipGroup'\n\nexport { VChipGroup }\nexport default VChipGroup\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VColorPicker.sass'\n\n// Components\nimport VSheet from '../VSheet/VSheet'\nimport VColorPickerPreview from './VColorPickerPreview'\nimport VColorPickerCanvas from './VColorPickerCanvas'\nimport VColorPickerEdit, { Mode, modes } from './VColorPickerEdit'\nimport VColorPickerSwatches from './VColorPickerSwatches'\n\n// Helpers\nimport { VColorPickerColor, parseColor, fromRGBA, extractColor, hasAlpha } from './util'\nimport mixins from '../../util/mixins'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport default mixins(Themeable).extend({\n  name: 'v-color-picker',\n\n  props: {\n    canvasHeight: {\n      type: [String, Number],\n      default: 150,\n    },\n    disabled: Boolean,\n    dotSize: {\n      type: [Number, String],\n      default: 10,\n    },\n    flat: Boolean,\n    hideCanvas: Boolean,\n    hideInputs: Boolean,\n    hideModeSwitch: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: (v: string) => Object.keys(modes).includes(v),\n    },\n    showSwatches: Boolean,\n    swatches: Array as PropValidator<string[][]>,\n    swatchesMaxHeight: {\n      type: [Number, String],\n      default: 150,\n    },\n    value: {\n      type: [Object, String],\n    },\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    internalValue: fromRGBA({ r: 255, g: 0, b: 0, a: 1 }),\n  }),\n\n  computed: {\n    hideAlpha (): boolean {\n      return this.value && !hasAlpha(this.value)\n    },\n  },\n\n  watch: {\n    value: {\n      handler (color: any) {\n        this.updateColor(parseColor(color, this.internalValue))\n      },\n      immediate: true,\n    },\n  },\n\n  methods: {\n    updateColor (color: VColorPickerColor) {\n      this.internalValue = color\n      const value = extractColor(this.internalValue, this.value)\n\n      if (value !== this.value) {\n        this.$emit('input', value)\n        this.$emit('update:color', this.internalValue)\n      }\n    },\n    genCanvas (): VNode {\n      return this.$createElement(VColorPickerCanvas, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          dotSize: this.dotSize,\n          width: this.width,\n          height: this.canvasHeight,\n        },\n        on: {\n          'update:color': this.updateColor,\n        },\n      })\n    },\n    genControls (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__controls',\n      }, [\n        this.genPreview(),\n        !this.hideInputs && this.genEdit(),\n      ])\n    },\n    genEdit (): VNode {\n      return this.$createElement(VColorPickerEdit, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha,\n          hideModeSwitch: this.hideModeSwitch,\n          mode: this.mode,\n        },\n        on: {\n          'update:color': this.updateColor,\n          'update:mode': (v: Mode) => this.$emit('update:mode', v),\n        },\n      })\n    },\n    genPreview (): VNode {\n      return this.$createElement(VColorPickerPreview, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha,\n        },\n        on: {\n          'update:color': this.updateColor,\n        },\n      })\n    },\n    genSwatches (): VNode {\n      return this.$createElement(VColorPickerSwatches, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          swatches: this.swatches,\n          color: this.internalValue,\n          maxHeight: this.swatchesMaxHeight,\n        },\n        on: {\n          'update:color': this.updateColor,\n        },\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h(VSheet, {\n      staticClass: 'v-color-picker',\n      class: {\n        'v-color-picker--flat': this.flat,\n        ...this.themeClasses,\n      },\n      props: {\n        maxWidth: this.width,\n      },\n    }, [\n      !this.hideCanvas && this.genCanvas(),\n      this.genControls(),\n      this.showSwatches && this.genSwatches(),\n    ])\n  },\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VColorPickerCanvas.sass'\n\n// Helpers\nimport { clamp, convertToUnit } from '../../util/helpers'\nimport { fromHSVA, VColorPickerColor, fromRGBA } from './util'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport default Vue.extend({\n  name: 'v-color-picker-canvas',\n\n  props: {\n    color: {\n      type: Object,\n      default: () => fromRGBA({ r: 255, g: 0, b: 0, a: 1 }),\n    } as PropValidator<VColorPickerColor>,\n    disabled: Boolean,\n    dotSize: {\n      type: [Number, String],\n      default: 10,\n    },\n    height: {\n      type: [Number, String],\n      default: 150,\n    },\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data () {\n    return {\n      boundingRect: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0,\n      } as ClientRect,\n    }\n  },\n\n  computed: {\n    dot (): { x: number, y: number} {\n      if (!this.color) return { x: 0, y: 0 }\n\n      return {\n        x: this.color.hsva.s * parseInt(this.width, 10),\n        y: (1 - this.color.hsva.v) * parseInt(this.height, 10),\n      }\n    },\n  },\n\n  watch: {\n    'color.hue': 'updateCanvas',\n  },\n\n  mounted () {\n    this.updateCanvas()\n  },\n\n  methods: {\n    emitColor (x: number, y: number) {\n      const { left, top, width, height } = this.boundingRect\n\n      this.$emit('update:color', fromHSVA({\n        h: this.color.hue,\n        s: clamp(x - left, 0, width) / width,\n        v: 1 - clamp(y - top, 0, height) / height,\n        a: this.color.alpha,\n      }))\n    },\n    updateCanvas () {\n      if (!this.color) return\n\n      const canvas = this.$refs.canvas as HTMLCanvasElement\n      const ctx = canvas.getContext('2d')\n\n      if (!ctx) return\n\n      const saturationGradient = ctx.createLinearGradient(0, 0, canvas.width, 0)\n      saturationGradient.addColorStop(0, 'hsla(0, 0%, 100%, 1)') // white\n      saturationGradient.addColorStop(1, `hsla(${this.color.hue}, 100%, 50%, 1)`)\n      ctx.fillStyle = saturationGradient\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n      const valueGradient = ctx.createLinearGradient(0, 0, 0, canvas.height)\n      valueGradient.addColorStop(0, 'hsla(0, 0%, 100%, 0)') // transparent\n      valueGradient.addColorStop(1, 'hsla(0, 0%, 0%, 1)') // black\n      ctx.fillStyle = valueGradient\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n    },\n    handleClick (e: MouseEvent) {\n      if (this.disabled) return\n\n      this.boundingRect = this.$el.getBoundingClientRect()\n      this.emitColor(e.clientX, e.clientY)\n    },\n    handleMouseDown (e: MouseEvent) {\n      // To prevent selection while moving cursor\n      e.preventDefault()\n\n      if (this.disabled) return\n\n      this.boundingRect = this.$el.getBoundingClientRect()\n\n      window.addEventListener('mousemove', this.handleMouseMove)\n      window.addEventListener('mouseup', this.handleMouseUp)\n    },\n    handleMouseMove (e: MouseEvent) {\n      if (this.disabled) return\n\n      this.emitColor(e.clientX, e.clientY)\n    },\n    handleMouseUp () {\n      window.removeEventListener('mousemove', this.handleMouseMove)\n      window.removeEventListener('mouseup', this.handleMouseUp)\n    },\n    genCanvas (): VNode {\n      return this.$createElement('canvas', {\n        ref: 'canvas',\n        attrs: {\n          width: this.width,\n          height: this.height,\n        },\n      })\n    },\n    genDot (): VNode {\n      const radius = parseInt(this.dotSize, 10) / 2\n      const x = convertToUnit(this.dot.x - radius)\n      const y = convertToUnit(this.dot.y - radius)\n\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__canvas-dot',\n        class: {\n          'v-color-picker__canvas-dot--disabled': this.disabled,\n        },\n        style: {\n          width: convertToUnit(this.dotSize),\n          height: convertToUnit(this.dotSize),\n          transform: `translate(${x}, ${y})`,\n        },\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-color-picker__canvas',\n      style: {\n        width: convertToUnit(this.width),\n        height: convertToUnit(this.height),\n      },\n      on: {\n        click: this.handleClick,\n        mousedown: this.handleMouseDown,\n      },\n    }, [\n      this.genCanvas(),\n      this.genDot(),\n    ])\n  },\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VColorPickerEdit.sass'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\n\n// Helpers\nimport { parseHex } from '../../util/colorUtils'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { VColorPickerColor, fromRGBA, fromHexa, fromHSLA } from './util'\n\ntype Input = [string, number, string]\n\nexport type Mode = {\n  inputs?: Input[]\n  from: Function\n}\n\nexport const modes = {\n  rgba: {\n    inputs: [\n      ['r', 255, 'int'],\n      ['g', 255, 'int'],\n      ['b', 255, 'int'],\n      ['a', 1, 'float'],\n    ],\n    from: fromRGBA,\n  },\n  hsla: {\n    inputs: [\n      ['h', 360, 'int'],\n      ['s', 1, 'float'],\n      ['l', 1, 'float'],\n      ['a', 1, 'float'],\n    ],\n    from: fromHSLA,\n  },\n  hexa: {\n    from: fromHexa,\n  },\n} as { [key: string]: Mode }\n\nexport default Vue.extend({\n  name: 'v-color-picker-edit',\n\n  props: {\n    color: Object as PropValidator<VColorPickerColor>,\n    disabled: Boolean,\n    hideAlpha: Boolean,\n    hideModeSwitch: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: (v: string) => Object.keys(modes).includes(v),\n    },\n  },\n\n  data () {\n    return {\n      modes,\n      internalMode: this.mode,\n    }\n  },\n\n  computed: {\n    currentMode (): Mode {\n      return this.modes[this.internalMode]\n    },\n  },\n\n  watch: {\n    mode (mode) {\n      this.internalMode = mode\n    },\n  },\n\n  created () {\n    this.internalMode = this.mode\n  },\n\n  methods: {\n    getValue (v: any, type: string) {\n      if (type === 'float') return Math.round(v * 100) / 100\n      else if (type === 'int') return Math.round(v)\n      else return 0\n    },\n    parseValue (v: string, type: string) {\n      if (type === 'float') return parseFloat(v)\n      else if (type === 'int') return parseInt(v, 10) || 0\n      else return 0\n    },\n    changeMode () {\n      const modes = Object.keys(this.modes)\n      const index = modes.indexOf(this.internalMode)\n      const newMode = modes[(index + 1) % modes.length]\n      this.internalMode = newMode\n      this.$emit('update:mode', newMode)\n    },\n    genInput (target: string, attrs: any, value: any, on: any): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__input',\n      }, [\n        this.$createElement('input', {\n          key: target,\n          attrs,\n          domProps: {\n            value,\n          },\n          on,\n        }),\n        this.$createElement('span', target.toUpperCase()),\n      ])\n    },\n    genInputs (): VNode[] | VNode {\n      switch (this.internalMode) {\n        case 'hexa': {\n          const hex = this.color.hexa\n          const value = this.hideAlpha && hex.endsWith('FF') ? hex.substr(0, 7) : hex\n          return this.genInput(\n            'hex',\n            {\n              maxlength: this.hideAlpha ? 7 : 9,\n              disabled: this.disabled,\n            },\n            value,\n            {\n              change: (e: Event) => {\n                const el = e.target as HTMLInputElement\n                this.$emit('update:color', this.currentMode.from(parseHex(el.value)))\n              },\n            }\n          )\n        }\n        default: {\n          const inputs = this.hideAlpha ? this.currentMode.inputs!.slice(0, -1) : this.currentMode.inputs!\n          return inputs.map(([target, max, type]) => {\n            const value = this.color[this.internalMode as keyof VColorPickerColor] as any\n            return this.genInput(\n              target,\n              {\n                type: 'number',\n                min: 0,\n                max,\n                step: type === 'float' ? '0.01' : type === 'int' ? '1' : undefined,\n                disabled: this.disabled,\n              },\n              this.getValue(value[target], type),\n              {\n                input: (e: Event) => {\n                  const el = e.target as HTMLInputElement\n                  const newVal = this.parseValue(el.value || '0', type)\n\n                  this.$emit('update:color', this.currentMode.from(\n                    Object.assign({}, value, { [target]: newVal }),\n                    this.color.alpha\n                  ))\n                },\n              }\n            )\n          })\n        }\n      }\n    },\n    genSwitch (): VNode {\n      return this.$createElement(VBtn, {\n        props: {\n          small: true,\n          icon: true,\n          disabled: this.disabled,\n        },\n        on: {\n          click: this.changeMode,\n        },\n      }, [\n        this.$createElement(VIcon, '$unfold'),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-color-picker__edit',\n    }, [\n      this.genInputs(),\n      !this.hideModeSwitch && this.genSwitch(),\n    ])\n  },\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VColorPickerPreview.sass'\n\n// Components\nimport VSlider from '../VSlider/VSlider'\n\n// Utilities\nimport { RGBtoCSS, RGBAtoCSS } from '../../util/colorUtils'\n\n// Types\nimport Vue, { VNode, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { VColorPickerColor, fromHSVA } from './util'\n\nexport default Vue.extend({\n  name: 'v-color-picker-preview',\n\n  props: {\n    color: Object as PropValidator<VColorPickerColor>,\n    disabled: Boolean,\n    hideAlpha: Boolean,\n  },\n\n  methods: {\n    genAlpha (): VNode {\n      return this.genTrack({\n        staticClass: 'v-color-picker__alpha',\n        props: {\n          thumbColor: 'grey lighten-2',\n          hideDetails: true,\n          value: this.color.alpha,\n          step: 0,\n          min: 0,\n          max: 1,\n        },\n        style: {\n          backgroundImage: !this.disabled\n            ? `linear-gradient(to right, transparent, ${RGBtoCSS(this.color.rgba)})`\n            : undefined,\n        },\n        on: {\n          input: (val: number) => this.color.alpha !== val && this.$emit('update:color', fromHSVA({ ...this.color.hsva, a: val })),\n        },\n      })\n    },\n    genSliders (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__sliders',\n      }, [\n        this.genHue(),\n        !this.hideAlpha && this.genAlpha(),\n      ])\n    },\n    genDot (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__dot',\n      }, [\n        this.$createElement('div', {\n          style: {\n            background: RGBAtoCSS(this.color.rgba),\n          },\n        }),\n      ])\n    },\n    genHue (): VNode {\n      return this.genTrack({\n        staticClass: 'v-color-picker__hue',\n        props: {\n          thumbColor: 'grey lighten-2',\n          hideDetails: true,\n          value: this.color.hue,\n          step: 0,\n          min: 0,\n          max: 360,\n        },\n        on: {\n          input: (val: number) => this.color.hue !== val && this.$emit('update:color', fromHSVA({ ...this.color.hsva, h: val })),\n        },\n      })\n    },\n    genTrack (options: VNodeData): VNode {\n      return this.$createElement(VSlider, {\n        class: 'v-color-picker__track',\n        ...options,\n        props: {\n          disabled: this.disabled,\n          ...options.props,\n        },\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-color-picker__preview',\n      class: {\n        'v-color-picker__preview--hide-alpha': this.hideAlpha,\n      },\n    }, [\n      this.genDot(),\n      this.genSliders(),\n    ])\n  },\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VColorPickerSwatches.sass'\n\n// Components\nimport VIcon from '../VIcon'\n\n// Helpers\nimport colors from '../../util/colors'\nimport { VColorPickerColor, fromHex, parseColor } from './util'\nimport { convertToUnit, deepEqual } from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { contrastRatio } from '../../util/colorUtils'\n\nfunction parseDefaultColors (colors: Record<string, Record<string, string>>) {\n  return Object.keys(colors).map(key => {\n    const color = colors[key]\n    return color.base ? [\n      color.base,\n      color.darken4,\n      color.darken3,\n      color.darken2,\n      color.darken1,\n      color.lighten1,\n      color.lighten2,\n      color.lighten3,\n      color.lighten4,\n      color.lighten5,\n    ] : [\n      color.black,\n      color.white,\n      color.transparent,\n    ]\n  })\n}\n\nconst white = fromHex('#FFFFFF').rgba\nconst black = fromHex('#000000').rgba\n\nexport default mixins(Themeable).extend({\n  name: 'v-color-picker-swatches',\n\n  props: {\n    swatches: {\n      type: Array,\n      default: () => parseDefaultColors(colors),\n    } as PropValidator<string[][]>,\n    color: Object as PropValidator<VColorPickerColor>,\n    maxWidth: [Number, String],\n    maxHeight: [Number, String],\n  },\n\n  methods: {\n    genColor (color: string) {\n      const content = this.$createElement('div', {\n        style: {\n          background: color,\n        },\n      }, [\n        deepEqual(this.color, parseColor(color, null)) && this.$createElement(VIcon, {\n          props: {\n            small: true,\n            dark: contrastRatio(this.color.rgba, white) > 2 && this.color.alpha > 0.5,\n            light: contrastRatio(this.color.rgba, black) > 2 && this.color.alpha > 0.5,\n          },\n        }, '$success'),\n      ])\n\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__color',\n        on: {\n          // TODO: Less hacky way of catching transparent\n          click: () => this.$emit('update:color', fromHex(color === 'transparent' ? '#00000000' : color)),\n        },\n      }, [content])\n    },\n    genSwatches () {\n      return this.swatches.map(swatch => {\n        const colors = swatch.map(this.genColor)\n\n        return this.$createElement('div', {\n          staticClass: 'v-color-picker__swatch',\n        }, colors)\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-color-picker__swatches',\n      style: {\n        maxWidth: convertToUnit(this.maxWidth),\n        maxHeight: convertToUnit(this.maxHeight),\n      },\n    }, [\n      this.$createElement('div', this.genSwatches()),\n    ])\n  },\n})\n","import VColorPicker from './VColorPicker'\nimport VColorPickerSwatches from './VColorPickerSwatches'\nimport VColorPickerCanvas from './VColorPickerCanvas'\n\nexport { VColorPicker, VColorPickerSwatches, VColorPickerCanvas }\nexport default VColorPicker\n","// Utilities\nimport {\n  HSVA,\n  HSVAtoRGBA,\n  HSVAtoHex,\n  RGBA,\n  Hex,\n  RGBAtoHSVA,\n  HexToHSVA,\n  HSLA,\n  HSVAtoHSLA,\n  RGBAtoHex,\n  HSLAtoHSVA,\n  parseHex,\n  Hexa,\n} from '../../../util/colorUtils'\n\nexport interface VColorPickerColor {\n  alpha: number\n  hex: Hex\n  hexa: Hexa\n  hsla: HSLA\n  hsva: HSVA\n  hue: number\n  rgba: RGBA\n}\n\nexport function fromHSVA (hsva: HSVA): VColorPickerColor {\n  hsva = { ...hsva }\n  const hexa = HSVAtoHex(hsva)\n  const hsla = HSVAtoHSLA(hsva)\n  const rgba = HSVAtoRGBA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHSLA (hsla: HSLA): VColorPickerColor {\n  const hsva = HSLAtoHSVA(hsla)\n  const hexa = HSVAtoHex(hsva)\n  const rgba = HSVAtoRGBA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromRGBA (rgba: RGBA): VColorPickerColor {\n  const hsva = RGBAtoHSVA(rgba)\n  const hexa = RGBAtoHex(rgba)\n  const hsla = HSVAtoHSLA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHexa (hexa: Hexa): VColorPickerColor {\n  const hsva = HexToHSVA(hexa)\n  const hsla = HSVAtoHSLA(hsva)\n  const rgba = HSVAtoRGBA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHex (hex: Hex): VColorPickerColor {\n  return fromHexa(parseHex(hex))\n}\n\nfunction has (obj: object, key: string[]) {\n  return key.every(k => obj.hasOwnProperty(k))\n}\n\nexport function parseColor (color: any, oldColor: VColorPickerColor | null) {\n  if (!color) return fromRGBA({ r: 255, g: 0, b: 0, a: 1 })\n\n  if (typeof color === 'string') {\n    if (color === 'transparent') return fromHexa('#00000000')\n\n    const hex = parseHex(color)\n\n    if (oldColor && hex === oldColor.hexa) return oldColor\n    else return fromHexa(hex)\n  }\n\n  if (typeof color === 'object') {\n    if (color.hasOwnProperty('alpha')) return color\n\n    const a = color.hasOwnProperty('a') ? parseFloat(color.a) : 1\n\n    if (has(color, ['r', 'g', 'b'])) {\n      if (oldColor && color === oldColor.rgba) return oldColor\n      else return fromRGBA({ ...color, a })\n    } else if (has(color, ['h', 's', 'l'])) {\n      if (oldColor && color === oldColor.hsla) return oldColor\n      else return fromHSLA({ ...color, a })\n    } else if (has(color, ['h', 's', 'v'])) {\n      if (oldColor && color === oldColor.hsva) return oldColor\n      else return fromHSVA({ ...color, a })\n    }\n  }\n\n  return fromRGBA({ r: 255, g: 0, b: 0, a: 1 })\n}\n\nexport function extractColor (color: VColorPickerColor, input: any) {\n  if (input == null) return color\n\n  if (typeof input === 'string') {\n    return input.length === 7 ? color.hex : color.hexa\n  }\n\n  if (typeof input === 'object') {\n    if (has(input, ['r', 'g', 'b'])) return color.rgba\n    else if (has(input, ['h', 's', 'l'])) return color.hsla\n    else if (has(input, ['h', 's', 'v'])) return color.hsva\n  }\n\n  return color\n}\n\nexport function hasAlpha (color: any) {\n  if (!color) return false\n\n  if (typeof color === 'string') {\n    return color.length > 7\n  }\n\n  if (typeof color === 'object') {\n    return has(color, ['a'])\n  }\n\n  return false\n}\n","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    counterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n\n      this.$nextTick(() => {\n        // If has menu index, let v-select-list handle\n        if (this.getMenuIndex() > -1) return\n        this.updateSelf()\n      })\n    },\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      if (!this.autoSelectFirst) return\n\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value != null ? value : this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      value[this.editingIndex] = this.internalSearch\n\n      this.setValue(value)\n\n      this.editingIndex = -1\n    },\n    updateCombobox () {\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n\n      // If search is not dirty and is\n      // using slot, do nothing\n      if (isUsingSlot && !this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot\n      // to avoid a double input\n      if (isUsingSlot) this.internalSearch = undefined\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // do nothing\n      if (menuIndex < 0 &&\n        !this.searchIsDirty\n      ) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch)\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(this.internalSearch)\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData!.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n  },\n})\n","import VCombobox from './VCombobox'\n\nexport { VCombobox }\nexport default VCombobox\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VContent.sass'\n\n// Mixins\nimport SSRBootable from '../../mixins/ssr-bootable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default SSRBootable.extend({\n  name: 'v-content',\n\n  props: {\n    tag: {\n      type: String,\n      default: 'main',\n    },\n  },\n\n  computed: {\n    styles (): object {\n      const {\n        bar, top, right, footer, insetFooter, bottom, left,\n      } = this.$vuetify.application\n\n      return {\n        paddingTop: `${top + bar}px`,\n        paddingRight: `${right}px`,\n        paddingBottom: `${footer + insetFooter + bottom}px`,\n        paddingLeft: `${left}px`,\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-content',\n      style: this.styles,\n      ref: 'content',\n    }\n\n    return h(this.tag, data, [\n      h(\n        'div',\n        { staticClass: 'v-content__wrap' },\n        this.$slots.default\n      ),\n    ])\n  },\n})\n","import VContent from './VContent'\n\nexport { VContent }\n\nexport default VContent\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Helpers\nimport { wrapInArray, sortItems, deepEqual, groupByProperty, searchItems } from '../../util/helpers'\nimport Vue, { VNode, PropType } from 'vue'\n\nexport interface DataOptions {\n  page: number\n  itemsPerPage: number\n  sortBy: string[]\n  sortDesc: boolean[]\n  groupBy: string[]\n  groupDesc: boolean[]\n  multiSort: boolean\n  mustSort: boolean\n}\n\nexport interface DataPagination {\n  page: number\n  itemsPerPage: number\n  pageStart: number\n  pageStop: number\n  pageCount: number\n  itemsLength: number\n}\n\nexport interface DataProps {\n  originalItemsLength: number\n  items: any[]\n  pagination: DataPagination\n  options: DataOptions\n  updateOptions: (obj: any) => void\n  sort: (value: string) => void\n  group: (value: string) => void\n  groupedItems: Record<string, any[]> | null\n}\n\nexport default Vue.extend({\n  name: 'v-data',\n\n  inheritAttrs: false,\n\n  props: {\n    items: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n    options: {\n      type: Object,\n      default: () => ({}),\n    },\n    sortBy: {\n      type: [String, Array] as PropType<string | string[]>,\n      default: () => [],\n    },\n    sortDesc: {\n      type: [Boolean, Array] as PropType<boolean | boolean[]>,\n      default: () => [],\n    },\n    customSort: {\n      type: Function as any as PropType<typeof sortItems>,\n      default: sortItems,\n    },\n    mustSort: Boolean,\n    multiSort: Boolean,\n    page: {\n      type: Number,\n      default: 1,\n    },\n    itemsPerPage: {\n      type: Number,\n      default: 10,\n    },\n    groupBy: {\n      type: [String, Array] as PropType<string | string[]>,\n      default: () => [],\n    },\n    groupDesc: {\n      type: [Boolean, Array] as PropType<boolean | boolean[]>,\n      default: () => [],\n    },\n    locale: {\n      type: String,\n      default: 'en-US',\n    },\n    disableSort: Boolean,\n    disablePagination: Boolean,\n    disableFiltering: Boolean,\n    search: String,\n    customFilter: {\n      type: Function as any as PropType<typeof searchItems>,\n      default: searchItems,\n    },\n    serverItemsLength: {\n      type: Number,\n      default: -1,\n    },\n  },\n\n  data () {\n    let internalOptions: DataOptions = {\n      page: this.page,\n      itemsPerPage: this.itemsPerPage,\n      sortBy: wrapInArray(this.sortBy),\n      sortDesc: wrapInArray(this.sortDesc),\n      groupBy: wrapInArray(this.groupBy),\n      groupDesc: wrapInArray(this.groupDesc),\n      mustSort: this.mustSort,\n      multiSort: this.multiSort,\n    }\n\n    if (this.options) {\n      internalOptions = Object.assign(internalOptions, this.options)\n    }\n\n    return {\n      internalOptions,\n    }\n  },\n\n  computed: {\n    itemsLength (): number {\n      return this.serverItemsLength >= 0 ? this.serverItemsLength : this.filteredItems.length\n    },\n    pageCount (): number {\n      return this.internalOptions.itemsPerPage === -1\n        ? 1\n        : Math.ceil(this.itemsLength / this.internalOptions.itemsPerPage) // TODO: can't use items.length here\n    },\n    pageStart (): number {\n      if (this.internalOptions.itemsPerPage === -1 || !this.items.length) return 0\n\n      return (this.internalOptions.page - 1) * this.internalOptions.itemsPerPage\n    },\n    pageStop (): number {\n      if (this.internalOptions.itemsPerPage === -1) return this.itemsLength\n      if (!this.items.length) return 0\n\n      return Math.min(this.itemsLength, this.internalOptions.page * this.internalOptions.itemsPerPage)\n    },\n    isGrouped (): boolean {\n      return !!this.internalOptions.groupBy.length\n    },\n    pagination (): DataPagination {\n      return {\n        page: this.internalOptions.page,\n        itemsPerPage: this.internalOptions.itemsPerPage,\n        pageStart: this.pageStart,\n        pageStop: this.pageStop,\n        pageCount: this.pageCount,\n        itemsLength: this.itemsLength,\n      }\n    },\n    filteredItems (): any[] {\n      let items = this.items.slice()\n\n      if (!this.disableFiltering && this.serverItemsLength <= 0) {\n        items = this.customFilter(items, this.search)\n      }\n\n      return items\n    },\n    computedItems (): any[] {\n      let items = this.filteredItems.slice()\n\n      if (!this.disableSort && this.serverItemsLength <= 0) {\n        items = this.sortItems(items)\n      }\n\n      if (!this.disablePagination && this.serverItemsLength <= 0) {\n        items = this.paginateItems(items)\n      }\n\n      return items\n    },\n    groupedItems (): Record<string, any[]> | null {\n      return this.isGrouped ? groupByProperty(this.computedItems, this.internalOptions.groupBy[0]) : null\n    },\n    scopedProps (): DataProps {\n      const props = {\n        sort: this.sort,\n        sortArray: this.sortArray,\n        group: this.group,\n        items: this.computedItems,\n        options: this.internalOptions,\n        updateOptions: this.updateOptions,\n        pagination: this.pagination,\n        groupedItems: this.groupedItems,\n        originalItemsLength: this.items.length,\n      }\n\n      return props\n    },\n    computedOptions (): DataOptions {\n      return { ...this.options } as DataOptions\n    },\n  },\n\n  watch: {\n    computedOptions: {\n      handler (options: DataOptions, old: DataOptions) {\n        if (deepEqual(options, old)) return\n\n        this.updateOptions(options)\n      },\n      deep: true,\n      immediate: true,\n    },\n    internalOptions: {\n      handler (options: DataOptions, old: DataOptions) {\n        if (deepEqual(options, old)) return\n        this.$emit('update:options', options)\n        this.$emit('pagination', this.pagination)\n      },\n      deep: true,\n      immediate: true,\n    },\n    page (page: number) {\n      this.updateOptions({ page })\n    },\n    'internalOptions.page' (page: number) {\n      this.$emit('update:page', page)\n    },\n    itemsPerPage (itemsPerPage: number) {\n      this.updateOptions({ itemsPerPage })\n    },\n    'internalOptions.itemsPerPage': {\n      handler (itemsPerPage: number) {\n        this.$emit('update:items-per-page', itemsPerPage)\n      },\n      immediate: true,\n    },\n    sortBy (sortBy: string | string[]) {\n      this.updateOptions({ sortBy: wrapInArray(sortBy) })\n    },\n    'internalOptions.sortBy' (sortBy: string[], old: string[]) {\n      !deepEqual(sortBy, old) && this.$emit('update:sort-by', Array.isArray(this.sortBy) ? sortBy : sortBy[0])\n    },\n    sortDesc (sortDesc: boolean | boolean[]) {\n      this.updateOptions({ sortDesc: wrapInArray(sortDesc) })\n    },\n    'internalOptions.sortDesc' (sortDesc: boolean[], old: boolean[]) {\n      !deepEqual(sortDesc, old) && this.$emit('update:sort-desc', Array.isArray(this.sortDesc) ? sortDesc : sortDesc[0])\n    },\n    groupBy (groupBy: string | string[]) {\n      this.updateOptions({ groupBy: wrapInArray(groupBy) })\n    },\n    'internalOptions.groupBy' (groupBy: string[], old: string[]) {\n      !deepEqual(groupBy, old) && this.$emit('update:group-by', Array.isArray(this.groupBy) ? groupBy : groupBy[0])\n    },\n    groupDesc (groupDesc: boolean | boolean[]) {\n      this.updateOptions({ groupDesc: wrapInArray(groupDesc) })\n    },\n    'internalOptions.groupDesc' (groupDesc: boolean[], old: boolean[]) {\n      !deepEqual(groupDesc, old) && this.$emit('update:group-desc', Array.isArray(this.groupDesc) ? groupDesc : groupDesc[0])\n    },\n    multiSort (multiSort: boolean) {\n      this.updateOptions({ multiSort })\n    },\n    'internalOptions.multiSort' (multiSort: boolean) {\n      this.$emit('update:multi-sort', multiSort)\n    },\n    mustSort (mustSort: boolean) {\n      this.updateOptions({ mustSort })\n    },\n    'internalOptions.mustSort' (mustSort: boolean) {\n      this.$emit('update:must-sort', mustSort)\n    },\n    pageCount: {\n      handler (pageCount: number) {\n        this.$emit('page-count', pageCount)\n      },\n      immediate: true,\n    },\n    computedItems: {\n      handler (computedItems: any[]) {\n        this.$emit('current-items', computedItems)\n      },\n      immediate: true,\n    },\n  },\n\n  methods: {\n    toggle (key: string, oldBy: string[], oldDesc: boolean[], page: number, mustSort: boolean, multiSort: boolean) {\n      let by = oldBy.slice()\n      let desc = oldDesc.slice()\n      const byIndex = by.findIndex((k: string) => k === key)\n\n      if (byIndex < 0) {\n        if (!multiSort) {\n          by = []\n          desc = []\n        }\n\n        by.push(key)\n        desc.push(false)\n      } else if (byIndex >= 0 && !desc[byIndex]) {\n        desc[byIndex] = true\n      } else if (!mustSort) {\n        by.splice(byIndex, 1)\n        desc.splice(byIndex, 1)\n      } else {\n        desc[byIndex] = false\n      }\n\n      // Reset page to 1 if sortBy or sortDesc have changed\n      if (!deepEqual(by, oldBy) || !deepEqual(desc, oldDesc)) {\n        page = 1\n      }\n\n      return { by, desc, page }\n    },\n    group (key: string): void {\n      const { by: groupBy, desc: groupDesc, page } = this.toggle(\n        key,\n        this.internalOptions.groupBy,\n        this.internalOptions.groupDesc,\n        this.internalOptions.page,\n        true,\n        false\n      )\n      this.updateOptions({ groupBy, groupDesc, page })\n    },\n    sort (key: string | string[]): void {\n      if (Array.isArray(key)) return this.sortArray(key)\n\n      const { by: sortBy, desc: sortDesc, page } = this.toggle(\n        key,\n        this.internalOptions.sortBy,\n        this.internalOptions.sortDesc,\n        this.internalOptions.page,\n        this.mustSort,\n        this.multiSort\n      )\n      this.updateOptions({ sortBy, sortDesc, page })\n    },\n    sortArray (sortBy: string[]) {\n      const sortDesc = sortBy.map(s => {\n        const i = this.internalOptions.sortBy.findIndex((k: string) => k === s)\n        return i > -1 ? this.internalOptions.sortDesc[i] : false\n      })\n\n      this.updateOptions({ sortBy, sortDesc })\n    },\n    updateOptions (options: any) {\n      this.internalOptions = {\n        ...this.internalOptions,\n        ...options,\n        page: this.serverItemsLength < 0\n          ? Math.max(1, Math.min(options.page || this.internalOptions.page, this.pageCount))\n          : options.page || this.internalOptions.page,\n      }\n    },\n    sortItems (items: any[]) {\n      const sortBy = this.internalOptions.groupBy.concat(this.internalOptions.sortBy)\n      const sortDesc = this.internalOptions.groupDesc.concat(this.internalOptions.sortDesc)\n      return this.customSort(items, sortBy, sortDesc, this.locale)\n    },\n    paginateItems (items: any[]) {\n      // Make sure we don't try to display non-existant page if items suddenly change\n      // TODO: Could possibly move this to pageStart/pageStop?\n      if (items.length < this.pageStart) this.internalOptions.page = 1\n\n      return items.slice(this.pageStart, this.pageStop)\n    },\n  },\n\n  render (): VNode {\n    return this.$scopedSlots.default && this.$scopedSlots.default(this.scopedProps) as any\n  },\n})\n","import VData from './VData'\n\nexport { VData }\n\nexport default VData\n","// extracted by mini-css-extract-plugin","import './VDataFooter.sass'\n\n// Components\nimport VSelect from '../VSelect/VSelect'\nimport VIcon from '../VIcon'\nimport VBtn from '../VBtn'\n\n// Types\nimport Vue, { VNode, VNodeChildrenArrayContents } from 'vue'\nimport { DataOptions, DataPagination } from '../VData/VData'\nimport { PropValidator } from 'vue/types/options'\n\nexport default Vue.extend({\n  name: 'v-data-footer',\n\n  props: {\n    options: {\n      type: Object,\n      required: true,\n    } as PropValidator<DataOptions>,\n    pagination: {\n      type: Object,\n      required: true,\n    } as PropValidator<DataPagination>,\n    itemsPerPageOptions: {\n      type: Array,\n      default: () => ([5, 10, 15, -1]),\n    } as PropValidator<any[]>,\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    firstIcon: {\n      type: String,\n      default: '$first',\n    },\n    lastIcon: {\n      type: String,\n      default: '$last',\n    },\n    itemsPerPageText: {\n      type: String,\n      default: '$vuetify.dataFooter.itemsPerPageText',\n    },\n    itemsPerPageAllText: {\n      type: String,\n      default: '$vuetify.dataFooter.itemsPerPageAll',\n    },\n    showFirstLastPage: Boolean,\n    showCurrentPage: Boolean,\n    disablePagination: Boolean,\n    disableItemsPerPage: Boolean,\n    pageText: {\n      type: String,\n      default: '$vuetify.dataFooter.pageText',\n    },\n  },\n\n  computed: {\n    disableNextPageIcon (): boolean {\n      return this.options.itemsPerPage < 0 ||\n        this.options.page * this.options.itemsPerPage >= this.pagination.itemsLength ||\n        this.pagination.pageStop < 0\n    },\n    computedItemsPerPageOptions (): any[] {\n      return this.itemsPerPageOptions.map(option => {\n        if (typeof option === 'object') return option\n        else return this.genItemsPerPageOption(option)\n      })\n    },\n  },\n\n  methods: {\n    updateOptions (obj: object) {\n      this.$emit('update:options', Object.assign({}, this.options, obj))\n    },\n    onFirstPage () {\n      this.updateOptions({ page: 1 })\n    },\n    onPreviousPage () {\n      this.updateOptions({ page: this.options.page - 1 })\n    },\n    onNextPage () {\n      this.updateOptions({ page: this.options.page + 1 })\n    },\n    onLastPage () {\n      this.updateOptions({ page: this.pagination.pageCount })\n    },\n    onChangeItemsPerPage (itemsPerPage: number) {\n      this.updateOptions({ itemsPerPage, page: 1 })\n    },\n    genItemsPerPageOption (option: number) {\n      return {\n        text: option === -1 ? this.$vuetify.lang.t(this.itemsPerPageAllText) : String(option),\n        value: option,\n      }\n    },\n    genItemsPerPageSelect () {\n      let value = this.options.itemsPerPage\n      const computedIPPO = this.computedItemsPerPageOptions\n\n      if (computedIPPO.length <= 1) return null\n\n      if (!computedIPPO.find(ippo => ippo.value === value)) value = computedIPPO[0]\n\n      return this.$createElement('div', {\n        staticClass: 'v-data-footer__select',\n      }, [\n        this.$vuetify.lang.t(this.itemsPerPageText),\n        this.$createElement(VSelect, {\n          attrs: {\n            'aria-label': this.itemsPerPageText,\n          },\n          props: {\n            disabled: this.disableItemsPerPage,\n            items: computedIPPO,\n            value,\n            hideDetails: true,\n            auto: true,\n            minWidth: '75px',\n          },\n          on: {\n            input: this.onChangeItemsPerPage,\n          },\n        }),\n      ])\n    },\n    genPaginationInfo () {\n      let children: VNodeChildrenArrayContents = ['–']\n\n      if (this.pagination.itemsLength) {\n        const itemsLength = this.pagination.itemsLength\n        const pageStart = this.pagination.pageStart + 1\n        const pageStop = itemsLength < this.pagination.pageStop || this.pagination.pageStop < 0\n          ? itemsLength\n          : this.pagination.pageStop\n\n        children = this.$scopedSlots['page-text']\n          ? [this.$scopedSlots['page-text']!({ pageStart, pageStop, itemsLength })]\n          : [this.$vuetify.lang.t(this.pageText, pageStart, pageStop, itemsLength)]\n      }\n\n      return this.$createElement('div', {\n        class: 'v-data-footer__pagination',\n      }, children)\n    },\n    genIcon (click: Function, disabled: boolean, label: string, icon: string): VNode {\n      return this.$createElement(VBtn, {\n        props: {\n          disabled: disabled || this.disablePagination,\n          icon: true,\n          text: true,\n          // dark: this.dark, // TODO: add mixin\n          // light: this.light // TODO: add mixin\n        },\n        on: {\n          click,\n        },\n        attrs: {\n          'aria-label': label, // TODO: Localization\n        },\n      }, [this.$createElement(VIcon, icon)])\n    },\n    genIcons () {\n      const before: VNodeChildrenArrayContents = []\n      const after: VNodeChildrenArrayContents = []\n\n      before.push(this.genIcon(\n        this.onPreviousPage,\n        this.options.page === 1,\n        this.$vuetify.lang.t('$vuetify.dataFooter.prevPage'),\n        this.$vuetify.rtl ? this.nextIcon : this.prevIcon\n      ))\n\n      after.push(this.genIcon(\n        this.onNextPage,\n        this.disableNextPageIcon,\n        this.$vuetify.lang.t('$vuetify.dataFooter.nextPage'),\n        this.$vuetify.rtl ? this.prevIcon : this.nextIcon\n      ))\n\n      if (this.showFirstLastPage) {\n        before.unshift(this.genIcon(\n          this.onFirstPage,\n          this.options.page === 1,\n          this.$vuetify.lang.t('$vuetify.dataFooter.firstPage'),\n          this.$vuetify.rtl ? this.lastIcon : this.firstIcon\n        ))\n\n        after.push(this.genIcon(\n          this.onLastPage,\n          this.options.page >= this.pagination.pageCount || this.options.itemsPerPage === -1,\n          this.$vuetify.lang.t('$vuetify.dataFooter.lastPage'),\n          this.$vuetify.rtl ? this.firstIcon : this.lastIcon\n        ))\n      }\n\n      return [\n        this.$createElement('div', {\n          staticClass: 'v-data-footer__icons-before',\n        }, before),\n        this.showCurrentPage && this.$createElement('span', [this.options.page.toString()]),\n        this.$createElement('div', {\n          staticClass: 'v-data-footer__icons-after',\n        }, after),\n      ]\n    },\n  },\n\n  render (): VNode {\n    return this.$createElement('div', {\n      staticClass: 'v-data-footer',\n    }, [\n      this.genItemsPerPageSelect(),\n      this.genPaginationInfo(),\n      this.genIcons(),\n    ])\n  },\n})\n","import { VNode, VNodeChildren } from 'vue'\n\n// Components\nimport { VData } from '../VData'\nimport VDataFooter from './VDataFooter'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport { deepEqual, getObjectValueByPath, getPrefixedScopedSlots, getSlot, camelizeObjectKeys } from '../../util/helpers'\nimport { DataProps } from '../VData/VData'\nimport { PropValidator } from 'vue/types/options'\nimport { breaking, removed } from '../../util/console'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-data-iterator',\n\n  props: {\n    ...VData.options.props, // TODO: filter out props not used\n    itemKey: {\n      type: String,\n      default: 'id',\n    },\n    value: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    singleSelect: Boolean,\n    expanded: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    singleExpand: Boolean,\n    loading: [Boolean, String],\n    noResultsText: {\n      type: String,\n      default: '$vuetify.dataIterator.noResultsText',\n    },\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n    loadingText: {\n      type: String,\n      default: '$vuetify.dataIterator.loadingText',\n    },\n    hideDefaultFooter: Boolean,\n    footerProps: Object,\n  },\n\n  data: () => ({\n    selection: {} as Record<string, any>,\n    expansion: {} as Record<string, boolean>,\n    internalCurrentItems: [] as any[],\n  }),\n\n  computed: {\n    everyItem (): boolean {\n      return !!this.internalCurrentItems.length && this.internalCurrentItems.every((i: any) => this.isSelected(i))\n    },\n    someItems (): boolean {\n      return this.internalCurrentItems.some((i: any) => this.isSelected(i))\n    },\n    sanitizedFooterProps (): Record<string, any> {\n      return camelizeObjectKeys(this.footerProps)\n    },\n  },\n\n  watch: {\n    value: {\n      handler (value: any[]) {\n        this.selection = value.reduce((selection, item) => {\n          selection[getObjectValueByPath(item, this.itemKey)] = item\n          return selection\n        }, {})\n      },\n      immediate: true,\n    },\n    selection (value: Record<string, boolean>, old: Record<string, boolean>) {\n      if (deepEqual(Object.keys(value), Object.keys(old))) return\n\n      this.$emit('input', Object.values(value))\n    },\n    expanded: {\n      handler (value: any[]) {\n        this.expansion = value.reduce((expansion, item) => {\n          expansion[getObjectValueByPath(item, this.itemKey)] = true\n          return expansion\n        }, {})\n      },\n      immediate: true,\n    },\n    expansion (value: Record<string, boolean>, old: Record<string, boolean>) {\n      if (deepEqual(value, old)) return\n      const keys = Object.keys(value).filter(k => value[k])\n      const expanded = !keys.length ? [] : this.items.filter(i => keys.includes(String(getObjectValueByPath(i, this.itemKey))))\n      this.$emit('update:expanded', expanded)\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['disable-initial-sort', 'sort-by'],\n      ['filter', 'custom-filter'],\n      ['pagination', 'options'],\n      ['total-items', 'server-items-length'],\n      ['hide-actions', 'hide-default-footer'],\n      ['rows-per-page-items', 'footer-props.items-per-page-options'],\n      ['rows-per-page-text', 'footer-props.items-per-page-text'],\n      ['prev-icon', 'footer-props.prev-icon'],\n      ['next-icon', 'footer-props.next-icon'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n\n    const removedProps = [\n      'expand',\n      'content-class',\n      'content-props',\n      'content-tag',\n    ]\n\n    /* istanbul ignore next */\n    removedProps.forEach(prop => {\n      if (this.$attrs.hasOwnProperty(prop)) removed(prop)\n    })\n  },\n\n  methods: {\n    toggleSelectAll (value: boolean): void {\n      const selection = Object.assign({}, this.selection)\n\n      this.internalCurrentItems.forEach((item: any) => {\n        const key = getObjectValueByPath(item, this.itemKey)\n        if (value) selection[key] = item\n        else delete selection[key]\n      })\n\n      this.selection = selection\n      this.$emit('toggle-select-all', { value })\n    },\n    isSelected (item: any): boolean {\n      return !!this.selection[getObjectValueByPath(item, this.itemKey)] || false\n    },\n    select (item: any, value = true, emit = true): void {\n      const selection = this.singleSelect ? {} : Object.assign({}, this.selection)\n      const key = getObjectValueByPath(item, this.itemKey)\n\n      if (value) selection[key] = item\n      else delete selection[key]\n\n      this.selection = selection\n      emit && this.$emit('item-selected', { item, value })\n    },\n    isExpanded (item: any): boolean {\n      return this.expansion[getObjectValueByPath(item, this.itemKey)] || false\n    },\n    expand (item: any, value = true): void {\n      const expansion = this.singleExpand ? {} : Object.assign({}, this.expansion)\n      const key = getObjectValueByPath(item, this.itemKey)\n\n      if (value) expansion[key] = true\n      else delete expansion[key]\n\n      this.expansion = expansion\n      this.$emit('item-expanded', { item, value })\n    },\n    createItemProps (item: any) {\n      const props = {\n        item,\n        select: (v: boolean) => this.select(item, v),\n        isSelected: this.isSelected(item),\n        expand: (v: boolean) => this.expand(item, v),\n        isExpanded: this.isExpanded(item),\n      }\n\n      return props\n    },\n    genEmptyWrapper (content: VNodeChildren) {\n      return this.$createElement('div', content)\n    },\n    genEmpty (originalItemsLength: number, filteredItemsLength: number) {\n      if (originalItemsLength === 0 && this.loading) {\n        const loading = this.$slots['loading'] || this.$vuetify.lang.t(this.loadingText)\n        return this.genEmptyWrapper(loading)\n      } else if (originalItemsLength === 0) {\n        const noData = this.$slots['no-data'] || this.$vuetify.lang.t(this.noDataText)\n        return this.genEmptyWrapper(noData)\n      } else if (filteredItemsLength === 0) {\n        const noResults = this.$slots['no-results'] || this.$vuetify.lang.t(this.noResultsText)\n        return this.genEmptyWrapper(noResults)\n      }\n\n      return null\n    },\n    genItems (props: DataProps) {\n      const empty = this.genEmpty(props.originalItemsLength, props.pagination.itemsLength)\n      if (empty) return [empty]\n\n      if (this.$scopedSlots.default) {\n        return this.$scopedSlots.default({\n          ...props,\n          isSelected: this.isSelected,\n          select: this.select,\n          isExpanded: this.isExpanded,\n          expand: this.expand,\n        })\n      }\n\n      if (this.$scopedSlots.item) {\n        return props.items.map((item: any) => this.$scopedSlots.item!(this.createItemProps(item)))\n      }\n\n      return []\n    },\n    genFooter (props: DataProps) {\n      if (this.hideDefaultFooter) return null\n\n      const data = {\n        props: {\n          ...this.sanitizedFooterProps,\n          options: props.options,\n          pagination: props.pagination,\n        },\n        on: {\n          'update:options': (value: any) => props.updateOptions(value),\n        },\n      }\n\n      const scopedSlots = getPrefixedScopedSlots('footer.', this.$scopedSlots)\n\n      return this.$createElement(VDataFooter, {\n        scopedSlots,\n        ...data,\n      })\n    },\n    genDefaultScopedSlot (props: any) {\n      const outerProps = {\n        ...props,\n        someItems: this.someItems,\n        everyItem: this.everyItem,\n        toggleSelectAll: this.toggleSelectAll,\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-data-iterator',\n      }, [\n        getSlot(this, 'header', outerProps, true),\n        this.genItems(props),\n        this.genFooter(props),\n        getSlot(this, 'footer', outerProps, true),\n      ])\n    },\n  },\n\n  render (): VNode {\n    return this.$createElement(VData, {\n      props: this.$props,\n      on: {\n        'update:options': (v: any, old: any) => !deepEqual(v, old) && this.$emit('update:options', v),\n        'update:page': (v: any) => this.$emit('update:page', v),\n        'update:items-per-page': (v: any) => this.$emit('update:items-per-page', v),\n        'update:sort-by': (v: any) => this.$emit('update:sort-by', v),\n        'update:sort-desc': (v: any) => this.$emit('update:sort-desc', v),\n        'update:group-by': (v: any) => this.$emit('update:group-by', v),\n        'update:group-desc': (v: any) => this.$emit('update:group-desc', v),\n        pagination: (v: any, old: any) => !deepEqual(v, old) && this.$emit('pagination', v),\n        'current-items': (v: any[]) => {\n          this.internalCurrentItems = v\n          this.$emit('current-items', v)\n        },\n      },\n      scopedSlots: {\n        default: this.genDefaultScopedSlot,\n      },\n    })\n  },\n})\n","import VDataIterator from './VDataIterator'\nimport VDataFooter from './VDataFooter'\n\nexport { VDataIterator, VDataFooter }\nexport default {\n  $_vuetify_subcomponents: {\n    VDataIterator,\n    VDataFooter,\n  },\n}\n","import Vue, { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TableHeader } from './mixins/header'\nimport { getObjectValueByPath } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'row',\n\n  functional: true,\n\n  props: {\n    headers: Array as PropValidator<TableHeader[]>,\n    item: Object,\n    rtl: Boolean,\n  },\n\n  render (h, { props, slots, data }): VNode {\n    const computedSlots = slots()\n\n    const columns: VNode[] = props.headers.map((header: TableHeader) => {\n      const classes = {\n        'v-data-table__mobile-row': true,\n      }\n\n      const children = []\n      const value = getObjectValueByPath(props.item, header.value)\n\n      const slotName = header.value\n      const scopedSlot = data.scopedSlots && data.scopedSlots[slotName]\n      const regularSlot = computedSlots[slotName]\n\n      if (scopedSlot) {\n        children.push(scopedSlot({ item: props.item, header, value }))\n      } else if (regularSlot) {\n        children.push(regularSlot)\n      } else {\n        children.push(value)\n      }\n\n      return h('td', {\n        class: classes,\n      }, [\n        h('div', { staticClass: 'v-data-table__mobile-row__wrapper' }, [\n          header.value !== 'dataTableSelect' && h('div', { staticClass: 'v-data-table__mobile-row__header' }, [header.text]),\n          h('div', { staticClass: 'v-data-table__mobile-row__cell' }, children),\n        ]),\n      ])\n    })\n\n    return h('tr', data, columns)\n  },\n})\n","// Types\nimport Vue, { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TableHeader } from './mixins/header'\n\n// Utils\nimport { getObjectValueByPath } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'row',\n\n  functional: true,\n\n  props: {\n    headers: Array as PropValidator<TableHeader[]>,\n    item: Object,\n    rtl: Boolean,\n  },\n\n  render (h, { props, slots, data }): VNode {\n    const computedSlots = slots()\n\n    const columns: VNode[] = props.headers.map((header: TableHeader) => {\n      const children = []\n      const value = getObjectValueByPath(props.item, header.value)\n\n      const slotName = header.value\n      const scopedSlot = data.scopedSlots && data.scopedSlots[slotName]\n      const regularSlot = computedSlots[slotName]\n\n      if (scopedSlot) {\n        children.push(scopedSlot({ item: props.item, header, value }))\n      } else if (regularSlot) {\n        children.push(regularSlot)\n      } else {\n        children.push(value)\n      }\n\n      return h('td', {\n        class: `text-${header.align || 'start'}`,\n      }, children)\n    })\n\n    return h('tr', data, columns)\n  },\n})\n","import Vue, { VNode } from 'vue'\n\nexport default Vue.extend({\n  name: 'row-group',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: Boolean,\n      default: true,\n    },\n    headerClass: {\n      type: String,\n      default: 'v-row-group__header',\n    },\n    contentClass: String,\n    summaryClass: {\n      type: String,\n      default: 'v-row-group__summary',\n    },\n  },\n\n  render (h, { slots, props }): VNode {\n    const computedSlots = slots()\n    const children = []\n\n    if (computedSlots['column.header']) {\n      children.push(h('tr', {\n        staticClass: props.headerClass,\n      }, computedSlots['column.header']))\n    } else if (computedSlots['row.header']) {\n      children.push(...computedSlots['row.header'])\n    }\n\n    if (computedSlots['row.content'] && props.value) children.push(...computedSlots['row.content'])\n\n    if (computedSlots['column.summary']) {\n      children.push(h('tr', {\n        staticClass: props.summaryClass,\n      }, computedSlots['column.summary']))\n    } else if (computedSlots['row.summary']) {\n      children.push(...computedSlots['row.summary'])\n    }\n\n    return children as any\n  },\n})\n","// extracted by mini-css-extract-plugin","import './VDataTable.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { DataProps, DataPagination, DataOptions } from '../VData/VData'\nimport { TableHeader } from './mixins/header'\n\n// Components\nimport { VData } from '../VData'\nimport { VDataFooter, VDataIterator } from '../VDataIterator'\nimport VBtn from '../VBtn'\nimport VDataTableHeader from './VDataTableHeader'\n// import VVirtualTable from './VVirtualTable'\nimport VIcon from '../VIcon'\nimport VProgressLinear from '../VProgressLinear'\nimport Row from './Row'\nimport RowGroup from './RowGroup'\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VSimpleTable from './VSimpleTable'\nimport MobileRow from './MobileRow'\nimport ripple from '../../directives/ripple'\n\n// Helpers\nimport { deepEqual, getObjectValueByPath, compareFn, getPrefixedScopedSlots, getSlot, defaultFilter, FilterFn, camelizeObjectKeys } from '../../util/helpers'\nimport { breaking } from '../../util/console'\n\nfunction filterFn (item: any, search: string | null, filter: FilterFn) {\n  return (header: TableHeader) => {\n    const value = getObjectValueByPath(item, header.value)\n    return header.filter ? header.filter(value, search, item) : filter(value, search, item)\n  }\n}\n\nfunction searchTableItems (\n  items: any[],\n  search: string | null,\n  headersWithCustomFilters: TableHeader[],\n  headersWithoutCustomFilters: TableHeader[],\n  customFilter: FilterFn\n) {\n  let filtered = items\n  search = typeof search === 'string' ? search.trim() : null\n  if (search && headersWithoutCustomFilters.length) {\n    filtered = items.filter(item => headersWithoutCustomFilters.some(filterFn(item, search, customFilter)))\n  }\n\n  if (headersWithCustomFilters.length) {\n    filtered = filtered.filter(item => headersWithCustomFilters.every(filterFn(item, search, defaultFilter)))\n  }\n\n  return filtered\n}\n\n/* @vue/component */\nexport default VDataIterator.extend({\n  name: 'v-data-table',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    headers: {\n      type: Array,\n    } as PropValidator<TableHeader[]>,\n    showSelect: Boolean,\n    showExpand: Boolean,\n    showGroupBy: Boolean,\n    // TODO: Fix\n    // virtualRows: Boolean,\n    mobileBreakpoint: {\n      type: Number,\n      default: 600,\n    },\n    height: [Number, String],\n    hideDefaultHeader: Boolean,\n    caption: String,\n    dense: Boolean,\n    headerProps: Object,\n    calculateWidths: Boolean,\n    fixedHeader: Boolean,\n    headersLength: Number,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    customFilter: {\n      type: Function,\n      default: defaultFilter,\n    } as PropValidator<typeof defaultFilter>,\n  },\n\n  data () {\n    return {\n      internalGroupBy: [] as string[],\n      openCache: {} as { [key: string]: boolean },\n      widths: [] as number[],\n    }\n  },\n\n  computed: {\n    computedHeaders (): TableHeader[] {\n      if (!this.headers) return []\n      const headers = this.headers.filter(h => h.value === undefined || !this.internalGroupBy.find(v => v === h.value))\n      const defaultHeader = { text: '', sortable: false, width: '1px' }\n\n      if (this.showSelect) {\n        const index = headers.findIndex(h => h.value === 'data-table-select')\n        if (index < 0) headers.unshift({ ...defaultHeader, value: 'data-table-select' })\n        else headers.splice(index, 1, { ...defaultHeader, ...headers[index] })\n      }\n\n      if (this.showExpand) {\n        const index = headers.findIndex(h => h.value === 'data-table-expand')\n        if (index < 0) headers.unshift({ ...defaultHeader, value: 'data-table-expand' })\n        else headers.splice(index, 1, { ...defaultHeader, ...headers[index] })\n      }\n\n      return headers\n    },\n    colspanAttrs (): object | undefined {\n      return this.isMobile ? undefined : {\n        colspan: this.headersLength || this.computedHeaders.length,\n      }\n    },\n    isMobile (): boolean {\n      // Guard against SSR render\n      // https://github.com/vuetifyjs/vuetify/issues/7410\n      if (this.$vuetify.breakpoint.width === 0) return false\n\n      return this.$vuetify.breakpoint.width < this.mobileBreakpoint\n    },\n    columnSorters (): Record<string, compareFn> {\n      return this.computedHeaders.reduce<Record<string, compareFn>>((acc, header) => {\n        if (header.sort) acc[header.value] = header.sort\n        return acc\n      }, {})\n    },\n    headersWithCustomFilters (): TableHeader[] {\n      return this.computedHeaders.filter(header => header.filter && (!header.hasOwnProperty('filterable') || header.filterable === true))\n    },\n    headersWithoutCustomFilters (): TableHeader[] {\n      return this.computedHeaders.filter(header => !header.filter && (!header.hasOwnProperty('filterable') || header.filterable === true))\n    },\n    sanitizedHeaderProps (): Record<string, any> {\n      return camelizeObjectKeys(this.headerProps)\n    },\n    computedItemsPerPage (): number {\n      const itemsPerPage = this.options && this.options.itemsPerPage ? this.options.itemsPerPage : this.itemsPerPage\n      const { itemsPerPageOptions } = this.sanitizedFooterProps\n      if (\n        itemsPerPageOptions &&\n        !itemsPerPageOptions.find((item: number | { value: number }) => {\n          return typeof item === 'number' ? item === itemsPerPage : item.value === itemsPerPage\n        })\n      ) {\n        const firstOption = itemsPerPageOptions[0]\n        return typeof firstOption === 'object' ? firstOption.value : firstOption\n      }\n\n      return itemsPerPage\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['sort-icon', 'header-props.sort-icon'],\n      ['hide-headers', 'hide-default-header'],\n      ['select-all', 'show-select'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  mounted () {\n    // if ((!this.sortBy || !this.sortBy.length) && (!this.options.sortBy || !this.options.sortBy.length)) {\n    //   const firstSortable = this.headers.find(h => !('sortable' in h) || !!h.sortable)\n    //   if (firstSortable) this.updateOptions({ sortBy: [firstSortable.value], sortDesc: [false] })\n    // }\n\n    if (this.calculateWidths) {\n      window.addEventListener('resize', this.calcWidths)\n      this.calcWidths()\n    }\n  },\n\n  beforeDestroy () {\n    if (this.calculateWidths) {\n      window.removeEventListener('resize', this.calcWidths)\n    }\n  },\n\n  methods: {\n    calcWidths () {\n      this.widths = Array.from(this.$el.querySelectorAll('th')).map(e => e.clientWidth)\n    },\n    customFilterWithColumns (items: any[], search: string) {\n      return searchTableItems(items, search, this.headersWithCustomFilters, this.headersWithoutCustomFilters, this.customFilter)\n    },\n    customSortWithHeaders (items: any[], sortBy: string[], sortDesc: boolean[], locale: string) {\n      return this.customSort(items, sortBy, sortDesc, locale, this.columnSorters)\n    },\n    createItemProps (item: any) {\n      const props = VDataIterator.options.methods.createItemProps.call(this, item)\n\n      return Object.assign(props, { headers: this.computedHeaders })\n    },\n    genCaption (props: DataProps) {\n      if (this.caption) return [this.$createElement('caption', [this.caption])]\n\n      return getSlot(this, 'caption', props, true)\n    },\n    genColgroup (props: DataProps) {\n      return this.$createElement('colgroup', this.computedHeaders.map(header => {\n        return this.$createElement('col', {\n          class: {\n            divider: header.divider,\n          },\n        })\n      }))\n    },\n    genLoading () {\n      const progress = this.$slots['progress'] ? this.$slots.progress : this.$createElement(VProgressLinear, {\n        props: {\n          color: this.loading === true ? 'primary' : this.loading,\n          height: 2,\n          indeterminate: true,\n        },\n      })\n\n      const th = this.$createElement('th', {\n        staticClass: 'column',\n        attrs: this.colspanAttrs,\n      }, [progress])\n\n      const tr = this.$createElement('tr', {\n        staticClass: 'v-data-table__progress',\n      }, [th])\n\n      return this.$createElement('thead', [tr])\n    },\n    genHeaders (props: DataProps) {\n      const data = {\n        props: {\n          ...this.sanitizedHeaderProps,\n          headers: this.computedHeaders,\n          options: props.options,\n          mobile: this.isMobile,\n          showGroupBy: this.showGroupBy,\n          someItems: this.someItems,\n          everyItem: this.everyItem,\n          singleSelect: this.singleSelect,\n          disableSort: this.disableSort,\n        },\n        on: {\n          sort: props.sort,\n          group: props.group,\n          'toggle-select-all': this.toggleSelectAll,\n        },\n      }\n\n      const children: VNodeChildrenArrayContents = [getSlot(this, 'header', data)]\n\n      if (!this.hideDefaultHeader) {\n        const scopedSlots = getPrefixedScopedSlots('header.', this.$scopedSlots)\n        children.push(this.$createElement(VDataTableHeader, {\n          ...data,\n          scopedSlots,\n        }))\n      }\n\n      if (this.loading) children.push(this.genLoading())\n\n      return children\n    },\n    genEmptyWrapper (content: VNodeChildrenArrayContents) {\n      return this.$createElement('tr', {\n        staticClass: 'v-data-table__empty-wrapper',\n      }, [\n        this.$createElement('td', {\n          attrs: this.colspanAttrs,\n        }, content),\n      ])\n    },\n    genItems (items: any[], props: DataProps) {\n      const empty = this.genEmpty(props.originalItemsLength, props.pagination.itemsLength)\n      if (empty) return [empty]\n\n      return props.groupedItems\n        ? this.genGroupedRows(props.groupedItems, props)\n        : this.genRows(items, props)\n    },\n    genGroupedRows (groupedItems: Record<string, any[]>, props: DataProps) {\n      const groups = Object.keys(groupedItems || {})\n\n      return groups.map(group => {\n        if (!this.openCache.hasOwnProperty(group)) this.$set(this.openCache, group, true)\n\n        if (this.$scopedSlots.group) {\n          return this.$scopedSlots.group({\n            group,\n            options: props.options,\n            items: groupedItems![group],\n            headers: this.computedHeaders,\n          })\n        } else {\n          return this.genDefaultGroupedRow(group, groupedItems[group], props)\n        }\n      })\n    },\n    genDefaultGroupedRow (group: string, items: any[], props: DataProps) {\n      const isOpen = !!this.openCache[group]\n      const children: VNodeChildren = [\n        this.$createElement('template', { slot: 'row.content' }, this.genDefaultRows(items, props)),\n      ]\n      const toggleFn = () => this.$set(this.openCache, group, !this.openCache[group])\n      const removeFn = () => props.updateOptions({ groupBy: [], groupDesc: [] })\n\n      if (this.$scopedSlots['group.header']) {\n        children.unshift(this.$createElement('template', { slot: 'column.header' }, [\n          this.$scopedSlots['group.header']!({ group, groupBy: props.options.groupBy, items, headers: this.computedHeaders, toggle: toggleFn, remove: removeFn }),\n        ]))\n      } else {\n        const toggle = this.$createElement(VBtn, {\n          staticClass: 'ma-0',\n          props: {\n            icon: true,\n            small: true,\n          },\n          on: {\n            click: toggleFn,\n          },\n        }, [this.$createElement(VIcon, [isOpen ? '$minus' : '$plus'])])\n\n        const remove = this.$createElement(VBtn, {\n          staticClass: 'ma-0',\n          props: {\n            icon: true,\n            small: true,\n          },\n          on: {\n            click: removeFn,\n          },\n        }, [this.$createElement(VIcon, ['$close'])])\n\n        const column = this.$createElement('td', {\n          staticClass: 'text-start',\n          attrs: this.colspanAttrs,\n        }, [toggle, `${props.options.groupBy[0]}: ${group}`, remove])\n\n        children.unshift(this.$createElement('template', { slot: 'column.header' }, [column]))\n      }\n\n      if (this.$scopedSlots['group.summary']) {\n        children.push(this.$createElement('template', { slot: 'column.summary' }, [\n          this.$scopedSlots['group.summary']!({ group, groupBy: props.options.groupBy, items, headers: this.computedHeaders }),\n        ]))\n      }\n\n      return this.$createElement(RowGroup, {\n        key: group,\n        props: {\n          value: isOpen,\n        },\n      }, children)\n    },\n    genRows (items: any[], props: DataProps) {\n      return this.$scopedSlots.item ? this.genScopedRows(items, props) : this.genDefaultRows(items, props)\n    },\n    genScopedRows (items: any[], props: DataProps) {\n      const rows = []\n\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        rows.push(this.$scopedSlots.item!({\n          ...this.createItemProps(item),\n          index: i,\n        }))\n\n        if (this.isExpanded(item)) {\n          rows.push(this.$scopedSlots['expanded-item']!({ item, headers: this.computedHeaders }))\n        }\n      }\n\n      return rows\n    },\n    genDefaultRows (items: any[], props: DataProps) {\n      return this.$scopedSlots['expanded-item']\n        ? items.map(item => this.genDefaultExpandedRow(item))\n        : items.map(item => this.genDefaultSimpleRow(item))\n    },\n    genDefaultExpandedRow (item: any): VNode {\n      const isExpanded = this.isExpanded(item)\n      const classes = {\n        'v-data-table__expanded v-data-table__expanded__row': isExpanded,\n      }\n      const headerRow = this.genDefaultSimpleRow(item, classes)\n      const expandedRow = this.$createElement('tr', {\n        staticClass: 'v-data-table__expanded v-data-table__expanded__content',\n      }, [this.$scopedSlots['expanded-item']!({ item, headers: this.computedHeaders })])\n\n      return this.$createElement(RowGroup, {\n        props: {\n          value: isExpanded,\n        },\n      }, [\n        this.$createElement('template', { slot: 'row.header' }, [headerRow]),\n        this.$createElement('template', { slot: 'row.content' }, [expandedRow]),\n      ])\n    },\n    genDefaultSimpleRow (item: any, classes: Record<string, boolean> = {}): VNode {\n      const scopedSlots = getPrefixedScopedSlots('item.', this.$scopedSlots)\n\n      const data = this.createItemProps(item)\n\n      if (this.showSelect) {\n        const slot = scopedSlots['data-table-select']\n        scopedSlots['data-table-select'] = slot ? () => slot(data) : () => this.$createElement(VSimpleCheckbox, {\n          staticClass: 'v-data-table__checkbox',\n          props: {\n            value: data.isSelected,\n          },\n          on: {\n            input: (val: boolean) => data.select(val),\n          },\n        })\n      }\n\n      if (this.showExpand) {\n        const slot = scopedSlots['data-table-expand']\n        scopedSlots['data-table-expand'] = slot ? () => slot(data) : () => this.$createElement(VIcon, {\n          staticClass: 'v-data-table__expand-icon',\n          class: {\n            'v-data-table__expand-icon--active': data.isExpanded,\n          },\n          on: {\n            click: (e: MouseEvent) => {\n              e.stopPropagation()\n              data.expand(!data.isExpanded)\n            },\n          },\n        }, [this.expandIcon])\n      }\n\n      return this.$createElement(this.isMobile ? MobileRow : Row, {\n        key: getObjectValueByPath(item, this.itemKey),\n        class: {\n          ...classes,\n          'v-data-table__selected': data.isSelected,\n        },\n        props: {\n          headers: this.computedHeaders,\n          item,\n          rtl: this.$vuetify.rtl,\n        },\n        scopedSlots,\n        on: {\n          click: () => this.$emit('click:row', item),\n        },\n      })\n    },\n    genBody (props: DataProps): VNode | string | VNodeChildren {\n      const data = {\n        ...props,\n        isMobile: this.isMobile,\n        headers: this.computedHeaders,\n      }\n\n      if (this.$scopedSlots.body) {\n        return this.$scopedSlots.body!(data)\n      }\n\n      return this.$createElement('tbody', [\n        getSlot(this, 'body.prepend', data, true),\n        this.genItems(props.items, props),\n        getSlot(this, 'body.append', data, true),\n      ])\n    },\n    genFooters (props: DataProps) {\n      const data = {\n        props: {\n          options: props.options,\n          pagination: props.pagination,\n          itemsPerPageText: '$vuetify.dataTable.itemsPerPageText',\n          ...this.sanitizedFooterProps,\n        },\n        on: {\n          'update:options': (value: any) => props.updateOptions(value),\n        },\n        widths: this.widths,\n        headers: this.computedHeaders,\n      }\n\n      const children: VNodeChildren = [\n        getSlot(this, 'footer', data, true),\n      ]\n\n      if (!this.hideDefaultFooter) {\n        children.push(this.$createElement(VDataFooter, {\n          ...data,\n          scopedSlots: getPrefixedScopedSlots('footer.', this.$scopedSlots),\n        }))\n      }\n\n      return children\n    },\n    genDefaultScopedSlot (props: DataProps): VNode {\n      const simpleProps = {\n        height: this.height,\n        fixedHeader: this.fixedHeader,\n        dense: this.dense,\n      }\n\n      // if (this.virtualRows) {\n      //   return this.$createElement(VVirtualTable, {\n      //     props: Object.assign(simpleProps, {\n      //       items: props.items,\n      //       height: this.height,\n      //       rowHeight: this.dense ? 24 : 48,\n      //       headerHeight: this.dense ? 32 : 48,\n      //       // TODO: expose rest of props from virtual table?\n      //     }),\n      //     scopedSlots: {\n      //       items: ({ items }) => this.genItems(items, props) as any,\n      //     },\n      //   }, [\n      //     this.proxySlot('body.before', [this.genCaption(props), this.genHeaders(props)]),\n      //     this.proxySlot('bottom', this.genFooters(props)),\n      //   ])\n      // }\n\n      return this.$createElement(VSimpleTable, {\n        props: simpleProps,\n      }, [\n        this.proxySlot('top', getSlot(this, 'top', props, true)),\n        this.genCaption(props),\n        this.genColgroup(props),\n        this.genHeaders(props),\n        this.genBody(props),\n        this.proxySlot('bottom', this.genFooters(props)),\n      ])\n    },\n    proxySlot (slot: string, content: VNodeChildren) {\n      return this.$createElement('template', { slot }, content)\n    },\n  },\n\n  render (): VNode {\n    return this.$createElement(VData, {\n      props: {\n        ...this.$props,\n        customFilter: this.customFilterWithColumns,\n        customSort: this.customSortWithHeaders,\n        itemsPerPage: this.computedItemsPerPage,\n      },\n      on: {\n        'update:options': (v: DataOptions, old: DataOptions) => {\n          this.internalGroupBy = v.groupBy || []\n          !deepEqual(v, old) && this.$emit('update:options', v)\n        },\n        'update:page': (v: number) => this.$emit('update:page', v),\n        'update:items-per-page': (v: number) => this.$emit('update:items-per-page', v),\n        'update:sort-by': (v: string | string[]) => this.$emit('update:sort-by', v),\n        'update:sort-desc': (v: boolean | boolean[]) => this.$emit('update:sort-desc', v),\n        'update:group-by': (v: string | string[]) => this.$emit('update:group-by', v),\n        'update:group-desc': (v: boolean | boolean[]) => this.$emit('update:group-desc', v),\n        pagination: (v: DataPagination, old: DataPagination) => !deepEqual(v, old) && this.$emit('pagination', v),\n        'current-items': (v: any[]) => {\n          this.internalCurrentItems = v\n          this.$emit('current-items', v)\n        },\n        'page-count': (v: number) => this.$emit('page-count', v),\n      },\n      scopedSlots: {\n        default: this.genDefaultScopedSlot as any,\n      },\n    })\n  },\n})\n","// extracted by mini-css-extract-plugin","import './VDataTableHeader.sass'\n\nimport Vue from 'vue'\nimport dedupeModelListeners from '../../util/dedupeModelListeners'\nimport rebuildSlots from '../../util/rebuildFunctionalSlots'\n\nimport VDataTableHeaderMobile from './VDataTableHeaderMobile'\nimport VDataTableHeaderDesktop from './VDataTableHeaderDesktop'\n\nexport default Vue.extend({\n  name: 'v-data-table-header',\n\n  functional: true,\n\n  props: {\n    mobile: Boolean,\n  },\n\n  render (h, { props, data, slots }) {\n    dedupeModelListeners(data)\n    const children = rebuildSlots(slots(), h)\n\n    if (props.mobile) {\n      return h(VDataTableHeaderMobile, data, children)\n    } else {\n      return h(VDataTableHeaderDesktop, data, children)\n    }\n  },\n})\n","// Helpers\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\nimport header, { TableHeader } from './mixins/header'\nimport { wrapInArray, convertToUnit } from '../../util/helpers'\n\nexport default mixins(header).extend({\n  name: 'v-data-table-header-desktop',\n\n  methods: {\n    genGroupByToggle (header: TableHeader) {\n      return this.$createElement('span', {\n        on: {\n          click: () => this.$emit('group', header.value),\n        },\n      }, ['group'])\n    },\n    // eslint-disable-next-line max-statements\n    genHeader (header: TableHeader) {\n      const listeners: any = {}\n      const children = []\n      const attrs = {\n        role: 'columnheader',\n        scope: 'col',\n        'aria-label': header.text || '',\n        'aria-sort': 'none',\n      }\n\n      const styles = {\n        width: convertToUnit(header.width),\n        minWidth: convertToUnit(header.width),\n      }\n\n      const classes = [\n        `text-${header.align || 'start'}`,\n        ...wrapInArray(header.class),\n      ]\n\n      if (header.value === 'data-table-select' && !this.singleSelect) {\n        children.push(this.genSelectAll())\n      } else {\n        children.push(this.$scopedSlots[header.value]\n          ? this.$scopedSlots[header.value]!({ header })\n          : this.$createElement('span', [header.text])\n        )\n\n        if (!this.disableSort && (header.sortable || !header.hasOwnProperty('sortable'))) {\n          listeners['click'] = () => this.$emit('sort', header.value)\n\n          const sortIndex = this.options.sortBy.findIndex(k => k === header.value)\n          const beingSorted = sortIndex >= 0\n          const isDesc = this.options.sortDesc[sortIndex]\n\n          classes.push('sortable')\n\n          if (beingSorted) {\n            classes.push('active')\n            classes.push(isDesc ? 'desc' : 'asc')\n\n            attrs['aria-sort'] = isDesc ? 'descending' : 'ascending'\n            attrs['aria-label'] += isDesc\n              ? this.$vuetify.lang.t('$vuetify.dataTable.ariaLabel.sortDescending')\n              : this.$vuetify.lang.t('$vuetify.dataTable.ariaLabel.sortAscending')\n          } else {\n            attrs['aria-label'] += this.$vuetify.lang.t('$vuetify.dataTable.ariaLabel.sortNone')\n          }\n\n          if (header.align === 'end') children.unshift(this.genSortIcon())\n          else children.push(this.genSortIcon())\n\n          if (this.options.multiSort && beingSorted) {\n            children.push(this.$createElement('span', { class: 'v-data-table-header__sort-badge' }, [String(sortIndex + 1)]))\n          }\n        }\n\n        if (this.showGroupBy) {\n          children.push(this.genGroupByToggle(header))\n        }\n      }\n\n      return this.$createElement('th', {\n        attrs,\n        class: classes,\n        style: styles,\n        on: listeners,\n      }, children)\n    },\n  },\n\n  render (): VNode {\n    return this.$createElement('thead', {\n      staticClass: 'v-data-table-header',\n    }, [\n      this.$createElement('tr', this.headers.map(header => this.genHeader(header))),\n    ])\n  },\n})\n","import { VNode, VNodeChildrenArrayContents } from 'vue'\nimport mixins from '../../util/mixins'\nimport VSelect from '../VSelect/VSelect'\nimport VChip from '../VChip'\nimport header from './mixins/header'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default mixins(header).extend({\n  name: 'v-data-table-header-mobile',\n\n  props: {\n    sortByText: {\n      type: String,\n      default: '$vuetify.dataTable.sortBy',\n    },\n  },\n\n  methods: {\n    genSortChip (props: any) {\n      const children: VNodeChildrenArrayContents = [props.item.text]\n\n      const sortIndex = this.options.sortBy.findIndex(k => k === props.item.value)\n      const beingSorted = sortIndex >= 0\n      const isDesc = this.options.sortDesc[sortIndex]\n\n      children.push(this.$createElement('div', {\n        staticClass: 'v-chip__close',\n        class: {\n          sortable: true,\n          active: beingSorted,\n          asc: beingSorted && !isDesc,\n          desc: beingSorted && isDesc,\n        },\n      }, [this.genSortIcon()]))\n\n      return this.$createElement(VChip, {\n        staticClass: 'sortable',\n        nativeOn: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n            this.$emit('sort', props.item.value)\n          },\n        },\n      }, children)\n    },\n    genSortSelect () {\n      const sortHeaders = this.headers.filter(h => h.sortable !== false && h.value !== 'data-table-select')\n\n      return this.$createElement(VSelect, {\n        props: {\n          label: this.$vuetify.lang.t(this.sortByText),\n          items: sortHeaders,\n          hideDetails: true,\n          multiple: this.options.multiSort,\n          value: this.options.multiSort ? this.options.sortBy : this.options.sortBy[0],\n          disabled: sortHeaders.length === 0 || this.disableSort,\n        },\n        on: {\n          change: (v: string | string[]) => this.$emit('sort', v),\n        },\n        scopedSlots: {\n          selection: props => this.genSortChip(props) as any, // TODO: whyyy?\n        },\n      })\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = []\n\n    const header = this.headers.find(h => h.value === 'data-table-select')\n    if (header && !this.singleSelect) {\n      children.push(this.$createElement('div', {\n        class: [\n          'v-data-table-header-mobile__select',\n          ...wrapInArray(header.class),\n        ],\n        attrs: {\n          width: header.width,\n        },\n      }, [this.genSelectAll()]))\n    }\n\n    children.push(this.genSortSelect())\n\n    const th = h('th', [h('div', { staticClass: 'v-data-table-header-mobile__wrapper' }, children)])\n\n    const tr = h('tr', [th])\n\n    return h('thead', {\n      staticClass: 'v-data-table-header v-data-table-header-mobile',\n    }, [tr])\n  },\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VEditDialog.sass'\n\n// Mixins\nimport Returnable from '../../mixins/returnable'\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Component\nimport VBtn from '../VBtn'\nimport VMenu from '../VMenu'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Returnable, Themeable).extend({\n  name: 'v-edit-dialog',\n\n  props: {\n    cancelText: {\n      default: 'Cancel',\n    },\n    large: Boolean,\n    eager: Boolean,\n    persistent: Boolean,\n    saveText: {\n      default: 'Save',\n    },\n    transition: {\n      type: String,\n      default: 'slide-x-reverse-transition',\n    },\n  },\n\n  data () {\n    return {\n      isActive: false,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.$emit('open')\n        setTimeout(this.focus, 50) // Give DOM time to paint\n      } else {\n        this.$emit('close')\n      }\n    },\n  },\n\n  methods: {\n    cancel () {\n      this.isActive = false\n      this.$emit('cancel')\n    },\n    focus () {\n      const input = (this.$refs.content as Element).querySelector('input')\n      input && input.focus()\n    },\n    genButton (fn: Function, text: VNodeChildren): VNode {\n      return this.$createElement(VBtn, {\n        props: {\n          text: true,\n          color: 'primary',\n          light: true,\n        },\n        on: { click: fn },\n      }, text)\n    },\n    genActions (): VNode {\n      return this.$createElement('div', {\n        class: 'v-small-dialog__actions',\n      }, [\n        this.genButton(this.cancel, this.cancelText),\n        this.genButton(() => {\n          this.save(this.returnValue)\n          this.$emit('save')\n        }, this.saveText),\n      ])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-small-dialog__content',\n        on: {\n          keydown: (e: KeyboardEvent) => {\n            const input = (this.$refs.content as Element).querySelector('input')\n            e.keyCode === keyCodes.esc && this.cancel()\n            if (e.keyCode === keyCodes.enter && input) {\n              this.save(input.value)\n              this.$emit('save')\n            }\n          },\n        },\n        ref: 'content',\n      }, [this.$slots.input])\n    },\n  },\n\n  render (h): VNode {\n    return h(VMenu, {\n      staticClass: 'v-small-dialog',\n      class: this.themeClasses,\n      props: {\n        contentClass: 'v-small-dialog__menu-content',\n        transition: this.transition,\n        origin: 'top right',\n        right: true,\n        value: this.isActive,\n        closeOnClick: !this.persistent,\n        closeOnContentClick: false,\n        eager: this.eager,\n        light: this.light,\n        dark: this.dark,\n      },\n      on: {\n        input: (val: boolean) => (this.isActive = val),\n      },\n      scopedSlots: {\n        activator: ({ on }) => {\n          return h('div', {\n            staticClass: 'v-small-dialog__activator',\n            on,\n          }, [\n            h('span', {\n              staticClass: 'v-small-dialog__activator__content',\n            }, this.$slots.default),\n          ])\n        },\n      },\n    }, [\n      this.genContent(),\n      this.large ? this.genActions() : null,\n    ])\n  },\n})\n","// extracted by mini-css-extract-plugin","import './VSimpleTable.sass'\n\nimport { convertToUnit } from '../../util/helpers'\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\n\nexport default mixins(Themeable).extend({\n  name: 'v-simple-table',\n\n  props: {\n    dense: Boolean,\n    fixedHeader: Boolean,\n    height: [Number, String],\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        'v-data-table--dense': this.dense,\n        'v-data-table--fixed-height': !!this.height && !this.fixedHeader,\n        'v-data-table--fixed-header': this.fixedHeader,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genWrapper () {\n      return this.$slots.wrapper || this.$createElement('div', {\n        staticClass: 'v-data-table__wrapper',\n        style: {\n          height: convertToUnit(this.height),\n        },\n      }, [\n        this.$createElement('table', this.$slots.default),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-data-table',\n      class: this.classes,\n    }, [\n      this.$slots.top,\n      this.genWrapper(),\n      this.$slots.bottom,\n    ])\n  },\n})\n","// extracted by mini-css-extract-plugin","import './VVirtualTable.sass'\n\n// Components\nimport VSimpleTable from './VSimpleTable'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport mixins from '../../util/mixins'\n\n// Utiltiies\nimport { convertToUnit, debounce } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(VSimpleTable)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    table: HTMLElement\n  }\n  cachedItems: VNodeChildren\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-virtual-table',\n\n  props: {\n    chunkSize: {\n      type: Number,\n      default: 25,\n    },\n    headerHeight: {\n      type: Number,\n      default: 48,\n    },\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    rowHeight: {\n      type: Number,\n      default: 48,\n    },\n  },\n\n  data: () => ({\n    scrollTop: 0,\n    oldChunk: 0,\n    scrollDebounce: null as any,\n    invalidateCache: false,\n  }),\n\n  computed: {\n    itemsLength (): number {\n      return this.items.length\n    },\n    totalHeight (): number {\n      return (this.itemsLength * this.rowHeight) + this.headerHeight\n    },\n    topIndex (): number {\n      return Math.floor(this.scrollTop / this.rowHeight)\n    },\n    chunkIndex (): number {\n      return Math.floor(this.topIndex / this.chunkSize)\n    },\n    startIndex (): number {\n      return Math.max(0, (this.chunkIndex * this.chunkSize) - this.chunkSize)\n    },\n    offsetTop (): number {\n      return Math.max(0, this.startIndex * this.rowHeight)\n    },\n    stopIndex (): number {\n      return Math.min(this.startIndex + (this.chunkSize * 3), this.itemsLength)\n    },\n    offsetBottom (): number {\n      return Math.max(0, (this.itemsLength - this.stopIndex - this.startIndex) * this.rowHeight)\n    },\n  },\n\n  watch: {\n    chunkIndex (newValue, oldValue) {\n      this.oldChunk = oldValue\n    },\n    items () {\n      this.cachedItems = null\n      this.$refs.table.scrollTop = 0\n    },\n  },\n\n  created () {\n    this.cachedItems = null\n  },\n\n  mounted () {\n    this.scrollDebounce = debounce(this.onScroll, 50)\n\n    this.$refs.table.addEventListener('scroll', this.scrollDebounce, { passive: true })\n  },\n\n  beforeDestroy () {\n    this.$refs.table.removeEventListener('scroll', this.scrollDebounce)\n  },\n\n  methods: {\n    createStyleHeight (height: number) {\n      return {\n        height: `${height}px`,\n      }\n    },\n    genBody () {\n      if (this.cachedItems === null || this.chunkIndex !== this.oldChunk) {\n        this.cachedItems = this.genItems()\n        this.oldChunk = this.chunkIndex\n      }\n\n      return this.$createElement('tbody', [\n        this.$createElement('tr', { style: this.createStyleHeight(this.offsetTop) }),\n        this.cachedItems,\n        this.$createElement('tr', { style: this.createStyleHeight(this.offsetBottom) }),\n      ])\n    },\n    genItems () {\n      return this.$scopedSlots.items!({ items: this.items.slice(this.startIndex, this.stopIndex) })\n    },\n    onScroll (e: Event) {\n      const target = e.target as Element\n      this.scrollTop = target.scrollTop\n    },\n    genTable () {\n      return this.$createElement('div', {\n        ref: 'table',\n        staticClass: 'v-virtual-table__table',\n      }, [\n        this.$createElement('table', [\n          this.$slots['body.before'],\n          this.genBody(),\n          this.$slots['body.after'],\n        ]),\n      ])\n    },\n    genWrapper () {\n      return this.$createElement('div', {\n        staticClass: 'v-virtual-table__wrapper',\n        style: {\n          height: convertToUnit(this.height),\n        },\n      }, [\n        this.genTable(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-data-table v-virtual-table',\n      class: this.classes,\n    }, [\n      this.$slots.top,\n      this.genWrapper(),\n      this.$slots.bottom,\n    ])\n  },\n})\n","import { createSimpleFunctional } from '../../util/helpers'\n\nimport VDataTable from './VDataTable'\nimport VDataTableHeader from './VDataTableHeader'\nimport VEditDialog from './VEditDialog'\nimport VSimpleTable from './VSimpleTable'\nimport VVirtualTable from './VVirtualTable'\n\nconst VTableOverflow = createSimpleFunctional('v-table__overflow')\n\nexport { VDataTable, VEditDialog, VTableOverflow, VDataTableHeader, VSimpleTable, VVirtualTable }\n\nexport default {\n  $_vuetify_subcomponents: {\n    VDataTable,\n    VDataTableHeader,\n    VEditDialog,\n    VTableOverflow,\n    VSimpleTable,\n    VVirtualTable,\n  },\n}\n","import { VDataTable } from '../'\nimport { DataOptions } from '../../VData/VData'\nimport VIcon from '../../VIcon'\nimport VSimpleCheckbox from '../../VCheckbox/VSimpleCheckbox'\nimport ripple from '../../../directives/ripple'\n\nimport Vue, { PropType } from 'vue'\nimport mixins from '../../../util/mixins'\nimport { compareFn } from '../../../util/helpers'\n\nexport interface TableHeader {\n  text: string\n  value: string\n  align?: 'start' | 'center' | 'end'\n  sortable?: boolean\n  filterable?: boolean\n  divider?: boolean\n  class?: string | string[]\n  width?: string | number\n  filter?: (value: any, search: string | null, item: any) => boolean\n  sort?: compareFn\n}\n\ntype VDataTableInstance = InstanceType<typeof VDataTable>\n\ninterface options extends Vue {\n  dataTable: VDataTableInstance\n}\n\nexport default mixins<options>().extend({\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    headers: {\n      type: Array as PropType<TableHeader[]>,\n      required: true,\n    },\n    options: {\n      type: Object as PropType<DataOptions>,\n      default: () => ({\n        page: 1,\n        itemsPerPage: 10,\n        sortBy: [],\n        sortDesc: [],\n        groupBy: [],\n        groupDesc: [],\n        multiSort: false,\n        mustSort: false,\n      }),\n    },\n    sortIcon: {\n      type: String,\n      default: '$sort',\n    },\n    everyItem: Boolean,\n    someItems: Boolean,\n    showGroupBy: Boolean,\n    singleSelect: Boolean,\n    disableSort: Boolean,\n  },\n\n  methods: {\n    genSelectAll () {\n      const data = {\n        props: {\n          value: this.everyItem,\n          indeterminate: !this.everyItem && this.someItems,\n        },\n        on: {\n          input: (v: boolean) => this.$emit('toggle-select-all', v),\n        },\n      }\n\n      if (this.$scopedSlots['data-table-select']) {\n        return this.$scopedSlots['data-table-select']!(data)\n      }\n\n      return this.$createElement(VSimpleCheckbox, {\n        staticClass: 'v-data-table__checkbox',\n        ...data,\n      })\n    },\n    genSortIcon () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-data-table-header__icon',\n        props: {\n          size: 18,\n        },\n      }, [this.sortIcon])\n    },\n  },\n})\n","// Components\nimport VDatePickerTitle from './VDatePickerTitle'\nimport VDatePickerHeader from './VDatePickerHeader'\nimport VDatePickerDateTable from './VDatePickerDateTable'\nimport VDatePickerMonthTable from './VDatePickerMonthTable'\nimport VDatePickerYears from './VDatePickerYears'\n\n// Mixins\nimport Localable from '../../mixins/localable'\nimport Picker from '../../mixins/picker'\n\n// Utils\nimport { pad, createNativeLocaleFormatter } from './util'\nimport isDateAllowed, { AllowedDateFunction } from './util/isDateAllowed'\nimport { consoleWarn } from '../../util/console'\nimport { daysInMonth } from '../VCalendar/util/timestamp'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\nimport { DatePickerFormatter } from './util/createNativeLocaleFormatter'\nimport { VNode } from 'vue'\n\nexport type DateEventColorValue = string | string[]\nexport type DateEvents = string[] | ((date: string) => boolean | DateEventColorValue) | Record<string, DateEventColorValue>\nexport type DateEventColors = DateEventColorValue | Record<string, DateEventColorValue> | ((date: string) => DateEventColorValue)\ntype DatePickerValue = string | string[] | undefined\ntype DatePickerType = 'date' | 'month'\ntype DatePickerMultipleFormatter = (date: string[]) => string\ninterface Formatters {\n  year: DatePickerFormatter\n  titleDate: DatePickerFormatter | DatePickerMultipleFormatter\n}\n\n// Adds leading zero to month/day if necessary, returns 'YYYY' if type = 'year',\n// 'YYYY-MM' if 'month' and 'YYYY-MM-DD' if 'date'\nfunction sanitizeDateString (dateString: string, type: 'date' | 'month' | 'year'): string {\n  const [year, month = 1, date = 1] = dateString.split('-')\n  return `${year}-${pad(month)}-${pad(date)}`.substr(0, { date: 10, month: 7, year: 4 }[type])\n}\n\nexport default mixins(\n  Localable,\n  Picker\n/* @vue/component */\n).extend({\n  name: 'v-date-picker',\n\n  props: {\n    allowedDates: Function as PropValidator<AllowedDateFunction | undefined>,\n    // Function formatting the day in date picker table\n    dayFormat: Function as PropValidator<AllowedDateFunction | undefined>,\n    disabled: Boolean,\n    events: {\n      type: [Array, Function, Object],\n      default: () => null,\n    } as any as PropValidator<DateEvents>,\n    eventColor: {\n      type: [Array, Function, Object, String],\n      default: () => 'warning',\n    } as any as PropValidator<DateEventColors>,\n    firstDayOfWeek: {\n      type: [String, Number],\n      default: 0,\n    },\n    // Function formatting the tableDate in the day/month table header\n    headerDateFormat: Function as PropValidator<DatePickerFormatter | undefined>,\n    max: String,\n    min: String,\n    // Function formatting month in the months table\n    monthFormat: Function as PropValidator<DatePickerFormatter | undefined>,\n    multiple: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    pickerDate: String,\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    range: Boolean,\n    reactive: Boolean,\n    readonly: Boolean,\n    scrollable: Boolean,\n    showCurrent: {\n      type: [Boolean, String],\n      default: true,\n    },\n    selectedItemsText: {\n      type: String,\n      default: '$vuetify.datePicker.itemsSelected',\n    },\n    showWeek: Boolean,\n    // Function formatting currently selected date in the picker title\n    titleDateFormat: Function as PropValidator<DatePickerFormatter | DatePickerMultipleFormatter | undefined>,\n    type: {\n      type: String,\n      default: 'date',\n      validator: (type: any) => ['date', 'month'].includes(type), // TODO: year\n    } as any as PropValidator<DatePickerType>,\n    value: [Array, String] as PropValidator<DatePickerValue>,\n    weekdayFormat: Function as PropValidator<DatePickerFormatter | undefined>,\n    // Function formatting the year in table header and pickup title\n    yearFormat: Function as PropValidator<DatePickerFormatter | undefined>,\n    yearIcon: String,\n  },\n\n  data () {\n    const now = new Date()\n    return {\n      activePicker: this.type.toUpperCase(),\n      inputDay: null as number | null,\n      inputMonth: null as number | null,\n      inputYear: null as number | null,\n      isReversing: false,\n      now,\n      // tableDate is a string in 'YYYY' / 'YYYY-M' format (leading zero for month is not required)\n      tableDate: (() => {\n        if (this.pickerDate) {\n          return this.pickerDate\n        }\n\n        const date = (this.multiple || this.range ? (this.value as string[])[(this.value as string[]).length - 1] : this.value) ||\n          `${now.getFullYear()}-${now.getMonth() + 1}`\n        return sanitizeDateString(date as string, this.type === 'date' ? 'month' : 'year')\n      })(),\n    }\n  },\n\n  computed: {\n    isMultiple (): boolean {\n      return this.multiple || this.range\n    },\n    lastValue (): string | null {\n      return this.isMultiple ? (this.value as string[])[(this.value as string[]).length - 1] : (this.value as string | null)\n    },\n    selectedMonths (): string | string[] | undefined {\n      if (!this.value || !this.value.length || this.type === 'month') {\n        return this.value\n      } else if (this.isMultiple) {\n        return (this.value as string[]).map(val => val.substr(0, 7))\n      } else {\n        return (this.value as string).substr(0, 7)\n      }\n    },\n    current (): string | null {\n      if (this.showCurrent === true) {\n        return sanitizeDateString(`${this.now.getFullYear()}-${this.now.getMonth() + 1}-${this.now.getDate()}`, this.type)\n      }\n\n      return this.showCurrent || null\n    },\n    inputDate (): string {\n      return this.type === 'date'\n        ? `${this.inputYear}-${pad(this.inputMonth! + 1)}-${pad(this.inputDay!)}`\n        : `${this.inputYear}-${pad(this.inputMonth! + 1)}`\n    },\n    tableMonth (): number {\n      return Number((this.pickerDate || this.tableDate).split('-')[1]) - 1\n    },\n    tableYear (): number {\n      return Number((this.pickerDate || this.tableDate).split('-')[0])\n    },\n    minMonth (): string | null {\n      return this.min ? sanitizeDateString(this.min, 'month') : null\n    },\n    maxMonth (): string | null {\n      return this.max ? sanitizeDateString(this.max, 'month') : null\n    },\n    minYear (): string | null {\n      return this.min ? sanitizeDateString(this.min, 'year') : null\n    },\n    maxYear (): string | null {\n      return this.max ? sanitizeDateString(this.max, 'year') : null\n    },\n    formatters (): Formatters {\n      return {\n        year: this.yearFormat || createNativeLocaleFormatter(this.currentLocale, { year: 'numeric', timeZone: 'UTC' }, { length: 4 }),\n        titleDate: this.titleDateFormat ||\n          (this.isMultiple ? this.defaultTitleMultipleDateFormatter : this.defaultTitleDateFormatter),\n      }\n    },\n    defaultTitleMultipleDateFormatter (): DatePickerMultipleFormatter {\n      return dates => {\n        if (!dates.length) {\n          return '-'\n        }\n\n        if (dates.length === 1) {\n          return this.defaultTitleDateFormatter(dates[0])\n        }\n\n        return this.$vuetify.lang.t(this.selectedItemsText, dates.length)\n      }\n    },\n    defaultTitleDateFormatter (): DatePickerFormatter {\n      const titleFormats = {\n        year: { year: 'numeric', timeZone: 'UTC' },\n        month: { month: 'long', timeZone: 'UTC' },\n        date: { weekday: 'short', month: 'short', day: 'numeric', timeZone: 'UTC' },\n      }\n\n      const titleDateFormatter = createNativeLocaleFormatter(this.currentLocale, titleFormats[this.type], {\n        start: 0,\n        length: { date: 10, month: 7, year: 4 }[this.type],\n      })\n\n      const landscapeFormatter = (date: string) => titleDateFormatter(date)\n        .replace(/([^\\d\\s])([\\d])/g, (match, nonDigit, digit) => `${nonDigit} ${digit}`)\n        .replace(', ', ',<br>')\n\n      return this.landscape ? landscapeFormatter : titleDateFormatter\n    },\n  },\n\n  watch: {\n    tableDate (val: string, prev: string) {\n      // Make a ISO 8601 strings from val and prev for comparision, otherwise it will incorrectly\n      // compare for example '2000-9' and '2000-10'\n      const sanitizeType = this.type === 'month' ? 'year' : 'month'\n      this.isReversing = sanitizeDateString(val, sanitizeType) < sanitizeDateString(prev, sanitizeType)\n      this.$emit('update:picker-date', val)\n    },\n    pickerDate (val: string | null) {\n      if (val) {\n        this.tableDate = val\n      } else if (this.lastValue && this.type === 'date') {\n        this.tableDate = sanitizeDateString(this.lastValue, 'month')\n      } else if (this.lastValue && this.type === 'month') {\n        this.tableDate = sanitizeDateString(this.lastValue, 'year')\n      }\n    },\n    value (newValue: DatePickerValue, oldValue: DatePickerValue) {\n      this.checkMultipleProp()\n      this.setInputDate()\n\n      if (!this.isMultiple && this.value && !this.pickerDate) {\n        this.tableDate = sanitizeDateString(this.inputDate, this.type === 'month' ? 'year' : 'month')\n      } else if (this.isMultiple && (this.value as string[]).length && !(oldValue as string[]).length && !this.pickerDate) {\n        this.tableDate = sanitizeDateString(this.inputDate, this.type === 'month' ? 'year' : 'month')\n      }\n    },\n    type (type: DatePickerType) {\n      this.activePicker = type.toUpperCase()\n\n      if (this.value && this.value.length) {\n        const output = (this.isMultiple ? (this.value as string[]) : [this.value as string])\n          .map((val: string) => sanitizeDateString(val, type))\n          .filter(this.isDateAllowed)\n        this.$emit('input', this.isMultiple ? output : output[0])\n      }\n    },\n  },\n\n  created () {\n    this.checkMultipleProp()\n\n    if (this.pickerDate !== this.tableDate) {\n      this.$emit('update:picker-date', this.tableDate)\n    }\n    this.setInputDate()\n  },\n\n  methods: {\n    emitInput (newInput: string) {\n      if (this.range && this.value) {\n        this.value.length === 2\n          ? this.$emit('input', [newInput])\n          : this.$emit('input', [...this.value, newInput])\n        return\n      }\n\n      const output = this.multiple\n        ? (\n          (this.value as string[]).indexOf(newInput) === -1\n            ? (this.value as string[]).concat([newInput])\n            : (this.value as string[]).filter(x => x !== newInput)\n        )\n        : newInput\n\n      this.$emit('input', output)\n      this.multiple || this.$emit('change', newInput)\n    },\n    checkMultipleProp () {\n      if (this.value == null) return\n      const valueType = this.value.constructor.name\n      const expected = this.isMultiple ? 'Array' : 'String'\n      if (valueType !== expected) {\n        consoleWarn(`Value must be ${this.isMultiple ? 'an' : 'a'} ${expected}, got ${valueType}`, this)\n      }\n    },\n    isDateAllowed (value: string) {\n      return isDateAllowed(value, this.min, this.max, this.allowedDates)\n    },\n    yearClick (value: number) {\n      this.inputYear = value\n      if (this.type === 'month') {\n        this.tableDate = `${value}`\n      } else {\n        this.tableDate = `${value}-${pad((this.tableMonth || 0) + 1)}`\n      }\n      this.activePicker = 'MONTH'\n      if (this.reactive && !this.readonly && !this.isMultiple && this.isDateAllowed(this.inputDate)) {\n        this.$emit('input', this.inputDate)\n      }\n    },\n    monthClick (value: string) {\n      this.inputYear = parseInt(value.split('-')[0], 10)\n      this.inputMonth = parseInt(value.split('-')[1], 10) - 1\n      if (this.type === 'date') {\n        if (this.inputDay) {\n          this.inputDay = Math.min(this.inputDay, daysInMonth(this.inputYear, this.inputMonth + 1))\n        }\n\n        this.tableDate = value\n        this.activePicker = 'DATE'\n        if (this.reactive && !this.readonly && !this.isMultiple && this.isDateAllowed(this.inputDate)) {\n          this.$emit('input', this.inputDate)\n        }\n      } else {\n        this.emitInput(this.inputDate)\n      }\n    },\n    dateClick (value: string) {\n      this.inputYear = parseInt(value.split('-')[0], 10)\n      this.inputMonth = parseInt(value.split('-')[1], 10) - 1\n      this.inputDay = parseInt(value.split('-')[2], 10)\n      this.emitInput(this.inputDate)\n    },\n    genPickerTitle () {\n      return this.$createElement(VDatePickerTitle, {\n        props: {\n          date: this.value ? (this.formatters.titleDate as (value: any) => string)(this.value) : '',\n          disabled: this.disabled,\n          readonly: this.readonly,\n          selectingYear: this.activePicker === 'YEAR',\n          year: this.formatters.year(this.value ? `${this.inputYear}` : this.tableDate),\n          yearIcon: this.yearIcon,\n          value: this.isMultiple ? (this.value as string[])[0] : this.value,\n        },\n        slot: 'title',\n        on: {\n          'update:selecting-year': (value: boolean) => this.activePicker = value ? 'YEAR' : this.type.toUpperCase(),\n        },\n      })\n    },\n    genTableHeader () {\n      return this.$createElement(VDatePickerHeader, {\n        props: {\n          nextIcon: this.nextIcon,\n          color: this.color,\n          dark: this.dark,\n          disabled: this.disabled,\n          format: this.headerDateFormat,\n          light: this.light,\n          locale: this.locale,\n          min: this.activePicker === 'DATE' ? this.minMonth : this.minYear,\n          max: this.activePicker === 'DATE' ? this.maxMonth : this.maxYear,\n          prevIcon: this.prevIcon,\n          readonly: this.readonly,\n          value: this.activePicker === 'DATE' ? `${pad(this.tableYear, 4)}-${pad(this.tableMonth + 1)}` : `${pad(this.tableYear, 4)}`,\n        },\n        on: {\n          toggle: () => this.activePicker = (this.activePicker === 'DATE' ? 'MONTH' : 'YEAR'),\n          input: (value: string) => this.tableDate = value,\n        },\n      })\n    },\n    genDateTable () {\n      return this.$createElement(VDatePickerDateTable, {\n        props: {\n          allowedDates: this.allowedDates,\n          color: this.color,\n          current: this.current,\n          dark: this.dark,\n          disabled: this.disabled,\n          events: this.events,\n          eventColor: this.eventColor,\n          firstDayOfWeek: this.firstDayOfWeek,\n          format: this.dayFormat,\n          light: this.light,\n          locale: this.locale,\n          min: this.min,\n          max: this.max,\n          range: this.range,\n          readonly: this.readonly,\n          scrollable: this.scrollable,\n          showWeek: this.showWeek,\n          tableDate: `${pad(this.tableYear, 4)}-${pad(this.tableMonth + 1)}`,\n          value: this.value,\n          weekdayFormat: this.weekdayFormat,\n        },\n        ref: 'table',\n        on: {\n          input: this.dateClick,\n          'update:table-date': (value: string) => this.tableDate = value,\n          'click:date': (value: string) => this.$emit('click:date', value),\n          'dblclick:date': (value: string) => this.$emit('dblclick:date', value),\n        },\n      })\n    },\n    genMonthTable () {\n      return this.$createElement(VDatePickerMonthTable, {\n        props: {\n          allowedDates: this.type === 'month' ? this.allowedDates : null,\n          color: this.color,\n          current: this.current ? sanitizeDateString(this.current, 'month') : null,\n          dark: this.dark,\n          disabled: this.disabled,\n          events: this.type === 'month' ? this.events : null,\n          eventColor: this.type === 'month' ? this.eventColor : null,\n          format: this.monthFormat,\n          light: this.light,\n          locale: this.locale,\n          min: this.minMonth,\n          max: this.maxMonth,\n          readonly: this.readonly && this.type === 'month',\n          scrollable: this.scrollable,\n          value: this.selectedMonths,\n          tableDate: `${pad(this.tableYear, 4)}`,\n        },\n        ref: 'table',\n        on: {\n          input: this.monthClick,\n          'update:table-date': (value: string) => this.tableDate = value,\n          'click:month': (value: string) => this.$emit('click:month', value),\n          'dblclick:month': (value: string) => this.$emit('dblclick:month', value),\n        },\n      })\n    },\n    genYears () {\n      return this.$createElement(VDatePickerYears, {\n        props: {\n          color: this.color,\n          format: this.yearFormat,\n          locale: this.locale,\n          min: this.minYear,\n          max: this.maxYear,\n          value: this.tableYear,\n        },\n        on: {\n          input: this.yearClick,\n        },\n      })\n    },\n    genPickerBody () {\n      const children = this.activePicker === 'YEAR' ? [\n        this.genYears(),\n      ] : [\n        this.genTableHeader(),\n        this.activePicker === 'DATE' ? this.genDateTable() : this.genMonthTable(),\n      ]\n\n      return this.$createElement('div', {\n        key: this.activePicker,\n      }, children)\n    },\n    setInputDate () {\n      if (this.lastValue) {\n        const array = this.lastValue.split('-')\n        this.inputYear = parseInt(array[0], 10)\n        this.inputMonth = parseInt(array[1], 10) - 1\n        if (this.type === 'date') {\n          this.inputDay = parseInt(array[2], 10)\n        }\n      } else {\n        this.inputYear = this.inputYear || this.now.getFullYear()\n        this.inputMonth = this.inputMonth == null ? this.inputMonth : this.now.getMonth()\n        this.inputDay = this.inputDay || this.now.getDate()\n      }\n    },\n  },\n\n  render (): VNode {\n    return this.genPicker('v-picker--date')\n  },\n})\n","// Mixins\nimport DatePickerTable from './mixins/date-picker-table'\n\n// Utils\nimport { pad, createNativeLocaleFormatter, monthChange } from './util'\nimport { createRange } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { DatePickerFormatter } from './util/createNativeLocaleFormatter'\nimport { PropValidator } from 'vue/types/options'\nimport { VNode, VNodeChildren } from 'vue'\n\nexport default mixins(\n  DatePickerTable\n/* @vue/component */\n).extend({\n  name: 'v-date-picker-date-table',\n\n  props: {\n    firstDayOfWeek: {\n      type: [String, Number],\n      default: 0,\n    },\n    showWeek: Boolean,\n    weekdayFormat: Function as PropValidator<DatePickerFormatter | undefined>,\n  },\n\n  computed: {\n    formatter (): DatePickerFormatter {\n      return this.format || createNativeLocaleFormatter(this.currentLocale, { day: 'numeric', timeZone: 'UTC' }, { start: 8, length: 2 })\n    },\n    weekdayFormatter (): DatePickerFormatter | undefined {\n      return this.weekdayFormat || createNativeLocaleFormatter(this.currentLocale, { weekday: 'narrow', timeZone: 'UTC' })\n    },\n    weekDays (): string[] {\n      const first = parseInt(this.firstDayOfWeek, 10)\n\n      return this.weekdayFormatter\n        ? createRange(7).map(i => this.weekdayFormatter!(`2017-01-${first + i + 15}`)) // 2017-01-15 is Sunday\n        : createRange(7).map(i => ['S', 'M', 'T', 'W', 'T', 'F', 'S'][(i + first) % 7])\n    },\n  },\n\n  methods: {\n    calculateTableDate (delta: number) {\n      return monthChange(this.tableDate, Math.sign(delta || 1))\n    },\n    genTHead () {\n      const days = this.weekDays.map(day => this.$createElement('th', day))\n      this.showWeek && days.unshift(this.$createElement('th'))\n      return this.$createElement('thead', this.genTR(days))\n    },\n    // Returns number of the days from the firstDayOfWeek to the first day of the current month\n    weekDaysBeforeFirstDayOfTheMonth () {\n      const firstDayOfTheMonth = new Date(`${this.displayedYear}-${pad(this.displayedMonth + 1)}-01T00:00:00+00:00`)\n      const weekDay = firstDayOfTheMonth.getUTCDay()\n      return (weekDay - parseInt(this.firstDayOfWeek) + 7) % 7\n    },\n    getWeekNumber () {\n      let dayOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334][this.displayedMonth]\n      if (this.displayedMonth > 1 &&\n        (((this.displayedYear % 4 === 0) && (this.displayedYear % 100 !== 0)) || (this.displayedYear % 400 === 0))\n      ) {\n        dayOfYear++\n      }\n      const offset = (\n        this.displayedYear +\n        ((this.displayedYear - 1) >> 2) -\n        Math.floor((this.displayedYear - 1) / 100) +\n        Math.floor((this.displayedYear - 1) / 400) -\n        Number(this.firstDayOfWeek)\n      ) % 7 // https://en.wikipedia.org/wiki/Zeller%27s_congruence\n      return Math.floor((dayOfYear + offset) / 7) + 1\n    },\n    genWeekNumber (weekNumber: number) {\n      return this.$createElement('td', [\n        this.$createElement('small', {\n          staticClass: 'v-date-picker-table--date__week',\n        }, String(weekNumber).padStart(2, '0')),\n      ])\n    },\n    genTBody () {\n      const children = []\n      const daysInMonth = new Date(this.displayedYear, this.displayedMonth + 1, 0).getDate()\n      let rows = []\n      let day = this.weekDaysBeforeFirstDayOfTheMonth()\n      let weekNumber = this.getWeekNumber()\n\n      this.showWeek && rows.push(this.genWeekNumber(weekNumber++))\n\n      while (day--) rows.push(this.$createElement('td'))\n      for (day = 1; day <= daysInMonth; day++) {\n        const date = `${this.displayedYear}-${pad(this.displayedMonth + 1)}-${pad(day)}`\n\n        rows.push(this.$createElement('td', [\n          this.genButton(date, true, 'date', this.formatter),\n        ]))\n\n        if (rows.length % (this.showWeek ? 8 : 7) === 0) {\n          children.push(this.genTR(rows))\n          rows = []\n          day < daysInMonth && this.showWeek && rows.push(this.genWeekNumber(weekNumber++))\n        }\n      }\n\n      if (rows.length) {\n        children.push(this.genTR(rows))\n      }\n\n      return this.$createElement('tbody', children)\n    },\n    genTR (children: VNodeChildren) {\n      return [this.$createElement('tr', children)]\n    },\n  },\n\n  render (): VNode {\n    return this.genTable('v-date-picker-table v-date-picker-table--date', [\n      this.genTHead(),\n      this.genTBody(),\n    ], this.calculateTableDate)\n  },\n})\n","// extracted by mini-css-extract-plugin","import './VDatePickerHeader.sass'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Localable from '../../mixins/localable'\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport { createNativeLocaleFormatter, monthChange } from './util'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { DatePickerFormatter } from './util/createNativeLocaleFormatter'\nimport { PropValidator } from 'vue/types/options'\n\nexport default mixins(\n  Colorable,\n  Localable,\n  Themeable\n/* @vue/component */\n).extend({\n  name: 'v-date-picker-header',\n\n  props: {\n    disabled: Boolean,\n    format: Function as PropValidator<DatePickerFormatter | undefined>,\n    min: String,\n    max: String,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    readonly: Boolean,\n    value: {\n      type: [Number, String],\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      isReversing: false,\n    }\n  },\n\n  computed: {\n    formatter (): DatePickerFormatter {\n      if (this.format) {\n        return this.format\n      } else if (String(this.value).split('-')[1]) {\n        return createNativeLocaleFormatter(this.currentLocale, { month: 'long', year: 'numeric', timeZone: 'UTC' }, { length: 7 })\n      } else {\n        return createNativeLocaleFormatter(this.currentLocale, { year: 'numeric', timeZone: 'UTC' }, { length: 4 })\n      }\n    },\n  },\n\n  watch: {\n    value (newVal, oldVal) {\n      this.isReversing = newVal < oldVal\n    },\n  },\n\n  methods: {\n    genBtn (change: number) {\n      const disabled = this.disabled ||\n        (change < 0 && this.min && this.calculateChange(change) < this.min) ||\n        (change > 0 && this.max && this.calculateChange(change) > this.max)\n\n      return this.$createElement(VBtn, {\n        props: {\n          dark: this.dark,\n          disabled,\n          icon: true,\n          light: this.light,\n        },\n        nativeOn: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            this.$emit('input', this.calculateChange(change))\n          },\n        },\n      }, [\n        this.$createElement(VIcon, ((change < 0) === !this.$vuetify.rtl) ? this.prevIcon : this.nextIcon),\n      ])\n    },\n    calculateChange (sign: number) {\n      const [year, month] = String(this.value).split('-').map(Number)\n\n      if (month == null) {\n        return `${year + sign}`\n      } else {\n        return monthChange(String(this.value), sign)\n      }\n    },\n    genHeader () {\n      const color = !this.disabled && (this.color || 'accent')\n      const header = this.$createElement('div', this.setTextColor(color, {\n        key: String(this.value),\n      }), [this.$createElement('button', {\n        attrs: {\n          type: 'button',\n        },\n        on: {\n          click: () => this.$emit('toggle'),\n        },\n      }, [this.$slots.default || this.formatter(String(this.value))])])\n\n      const transition = this.$createElement('transition', {\n        props: {\n          name: (this.isReversing === !this.$vuetify.rtl) ? 'tab-reverse-transition' : 'tab-transition',\n        },\n      }, [header])\n\n      return this.$createElement('div', {\n        staticClass: 'v-date-picker-header__value',\n        class: {\n          'v-date-picker-header__value--disabled': this.disabled,\n        },\n      }, [transition])\n    },\n  },\n\n  render (): VNode {\n    return this.$createElement('div', {\n      staticClass: 'v-date-picker-header',\n      class: {\n        'v-date-picker-header--disabled': this.disabled,\n        ...this.themeClasses,\n      },\n    }, [\n      this.genBtn(-1),\n      this.genHeader(),\n      this.genBtn(+1),\n    ])\n  },\n})\n","// Mixins\nimport DatePickerTable from './mixins/date-picker-table'\n\n// Utils\nimport { pad, createNativeLocaleFormatter } from './util'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { DatePickerFormatter } from './util/createNativeLocaleFormatter'\n\nexport default mixins(\n  DatePickerTable\n/* @vue/component */\n).extend({\n  name: 'v-date-picker-month-table',\n\n  computed: {\n    formatter (): DatePickerFormatter {\n      return this.format || createNativeLocaleFormatter(this.currentLocale, { month: 'short', timeZone: 'UTC' }, { start: 5, length: 2 })\n    },\n  },\n\n  methods: {\n    calculateTableDate (delta: number) {\n      return `${parseInt(this.tableDate, 10) + Math.sign(delta || 1)}`\n    },\n    genTBody () {\n      const children = []\n      const cols = Array(3).fill(null)\n      const rows = 12 / cols.length\n\n      for (let row = 0; row < rows; row++) {\n        const tds = cols.map((_, col) => {\n          const month = row * cols.length + col\n          const date = `${this.displayedYear}-${pad(month + 1)}`\n          return this.$createElement('td', {\n            key: month,\n          }, [\n            this.genButton(date, false, 'month', this.formatter),\n          ])\n        })\n\n        children.push(this.$createElement('tr', {\n          key: row,\n        }, tds))\n      }\n\n      return this.$createElement('tbody', children)\n    },\n  },\n\n  render (): VNode {\n    return this.genTable('v-date-picker-table v-date-picker-table--month', [\n      this.genTBody(),\n    ], this.calculateTableDate)\n  },\n})\n","// extracted by mini-css-extract-plugin","import './VDatePickerTitle.sass'\n\n// Components\nimport VIcon from '../VIcon'\n\n// Mixins\nimport PickerButton from '../../mixins/picker-button'\n\n// Utils\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  PickerButton\n/* @vue/component */\n).extend({\n  name: 'v-date-picker-title',\n\n  props: {\n    date: {\n      type: String,\n      default: '',\n    },\n    disabled: Boolean,\n    readonly: Boolean,\n    selectingYear: Boolean,\n    value: {\n      type: String,\n    },\n    year: {\n      type: [Number, String],\n      default: '',\n    },\n    yearIcon: {\n      type: String,\n    },\n  },\n\n  data: () => ({\n    isReversing: false,\n  }),\n\n  computed: {\n    computedTransition (): string {\n      return this.isReversing ? 'picker-reverse-transition' : 'picker-transition'\n    },\n  },\n\n  watch: {\n    value (val: string, prev: string) {\n      this.isReversing = val < prev\n    },\n  },\n\n  methods: {\n    genYearIcon (): VNode {\n      return this.$createElement(VIcon, {\n        props: {\n          dark: true,\n        },\n      }, this.yearIcon)\n    },\n    getYearBtn (): VNode {\n      return this.genPickerButton('selectingYear', true, [\n        String(this.year),\n        this.yearIcon ? this.genYearIcon() : null,\n      ], false, 'v-date-picker-title__year')\n    },\n    genTitleText (): VNode {\n      return this.$createElement('transition', {\n        props: {\n          name: this.computedTransition,\n        },\n      }, [\n        this.$createElement('div', {\n          domProps: { innerHTML: this.date || '&nbsp;' },\n          key: this.value,\n        }),\n      ])\n    },\n    genTitleDate (): VNode {\n      return this.genPickerButton('selectingYear', false, [this.genTitleText()], false, 'v-date-picker-title__date')\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-date-picker-title',\n      class: {\n        'v-date-picker-title--disabled': this.disabled,\n      },\n    }, [\n      this.getYearBtn(),\n      this.genTitleDate(),\n    ])\n  },\n})\n","// extracted by mini-css-extract-plugin","import './VDatePickerYears.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Localable from '../../mixins/localable'\n\n// Utils\nimport { createNativeLocaleFormatter } from './util'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { DatePickerFormatter } from './util/createNativeLocaleFormatter'\nimport { PropValidator } from 'vue/types/options'\n\ninterface options extends Vue {\n  $el: HTMLElement\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable,\n    typeof Localable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable,\n  Localable\n/* @vue/component */\n).extend({\n  name: 'v-date-picker-years',\n\n  props: {\n    format: Function as PropValidator<DatePickerFormatter | undefined>,\n    min: [Number, String],\n    max: [Number, String],\n    readonly: Boolean,\n    value: [Number, String],\n  },\n\n  data () {\n    return {\n      defaultColor: 'primary',\n    }\n  },\n\n  computed: {\n    formatter (): DatePickerFormatter {\n      return this.format || createNativeLocaleFormatter(this.currentLocale, { year: 'numeric', timeZone: 'UTC' }, { length: 4 })\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      const activeItem = this.$el.getElementsByClassName('active')[0]\n      if (activeItem) {\n        this.$el.scrollTop = activeItem.offsetTop - this.$el.offsetHeight / 2 + activeItem.offsetHeight / 2\n      } else if (this.min && !this.max) {\n        this.$el.scrollTop = this.$el.scrollHeight\n      } else if (!this.min && this.max) {\n        this.$el.scrollTop = 0\n      } else {\n        this.$el.scrollTop = this.$el.scrollHeight / 2 - this.$el.offsetHeight / 2\n      }\n    })\n  },\n\n  methods: {\n    genYearItem (year: number): VNode {\n      const formatted = this.formatter(`${year}`)\n      const active = parseInt(this.value, 10) === year\n      const color = active && (this.color || 'primary')\n\n      return this.$createElement('li', this.setTextColor(color, {\n        key: year,\n        class: { active },\n        on: {\n          click: () => this.$emit('input', year),\n        },\n      }), formatted)\n    },\n\n    genYearItems (): VNode[] {\n      const children = []\n      const selectedYear = this.value ? parseInt(this.value, 10) : new Date().getFullYear()\n      const maxYear = this.max ? parseInt(this.max, 10) : (selectedYear + 100)\n      const minYear = Math.min(maxYear, this.min ? parseInt(this.min, 10) : (selectedYear - 100))\n\n      for (let year = maxYear; year >= minYear; year--) {\n        children.push(this.genYearItem(year))\n      }\n\n      return children\n    },\n  },\n\n  render (): VNode {\n    return this.$createElement('ul', {\n      staticClass: 'v-date-picker-years',\n      ref: 'years',\n    }, this.genYearItems())\n  },\n})\n","import VDatePicker from './VDatePicker'\nimport VDatePickerTitle from './VDatePickerTitle'\nimport VDatePickerHeader from './VDatePickerHeader'\nimport VDatePickerDateTable from './VDatePickerDateTable'\nimport VDatePickerMonthTable from './VDatePickerMonthTable'\nimport VDatePickerYears from './VDatePickerYears'\n\nexport {\n  VDatePicker,\n  VDatePickerTitle,\n  VDatePickerHeader,\n  VDatePickerDateTable,\n  VDatePickerMonthTable,\n  VDatePickerYears,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VDatePicker,\n    VDatePickerTitle,\n    VDatePickerHeader,\n    VDatePickerDateTable,\n    VDatePickerMonthTable,\n    VDatePickerYears,\n  },\n}\n","import '../VDatePickerTable.sass'\n\n// Directives\nimport Touch, { TouchWrapper } from '../../../directives/touch'\n\n// Mixins\nimport Colorable from '../../../mixins/colorable'\nimport Localable from '../../../mixins/localable'\nimport Themeable from '../../../mixins/themeable'\n\n// Utils\nimport isDateAllowed, { AllowedDateFunction } from '../util/isDateAllowed'\nimport mixins from '../../../util/mixins'\n\n// Types\nimport { VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { DatePickerFormatter } from '../util/createNativeLocaleFormatter'\nimport { DateEvents, DateEventColors, DateEventColorValue } from '../VDatePicker'\n\ntype CalculateTableDateFunction = (v: number) => string\n\nexport default mixins(\n  Colorable,\n  Localable,\n  Themeable\n/* @vue/component */\n).extend({\n  directives: { Touch },\n\n  props: {\n    allowedDates: Function as PropValidator<AllowedDateFunction | undefined>,\n    current: String,\n    disabled: Boolean,\n    format: Function as PropValidator<DatePickerFormatter | undefined>,\n    events: {\n      type: [Array, Function, Object],\n      default: () => null,\n    } as any as PropValidator<DateEvents>,\n    eventColor: {\n      type: [Array, Function, Object, String],\n      default: () => 'warning',\n    } as any as PropValidator<DateEventColors>,\n    min: String,\n    max: String,\n    range: Boolean,\n    readonly: Boolean,\n    scrollable: Boolean,\n    tableDate: {\n      type: String,\n      required: true,\n    },\n    value: [String, Array] as PropValidator<string | string[]>,\n  },\n\n  data: () => ({\n    isReversing: false,\n  }),\n\n  computed: {\n    computedTransition (): string {\n      return (this.isReversing === !this.$vuetify.rtl) ? 'tab-reverse-transition' : 'tab-transition'\n    },\n    displayedMonth (): number {\n      return Number(this.tableDate.split('-')[1]) - 1\n    },\n    displayedYear (): number {\n      return Number(this.tableDate.split('-')[0])\n    },\n  },\n\n  watch: {\n    tableDate (newVal: string, oldVal: string) {\n      this.isReversing = newVal < oldVal\n    },\n  },\n\n  methods: {\n    genButtonClasses (isAllowed: boolean, isFloating: boolean, isSelected: boolean, isCurrent: boolean) {\n      return {\n        'v-size--default': !isFloating,\n        'v-btn--active': isSelected,\n        'v-btn--flat': !isAllowed || this.disabled,\n        'v-btn--text': isSelected === isCurrent,\n        'v-btn--rounded': isFloating,\n        'v-btn--disabled': !isAllowed || this.disabled,\n        'v-btn--outlined': isCurrent && !isSelected,\n        ...this.themeClasses,\n      }\n    },\n    genButtonEvents (value: string, isAllowed: boolean, mouseEventType: string) {\n      if (this.disabled) return undefined\n\n      return {\n        click: () => {\n          isAllowed && !this.readonly && this.$emit('input', value)\n          this.$emit(`click:${mouseEventType}`, value)\n        },\n        dblclick: () => this.$emit(`dblclick:${mouseEventType}`, value),\n      }\n    },\n    genButton (value: string, isFloating: boolean, mouseEventType: string, formatter: DatePickerFormatter) {\n      const isAllowed = isDateAllowed(value, this.min, this.max, this.allowedDates)\n      const isSelected = this.isSelected(value)\n      const isCurrent = value === this.current\n      const setColor = isSelected ? this.setBackgroundColor : this.setTextColor\n      const color = (isSelected || isCurrent) && (this.color || 'accent')\n\n      return this.$createElement('button', setColor(color, {\n        staticClass: 'v-btn',\n        class: this.genButtonClasses(isAllowed, isFloating, isSelected, isCurrent),\n        attrs: {\n          type: 'button',\n        },\n        domProps: {\n          disabled: this.disabled || !isAllowed,\n        },\n        on: this.genButtonEvents(value, isAllowed, mouseEventType),\n      }), [\n        this.$createElement('div', {\n          staticClass: 'v-btn__content',\n        }, [formatter(value)]),\n        this.genEvents(value),\n      ])\n    },\n    getEventColors (date: string) {\n      const arrayize = (v: string | string[]) => Array.isArray(v) ? v : [v]\n      let eventData: boolean | DateEventColorValue\n      let eventColors: string[] = []\n\n      if (Array.isArray(this.events)) {\n        eventData = this.events.includes(date)\n      } else if (this.events instanceof Function) {\n        eventData = this.events(date) || false\n      } else if (this.events) {\n        eventData = this.events[date] || false\n      } else {\n        eventData = false\n      }\n\n      if (!eventData) {\n        return []\n      } else if (eventData !== true) {\n        eventColors = arrayize(eventData)\n      } else if (typeof this.eventColor === 'string') {\n        eventColors = [this.eventColor]\n      } else if (typeof this.eventColor === 'function') {\n        eventColors = arrayize(this.eventColor(date))\n      } else if (Array.isArray(this.eventColor)) {\n        eventColors = this.eventColor\n      } else {\n        eventColors = arrayize(this.eventColor[date])\n      }\n\n      return eventColors.filter(v => v)\n    },\n    genEvents (date: string) {\n      const eventColors = this.getEventColors(date)\n\n      return eventColors.length ? this.$createElement('div', {\n        staticClass: 'v-date-picker-table__events',\n      }, eventColors.map(color => this.$createElement('div', this.setBackgroundColor(color)))) : null\n    },\n    wheel (e: WheelEvent, calculateTableDate: CalculateTableDateFunction) {\n      e.preventDefault()\n      this.$emit('update:table-date', calculateTableDate(e.deltaY))\n    },\n    touch (value: number, calculateTableDate: CalculateTableDateFunction) {\n      this.$emit('update:table-date', calculateTableDate(value))\n    },\n    genTable (staticClass: string, children: VNodeChildren, calculateTableDate: CalculateTableDateFunction) {\n      const transition = this.$createElement('transition', {\n        props: { name: this.computedTransition },\n      }, [this.$createElement('table', { key: this.tableDate }, children)])\n\n      const touchDirective = {\n        name: 'touch',\n        value: {\n          left: (e: TouchWrapper) => (e.offsetX < -15) && this.touch(1, calculateTableDate),\n          right: (e: TouchWrapper) => (e.offsetX > 15) && this.touch(-1, calculateTableDate),\n        },\n      }\n\n      return this.$createElement('div', {\n        staticClass,\n        class: {\n          'v-date-picker-table--disabled': this.disabled,\n          ...this.themeClasses,\n        },\n        on: (!this.disabled && this.scrollable) ? {\n          wheel: (e: WheelEvent) => this.wheel(e, calculateTableDate),\n        } : undefined,\n        directives: [touchDirective],\n      }, [transition])\n    },\n    isSelected (value: string): boolean {\n      if (Array.isArray(this.value)) {\n        if (this.range && this.value.length === 2) {\n          const [from, to] = [...this.value].sort()\n          return from <= value && value <= to\n        } else {\n          return this.value.indexOf(value) !== -1\n        }\n      }\n\n      return value === this.value\n    },\n  },\n})\n","import pad from './pad'\n\ninterface SubstrOptions {\n  start?: number\n  length: number\n}\n\nexport type DatePickerFormatter = (date: string) => string\n\nfunction createNativeLocaleFormatter (\n  local: string | undefined,\n  options: Intl.DateTimeFormatOptions\n): DatePickerFormatter | undefined\n\nfunction createNativeLocaleFormatter (\n  local: string | undefined,\n  options: Intl.DateTimeFormatOptions,\n  substrOptions: SubstrOptions\n): DatePickerFormatter\n\nfunction createNativeLocaleFormatter (\n  locale: string | undefined,\n  options: Intl.DateTimeFormatOptions,\n  substrOptions: SubstrOptions = { start: 0, length: 0 }\n): DatePickerFormatter | undefined {\n  const makeIsoString = (dateString: string) => {\n    const [year, month, date] = dateString.trim().split(' ')[0].split('-')\n    return [pad(year, 4), pad(month || 1), pad(date || 1)].join('-')\n  }\n\n  try {\n    const intlFormatter = new Intl.DateTimeFormat(locale || undefined, options)\n    return (dateString: string) => intlFormatter.format(new Date(`${makeIsoString(dateString)}T00:00:00+00:00`))\n  } catch (e) {\n    return (substrOptions.start || substrOptions.length)\n      ? (dateString: string) => makeIsoString(dateString).substr(substrOptions.start || 0, substrOptions.length)\n      : undefined\n  }\n}\n\nexport default createNativeLocaleFormatter\n","import createNativeLocaleFormatter from './createNativeLocaleFormatter'\nimport monthChange from './monthChange'\nimport pad from './pad'\n\nexport {\n  createNativeLocaleFormatter,\n  monthChange,\n  pad,\n}\n","export type AllowedDateFunction = (date: string) => boolean\n\nexport default function isDateAllowed (date: string, min: string, max: string, allowedFn: AllowedDateFunction | undefined) {\n  return (!allowedFn || allowedFn(date)) &&\n    (!min || date >= min.substr(0, 10)) &&\n    (!max || date <= max)\n}\n","import pad from './pad'\n\n/**\n * @param {String} value YYYY-MM format\n * @param {Number} sign -1 or +1\n */\nexport default (value: string, sign: number) => {\n  const [year, month] = value.split('-').map(Number)\n\n  if (month + sign === 0) {\n    return `${year - 1}-12`\n  } else if (month + sign === 13) {\n    return `${year + 1}-01`\n  } else {\n    return `${year}-${pad(month + sign)}`\n  }\n}\n","const padStart = (string: number | string, targetLength: number, padString: string) => {\n  targetLength = targetLength >> 0\n  string = String(string)\n  padString = String(padString)\n  if (string.length > targetLength) {\n    return String(string)\n  }\n\n  targetLength = targetLength - string.length\n  if (targetLength > padString.length) {\n    padString += padString.repeat(targetLength / padString.length)\n  }\n  return padString.slice(0, targetLength) + String(string)\n}\n\nexport default (n: string | number, length = 2) => padStart(n, length, '0')\n","// extracted by mini-css-extract-plugin","import './VDialog.sass'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport ThemeProvider from '../../util/ThemeProvider'\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none',\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto',\n    },\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // If the dialog content contains\n      // the click event, or if the\n      // dialog is not active, or if the overlay\n      // is the same element as the target\n      if (this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) return false\n\n      // If we made it here, the click is outside\n      // and is active. If persistent, and the\n      // click is on the overlay, animate\n      this.$emit('click:outside')\n\n      if (this.persistent) {\n        !this.noClickAnimation && this.animateClick()\n\n        return false\n      }\n\n      // close dialog if !persistent, clicked outside and we're the topmost dialog.\n      // Since this should only be called in a capture event (bottom up), we shouldn't need to stop propagation\n      return this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      this.$nextTick(() => {\n        this.$refs.content.focus()\n        this.bind()\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        focusable.length && (focusable[0] as HTMLElement).focus()\n      }\n    },\n  },\n\n  render (h): VNode {\n    const children = []\n    const data = {\n      class: this.classes,\n      ref: 'dialog',\n      directives: [\n        {\n          name: 'click-outside',\n          value: () => { this.isActive = false },\n          args: {\n            closeConditional: this.closeConditional,\n            include: this.getOpenDependentElements,\n          },\n        },\n        { name: 'show', value: this.isActive },\n      ],\n      on: {\n        click: (e: Event) => { e.stopPropagation() },\n      },\n      style: {},\n    }\n\n    if (!this.fullscreen) {\n      data.style = {\n        maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n        width: this.width === 'auto' ? undefined : convertToUnit(this.width),\n      }\n    }\n\n    children.push(this.genActivator())\n\n    let dialog = h('div', data, this.showLazyContent(this.getContentSlot()))\n    if (this.transition) {\n      dialog = h('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n        },\n      }, [dialog])\n    }\n\n    children.push(h('div', {\n      class: this.contentClasses,\n      attrs: {\n        role: 'document',\n        tabindex: this.isActive ? 0 : undefined,\n        ...this.getScopeIdAttrs(),\n      },\n      on: {\n        keydown: this.onKeydown,\n      },\n      style: { zIndex: this.activeZIndex },\n      ref: 'content',\n    }, [\n      this.$createElement(ThemeProvider, {\n        props: {\n          root: true,\n          light: this.light,\n          dark: this.dark,\n        },\n      }, [dialog]),\n    ]))\n\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, children)\n  },\n})\n","import VDialog from './VDialog'\n\nexport { VDialog }\nexport default VDialog\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","// extracted by mini-css-extract-plugin","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, [\n      h('div', {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }, this.showLazyContent([\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ])),\n    ])\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }, [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","import VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanel from './VExpansionPanel'\nimport VExpansionPanelContent from './VExpansionPanelContent'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\n\nexport { VExpansionPanels, VExpansionPanel, VExpansionPanelHeader, VExpansionPanelContent }\n\nexport default {\n  $_vuetify_subcomponents: {\n    VExpansionPanels,\n    VExpansionPanel,\n    VExpansionPanelHeader,\n    VExpansionPanelContent,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: () => [],\n      validator: val => {\n        return typeof val === 'object' || Array.isArray(val)\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    counterValue (): string {\n      const fileCount = (this.isMultiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((size: number, file: File) => size + file.size, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return Array.isArray(this.internalValue)\n        ? this.internalValue\n        : wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    isMultiple (): boolean {\n      return this.$attrs.hasOwnProperty('multiple')\n    },\n    text (): string[] {\n      if (!this.isDirty) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const name = this.truncateText(file.name)\n\n        return !this.showSize ? name : `${name} (${humanReadableFileSize(file.size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.isMultiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.isMultiple ? [] : null\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.counterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n        on: {\n          click: () => this.$refs.input.click(),\n        },\n      }, children)\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.isMultiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","import VFileInput from './VFileInput'\n\nexport { VFileInput }\nexport default VFileInput\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VFooter.sass'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport VSheet from '../VSheet/VSheet'\nimport SSRBootable from '../../mixins/ssr-bootable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue/types/vnode'\n\n/* @vue/component */\nexport default mixins(\n  VSheet,\n  Applicationable('footer', [\n    'height',\n    'inset',\n  ]),\n  SSRBootable\n).extend({\n  name: 'v-footer',\n\n  props: {\n    height: {\n      default: 'auto',\n      type: [Number, String],\n    },\n    inset: Boolean,\n    padless: Boolean,\n    tile: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  computed: {\n    applicationProperty (): string {\n      return this.inset ? 'insetFooter' : 'footer'\n    },\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-footer--absolute': this.absolute,\n        'v-footer--fixed': !this.absolute && (this.app || this.fixed),\n        'v-footer--padless': this.padless,\n        'v-footer--inset': this.inset,\n      }\n    },\n    computedBottom (): number | undefined {\n      if (!this.isPositioned) return undefined\n\n      return this.app\n        ? this.$vuetify.application.bottom\n        : 0\n    },\n    computedLeft (): number | undefined {\n      if (!this.isPositioned) return undefined\n\n      return this.app && this.inset\n        ? this.$vuetify.application.left\n        : 0\n    },\n    computedRight (): number | undefined {\n      if (!this.isPositioned) return undefined\n\n      return this.app && this.inset\n        ? this.$vuetify.application.right\n        : 0\n    },\n    isPositioned (): boolean {\n      return Boolean(\n        this.absolute ||\n        this.fixed ||\n        this.app\n      )\n    },\n    styles (): object {\n      const height = parseInt(this.height)\n\n      return {\n        ...VSheet.options.computed.styles.call(this),\n        height: isNaN(height) ? height : convertToUnit(height),\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight),\n        bottom: convertToUnit(this.computedBottom),\n      }\n    },\n  },\n\n  methods: {\n    updateApplication () {\n      const height = parseInt(this.height)\n\n      return isNaN(height)\n        ? this.$el ? this.$el.clientHeight : 0\n        : height\n    },\n  },\n\n  render (h): VNode {\n    const data = this.setBackgroundColor(this.color, {\n      staticClass: 'v-footer',\n      class: this.classes,\n      style: this.styles,\n    })\n\n    return h('footer', data, this.$slots.default)\n  },\n})\n","import VFooter from './VFooter'\n\nexport { VFooter }\nexport default VFooter\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  inheritAttrs: false,\n\n  props: {\n    lazyValidation: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","import VForm from './VForm'\n\nexport { VForm }\nexport default VForm\n","import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    justifySelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n        [`justify-self-${props.justifySelf}`]: props.justifySelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n","import './_grid.sass'\n\nimport Grid from './grid'\n\nexport default Grid('flex')\n","// extracted by mini-css-extract-plugin","import './_grid.sass'\n\nimport Grid from './grid'\n\nexport default Grid('layout')\n","import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","import './_grid.sass'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nexport default createSimpleFunctional('spacer', 'div', 'v-spacer')\n","// extracted by mini-css-extract-plugin","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n","import VContainer from './VContainer'\nimport VCol from './VCol'\nimport VRow from './VRow'\nimport VSpacer from './VSpacer'\nimport VLayout from './VLayout'\nimport VFlex from './VFlex'\n\nexport {\n  VContainer,\n  VCol,\n  VRow,\n  VSpacer,\n  VLayout,\n  VFlex,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VContainer,\n    VCol,\n    VRow,\n    VSpacer,\n    VLayout,\n    VFlex,\n  },\n}\n","// Mixins\nimport Delayable from '../../mixins/delayable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode, ScopedSlotChildren } from 'vue/types/vnode'\n\nexport default mixins(\n  Delayable,\n  Toggleable\n  /* @vue/component */\n).extend({\n  name: 'v-hover',\n\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    value: {\n      type: Boolean,\n      default: undefined,\n    },\n  },\n\n  methods: {\n    onMouseEnter () {\n      this.runDelay('open')\n    },\n    onMouseLeave () {\n      this.runDelay('close')\n    },\n  },\n\n  render (): VNode {\n    if (!this.$scopedSlots.default && this.value === undefined) {\n      consoleWarn('v-hover is missing a default scopedSlot or bound value', this)\n\n      return null as any\n    }\n\n    let element: VNode | ScopedSlotChildren\n\n    /* istanbul ignore else */\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({ hover: this.isActive })\n    }\n\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0]\n    }\n\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-hover should only contain a single element', this)\n\n      return element as any\n    }\n\n    if (!this.disabled) {\n      element.data = element.data || {}\n      this._g(element.data, {\n        mouseenter: this.onMouseEnter,\n        mouseleave: this.onMouseLeave,\n      })\n    }\n\n    return element\n  },\n})\n","import VHover from './VHover'\n\nexport { VHover }\nexport default VHover\n","// extracted by mini-css-extract-plugin","import './VIcon.sass'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport Sizeable from '../../mixins/sizeable'\nimport Themeable from '../../mixins/themeable'\n\n// Util\nimport { convertToUnit, keys, remapInternalIcon } from '../../util/helpers'\n\n// Types\nimport Vue, { CreateElement, VNode, VNodeChildren, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\nimport { VuetifyIcon, VuetifyIconComponent } from 'vuetify/types/services/icons'\n\nenum SIZE_MAP {\n  xSmall = '12px',\n  small = '16px',\n  default = '24px',\n  medium = '28px',\n  large = '36px',\n  xLarge = '40px'\n}\n\nfunction isFontAwesome5 (iconType: string): boolean {\n  return ['fas', 'far', 'fal', 'fab'].some(val => iconType.includes(val))\n}\n\nfunction isSvgPath (icon: string): boolean {\n  return (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(icon) && /[\\dz]$/i.test(icon) && icon.length > 4)\n}\n\nconst VIcon = mixins(\n  BindsAttrs,\n  Colorable,\n  Sizeable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-icon',\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    left: Boolean,\n    right: Boolean,\n    size: [Number, String],\n    tag: {\n      type: String,\n      required: false,\n      default: 'i',\n    },\n  },\n\n  computed: {\n    medium () {\n      return false\n    },\n  },\n\n  methods: {\n    getIcon (): VuetifyIcon {\n      let iconName = ''\n      if (this.$slots.default) iconName = this.$slots.default[0].text!.trim()\n\n      return remapInternalIcon(this, iconName)\n    },\n    getSize (): string | undefined {\n      const sizes = {\n        xSmall: this.xSmall,\n        small: this.small,\n        medium: this.medium,\n        large: this.large,\n        xLarge: this.xLarge,\n      }\n\n      const explicitSize = keys(sizes).find(key => sizes[key])\n\n      return (\n        (explicitSize && SIZE_MAP[explicitSize]) || convertToUnit(this.size)\n      )\n    },\n    // Component data for both font and svg icon.\n    getDefaultData (): VNodeData {\n      const hasClickListener = Boolean(\n        this.listeners$.click || this.listeners$['!click']\n      )\n      const data: VNodeData = {\n        staticClass: 'v-icon notranslate',\n        class: {\n          'v-icon--disabled': this.disabled,\n          'v-icon--left': this.left,\n          'v-icon--link': hasClickListener,\n          'v-icon--right': this.right,\n          'v-icon--dense': this.dense,\n        },\n        attrs: {\n          'aria-hidden': !hasClickListener,\n          role: hasClickListener ? 'button' : null,\n          ...this.attrs$,\n        },\n        on: this.listeners$,\n      }\n\n      return data\n    },\n    applyColors (data: VNodeData): void {\n      data.class = { ...data.class, ...this.themeClasses }\n      this.setTextColor(this.color, data)\n    },\n    renderFontIcon (icon: string, h: CreateElement): VNode {\n      const newChildren: VNodeChildren = []\n      const data = this.getDefaultData()\n\n      let iconType = 'material-icons'\n      // Material Icon delimiter is _\n      // https://material.io/icons/\n      const delimiterIndex = icon.indexOf('-')\n      const isMaterialIcon = delimiterIndex <= -1\n\n      if (isMaterialIcon) {\n        // Material icon uses ligatures.\n        newChildren.push(icon)\n      } else {\n        iconType = icon.slice(0, delimiterIndex)\n        if (isFontAwesome5(iconType)) iconType = ''\n      }\n\n      data.class[iconType] = true\n      data.class[icon] = !isMaterialIcon\n\n      const fontSize = this.getSize()\n      if (fontSize) data.style = { fontSize }\n\n      this.applyColors(data)\n\n      return h(this.tag, data, newChildren)\n    },\n    renderSvgIcon (icon: string, h: CreateElement): VNode {\n      const data = this.getDefaultData()\n      data.class['v-icon--svg'] = true\n\n      data.attrs = {\n        xmlns: 'http://www.w3.org/2000/svg',\n        viewBox: '0 0 24 24',\n        height: '24',\n        width: '24',\n        role: 'img',\n        'aria-hidden': !this.attrs$['aria-label'],\n        'aria-label': this.attrs$['aria-label'],\n      }\n\n      const fontSize = this.getSize()\n      if (fontSize) {\n        data.style = {\n          fontSize,\n          height: fontSize,\n          width: fontSize,\n        }\n        data.attrs.height = fontSize\n        data.attrs.width = fontSize\n      }\n\n      this.applyColors(data)\n\n      return h('svg', data, [\n        h('path', {\n          attrs: {\n            d: icon,\n          },\n        }),\n      ])\n    },\n    renderSvgIconComponent (\n      icon: VuetifyIconComponent,\n      h: CreateElement\n    ): VNode {\n      const data = this.getDefaultData()\n      data.class['v-icon--is-component'] = true\n\n      const size = this.getSize()\n      if (size) {\n        data.style = {\n          fontSize: size,\n          height: size,\n        }\n      }\n\n      this.applyColors(data)\n\n      const component = icon.component\n      data.props = icon.props\n      data.nativeOn = data.on\n\n      return h(component, data)\n    },\n  },\n\n  render (h: CreateElement): VNode {\n    const icon = this.getIcon()\n\n    if (typeof icon === 'string') {\n      if (isSvgPath(icon)) {\n        return this.renderSvgIcon(icon, h)\n      }\n      return this.renderFontIcon(icon, h)\n    }\n\n    return this.renderSvgIconComponent(icon, h)\n  },\n})\n\nexport default Vue.extend({\n  name: 'v-icon',\n\n  $_wrapperFor: VIcon,\n\n  functional: true,\n\n  render (h, { data, children }): VNode {\n    let iconName = ''\n\n    // Support usage of v-text and v-html\n    if (data.domProps) {\n      iconName = data.domProps.textContent ||\n        data.domProps.innerHTML ||\n        iconName\n\n      // Remove nodes so it doesn't\n      // overwrite our changes\n      delete data.domProps.textContent\n      delete data.domProps.innerHTML\n    }\n\n    return h(VIcon, data, iconName ? [iconName] : children)\n  },\n})\n","import VIcon from './VIcon'\n\nexport { VIcon }\nexport default VIcon\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VImg.sass'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport VResponsive from '../VResponsive'\n\n// Utils\nimport { consoleError, consoleWarn } from '../../util/console'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src: string\n  srcset?: string\n  lazySrc: string\n  aspect: number\n}\n\n/* @vue/component */\nexport default VResponsive.extend({\n  name: 'v-img',\n\n  directives: { intersect },\n\n  props: {\n    alt: String,\n    contain: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    },\n    position: {\n      type: String,\n      default: 'center center',\n    },\n    sizes: String,\n    src: {\n      type: [String, Object],\n      default: '',\n    } as PropValidator<string | srcObject>,\n    srcset: String,\n    transition: {\n      type: [Boolean, String],\n      default: 'fade-transition',\n    },\n  },\n\n  data () {\n    return {\n      currentSrc: '', // Set from srcset\n      image: null as HTMLImageElement | null,\n      isLoading: true,\n      calculatedAspectRatio: undefined as number | undefined,\n      naturalWidth: undefined as number | undefined,\n    }\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.normalisedSrc.aspect || this.calculatedAspectRatio)\n    },\n    hasIntersect () {\n      return (\n        typeof window !== 'undefined' &&\n        'IntersectionObserver' in window\n      )\n    },\n    normalisedSrc (): srcObject {\n      return typeof this.src === 'string'\n        ? {\n          src: this.src,\n          srcset: this.srcset,\n          lazySrc: this.lazySrc,\n          aspect: Number(this.aspectRatio),\n        } : {\n          src: this.src.src,\n          srcset: this.srcset || this.src.srcset,\n          lazySrc: this.lazySrc || this.src.lazySrc,\n          aspect: Number(this.aspectRatio || this.src.aspect),\n        }\n    },\n    __cachedImage (): VNode | [] {\n      if (!(this.normalisedSrc.src || this.normalisedSrc.lazySrc)) return []\n\n      const backgroundImage: string[] = []\n      const src = this.isLoading ? this.normalisedSrc.lazySrc : this.currentSrc\n\n      if (this.gradient) backgroundImage.push(`linear-gradient(${this.gradient})`)\n      if (src) backgroundImage.push(`url(\"${src}\")`)\n\n      const image = this.$createElement('div', {\n        staticClass: 'v-image__image',\n        class: {\n          'v-image__image--preload': this.isLoading,\n          'v-image__image--contain': this.contain,\n          'v-image__image--cover': !this.contain,\n        },\n        style: {\n          backgroundImage: backgroundImage.join(', '),\n          backgroundPosition: this.position,\n        },\n        key: +this.isLoading,\n      })\n\n      /* istanbul ignore if */\n      if (!this.transition) return image\n\n      return this.$createElement('transition', {\n        attrs: {\n          name: this.transition,\n          mode: 'in-out',\n        },\n      }, [image])\n    },\n  },\n\n  watch: {\n    src () {\n      // Force re-init when src changes\n      if (!this.isLoading) this.init(undefined, undefined, true)\n      else this.loadImage()\n    },\n    '$vuetify.breakpoint.width': 'getSrc',\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init (\n      entries?: IntersectionObserverEntry[],\n      observer?: IntersectionObserver,\n      isIntersecting?: boolean\n    ) {\n      // If the current browser supports the intersection\n      // observer api, the image is not observable, and\n      // the eager prop isn't being used, do not load\n      if (\n        this.hasIntersect &&\n        !isIntersecting &&\n        !this.eager\n      ) return\n\n      if (this.normalisedSrc.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = this.normalisedSrc.lazySrc\n        this.pollForSize(lazyImg, null)\n      }\n      /* istanbul ignore else */\n      if (this.normalisedSrc.src) this.loadImage()\n    },\n    onLoad () {\n      this.getSrc()\n      this.isLoading = false\n      this.$emit('load', this.src)\n    },\n    onError () {\n      consoleError(\n        `Image load failed\\n\\n` +\n        `src: ${this.normalisedSrc.src}`,\n        this\n      )\n      this.$emit('error', this.src)\n    },\n    getSrc () {\n      /* istanbul ignore else */\n      if (this.image) this.currentSrc = this.image.currentSrc || this.image.src\n    },\n    loadImage () {\n      const image = new Image()\n      this.image = image\n\n      image.onload = () => {\n        /* istanbul ignore if */\n        if (image.decode) {\n          image.decode().catch((err: DOMException) => {\n            consoleWarn(\n              `Failed to decode image, trying to render anyway\\n\\n` +\n              `src: ${this.normalisedSrc.src}` +\n              (err.message ? `\\nOriginal error: ${err.message}` : ''),\n              this\n            )\n          }).then(this.onLoad)\n        } else {\n          this.onLoad()\n        }\n      }\n      image.onerror = this.onError\n\n      image.src = this.normalisedSrc.src\n      this.sizes && (image.sizes = this.sizes)\n      this.normalisedSrc.srcset && (image.srcset = this.normalisedSrc.srcset)\n\n      this.aspectRatio || this.pollForSize(image)\n      this.getSrc()\n    },\n    pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight, naturalWidth } = img\n\n        if (naturalHeight || naturalWidth) {\n          this.naturalWidth = naturalWidth\n          this.calculatedAspectRatio = naturalWidth / naturalHeight\n        } else {\n          timeout != null && setTimeout(poll, timeout)\n        }\n      }\n\n      poll()\n    },\n    genContent () {\n      const content: VNode = VResponsive.options.methods.genContent.call(this)\n      if (this.naturalWidth) {\n        this._b(content.data!, 'div', {\n          style: { width: `${this.naturalWidth}px` },\n        })\n      }\n\n      return content\n    },\n    __genPlaceholder (): VNode | void {\n      if (this.$slots.placeholder) {\n        const placeholder = this.isLoading\n          ? [this.$createElement('div', {\n            staticClass: 'v-image__placeholder',\n          }, this.$slots.placeholder)]\n          : []\n\n        if (!this.transition) return placeholder[0]\n\n        return this.$createElement('transition', {\n          props: {\n            appear: true,\n            name: this.transition,\n          },\n        }, placeholder)\n      }\n    },\n  },\n\n  render (h): VNode {\n    const node = VResponsive.options.render.call(this, h)\n\n    node.data!.staticClass += ' v-image'\n\n    // Only load intersect directive if it\n    // will work in the current browser.\n    node.data!.directives = this.hasIntersect ? [{\n      name: 'intersect',\n      options: this.options,\n      modifiers: { once: true },\n      value: this.init,\n    } as any] : []\n\n    node.data!.attrs = {\n      role: this.alt ? 'img' : undefined,\n      'aria-label': this.alt,\n    }\n\n    node.children = [\n      this.__cachedSizer,\n      this.__cachedImage,\n      this.__genPlaceholder(),\n      this.genContent(),\n    ] as VNode[]\n\n    return h(node.tag, node.data, node.children)\n  },\n})\n","import VImg from './VImg'\n\nexport { VImg }\nexport default VImg\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VInput.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VLabel from '../VLabel'\nimport VMessages from '../VMessages'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Validatable from '../../mixins/validatable'\n\n// Utilities\nimport {\n  convertToUnit,\n  getSlot,\n  kebabCase,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData, PropType } from 'vue'\nimport mixins from '../../util/mixins'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Validatable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  /* eslint-disable-next-line camelcase */\n  $_modelEvent: string\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-input',\n\n  inheritAttrs: false,\n\n  props: {\n    appendIcon: String,\n    backgroundColor: {\n      type: String,\n      default: '',\n    },\n    dense: Boolean,\n    height: [Number, String],\n    hideDetails: Boolean,\n    hint: String,\n    id: String,\n    label: String,\n    loading: Boolean,\n    persistentHint: Boolean,\n    prependIcon: String,\n    value: null as any as PropType<any>,\n  },\n\n  data () {\n    return {\n      lazyValue: this.value,\n      hasMouseDown: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-input--has-state': this.hasState,\n        'v-input--hide-details': this.hideDetails,\n        'v-input--is-label-active': this.isLabelActive,\n        'v-input--is-dirty': this.isDirty,\n        'v-input--is-disabled': this.disabled,\n        'v-input--is-focused': this.isFocused,\n        'v-input--is-loading': this.loading !== false && this.loading !== undefined,\n        'v-input--is-readonly': this.readonly,\n        'v-input--dense': this.dense,\n        ...this.themeClasses,\n      }\n    },\n    computedId (): string {\n      return this.id || `input-${this._uid}`\n    },\n    hasHint (): boolean {\n      return !this.hasMessages &&\n        !!this.hint &&\n        (this.persistentHint || this.isFocused)\n    },\n    hasLabel (): boolean {\n      return !!(this.$slots.label || this.label)\n    },\n    // Proxy for `lazyValue`\n    // This allows an input\n    // to function without\n    // a provided model\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit(this.$_modelEvent, val)\n      },\n    },\n    isDirty (): boolean {\n      return !!this.lazyValue\n    },\n    isDisabled (): boolean {\n      return this.disabled || this.readonly\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n  },\n\n  watch: {\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  beforeCreate () {\n    // v-radio-group needs to emit a different event\n    // https://github.com/vuetifyjs/vuetify/issues/4752\n    this.$_modelEvent = (this.$options.model && this.$options.model.event) || 'input'\n  },\n\n  methods: {\n    genContent () {\n      return [\n        this.genPrependSlot(),\n        this.genControl(),\n        this.genAppendSlot(),\n      ]\n    },\n    genControl () {\n      return this.$createElement('div', {\n        staticClass: 'v-input__control',\n      }, [\n        this.genInputSlot(),\n        this.genMessages(),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genLabel(),\n        this.$slots.default,\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void\n    ) {\n      const icon = (this as any)[`${type}Icon`]\n      const eventName = `click:${kebabCase(type)}`\n\n      const data: VNodeData = {\n        props: {\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.disabled,\n          light: this.light,\n        },\n        on: !(this.listeners$[eventName] || cb)\n          ? undefined\n          : {\n            click: (e: Event) => {\n              e.preventDefault()\n              e.stopPropagation()\n\n              this.$emit(eventName, e)\n              cb && cb(e)\n            },\n            // Container has g event that will\n            // trigger menu open if enclosed\n            mouseup: (e: Event) => {\n              e.preventDefault()\n              e.stopPropagation()\n            },\n          },\n      }\n\n      return this.$createElement('div', {\n        staticClass: `v-input__icon v-input__icon--${kebabCase(type)}`,\n        key: type + icon,\n      }, [\n        this.$createElement(\n          VIcon,\n          data,\n          icon\n        ),\n      ])\n    },\n    genInputSlot () {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor, {\n        staticClass: 'v-input__slot',\n        style: { height: convertToUnit(this.height) },\n        on: {\n          click: this.onClick,\n          mousedown: this.onMouseDown,\n          mouseup: this.onMouseUp,\n        },\n        ref: 'input-slot',\n      }), [this.genDefaultSlot()])\n    },\n    genLabel () {\n      if (!this.hasLabel) return null\n\n      return this.$createElement(VLabel, {\n        props: {\n          color: this.validationState,\n          dark: this.dark,\n          focused: this.hasState,\n          for: this.computedId,\n          light: this.light,\n        },\n      }, this.$slots.label || this.label)\n    },\n    genMessages () {\n      if (this.hideDetails) return null\n\n      const messages = this.hasHint\n        ? [this.hint]\n        : this.validations\n\n      return this.$createElement(VMessages, {\n        props: {\n          color: this.hasHint ? '' : this.validationState,\n          dark: this.dark,\n          light: this.light,\n          value: (this.hasMessages || this.hasHint) ? messages : [],\n        },\n        attrs: {\n          role: this.hasMessages ? 'alert' : null,\n        },\n        scopedSlots: {\n          default: props => getSlot(this, 'message', props),\n        },\n      })\n    },\n    genSlot (\n      type: string,\n      location: string,\n      slot: (VNode | VNode[])[]\n    ) {\n      if (!slot.length) return null\n\n      const ref = `${type}-${location}`\n\n      return this.$createElement('div', {\n        staticClass: `v-input__${ref}`,\n        ref,\n      }, slot)\n    },\n    genPrependSlot () {\n      const slot = []\n\n      if (this.$slots.prepend) {\n        slot.push(this.$slots.prepend)\n      } else if (this.prependIcon) {\n        slot.push(this.genIcon('prepend'))\n      }\n\n      return this.genSlot('prepend', 'outer', slot)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      // Append icon for text field was really\n      // an appended inner icon, v-text-field\n      // will overwrite this method in order to obtain\n      // backwards compat\n      if (this.$slots.append) {\n        slot.push(this.$slots.append)\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    onClick (e: Event) {\n      this.$emit('click', e)\n    },\n    onMouseDown (e: Event) {\n      this.hasMouseDown = true\n      this.$emit('mousedown', e)\n    },\n    onMouseUp (e: Event) {\n      this.hasMouseDown = false\n      this.$emit('mouseup', e)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.validationState, {\n      staticClass: 'v-input',\n      class: this.classes,\n    }), this.genContent())\n  },\n})\n","import VInput from './VInput'\n\nexport { VInput }\nexport default VInput\n","// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\nimport { VNode, ScopedSlotChildren } from 'vue/types/vnode'\n\n/* @vue/component */\nexport const BaseItem = Vue.extend({\n  props: {\n    activeClass: String,\n    value: {\n      required: false,\n    },\n  },\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  methods: {\n    toggle () {\n      this.isActive = !this.isActive\n    },\n  },\n\n  render (): VNode {\n    if (!this.$scopedSlots.default) {\n      consoleWarn('v-item is missing a default scopedSlot', this)\n\n      return null as any\n    }\n\n    let element: VNode | ScopedSlotChildren\n\n    /* istanbul ignore else */\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n    }\n\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0]\n    }\n\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-item should only contain a single element', this)\n\n      return element as any\n    }\n\n    element.data = this._b(element.data || {}, element.tag!, {\n      class: { [this.activeClass]: this.isActive },\n    })\n\n    return element\n  },\n})\n\nexport default mixins(\n  BaseItem,\n  GroupableFactory('itemGroup', 'v-item', 'v-item-group')\n).extend({\n  name: 'v-item',\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VItemGroup.sass'\n\n// Mixins\nimport Groupable from '../../mixins/groupable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue/types'\n\nexport type GroupableInstance = InstanceType<typeof Groupable> & {\n  id?: string\n  to?: any\n  value?: any\n }\n\nexport const BaseItemGroup = mixins(\n  Proxyable,\n  Themeable\n).extend({\n  name: 'base-item-group',\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-item--active',\n    },\n    mandatory: Boolean,\n    max: {\n      type: [Number, String],\n      default: null,\n    },\n    multiple: Boolean,\n  },\n\n  data () {\n    return {\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      internalLazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      items: [] as GroupableInstance[],\n    }\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        'v-item-group': true,\n        ...this.themeClasses,\n      }\n    },\n    selectedIndex (): number {\n      return (this.selectedItem && this.items.indexOf(this.selectedItem)) || -1\n    },\n    selectedItem (): GroupableInstance | undefined {\n      if (this.multiple) return undefined\n\n      return this.selectedItems[0]\n    },\n    selectedItems (): GroupableInstance[] {\n      return this.items.filter((item, index) => {\n        return this.toggleMethod(this.getValue(item, index))\n      })\n    },\n    selectedValues (): any[] {\n      if (this.internalValue == null) return []\n\n      return Array.isArray(this.internalValue)\n        ? this.internalValue\n        : [this.internalValue]\n    },\n    toggleMethod (): (v: any) => boolean {\n      if (!this.multiple) {\n        return (v: any) => this.internalValue === v\n      }\n\n      const internalValue = this.internalValue\n      if (Array.isArray(internalValue)) {\n        return (v: any) => internalValue.includes(v)\n      }\n\n      return () => false\n    },\n  },\n\n  watch: {\n    internalValue () {\n      // https://github.com/vuetifyjs/vuetify/issues/5352\n      this.$nextTick(this.updateItemsState)\n    },\n  },\n\n  created () {\n    if (this.multiple && !Array.isArray(this.internalValue)) {\n      consoleWarn('Model must be bound to an array if the multiple property is true.', this)\n    }\n  },\n\n  methods: {\n    genData (): object {\n      return {\n        class: this.classes,\n      }\n    },\n    getValue (item: GroupableInstance, i: number): unknown {\n      return item.value == null || item.value === ''\n        ? i\n        : item.value\n    },\n    onClick (item: GroupableInstance) {\n      this.updateInternalValue(\n        this.getValue(item, this.items.indexOf(item))\n      )\n    },\n    register (item: GroupableInstance) {\n      const index = this.items.push(item) - 1\n\n      item.$on('change', () => this.onClick(item))\n\n      // If no value provided and mandatory,\n      // assign first registered item\n      if (this.mandatory && this.internalLazyValue == null) {\n        this.updateMandatory()\n      }\n\n      this.updateItem(item, index)\n    },\n    unregister (item: GroupableInstance) {\n      if (this._isDestroyed) return\n\n      const index = this.items.indexOf(item)\n      const value = this.getValue(item, index)\n\n      this.items.splice(index, 1)\n\n      const valueIndex = this.selectedValues.indexOf(value)\n\n      // Items is not selected, do nothing\n      if (valueIndex < 0) return\n\n      // If not mandatory, use regular update process\n      if (!this.mandatory) {\n        return this.updateInternalValue(value)\n      }\n\n      // Remove the value\n      if (this.multiple && Array.isArray(this.internalValue)) {\n        this.internalValue = this.internalValue.filter(v => v !== value)\n      } else {\n        this.internalValue = undefined\n      }\n\n      // If mandatory and we have no selection\n      // add the last item as value\n      /* istanbul ignore else */\n      if (!this.selectedItems.length) {\n        this.updateMandatory(true)\n      }\n    },\n    updateItem (item: GroupableInstance, index: number) {\n      const value = this.getValue(item, index)\n\n      item.isActive = this.toggleMethod(value)\n    },\n    updateItemsState () {\n      if (this.mandatory &&\n        !this.selectedItems.length\n      ) {\n        return this.updateMandatory()\n      }\n\n      // TODO: Make this smarter so it\n      // doesn't have to iterate every\n      // child in an update\n      this.items.forEach(this.updateItem)\n    },\n    updateInternalValue (value: any) {\n      this.multiple\n        ? this.updateMultiple(value)\n        : this.updateSingle(value)\n    },\n    updateMandatory (last?: boolean) {\n      if (!this.items.length) return\n\n      const items = this.items.slice()\n\n      if (last) items.reverse()\n\n      const item = items.find(item => !item.disabled)\n\n      // If no tabs are available\n      // aborts mandatory value\n      if (!item) return\n\n      const index = this.items.indexOf(item)\n\n      this.updateInternalValue(\n        this.getValue(item, index)\n      )\n    },\n    updateMultiple (value: any) {\n      const defaultValue = Array.isArray(this.internalValue)\n        ? this.internalValue\n        : []\n      const internalValue = defaultValue.slice()\n      const index = internalValue.findIndex(val => val === value)\n\n      if (\n        this.mandatory &&\n        // Item already exists\n        index > -1 &&\n        // value would be reduced below min\n        internalValue.length - 1 < 1\n      ) return\n\n      if (\n        // Max is set\n        this.max != null &&\n        // Item doesn't exist\n        index < 0 &&\n        // value would be increased above max\n        internalValue.length + 1 > this.max\n      ) return\n\n      index > -1\n        ? internalValue.splice(index, 1)\n        : internalValue.push(value)\n\n      this.internalValue = internalValue\n    },\n    updateSingle (value: any) {\n      const isSame = value === this.internalValue\n\n      if (this.mandatory && isSame) return\n\n      this.internalValue = isSame ? undefined : value\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), this.$slots.default)\n  },\n})\n\nexport default BaseItemGroup.extend({\n  name: 'v-item-group',\n\n  provide (): object {\n    return {\n      itemGroup: this,\n    }\n  },\n})\n","import VItem from './VItem'\nimport VItemGroup from './VItemGroup'\n\nexport {\n  VItem,\n  VItemGroup,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VItem,\n    VItemGroup,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VLabel.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-label',\n\n  functional: true,\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    disabled: Boolean,\n    focused: Boolean,\n    for: String,\n    left: {\n      type: [Number, String],\n      default: 0,\n    },\n    right: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    value: Boolean,\n  },\n\n  render (h, ctx): VNode {\n    const { children, listeners, props } = ctx\n    const data = {\n      staticClass: 'v-label',\n      class: {\n        'v-label--active': props.value,\n        'v-label--is-disabled': props.disabled,\n        ...functionalThemeClasses(ctx),\n      },\n      attrs: {\n        for: props.for,\n        'aria-hidden': !props.for,\n      },\n      on: listeners,\n      style: {\n        left: convertToUnit(props.left),\n        right: convertToUnit(props.right),\n        position: props.absolute ? 'absolute' : 'relative',\n      },\n      ref: 'label',\n    }\n\n    return h('label', Colorable.options.methods.setTextColor(props.focused && props.color, data), children)\n  },\n})\n","import VLabel from './VLabel'\n\nexport { VLabel }\nexport default VLabel\n","// Mixins\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { convertToUnit, getSlot } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(Toggleable).extend({\n  name: 'VLazy',\n\n  directives: { intersect },\n\n  props: {\n    minHeight: [Number, String],\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    },\n    transition: {\n      type: String,\n      default: 'fade-transition',\n    },\n  },\n\n  computed: {\n    styles (): object {\n      return {\n        minHeight: parseInt(this.minHeight) ? convertToUnit(this.minHeight) : this.minHeight,\n      }\n    },\n  },\n\n  methods: {\n    genContent () {\n      const slot = getSlot(this)\n\n      /* istanbul ignore if */\n      if (!this.transition) return slot\n\n      const children = []\n\n      if (this.isActive) children.push(slot)\n\n      return this.$createElement('transition', {\n        props: { name: this.transition },\n      }, children)\n    },\n    onObserve (\n      entries: IntersectionObserverEntry[],\n      observer: IntersectionObserver,\n      isIntersecting: boolean,\n    ) {\n      if (this.isActive) return\n\n      this.isActive = isIntersecting\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-lazy',\n      attrs: this.$attrs,\n      directives: [{\n        name: 'intersect',\n        value: {\n          handler: this.onObserve,\n          options: this.options,\n        },\n      }],\n      on: this.$listeners,\n      style: this.styles,\n    }, [this.genContent()])\n  },\n})\n","import VLazy from './VLazy'\n\nexport { VLazy }\nexport default VLazy\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VList.sass'\nimport VListGroup from './VListGroup'\n\n// Components\nimport VSheet from '../VSheet/VSheet'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VListGroupInstance = InstanceType<typeof VListGroup>\n\ninterface options extends InstanceType<typeof VSheet> {\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default VSheet.extend<options>().extend({\n  name: 'v-list',\n\n  provide (): object {\n    return {\n      isInList: true,\n      list: this,\n    }\n  },\n\n  inject: {\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    expand: Boolean,\n    flat: Boolean,\n    nav: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    subheader: Boolean,\n    threeLine: Boolean,\n    tile: {\n      type: Boolean,\n      default: true,\n    },\n    twoLine: Boolean,\n  },\n\n  data: () => ({\n    groups: [] as VListGroupInstance[],\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-list--dense': this.dense,\n        'v-list--disabled': this.disabled,\n        'v-list--flat': this.flat,\n        'v-list--nav': this.nav,\n        'v-list--rounded': this.rounded,\n        'v-list--shaped': this.shaped,\n        'v-list--subheader': this.subheader,\n        'v-list--two-line': this.twoLine,\n        'v-list--three-line': this.threeLine,\n      }\n    },\n  },\n\n  methods: {\n    register (content: VListGroupInstance) {\n      this.groups.push(content)\n    },\n    unregister (content: VListGroupInstance) {\n      const index = this.groups.findIndex(g => g._uid === content._uid)\n\n      if (index > -1) this.groups.splice(index, 1)\n    },\n    listClick (uid: number) {\n      if (this.expand) return\n\n      for (const group of this.groups) {\n        group.toggle(uid)\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-list',\n      class: this.classes,\n      style: this.styles,\n      attrs: {\n        role: this.isInNav || this.isInMenu ? undefined : 'list',\n        ...this.attrs$,\n      },\n    }\n\n    return h('div', this.setBackgroundColor(this.color, data), [this.$slots.default])\n  },\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VListGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VList from './VList'\nimport VListItem from './VListItem'\nimport VListItemIcon from './VListItemIcon'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport Toggleable from '../../mixins/toggleable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Transitions\nimport { VExpandTransition } from '../transitions'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { Route } from 'vue-router'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Bootable,\n  Colorable,\n  RegistrableInject('list'),\n  Toggleable\n)\n\ntype VListInstance = InstanceType<typeof VList>\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  list: VListInstance\n  $refs: {\n    group: HTMLElement\n  }\n  $route: Route\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-group',\n\n  directives: { ripple },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    appendIcon: {\n      type: String,\n      default: '$expand',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    disabled: Boolean,\n    group: String,\n    noAction: Boolean,\n    prependIcon: String,\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n    subGroup: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-group--active': this.isActive,\n        'v-list-group--disabled': this.disabled,\n        'v-list-group--no-action': this.noAction,\n        'v-list-group--sub-group': this.subGroup,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val: boolean) {\n      /* istanbul ignore else */\n      if (!this.subGroup && val) {\n        this.list && this.list.listClick(this._uid)\n      }\n    },\n    $route: 'onRouteChange',\n  },\n\n  created () {\n    this.list && this.list.register(this)\n\n    if (this.group &&\n      this.$route &&\n      this.value == null\n    ) {\n      this.isActive = this.matchRoute(this.$route.path)\n    }\n  },\n\n  beforeDestroy () {\n    this.list && this.list.unregister(this)\n  },\n\n  methods: {\n    click (e: Event) {\n      if (this.disabled) return\n\n      this.isBooted = true\n\n      this.$emit('click', e)\n      this.$nextTick(() => (this.isActive = !this.isActive))\n    },\n    genIcon (icon: string | false): VNode {\n      return this.$createElement(VIcon, icon)\n    },\n    genAppendIcon (): VNode | null {\n      const icon = !this.subGroup ? this.appendIcon : false\n\n      if (!icon && !this.$slots.appendIcon) return null\n\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__append-icon',\n      }, [\n        this.$slots.appendIcon || this.genIcon(icon),\n      ])\n    },\n    genHeader (): VNode {\n      return this.$createElement(VListItem, {\n        staticClass: 'v-list-group__header',\n        attrs: {\n          'aria-expanded': String(this.isActive),\n          role: 'button',\n        },\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        props: {\n          inputValue: this.isActive,\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.ripple,\n        }],\n        on: {\n          ...this.listeners$,\n          click: this.click,\n        },\n      }, [\n        this.genPrependIcon(),\n        this.$slots.activator,\n        this.genAppendIcon(),\n      ])\n    },\n    genItems (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-list-group__items',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }, this.showLazyContent([\n        this.$createElement('div', this.$slots.default),\n      ]))\n    },\n    genPrependIcon (): VNode | null {\n      const icon = this.prependIcon\n        ? this.prependIcon\n        : this.subGroup\n          ? '$subgroup'\n          : false\n\n      if (!icon && !this.$slots.prependIcon) return null\n\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__prepend-icon',\n      }, [\n        this.$slots.prependIcon || this.genIcon(icon),\n      ])\n    },\n    onRouteChange (to: Route) {\n      /* istanbul ignore if */\n      if (!this.group) return\n\n      const isActive = this.matchRoute(to.path)\n\n      /* istanbul ignore else */\n      if (isActive && this.isActive !== isActive) {\n        this.list && this.list.listClick(this._uid)\n      }\n\n      this.isActive = isActive\n    },\n    toggle (uid: number) {\n      const isActive = this._uid === uid\n\n      if (isActive) this.isBooted = true\n      this.$nextTick(() => (this.isActive = isActive))\n    },\n    matchRoute (to: string) {\n      return to.match(this.group) !== null\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.isActive && this.color, {\n      staticClass: 'v-list-group',\n      class: this.classes,\n    }), [\n      this.genHeader(),\n      h(VExpandTransition, [this.genItems()]),\n    ])\n  },\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VListItem.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Routable from '../../mixins/routable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\n\n// Directives\nimport Ripple from '../../directives/ripple'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport { removed } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst baseMixins = mixins(\n  Colorable,\n  Routable,\n  Themeable,\n  GroupableFactory('listItemGroup'),\n  ToggleableFactory('inputValue')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  isInGroup: boolean\n  isInList: boolean\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-item',\n\n  directives: {\n    Ripple,\n  },\n\n  inheritAttrs: false,\n\n  inject: {\n    isInGroup: {\n      default: false,\n    },\n    isInList: {\n      default: false,\n    },\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.listItemGroup) return ''\n\n        return this.listItemGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    dense: Boolean,\n    inactive: Boolean,\n    link: Boolean,\n    selectable: {\n      type: Boolean,\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    threeLine: Boolean,\n    twoLine: Boolean,\n    value: null as any as PropValidator<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-list-item--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-item': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-list-item--dense': this.dense,\n        'v-list-item--disabled': this.disabled,\n        'v-list-item--link': this.isClickable && !this.inactive,\n        'v-list-item--selectable': this.selectable,\n        'v-list-item--three-line': this.threeLine,\n        'v-list-item--two-line': this.twoLine,\n        ...this.themeClasses,\n      }\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.listItemGroup\n      )\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('avatar')) {\n      removed('avatar', this)\n    }\n  },\n\n  methods: {\n    click (e: MouseEvent | KeyboardEvent) {\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n    genAttrs () {\n      const attrs: Record<string, any> = {\n        'aria-disabled': this.disabled ? true : undefined,\n        tabindex: this.isClickable && !this.disabled ? 0 : -1,\n        ...this.$attrs,\n      }\n\n      if (this.$attrs.hasOwnProperty('role')) {\n        // do nothing, role already provided\n      } else if (this.isInNav) {\n        // do nothing, role is inherit\n      } else if (this.isInGroup) {\n        attrs.role = 'listitem'\n        attrs['aria-selected'] = String(this.isActive)\n      } else if (this.isInMenu) {\n        attrs.role = this.isClickable ? 'menuitem' : undefined\n      } else if (this.isInList) {\n        attrs.role = 'listitem'\n      }\n\n      return attrs\n    },\n  },\n\n  render (h): VNode {\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      ...this.genAttrs(),\n    }\n    data.on = {\n      ...data.on,\n      click: this.click,\n      keydown: (e: KeyboardEvent) => {\n        /* istanbul ignore else */\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    const children = this.$scopedSlots.default\n      ? this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n      : this.$slots.default\n\n    tag = this.inactive ? 'div' : tag\n\n    return h(tag, this.setTextColor(this.color, data), children)\n  },\n})\n","// Types\nimport Vue, { VNode } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'v-list-item-action',\n\n  functional: true,\n\n  render (h, { data, children = [] }): VNode {\n    data.staticClass = data.staticClass ? `v-list-item__action ${data.staticClass}` : 'v-list-item__action'\n    const filteredChild = children.filter(VNode => {\n      return VNode.isComment === false && VNode.text !== ' '\n    })\n    if (filteredChild.length > 1) data.staticClass += ' v-list-item__action--stack'\n\n    return h('div', data, children)\n  },\n})\n","// Components\nimport VAvatar from '../VAvatar'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default VAvatar.extend({\n  name: 'v-list-item-avatar',\n\n  props: {\n    horizontal: Boolean,\n    size: {\n      type: [Number, String],\n      default: 40,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-item__avatar--horizontal': this.horizontal,\n        ...VAvatar.options.computed.classes.call(this),\n        'v-avatar--tile': this.tile || this.horizontal,\n      }\n    },\n  },\n\n  render (h): VNode {\n    const render = VAvatar.options.render.call(this, h)\n\n    render.data = render.data || {}\n    render.data.staticClass += ' v-list-item__avatar'\n\n    return render\n  },\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VListItemGroup.sass'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  BaseItemGroup,\n  Colorable\n).extend({\n  name: 'v-list-item-group',\n\n  provide () {\n    return {\n      isInGroup: true,\n      listItemGroup: this,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-list-item-group': true,\n      }\n    },\n  },\n\n  methods: {\n    genData (): object {\n      return this.setTextColor(this.color, {\n        ...BaseItemGroup.options.methods.genData.call(this),\n        attrs: {\n          role: 'listbox',\n        },\n      })\n    },\n  },\n})\n","// Types\nimport Vue, { VNode } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'v-list-item-icon',\n\n  functional: true,\n\n  render (h, { data, children }): VNode {\n    data.staticClass = (`v-list-item__icon ${data.staticClass || ''}`).trim()\n\n    return h('div', data, children)\n  },\n})\n","import { createSimpleFunctional } from '../../util/helpers'\n\nimport VList from './VList'\nimport VListGroup from './VListGroup'\nimport VListItem from './VListItem'\nimport VListItemGroup from './VListItemGroup'\nimport VListItemAction from './VListItemAction'\nimport VListItemAvatar from './VListItemAvatar'\nimport VListItemIcon from './VListItemIcon'\n\nexport const VListItemActionText = createSimpleFunctional('v-list-item__action-text', 'span')\nexport const VListItemContent = createSimpleFunctional('v-list-item__content', 'div')\nexport const VListItemTitle = createSimpleFunctional('v-list-item__title', 'div')\nexport const VListItemSubtitle = createSimpleFunctional('v-list-item__subtitle', 'div')\n\nexport {\n  VList,\n  VListGroup,\n  VListItem,\n  VListItemAction,\n  VListItemAvatar,\n  VListItemIcon,\n  VListItemGroup,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VList,\n    VListGroup,\n    VListItem,\n    VListItemAction,\n    VListItemActionText,\n    VListItemAvatar,\n    VListItemContent,\n    VListItemGroup,\n    VListItemIcon,\n    VListItemSubtitle,\n    VListItemTitle,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VMenu.sass'\n\n// Mixins\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport ThemeProvider from '../../util/ThemeProvider'\nimport { removed } from '../../util/console'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      if (!this.transition) return this.genContent()\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [this.genContent()])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: () => { this.isActive = false },\n          args: {\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        } as any)\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement(\n        'div',\n        options,\n        this.showLazyContent(this.getContentSlot())\n      )\n    },\n    getTiles () {\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.$createElement(ThemeProvider, {\n        props: {\n          root: true,\n          light: this.light,\n          dark: this.dark,\n        },\n      }, [this.genTransition()]),\n    ])\n  },\n})\n","import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VMessages.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport mixins from '../../util/mixins'\n\n// Utilities\nimport {\n  escapeHTML,\n  getSlot,\n} from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-messages',\n\n  props: {\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n  },\n\n  methods: {\n    genChildren () {\n      return this.$createElement('transition-group', {\n        staticClass: 'v-messages__wrapper',\n        attrs: {\n          name: 'message-transition',\n          tag: 'div',\n        },\n      }, this.value.map(this.genMessage))\n    },\n    genMessage (message: string, key: number) {\n      const slot = getSlot(this, 'default', { message, key })\n      const escapedHTML = escapeHTML(message)\n      const innerHTML = !slot ? escapedHTML : undefined\n\n      return this.$createElement('div', {\n        staticClass: 'v-messages__message',\n        key,\n        domProps: { innerHTML },\n      }, slot)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-messages',\n      class: this.themeClasses,\n    }), [this.genChildren()])\n  },\n})\n","import VMessages from './VMessages'\n\nexport { VMessages }\nexport default VMessages\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VNavigationDrawer.sass'\n\n// Components\nimport VImg, { srcObject } from '../VImg/VImg'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Colorable from '../../mixins/colorable'\nimport Dependent from '../../mixins/dependent'\nimport Overlayable from '../../mixins/overlayable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\nimport Touch, { TouchWrapper } from '../../directives/touch'\n\n// Utilities\nimport { convertToUnit, getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode, VNodeDirective } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst baseMixins = mixins(\n  Applicationable('left', [\n    'isActive',\n    'isMobile',\n    'miniVariant',\n    'expandOnHover',\n    'permanent',\n    'right',\n    'temporary',\n    'width',\n  ]),\n  Colorable,\n  Dependent,\n  Overlayable,\n  SSRBootable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-navigation-drawer',\n\n  provide (): object {\n    return {\n      isInNav: this.tag === 'nav',\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize,\n    Touch,\n  },\n\n  props: {\n    bottom: Boolean,\n    clipped: Boolean,\n    disableResizeWatcher: Boolean,\n    disableRouteWatcher: Boolean,\n    expandOnHover: Boolean,\n    floating: Boolean,\n    height: {\n      type: [Number, String],\n      default (): string {\n        return this.app ? '100vh' : '100%'\n      },\n    },\n    miniVariant: Boolean,\n    miniVariantWidth: {\n      type: [Number, String],\n      default: 80,\n    },\n    mobileBreakPoint: {\n      type: [Number, String],\n      default: 1264,\n    },\n    permanent: Boolean,\n    right: Boolean,\n    src: {\n      type: [String, Object],\n      default: '',\n    } as PropValidator<string | srcObject>,\n    stateless: Boolean,\n    tag: {\n      type: String,\n      default (): string {\n        return this.app ? 'nav' : 'aside'\n      },\n    },\n    temporary: Boolean,\n    touchless: Boolean,\n    width: {\n      type: [Number, String],\n      default: 256,\n    },\n    value: { required: false } as PropValidator<any>,\n  },\n\n  data: () => ({\n    isMouseover: false,\n    touchArea: {\n      left: 0,\n      right: 0,\n    },\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    /**\n     * Used for setting an app value from a dynamic\n     * property. Called from applicationable.js\n     */\n    applicationProperty (): string {\n      return this.right ? 'right' : 'left'\n    },\n    classes (): object {\n      return {\n        'v-navigation-drawer': true,\n        'v-navigation-drawer--absolute': this.absolute,\n        'v-navigation-drawer--bottom': this.bottom,\n        'v-navigation-drawer--clipped': this.clipped,\n        'v-navigation-drawer--close': !this.isActive,\n        'v-navigation-drawer--fixed': !this.absolute && (this.app || this.fixed),\n        'v-navigation-drawer--floating': this.floating,\n        'v-navigation-drawer--is-mobile': this.isMobile,\n        'v-navigation-drawer--is-mouseover': this.isMouseover,\n        'v-navigation-drawer--mini-variant': this.isMiniVariant,\n        'v-navigation-drawer--open': this.isActive,\n        'v-navigation-drawer--open-on-hover': this.expandOnHover,\n        'v-navigation-drawer--right': this.right,\n        'v-navigation-drawer--temporary': this.temporary,\n        ...this.themeClasses,\n      }\n    },\n    computedMaxHeight (): number | null {\n      if (!this.hasApp) return null\n\n      const computedMaxHeight = (\n        this.$vuetify.application.bottom +\n        this.$vuetify.application.footer +\n        this.$vuetify.application.bar\n      )\n\n      if (!this.clipped) return computedMaxHeight\n\n      return computedMaxHeight + this.$vuetify.application.top\n    },\n    computedTop (): number {\n      if (!this.hasApp) return 0\n\n      let computedTop = this.$vuetify.application.bar\n\n      computedTop += this.clipped\n        ? this.$vuetify.application.top\n        : 0\n\n      return computedTop\n    },\n    computedTransform (): number {\n      if (this.isActive) return 0\n      if (this.isBottom) return 100\n      return this.right ? 100 : -100\n    },\n    computedWidth (): string | number {\n      return this.isMiniVariant ? this.miniVariantWidth : this.width\n    },\n    hasApp (): boolean {\n      return (\n        this.app &&\n        (!this.isMobile && !this.temporary)\n      )\n    },\n    isBottom (): boolean {\n      return this.bottom && this.isMobile\n    },\n    isMiniVariant (): boolean {\n      return (\n        !this.expandOnHover &&\n        this.miniVariant\n      ) || (\n        this.expandOnHover &&\n        !this.isMouseover\n      )\n    },\n    isMobile (): boolean {\n      return (\n        !this.stateless &&\n        !this.permanent &&\n        this.$vuetify.breakpoint.width < parseInt(this.mobileBreakPoint, 10)\n      )\n    },\n    reactsToClick (): boolean {\n      return (\n        !this.stateless &&\n        !this.permanent &&\n        (this.isMobile || this.temporary)\n      )\n    },\n    reactsToMobile (): boolean {\n      return (\n        this.app &&\n        !this.disableResizeWatcher &&\n        !this.permanent &&\n        !this.stateless &&\n        !this.temporary\n      )\n    },\n    reactsToResize (): boolean {\n      return !this.disableResizeWatcher && !this.stateless\n    },\n    reactsToRoute (): boolean {\n      return (\n        !this.disableRouteWatcher &&\n        !this.stateless &&\n        (this.temporary || this.isMobile)\n      )\n    },\n    showOverlay (): boolean {\n      return (\n        this.isActive &&\n        (this.isMobile || this.temporary)\n      )\n    },\n    styles (): object {\n      const translate = this.isBottom ? 'translateY' : 'translateX'\n      const styles = {\n        height: convertToUnit(this.height),\n        top: !this.isBottom ? convertToUnit(this.computedTop) : 'auto',\n        maxHeight: this.computedMaxHeight != null\n          ? `calc(100% - ${convertToUnit(this.computedMaxHeight)})`\n          : undefined,\n        transform: `${translate}(${convertToUnit(this.computedTransform, '%')})`,\n        width: convertToUnit(this.computedWidth),\n      }\n\n      return styles\n    },\n  },\n\n  watch: {\n    $route: 'onRouteChange',\n    isActive (val) {\n      this.$emit('input', val)\n    },\n    /**\n     * When mobile changes, adjust the active state\n     * only when there has been a previous value\n     */\n    isMobile (val, prev) {\n      !val &&\n        this.isActive &&\n        !this.temporary &&\n        this.removeOverlay()\n\n      if (prev == null ||\n        !this.reactsToResize ||\n        !this.reactsToMobile\n      ) return\n\n      this.isActive = !val\n    },\n    permanent (val) {\n      // If enabling prop enable the drawer\n      if (val) this.isActive = true\n    },\n    showOverlay (val) {\n      if (val) this.genOverlay()\n      else this.removeOverlay()\n    },\n    value (val) {\n      if (this.permanent) return\n\n      if (val == null) {\n        this.init()\n        return\n      }\n\n      if (val !== this.isActive) this.isActive = val\n    },\n    expandOnHover: 'updateMiniVariant',\n    isMouseover (val) {\n      this.updateMiniVariant(!val)\n    },\n  },\n\n  beforeMount () {\n    this.init()\n  },\n\n  methods: {\n    calculateTouchArea () {\n      const parent = this.$el.parentNode as Element\n\n      if (!parent) return\n\n      const parentRect = parent.getBoundingClientRect()\n\n      this.touchArea = {\n        left: parentRect.left + 50,\n        right: parentRect.right - 50,\n      }\n    },\n    closeConditional () {\n      return this.isActive && !this._isDestroyed && this.reactsToClick\n    },\n    genAppend () {\n      return this.genPosition('append')\n    },\n    genBackground () {\n      const props = {\n        height: '100%',\n        width: '100%',\n        src: this.src,\n      }\n\n      const image = this.$scopedSlots.img\n        ? this.$scopedSlots.img(props)\n        : this.$createElement(VImg, { props })\n\n      return this.$createElement('div', {\n        staticClass: 'v-navigation-drawer__image',\n      }, [image])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives = [{\n        name: 'click-outside',\n        value: () => (this.isActive = false),\n        args: {\n          closeConditional: this.closeConditional,\n          include: this.getOpenDependentElements,\n        },\n      }]\n\n      if (!this.touchless && !this.stateless) {\n        directives.push({\n          name: 'touch',\n          value: {\n            parent: true,\n            left: this.swipeLeft,\n            right: this.swipeRight,\n          },\n        } as any)\n      }\n\n      return directives\n    },\n    genListeners () {\n      const on: Record<string, (e: Event) => void> = {\n        transitionend: (e: Event) => {\n          if (e.target !== e.currentTarget) return\n          this.$emit('transitionend', e)\n\n          // IE11 does not support new Event('resize')\n          const resizeEvent = document.createEvent('UIEvents')\n          resizeEvent.initUIEvent('resize', true, false, window, 0)\n          window.dispatchEvent(resizeEvent)\n        },\n      }\n\n      if (this.miniVariant) {\n        on.click = () => this.$emit('update:mini-variant', false)\n      }\n\n      if (this.expandOnHover) {\n        on.mouseenter = () => (this.isMouseover = true)\n        on.mouseleave = () => (this.isMouseover = false)\n      }\n\n      return on\n    },\n    genPosition (name: 'prepend' | 'append') {\n      const slot = getSlot(this, name)\n\n      if (!slot) return slot\n\n      return this.$createElement('div', {\n        staticClass: `v-navigation-drawer__${name}`,\n      }, slot)\n    },\n    genPrepend () {\n      return this.genPosition('prepend')\n    },\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-navigation-drawer__content',\n      }, this.$slots.default)\n    },\n    genBorder () {\n      return this.$createElement('div', {\n        staticClass: 'v-navigation-drawer__border',\n      })\n    },\n    init () {\n      if (this.permanent) {\n        this.isActive = true\n      } else if (this.stateless ||\n        this.value != null\n      ) {\n        this.isActive = this.value\n      } else if (!this.temporary) {\n        this.isActive = !this.isMobile\n      }\n    },\n    onRouteChange () {\n      if (this.reactsToRoute && this.closeConditional()) {\n        this.isActive = false\n      }\n    },\n    swipeLeft (e: TouchWrapper) {\n      if (this.isActive && this.right) return\n      this.calculateTouchArea()\n\n      if (Math.abs(e.touchendX - e.touchstartX) < 100) return\n      if (this.right &&\n        e.touchstartX >= this.touchArea.right\n      ) this.isActive = true\n      else if (!this.right && this.isActive) this.isActive = false\n    },\n    swipeRight (e: TouchWrapper) {\n      if (this.isActive && !this.right) return\n      this.calculateTouchArea()\n\n      if (Math.abs(e.touchendX - e.touchstartX) < 100) return\n      if (!this.right &&\n        e.touchstartX <= this.touchArea.left\n      ) this.isActive = true\n      else if (this.right && this.isActive) this.isActive = false\n    },\n    /**\n     * Update the application layout\n     */\n    updateApplication () {\n      if (\n        !this.isActive ||\n        this.isMobile ||\n        this.temporary ||\n        !this.$el\n      ) return 0\n\n      const width = Number(this.computedWidth)\n\n      return isNaN(width) ? this.$el.clientWidth : width\n    },\n    updateMiniVariant (val: boolean) {\n      if (this.miniVariant !== val) this.$emit('update:mini-variant', val)\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genPrepend(),\n      this.genContent(),\n      this.genAppend(),\n      this.genBorder(),\n    ]\n\n    if (this.src || getSlot(this, 'img')) children.unshift(this.genBackground())\n\n    return h(this.tag, this.setBackgroundColor(this.color, {\n      class: this.classes,\n      style: this.styles,\n      directives: this.genDirectives(),\n      on: this.genListeners(),\n    }), children)\n  },\n})\n","import VNavigationDrawer from './VNavigationDrawer'\n\nexport { VNavigationDrawer }\nexport default VNavigationDrawer\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VOverflowBtn.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete'\nimport VTextField from '../VTextField/VTextField'\n\n// Components\nimport VBtn from '../VBtn'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-overflow-btn',\n\n  props: {\n    editable: Boolean,\n    segmented: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VAutocomplete.options.computed.classes.call(this),\n        'v-overflow-btn': true,\n        'v-overflow-btn--segmented': this.segmented,\n        'v-overflow-btn--editable': this.editable,\n      }\n    },\n    isAnyValueAllowed (): boolean {\n      return this.editable ||\n        VAutocomplete.options.computed.isAnyValueAllowed.call(this)\n    },\n    isSingle (): true {\n      return true\n    },\n    computedItems (): object[] {\n      return this.segmented ? this.allItems : this.filteredItems\n    },\n  },\n\n  methods: {\n    genSelections () {\n      return this.editable\n        ? VAutocomplete.options.methods.genSelections.call(this)\n        : VSelect.options.methods.genSelections.call(this) // Override v-autocomplete's override\n    },\n    genCommaSelection (item: any, index: number, last: boolean) {\n      return this.segmented\n        ? this.genSegmentedBtn(item)\n        : VSelect.options.methods.genCommaSelection.call(this, item, index, last)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = input.data || {}\n      input.data.domProps!.value = this.editable ? this.internalSearch : ''\n      input.data.attrs!.readonly = !this.isAnyValueAllowed\n\n      return input\n    },\n    genLabel () {\n      if (this.editable && this.isFocused) return null\n\n      const label = VTextField.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label.data = label.data || {}\n\n      // Reset previously set styles from parent\n      label.data.style = {}\n\n      return label\n    },\n    genSegmentedBtn (item: any) {\n      const itemValue = this.getValue(item)\n      const itemObj = this.computedItems.find(i => this.getValue(i) === itemValue) || item\n\n      if (!itemObj.text || !itemObj.callback) {\n        consoleWarn('When using \\'segmented\\' prop without a selection slot, items must contain both a text and callback property', this)\n        return null\n      }\n\n      return this.$createElement(VBtn, {\n        props: { text: true },\n        on: {\n          click (e: Event) {\n            e.stopPropagation()\n            itemObj.callback(e)\n          },\n        },\n      }, [itemObj.text])\n    },\n  },\n})\n","import VOverflowBtn from './VOverflowBtn'\n\nexport { VOverflowBtn }\nexport default VOverflowBtn\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VOverlay.sass'\n\n// Mixins\nimport Colorable from './../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport Toggleable from './../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Themeable,\n  Toggleable\n).extend({\n  name: 'v-overlay',\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: '#212121',\n    },\n    dark: {\n      type: Boolean,\n      default: true,\n    },\n    opacity: {\n      type: [Number, String],\n      default: 0.46,\n    },\n    value: {\n      default: true,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: 5,\n    },\n  },\n\n  computed: {\n    __scrim (): VNode {\n      const data = this.setBackgroundColor(this.color, {\n        staticClass: 'v-overlay__scrim',\n        style: {\n          opacity: this.computedOpacity,\n        },\n      })\n\n      return this.$createElement('div', data)\n    },\n    classes (): object {\n      return {\n        'v-overlay--absolute': this.absolute,\n        'v-overlay--active': this.isActive,\n        ...this.themeClasses,\n      }\n    },\n    computedOpacity (): number {\n      return Number(this.isActive ? this.opacity : 0)\n    },\n    styles (): object {\n      return {\n        zIndex: this.zIndex,\n      }\n    },\n  },\n\n  methods: {\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-overlay__content',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.__scrim]\n\n    if (this.isActive) children.push(this.genContent())\n\n    return h('div', {\n      staticClass: 'v-overlay',\n      class: this.classes,\n      style: this.styles,\n    }, children)\n  },\n})\n","import VOverlay from './VOverlay'\n\nexport { VOverlay }\n\nexport default VOverlay\n","// extracted by mini-css-extract-plugin","import './VPagination.sass'\n\nimport VIcon from '../VIcon'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode, CreateElement } from 'vue'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-pagination',\n\n  directives: { Resize },\n\n  props: {\n    circle: Boolean,\n    disabled: Boolean,\n    length: {\n      type: Number,\n      default: 0,\n      validator: (val: number) => val % 1 === 0,\n    },\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    totalVisible: [Number, String],\n    value: {\n      type: Number,\n      default: 0,\n    },\n  },\n\n  data () {\n    return {\n      maxButtons: 0,\n      selected: null as number | null,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-pagination': true,\n        'v-pagination--circle': this.circle,\n        'v-pagination--disabled': this.disabled,\n        ...this.themeClasses,\n      }\n    },\n\n    items (): (string | number)[] {\n      const totalVisible = parseInt(this.totalVisible, 10)\n\n      const maxLength = Math.min(\n        Math.max(0, totalVisible) || this.length,\n        Math.max(0, this.maxButtons) || this.length,\n        this.length\n      )\n\n      if (this.length <= maxLength) {\n        return this.range(1, this.length)\n      }\n\n      const even = maxLength % 2 === 0 ? 1 : 0\n      const left = Math.floor(maxLength / 2)\n      const right = this.length - left + 1 + even\n\n      if (this.value > left && this.value < right) {\n        const start = this.value - left + 2\n        const end = this.value + left - 2 - even\n\n        return [1, '...', ...this.range(start, end), '...', this.length]\n      } else if (this.value === left) {\n        const end = this.value + left - 1 - even\n        return [...this.range(1, end), '...', this.length]\n      } else if (this.value === right) {\n        const start = this.value - left + 1\n        return [1, '...', ...this.range(start, this.length)]\n      } else {\n        return [\n          ...this.range(1, left),\n          '...',\n          ...this.range(right, this.length),\n        ]\n      }\n    },\n  },\n\n  watch: {\n    value () {\n      this.init()\n    },\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init () {\n      this.selected = null\n\n      this.$nextTick(this.onResize)\n      // TODO: Change this (f75dee3a, cbdf7caa)\n      setTimeout(() => (this.selected = this.value), 100)\n    },\n    onResize () {\n      const width = this.$el && this.$el.parentElement\n        ? this.$el.parentElement.clientWidth\n        : window.innerWidth\n\n      this.maxButtons = Math.floor((width - 96) / 42)\n    },\n    next (e: Event) {\n      e.preventDefault()\n      this.$emit('input', this.value + 1)\n      this.$emit('next')\n    },\n    previous (e: Event) {\n      e.preventDefault()\n      this.$emit('input', this.value - 1)\n      this.$emit('previous')\n    },\n    range (from: number, to: number) {\n      const range = []\n\n      from = from > 0 ? from : 1\n\n      for (let i = from; i <= to; i++) {\n        range.push(i)\n      }\n\n      return range\n    },\n    genIcon (h: CreateElement, icon: string, disabled: boolean, fn: EventListener): VNode {\n      return h('li', [\n        h('button', {\n          staticClass: 'v-pagination__navigation',\n          class: {\n            'v-pagination__navigation--disabled': disabled,\n          },\n          attrs: {\n            type: 'button',\n          },\n          on: disabled ? {} : { click: fn },\n        }, [h(VIcon, [icon])]),\n      ])\n    },\n    genItem (h: CreateElement, i: string | number): VNode {\n      const color: string | false = (i === this.value) && (this.color || 'primary')\n      return h('button', this.setBackgroundColor(color, {\n        staticClass: 'v-pagination__item',\n        class: {\n          'v-pagination__item--active': i === this.value,\n        },\n        attrs: {\n          type: 'button',\n        },\n        on: {\n          click: () => this.$emit('input', i),\n        },\n      }), [i.toString()])\n    },\n    genItems (h: CreateElement): VNode[] {\n      return this.items.map((i, index) => {\n        return h('li', { key: index }, [\n          isNaN(Number(i)) ? h('span', { class: 'v-pagination__more' }, [i.toString()]) : this.genItem(h, i),\n        ])\n      })\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genIcon(h, this.$vuetify.rtl ? this.nextIcon : this.prevIcon, this.value <= 1, this.previous),\n      this.genItems(h),\n      this.genIcon(h, this.$vuetify.rtl ? this.prevIcon : this.nextIcon, this.value >= this.length, this.next),\n    ]\n\n    return h('ul', {\n      directives: [{\n        modifiers: { quiet: true },\n        name: 'resize',\n        value: this.onResize,\n      }],\n      class: this.classes,\n    }, children)\n  },\n})\n","import VPagination from './VPagination'\n\nexport { VPagination }\nexport default VPagination\n","// extracted by mini-css-extract-plugin","// Style\nimport './VParallax.sass'\n\n// Mixins\nimport Translatable from '../../mixins/translatable'\n\n// Types\nimport { VNode, VNodeData } from 'vue/types/vnode'\nimport mixins from '../../util/mixins'\n\nconst baseMixins = mixins(\n  Translatable\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    img: HTMLImageElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-parallax',\n\n  props: {\n    alt: {\n      type: String,\n      default: '',\n    },\n    height: {\n      type: [String, Number],\n      default: 500,\n    },\n    src: String,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    styles (): object {\n      return {\n        display: 'block',\n        opacity: this.isBooted ? 1 : 0,\n        transform: `translate(-50%, ${this.parallax}px)`,\n      }\n    },\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init () {\n      const img = this.$refs.img\n\n      if (!img) return\n\n      if (img.complete) {\n        this.translate()\n        this.listeners()\n      } else {\n        img.addEventListener('load', () => {\n          this.translate()\n          this.listeners()\n        }, false)\n      }\n\n      this.isBooted = true\n    },\n    objHeight () {\n      return this.$refs.img.naturalHeight\n    },\n  },\n\n  render (h): VNode {\n    const imgData: VNodeData = {\n      staticClass: 'v-parallax__image',\n      style: this.styles,\n      attrs: {\n        src: this.src,\n        alt: this.alt,\n      },\n      ref: 'img',\n    }\n\n    const container = h('div', {\n      staticClass: 'v-parallax__image-container',\n    }, [\n      h('img', imgData),\n    ])\n\n    const content = h('div', {\n      staticClass: 'v-parallax__content',\n    }, this.$slots.default)\n\n    return h('div', {\n      staticClass: 'v-parallax',\n      style: {\n        height: `${this.height}px`,\n      },\n      on: this.$listeners,\n    }, [container, content])\n  },\n})\n","import VParallax from './VParallax'\n\nexport { VParallax }\nexport default VParallax\n","// extracted by mini-css-extract-plugin","import './VPicker.sass'\nimport '../VCard/VCard.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue/types'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-picker',\n\n  props: {\n    fullWidth: Boolean,\n    landscape: Boolean,\n    noTitle: Boolean,\n    transition: {\n      type: String,\n      default: 'fade-transition',\n    },\n    width: {\n      type: [Number, String],\n      default: 290,\n    },\n  },\n\n  computed: {\n    computedTitleColor (): string | false {\n      const defaultTitleColor = this.isDark ? false : (this.color || 'primary')\n      return this.color || defaultTitleColor\n    },\n  },\n\n  methods: {\n    genTitle () {\n      return this.$createElement('div', this.setBackgroundColor(this.computedTitleColor, {\n        staticClass: 'v-picker__title',\n        class: {\n          'v-picker__title--landscape': this.landscape,\n        },\n      }), this.$slots.title)\n    },\n    genBodyTransition () {\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, this.$slots.default)\n    },\n    genBody () {\n      return this.$createElement('div', {\n        staticClass: 'v-picker__body',\n        class: {\n          'v-picker__body--no-title': this.noTitle,\n          ...this.themeClasses,\n        },\n        style: this.fullWidth ? undefined : {\n          width: convertToUnit(this.width),\n        },\n      }, [\n        this.genBodyTransition(),\n      ])\n    },\n    genActions () {\n      return this.$createElement('div', {\n        staticClass: 'v-picker__actions v-card__actions',\n        class: {\n          'v-picker__actions--no-title': this.noTitle,\n        },\n      }, this.$slots.actions)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-picker v-card',\n      class: {\n        'v-picker--landscape': this.landscape,\n        'v-picker--full-width': this.fullWidth,\n        ...this.themeClasses,\n      },\n    }, [\n      this.$slots.title ? this.genTitle() : null,\n      this.genBody(),\n      this.$slots.actions ? this.genActions() : null,\n    ])\n  },\n})\n","import VPicker from './VPicker'\n\nexport { VPicker }\nexport default VPicker\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VProgressCircular.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\n\n/* @vue/component */\nexport default Colorable.extend({\n  name: 'v-progress-circular',\n\n  props: {\n    button: Boolean,\n    indeterminate: Boolean,\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n    size: {\n      type: [Number, String],\n      default: 32,\n    },\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    radius: 20,\n  }),\n\n  computed: {\n    calculatedSize (): number {\n      return Number(this.size) + (this.button ? 8 : 0)\n    },\n\n    circumference (): number {\n      return 2 * Math.PI * this.radius\n    },\n\n    classes (): object {\n      return {\n        'v-progress-circular--indeterminate': this.indeterminate,\n        'v-progress-circular--button': this.button,\n      }\n    },\n\n    normalizedValue (): number {\n      if (this.value < 0) {\n        return 0\n      }\n\n      if (this.value > 100) {\n        return 100\n      }\n\n      return parseFloat(this.value)\n    },\n\n    strokeDashArray (): number {\n      return Math.round(this.circumference * 1000) / 1000\n    },\n\n    strokeDashOffset (): string {\n      return ((100 - this.normalizedValue) / 100) * this.circumference + 'px'\n    },\n\n    strokeWidth (): number {\n      return Number(this.width) / +this.size * this.viewBoxSize * 2\n    },\n\n    styles (): object {\n      return {\n        height: convertToUnit(this.calculatedSize),\n        width: convertToUnit(this.calculatedSize),\n      }\n    },\n\n    svgStyles (): object {\n      return {\n        transform: `rotate(${Number(this.rotate)}deg)`,\n      }\n    },\n\n    viewBoxSize (): number {\n      return this.radius / (1 - Number(this.width) / +this.size)\n    },\n  },\n\n  methods: {\n    genCircle (name: string, offset: string | number): VNode {\n      return this.$createElement('circle', {\n        class: `v-progress-circular__${name}`,\n        attrs: {\n          fill: 'transparent',\n          cx: 2 * this.viewBoxSize,\n          cy: 2 * this.viewBoxSize,\n          r: this.radius,\n          'stroke-width': this.strokeWidth,\n          'stroke-dasharray': this.strokeDashArray,\n          'stroke-dashoffset': offset,\n        },\n      })\n    },\n    genSvg (): VNode {\n      const children = [\n        this.indeterminate || this.genCircle('underlay', 0),\n        this.genCircle('overlay', this.strokeDashOffset),\n      ] as VNodeChildren\n\n      return this.$createElement('svg', {\n        style: this.svgStyles,\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: `${this.viewBoxSize} ${this.viewBoxSize} ${2 * this.viewBoxSize} ${2 * this.viewBoxSize}`,\n        },\n      }, children)\n    },\n    genInfo (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-circular__info',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-progress-circular',\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'aria-valuenow': this.indeterminate ? undefined : this.normalizedValue,\n      },\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    }), [\n      this.genSvg(),\n      this.genInfo(),\n    ])\n  },\n})\n","import VProgressCircular from './VProgressCircular'\n\nexport { VProgressCircular }\nexport default VProgressCircular\n","// extracted by mini-css-extract-plugin","import './VProgressLinear.sass'\n\n// Components\nimport {\n  VFadeTransition,\n  VSlideXTransition,\n} from '../transitions'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as PositionableFactory } from '../../mixins/positionable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { convertToUnit, getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { FunctionalComponentOptions } from 'vue/types'\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  PositionableFactory(['absolute', 'fixed', 'top', 'bottom']),\n  Proxyable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-progress-linear',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    backgroundColor: {\n      type: String,\n      default: null,\n    },\n    backgroundOpacity: {\n      type: [Number, String],\n      default: null,\n    },\n    bufferValue: {\n      type: [Number, String],\n      default: 100,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    height: {\n      type: [Number, String],\n      default: 4,\n    },\n    indeterminate: Boolean,\n    query: Boolean,\n    rounded: Boolean,\n    stream: Boolean,\n    striped: Boolean,\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data () {\n    return {\n      internalLazyValue: this.value || 0,\n    }\n  },\n\n  computed: {\n    __cachedBackground (): VNode {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor || this.color, {\n        staticClass: 'v-progress-linear__background',\n        style: this.backgroundStyle,\n      }))\n    },\n    __cachedBar (): VNode {\n      return this.$createElement(this.computedTransition, [this.__cachedBarType])\n    },\n    __cachedBarType (): VNode {\n      return this.indeterminate ? this.__cachedIndeterminate : this.__cachedDeterminate\n    },\n    __cachedBuffer (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-linear__buffer',\n        style: this.styles,\n      })\n    },\n    __cachedDeterminate (): VNode {\n      return this.$createElement('div', this.setBackgroundColor(this.color, {\n        staticClass: `v-progress-linear__determinate`,\n        style: {\n          width: convertToUnit(this.normalizedValue, '%'),\n        },\n      }))\n    },\n    __cachedIndeterminate (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-linear__indeterminate',\n        class: {\n          'v-progress-linear__indeterminate--active': this.active,\n        },\n      }, [\n        this.genProgressBar('long'),\n        this.genProgressBar('short'),\n      ])\n    },\n    __cachedStream (): VNode | null {\n      if (!this.stream) return null\n\n      return this.$createElement('div', this.setTextColor(this.color, {\n        staticClass: 'v-progress-linear__stream',\n        style: {\n          width: convertToUnit(100 - this.normalizedBuffer, '%'),\n        },\n      }))\n    },\n    backgroundStyle (): object {\n      const backgroundOpacity = this.backgroundOpacity == null\n        ? (this.backgroundColor ? 1 : 0.3)\n        : parseFloat(this.backgroundOpacity)\n\n      return {\n        opacity: backgroundOpacity,\n        [this.$vuetify.rtl ? 'right' : 'left']: convertToUnit(this.normalizedValue, '%'),\n        width: convertToUnit(this.normalizedBuffer - this.normalizedValue, '%'),\n      }\n    },\n    classes (): object {\n      return {\n        'v-progress-linear--absolute': this.absolute,\n        'v-progress-linear--fixed': this.fixed,\n        'v-progress-linear--query': this.query,\n        'v-progress-linear--reactive': this.reactive,\n        'v-progress-linear--rounded': this.rounded,\n        'v-progress-linear--striped': this.striped,\n        ...this.themeClasses,\n      }\n    },\n    computedTransition (): FunctionalComponentOptions {\n      return this.indeterminate ? VFadeTransition : VSlideXTransition\n    },\n    normalizedBuffer (): number {\n      return this.normalize(this.bufferValue)\n    },\n    normalizedValue (): number {\n      return this.normalize(this.internalLazyValue)\n    },\n    reactive (): boolean {\n      return Boolean(this.$listeners.change)\n    },\n    styles (): object {\n      const styles: Record<string, any> = {}\n\n      if (!this.active) {\n        styles.height = 0\n      }\n\n      if (!this.indeterminate && parseFloat(this.normalizedBuffer) !== 100) {\n        styles.width = convertToUnit(this.normalizedBuffer, '%')\n      }\n\n      return styles\n    },\n  },\n\n  methods: {\n    genContent () {\n      const slot = getSlot(this, 'default', { value: this.internalLazyValue })\n\n      if (!slot) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-progress-linear__content',\n      }, slot)\n    },\n    genListeners () {\n      const listeners = this.$listeners\n\n      if (this.reactive) {\n        listeners.click = this.onClick\n      }\n\n      return listeners\n    },\n    genProgressBar (name: 'long' | 'short') {\n      return this.$createElement('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-progress-linear__indeterminate',\n        class: {\n          [name]: true,\n        },\n      }))\n    },\n    onClick (e: MouseEvent) {\n      if (!this.reactive) return\n\n      const { width } = this.$el.getBoundingClientRect()\n\n      this.internalValue = e.offsetX / width * 100\n    },\n    normalize (value: string | number) {\n      if (value < 0) return 0\n      if (value > 100) return 100\n      return parseFloat(value)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-progress-linear',\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': 0,\n        'aria-valuemax': this.normalizedBuffer,\n        'aria-valuenow': this.indeterminate ? undefined : this.normalizedValue,\n      },\n      class: this.classes,\n      style: {\n        bottom: this.bottom ? 0 : undefined,\n        height: this.active ? convertToUnit(this.height) : 0,\n        top: this.top ? 0 : undefined,\n      },\n      on: this.genListeners(),\n    }\n\n    return h('div', data, [\n      this.__cachedStream,\n      this.__cachedBackground,\n      this.__cachedBuffer,\n      this.__cachedBar,\n      this.genContent(),\n    ])\n  },\n})\n","import VProgressLinear from './VProgressLinear'\n\nexport { VProgressLinear }\nexport default VProgressLinear\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VRadio.sass'\n\n// Components\nimport VRadioGroup from './VRadioGroup'\nimport VLabel from '../VLabel'\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Rippleable from '../../mixins/rippleable'\nimport Themeable from '../../mixins/themeable'\nimport Selectable from '../../mixins/selectable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Colorable,\n  Rippleable,\n  GroupableFactory('radioGroup'),\n  Themeable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  radioGroup: InstanceType<typeof VRadioGroup>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-radio',\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    id: String,\n    label: String,\n    name: String,\n    offIcon: {\n      type: String,\n      default: '$radioOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$radioOn',\n    },\n    readonly: Boolean,\n    value: {\n      default: null,\n    },\n  },\n\n  data: () => ({\n    isFocused: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-radio--is-disabled': this.isDisabled,\n        'v-radio--is-focused': this.isFocused,\n        ...this.themeClasses,\n        ...this.groupClasses,\n      }\n    },\n    computedColor (): string | undefined {\n      return Selectable.options.computed.computedColor.call(this)\n    },\n    computedIcon (): string {\n      return this.isActive\n        ? this.onIcon\n        : this.offIcon\n    },\n    computedId (): string {\n      return VInput.options.computed.computedId.call(this)\n    },\n    hasLabel: VInput.options.computed.hasLabel,\n    hasState (): boolean {\n      return (this.radioGroup || {}).hasState\n    },\n    isDisabled (): boolean {\n      return this.disabled || !!(this.radioGroup || {}).disabled\n    },\n    isReadonly (): boolean {\n      return this.readonly || !!(this.radioGroup || {}).readonly\n    },\n    computedName (): string {\n      if (this.name || !this.radioGroup) {\n        return this.name\n      }\n\n      return this.radioGroup.name || `radio-${this.radioGroup._uid}`\n    },\n    validationState (): string | undefined {\n      return (this.radioGroup || {}).validationState || this.computedColor\n    },\n  },\n\n  methods: {\n    genInput (args: any) {\n      // We can't actually use the mixin directly because\n      // it's made for standalone components, but its\n      // genInput method is exactly what we need\n      return Selectable.options.methods.genInput.call(this, 'radio', args)\n    },\n    genLabel () {\n      if (!this.hasLabel) return null\n\n      return this.$createElement(VLabel, {\n        on: {\n          click: (e: Event) => {\n            // Prevent label from\n            // causing the input\n            // to focus\n            e.preventDefault()\n\n            this.onChange()\n          },\n        },\n        attrs: {\n          for: this.computedId,\n        },\n        props: {\n          color: this.validationState,\n          focused: this.hasState,\n        },\n      }, getSlot(this, 'label') || this.label)\n    },\n    genRadio () {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput({\n          name: this.computedName,\n          value: this.value,\n          ...this.attrs$,\n        }),\n        this.genRipple(this.setTextColor(this.validationState)),\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.radioGroup && this.radioGroup.dense,\n          },\n        }), this.computedIcon),\n      ])\n    },\n    onFocus (e: Event) {\n      this.isFocused = true\n      this.$emit('focus', e)\n    },\n    onBlur (e: Event) {\n      this.isFocused = false\n      this.$emit('blur', e)\n    },\n    onChange () {\n      if (this.isDisabled || this.isReadonly || this.isActive) return\n\n      this.toggle()\n    },\n    onKeydown: () => {}, // Override default with noop\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-radio',\n      class: this.classes,\n    } as VNodeData\n\n    return h('div', data, [\n      this.genRadio(),\n      this.genLabel(),\n    ])\n  },\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VRadioGroup.sass'\n\n// Extensions\nimport VInput from '../VInput'\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { PropValidator } from 'vue/types/options'\n\nconst baseMixins = mixins(\n  Comparable,\n  BaseItemGroup,\n  VInput\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-radio-group',\n\n  provide () {\n    return {\n      radioGroup: this,\n    }\n  },\n\n  props: {\n    column: {\n      type: Boolean,\n      default: true,\n    },\n    height: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    name: String,\n    row: Boolean,\n    // If no value set on VRadio\n    // will match valueComparator\n    // force default to null\n    value: {\n      default: null,\n    } as PropValidator<any>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--radio-group': true,\n        'v-input--radio-group--column': this.column && !this.row,\n        'v-input--radio-group--row': this.row,\n      }\n    },\n  },\n\n  methods: {\n    genDefaultSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-input--radio-group__input',\n        attrs: {\n          id: this.id,\n          role: 'radiogroup',\n          'aria-labelledby': this.computedId,\n        },\n      }, VInput.options.methods.genDefaultSlot.call(this))\n    },\n    genInputSlot () {\n      const render = VInput.options.methods.genInputSlot.call(this)\n\n      delete render.data!.on!.click\n\n      return render\n    },\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return null\n\n      label.data!.attrs!.id = this.computedId\n      // WAI considers this an orphaned label\n      delete label.data!.attrs!.for\n      label.tag = 'div'\n\n      return label\n    },\n    onClick: BaseItemGroup.options.methods.onClick,\n  },\n})\n","import VRadioGroup from './VRadioGroup'\nimport VRadio from './VRadio'\n\nexport { VRadioGroup, VRadio }\n\nexport default {\n  $_vuetify_subcomponents: {\n    VRadioGroup,\n    VRadio,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VRangeSlider.sass'\n\n// Components\nimport VSlider from '../VSlider'\n\n// Helpers\nimport {\n  createRange,\n  deepEqual,\n} from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VSlider.extend({\n  name: 'v-range-slider',\n\n  props: {\n    value: {\n      type: Array,\n      default: () => ([0, 0]),\n    } as PropValidator<number[]>,\n  },\n\n  data () {\n    return {\n      activeThumb: null as null | number,\n      lazyValue: this.value,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSlider.options.computed.classes.call(this),\n        'v-input--range-slider': true,\n      }\n    },\n    internalValue: {\n      get (): number[] {\n        return this.lazyValue\n      },\n      set (val: number[]) {\n        // Round value to ensure the\n        // entire slider range can\n        // be selected with step\n        let value = val.map(v => this.roundValue(Math.min(Math.max(v, this.minValue), this.maxValue)))\n\n        // Switch values if range and wrong order\n        if (value[0] > value[1] || value[1] < value[0]) {\n          if (this.activeThumb !== null) {\n            const toFocus = this.activeThumb === 1 ? 0 : 1\n            const el = this.$refs[`thumb_${toFocus}`] as HTMLElement\n            el.focus()\n          }\n          value = [value[1], value[0]]\n        }\n\n        this.lazyValue = value\n        if (!deepEqual(value, this.value)) this.$emit('input', value)\n\n        this.validate()\n      },\n    },\n    inputWidth (): number[] {\n      return this.internalValue.map((v: number) => (\n        this.roundValue(v) - this.minValue) / (this.maxValue - this.minValue) * 100\n      )\n    },\n    trackFillStyles (): Partial<CSSStyleDeclaration> {\n      const styles = VSlider.options.computed.trackFillStyles.call(this)\n      const fillPercent = Math.abs(this.inputWidth[0] - this.inputWidth[1])\n      const dir = this.vertical ? 'height' : 'width'\n      const start = this.vertical ? this.$vuetify.rtl ? 'top' : 'bottom' : this.$vuetify.rtl ? 'right' : 'left'\n\n      styles[dir] = `${fillPercent}%`\n      styles[start] = `${this.inputWidth[0]}%`\n\n      return styles\n    },\n  },\n\n  methods: {\n    getTrackStyle (startLength: number, endLength: number, startPadding = 0, endPadding = 0) {\n      const startDir = this.vertical ? this.$vuetify.rtl ? 'top' : 'bottom' : this.$vuetify.rtl ? 'right' : 'left'\n      const endDir = this.vertical ? 'height' : 'width'\n\n      const start = `calc(${startLength}% + ${startPadding}px)`\n      const end = `calc(${endLength}% + ${endPadding}px)`\n\n      return {\n        transition: this.trackTransition,\n        [startDir]: start,\n        [endDir]: end,\n      }\n    },\n    getIndexOfClosestValue (arr: number[], v: number) {\n      if (Math.abs(arr[0] - v) < Math.abs(arr[1] - v)) return 0\n      else return 1\n    },\n    genInput () {\n      return createRange(2).map(i => {\n        const input = VSlider.options.methods.genInput.call(this)\n\n        input.data = input.data || {}\n        input.data.attrs = input.data.attrs || {}\n        input.data.attrs.value = this.internalValue[i]\n\n        return input\n      })\n    },\n    genTrackContainer () {\n      const children = []\n\n      if (this.disabled) {\n        const disabledPadding = 10\n        const sections: [number, number, number, number][] = [\n          [0, this.inputWidth[0], 0, -disabledPadding],\n          [this.inputWidth[0], Math.abs(this.inputWidth[1] - this.inputWidth[0]), disabledPadding, disabledPadding * -2],\n          [this.inputWidth[1], Math.abs(100 - this.inputWidth[1]), disabledPadding, 0],\n        ]\n\n        if (this.$vuetify.rtl) sections.reverse()\n\n        children.push(...sections.map(section => this.$createElement('div', this.setBackgroundColor(this.computedTrackColor, {\n          staticClass: 'v-slider__track-background',\n          style: this.getTrackStyle(...section),\n        }))))\n      } else {\n        children.push(\n          this.$createElement('div', this.setBackgroundColor(this.computedTrackColor, {\n            staticClass: 'v-slider__track-background',\n            style: this.getTrackStyle(0, 100),\n          })),\n          this.$createElement('div', this.setBackgroundColor(this.computedColor, {\n            staticClass: 'v-slider__track-fill',\n            style: this.trackFillStyles,\n          }))\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-slider__track-container',\n        ref: 'track',\n      }, children)\n    },\n    genChildren () {\n      return [\n        this.genInput(),\n        this.genTrackContainer(),\n        this.genSteps(),\n        createRange(2).map(index => {\n          const value = this.internalValue[index]\n          const onDrag = (e: MouseEvent) => {\n            this.isActive = true\n            this.activeThumb = index\n            this.onThumbMouseDown(e)\n          }\n          const onFocus = (e: Event) => {\n            this.isFocused = true\n            this.activeThumb = index\n\n            this.$emit('focus', e)\n          }\n\n          const onBlur = (e: Event) => {\n            this.isFocused = false\n            this.activeThumb = null\n\n            this.$emit('blur', e)\n          }\n\n          const valueWidth = this.inputWidth[index]\n          const isActive = this.isActive && this.activeThumb === index\n          const isFocused = this.isFocused && this.activeThumb === index\n\n          return this.genThumbContainer(value, valueWidth, isActive, isFocused, onDrag, onFocus, onBlur, `thumb_${index}`)\n        }),\n      ]\n    },\n    onSliderClick (e: MouseEvent) {\n      if (!this.isActive) {\n        if (this.noClick) {\n          this.noClick = false\n          return\n        }\n\n        const { value, isInsideTrack } = this.parseMouseMove(e)\n\n        if (isInsideTrack) {\n          this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value)\n          const refName = `thumb_${this.activeThumb}`\n          const thumbRef = this.$refs[refName] as HTMLElement\n          thumbRef.focus()\n        }\n\n        this.setInternalValue(value)\n\n        this.$emit('change', this.internalValue)\n      }\n    },\n    onMouseMove (e: MouseEvent) {\n      const { value, isInsideTrack } = this.parseMouseMove(e)\n\n      if (isInsideTrack && this.activeThumb === null) {\n        this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value)\n      }\n\n      this.setInternalValue(value)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.activeThumb === null) return\n\n      const value = this.parseKeyDown(e, this.internalValue[this.activeThumb])\n\n      if (value == null) return\n\n      this.setInternalValue(value)\n      this.$emit('change', this.internalValue)\n    },\n    setInternalValue (value: number) {\n      this.internalValue = this.internalValue.map((v: number, i: number) => {\n        if (i === this.activeThumb) return value\n        else return Number(v)\n      })\n    },\n  },\n})\n","import VRangeSlider from './VRangeSlider'\n\nexport { VRangeSlider }\nexport default VRangeSlider\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VRating.sass'\n\n// Components\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Delayable from '../../mixins/delayable'\nimport Sizeable from '../../mixins/sizeable'\nimport Rippleable from '../../mixins/rippleable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { createRange } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode, VNodeDirective, VNodeChildren } from 'vue'\n\ntype ItemSlotProps = {\n  index: number\n  value: number\n  isFilled: boolean\n  isHalfFilled?: boolean | undefined\n  isHovered: boolean\n  isHalfHovered?: boolean | undefined\n  click: Function\n}\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Delayable,\n  Rippleable,\n  Sizeable,\n  Themeable\n).extend({\n  name: 'v-rating',\n\n  props: {\n    backgroundColor: {\n      type: String,\n      default: 'accent',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    clearable: Boolean,\n    dense: Boolean,\n    emptyIcon: {\n      type: String,\n      default: '$ratingEmpty',\n    },\n    fullIcon: {\n      type: String,\n      default: '$ratingFull',\n    },\n    halfIcon: {\n      type: String,\n      default: '$ratingHalf',\n    },\n    halfIncrements: Boolean,\n    hover: Boolean,\n    length: {\n      type: [Number, String],\n      default: 5,\n    },\n    readonly: Boolean,\n    size: [Number, String],\n    value: {\n      type: Number,\n      default: 0,\n    },\n  },\n\n  data () {\n    return {\n      hoverIndex: -1,\n      internalValue: this.value,\n    }\n  },\n\n  computed: {\n    directives (): VNodeDirective[] {\n      if (this.readonly || !this.ripple) return []\n\n      return [{\n        name: 'ripple',\n        value: { circle: true },\n      } as VNodeDirective]\n    },\n    iconProps (): object {\n      const {\n        dark,\n        large,\n        light,\n        medium,\n        small,\n        size,\n        xLarge,\n        xSmall,\n      } = this.$props\n\n      return {\n        dark,\n        large,\n        light,\n        medium,\n        size,\n        small,\n        xLarge,\n        xSmall,\n      }\n    },\n    isHovering (): boolean {\n      return this.hover && this.hoverIndex >= 0\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      val !== this.value && this.$emit('input', val)\n    },\n    value (val) {\n      this.internalValue = val\n    },\n  },\n\n  methods: {\n    createClickFn (i: number): Function {\n      return (e: MouseEvent) => {\n        if (this.readonly) return\n\n        const newValue = this.genHoverIndex(e, i)\n        if (this.clearable && this.internalValue === newValue) {\n          this.internalValue = 0\n        } else {\n          this.internalValue = newValue\n        }\n      }\n    },\n    createProps (i: number): ItemSlotProps {\n      const props: ItemSlotProps = {\n        index: i,\n        value: this.internalValue,\n        click: this.createClickFn(i),\n        isFilled: Math.floor(this.internalValue) > i,\n        isHovered: Math.floor(this.hoverIndex) > i,\n      }\n\n      if (this.halfIncrements) {\n        props.isHalfHovered = !props.isHovered && (this.hoverIndex - i) % 1 > 0\n        props.isHalfFilled = !props.isFilled && (this.internalValue - i) % 1 > 0\n      }\n\n      return props\n    },\n    genHoverIndex (e: MouseEvent, i: number) {\n      let isHalf = this.isHalfEvent(e)\n      if (this.$vuetify.rtl) isHalf = !isHalf\n      return i + (isHalf ? 0.5 : 1)\n    },\n    getIconName (props: ItemSlotProps): string {\n      const isFull = this.isHovering ? props.isHovered : props.isFilled\n      const isHalf = this.isHovering ? props.isHalfHovered : props.isHalfFilled\n\n      return isFull ? this.fullIcon : isHalf ? this.halfIcon : this.emptyIcon\n    },\n    getColor (props: ItemSlotProps): string {\n      if (this.isHovering) {\n        if (props.isHovered || props.isHalfHovered) return this.color\n      } else {\n        if (props.isFilled || props.isHalfFilled) return this.color\n      }\n\n      return this.backgroundColor\n    },\n    isHalfEvent (e: MouseEvent): boolean {\n      if (this.halfIncrements) {\n        const rect = e.target && (e.target as HTMLElement).getBoundingClientRect()\n        if (rect && (e.pageX - rect.left) < rect.width / 2) return true\n      }\n\n      return false\n    },\n    onMouseEnter (e: MouseEvent, i: number): void {\n      this.runDelay('open', () => {\n        this.hoverIndex = this.genHoverIndex(e, i)\n      })\n    },\n    onMouseLeave (): void {\n      this.runDelay('close', () => (this.hoverIndex = -1))\n    },\n    genItem (i: number): VNode | VNodeChildren | string {\n      const props = this.createProps(i)\n\n      if (this.$scopedSlots.item) return this.$scopedSlots.item(props)\n\n      const listeners: Record<string, Function> = {\n        click: props.click,\n      }\n\n      if (this.hover) {\n        listeners.mouseenter = (e: MouseEvent) => this.onMouseEnter(e, i)\n        listeners.mouseleave = this.onMouseLeave\n\n        if (this.halfIncrements) {\n          listeners.mousemove = (e: MouseEvent) => this.onMouseEnter(e, i)\n        }\n      }\n\n      return this.$createElement(VIcon, this.setTextColor(this.getColor(props), {\n        directives: this.directives,\n        props: this.iconProps,\n        on: listeners,\n      }), [this.getIconName(props)])\n    },\n  },\n\n  render (h): VNode {\n    const children = createRange(Number(this.length)).map(i => this.genItem(i))\n\n    return h('div', {\n      staticClass: 'v-rating',\n      class: {\n        'v-rating--readonly': this.readonly,\n        'v-rating--dense': this.dense,\n      },\n    }, children)\n  },\n})\n","import VRating from './VRating'\n\nexport { VRating }\nexport default VRating\n","// extracted by mini-css-extract-plugin","import './VResponsive.sass'\n\n// Mixins\nimport Measurable, { NumberOrNumberString } from '../../mixins/measurable'\n\n// Types\nimport { VNode } from 'vue'\n\n// Utils\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Measurable).extend({\n  name: 'v-responsive',\n\n  props: {\n    aspectRatio: [String, Number] as NumberOrNumberString,\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.aspectRatio)\n    },\n    aspectStyle (): object | undefined {\n      return this.computedAspectRatio\n        ? { paddingBottom: (1 / this.computedAspectRatio) * 100 + '%' }\n        : undefined\n    },\n    __cachedSizer (): VNode | [] {\n      if (!this.aspectStyle) return []\n\n      return this.$createElement('div', {\n        style: this.aspectStyle,\n        staticClass: 'v-responsive__sizer',\n      })\n    },\n  },\n\n  methods: {\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-responsive__content',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-responsive',\n      style: this.measurableStyles,\n      on: this.$listeners,\n    }, [\n      this.__cachedSizer,\n      this.genContent(),\n    ])\n  },\n})\n","import VResponsive from './VResponsive'\n\nexport { VResponsive }\nexport default VResponsive\n","// extracted by mini-css-extract-plugin","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport { getPropertyFromItem, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { PropValidator } from 'vue/types/options'\nimport { VNode, VNodeDirective } from 'vue'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\ntype ItemProperty = PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      default: false,\n    } as PropValidator<string | boolean | Element | VNode>,\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    },\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function],\n      default: 'disabled',\n    } as ItemProperty,\n    itemText: {\n      type: [String, Array, Function],\n      default: 'text',\n    } as ItemProperty,\n    itemValue: {\n      type: [String, Array, Function],\n      default: 'value',\n    } as ItemProperty,\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      content: null as any,\n      isBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    counterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.getText(this.selectedItems[0]) || '').toString().length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: this.blur,\n        args: {\n          closeConditional: this.closeConditional,\n        },\n      } as VNodeDirective] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isBooted () {\n      this.$nextTick(() => {\n        if (this.content && this.content.addEventListener) {\n          this.content.addEventListener('scroll', this.onScroll, false)\n        }\n      })\n    },\n    isMenuActive (val) {\n      this.$nextTick(() => this.onMenuActiveChange(val))\n\n      if (!val) return\n\n      this.isBooted = true\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  mounted () {\n    this.content = this.$refs.menu && (this.$refs.menu as { [key: string]: any }).$refs.content\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        this.disabled ||\n        this.readonly ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : undefined)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        this.content &&\n        !this.content.contains(e.target) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.disabled ||\n        this.readonly ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (isDisabled) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.disabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data!.domProps!.value = null\n      input.data!.attrs!.readonly = true\n      input.data!.attrs!.type = 'text'\n      input.data!.attrs!['aria-readonly'] = true\n      input.data!.on!.keypress = this.onKeyPress\n\n      return input\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: this.disabled || this.readonly,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick () {\n      if (this.isDisabled) return\n\n      this.isMenuActive = true\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        this.readonly\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      if (this.hasMouseDown && e.which !== 3) {\n        const appendInner = this.$refs['append-inner']\n\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isMenuActive &&\n          appendInner &&\n          (appendInner === e.target ||\n          (appendInner as { [key: string]: any }).contains(e.target))\n        ) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        // If user is clicking in the container\n        // and field is enclosed, activate it\n        } else if (this.isEnclosed && !this.isDisabled) {\n          this.isMenuActive = true\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.content.scrollTop = 0))\n      } else {\n        if (this.lastItem >= this.computedItems.length) return\n\n        const showMoreItems = (\n          this.content.scrollHeight -\n          (this.content.scrollTop +\n          this.content.clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.getTiles()\n      keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile()\n      menu.activeTile && menu.activeTile.click()\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      const oldValue = this.internalValue\n      this.internalValue = value\n      value !== oldValue && this.$emit('change', value)\n    },\n  },\n})\n","// Styles\nimport '../VCard/VCard.sass'\n\n// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function],\n      default: 'disabled',\n    } as PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>,\n    itemText: {\n      type: [String, Array, Function],\n      default: 'text',\n    } as PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>,\n    itemValue: {\n      type: [String, Array, Function],\n      default: 'value',\n    } as PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>,\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: {\n      default: null,\n    } as PropValidator<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    genLabelledBy (item: object) {\n      const text = escapeHTML(this.getText(item).split(' ').join('-').toLowerCase())\n\n      return `${text}-list-item-${this._uid}`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: '', middle: text, end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile (\n      item: object,\n      disabled = null as null | boolean,\n      value = false\n    ): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          'aria-labelledby': this.genLabelledBy(item),\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          attrs: { id: this.genLabelledBy(item) },\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children = []\n    for (const item of this.items) {\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile(item))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile(item))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement('div', {\n      staticClass: 'v-select-list v-card',\n      class: this.themeClasses,\n    }, [\n      this.$createElement(VList, {\n        attrs: {\n          id: this.$attrs.id,\n          role: 'listbox',\n          tabindex: -1,\n        },\n        props: { dense: this.dense },\n      }, children),\n    ])\n  },\n})\n","import VSelect from './VSelect'\n\nexport { VSelect }\nexport default VSelect\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VSheet.sass'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  Colorable,\n  Elevatable,\n  Measurable,\n  Themeable\n).extend({\n  name: 'v-sheet',\n\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-sheet': true,\n        'v-sheet--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    styles (): object {\n      return this.measurableStyles\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      class: this.classes,\n      style: this.styles,\n      on: this.listeners$,\n    }\n\n    return h(\n      this.tag,\n      this.setBackgroundColor(this.color, data),\n      this.$slots.default\n    )\n  },\n})\n","import VSheet from './VSheet'\n\nexport { VSheet }\nexport default VSheet\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VSkeletonLoader.sass'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { getSlot } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(\n  Elevatable,\n  Measurable,\n  Themeable,\n).extend({\n  name: 'VSkeletonLoader',\n\n  props: {\n    boilerplate: Boolean,\n    loading: Boolean,\n    tile: Boolean,\n    transition: String,\n    type: String,\n    types: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n\n  computed: {\n    attrs (): object {\n      if (!this.isLoading) return this.$attrs\n\n      return !this.boilerplate ? {\n        'aria-busy': true,\n        'aria-live': 'polite',\n        role: 'alert',\n        ...this.$attrs,\n      } : {}\n    },\n    classes (): object {\n      return {\n        'v-skeleton-loader--boilerplate': this.boilerplate,\n        'v-skeleton-loader--is-loading': this.isLoading,\n        'v-skeleton-loader--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    isLoading (): boolean {\n      return Boolean(\n        !getSlot(this) ||\n        this.loading\n      )\n    },\n    rootTypes (): Record<string, string> {\n      return {\n        actions: 'button@2',\n        article: 'heading, paragraph',\n        avatar: 'avatar',\n        button: 'button',\n        card: 'image, card-heading',\n        'card-avatar': 'image, list-item-avatar',\n        'card-heading': 'heading',\n        chip: 'chip',\n        'date-picker': 'list-item, card-heading, divider, date-picker-options, date-picker-days, actions',\n        'date-picker-options': 'text, avatar@2',\n        'date-picker-days': 'avatar@28',\n        heading: 'heading',\n        image: 'image',\n        'list-item': 'text',\n        'list-item-avatar': 'avatar, text',\n        'list-item-two-line': 'sentences',\n        'list-item-avatar-two-line': 'avatar, sentences',\n        'list-item-three-line': 'paragraph',\n        'list-item-avatar-three-line': 'avatar, paragraph',\n        paragraph: 'text@3',\n        sentences: 'text@2',\n        table: 'table-heading, table-thead, table-tbody, table-tfoot',\n        'table-heading': 'heading, text',\n        'table-thead': 'heading@6',\n        'table-tbody': 'table-row-divider@6',\n        'table-row-divider': 'table-row, divider',\n        'table-row': 'table-cell@6',\n        'table-cell': 'text',\n        'table-tfoot': 'text@2, avatar@2',\n        text: 'text',\n        ...this.types,\n      }\n    },\n  },\n\n  methods: {\n    genBone (text: string, children: VNode[]) {\n      return this.$createElement('div', {\n        staticClass: `v-skeleton-loader__${text} v-skeleton-loader__bone`,\n      }, children)\n    },\n    genBones (bone: string): VNode[] {\n      // e.g. 'text@3'\n      const [type, length] = bone.split('@') as [string, number]\n      const generator = () => this.genStructure(type)\n\n      // Generate a length array based upon\n      // value after @ in the bone string\n      return Array.from({ length }).map(generator)\n    },\n    // Fix type when this is merged\n    // https://github.com/microsoft/TypeScript/pull/33050\n    genStructure (type?: string): any {\n      let children = []\n      type = type || this.type || ''\n      const bone = this.rootTypes[type] || ''\n\n      // End of recursion, do nothing\n      /* eslint-disable-next-line no-empty, brace-style */\n      if (type === bone) {}\n      // Array of values - e.g. 'heading, paragraph, text@2'\n      else if (type.indexOf(',') > -1) return this.mapBones(type)\n      // Array of values - e.g. 'paragraph@4'\n      else if (type.indexOf('@') > -1) return this.genBones(type)\n      // Array of values - e.g. 'card@2'\n      else if (bone.indexOf(',') > -1) children = this.mapBones(bone)\n      // Array of values - e.g. 'list-item@2'\n      else if (bone.indexOf('@') > -1) children = this.genBones(bone)\n      // Single value - e.g. 'card-heading'\n      else if (bone) children.push(this.genStructure(bone))\n\n      return [this.genBone(type, children)]\n    },\n    genSkeleton () {\n      const children = []\n      const slot = getSlot(this)\n\n      if (!this.isLoading) children.push(slot)\n      else children.push(this.genStructure())\n\n      /* istanbul ignore else */\n      if (!this.transition) return children\n\n      /* istanbul ignore next */\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n        // Only show transition when\n        // content has been loaded\n        on: {\n          enter: (el: HTMLElement) => {\n            if (this.isLoading) el.style.transition = 'none'\n          },\n          beforeLeave: (el: HTMLElement) => {\n            el.style.display = 'none'\n          },\n        },\n      }, children)\n    },\n    mapBones (bones: string) {\n      // Remove spaces and return array of structures\n      return bones.replace(/\\s/g, '').split(',').map(this.genStructure)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-skeleton-loader',\n      attrs: this.attrs,\n      on: this.$listeners,\n      class: this.classes,\n      style: this.isLoading ? this.measurableStyles : undefined,\n    }, [this.genSkeleton()])\n  },\n})\n","import VSkeletonLoader from './VSkeletonLoader'\n\nexport { VSkeletonLoader }\nexport default VSkeletonLoader\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchmoveX: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<typeof BaseItemGroup>\n/* eslint-enable indent */\n>(\n  BaseItemGroup\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    mobileBreakPoint: {\n      type: [Number, String],\n      default: 1264,\n      validator: (v: any) => !isNaN(parseInt(v)),\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: Boolean,\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      return (\n        (this.showArrows || !this.isMobile) &&\n        this.isOverflowing\n      )\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n    isMobile (): boolean {\n      return this.$vuetify.breakpoint.width < this.mobileBreakPoint\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    genNext (): VNode | null {\n      if (!this.hasAffixes) return null\n\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      this.scrollOffset = this.startX - e.touchmoveX\n    },\n    onTouchEnd () {\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.4\n\n      if (offsetLeft < currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth < itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        this.isOverflowing = this.widths.wrapper < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","// Extensions\nimport { BaseItem } from '../VItemGroup/VItem'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  BaseItem,\n  GroupableFactory('slideGroup')\n  /* @vue/component */\n).extend({\n  name: 'v-slide-item',\n})\n","import VSlideGroup from './VSlideGroup'\nimport VSlideItem from './VSlideItem'\n\nexport {\n  VSlideGroup,\n  VSlideItem,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VSlideGroup,\n    VSlideItem,\n  },\n}\n","// extracted by mini-css-extract-plugin","import './VSlider.sass'\n\n// Components\nimport VInput from '../VInput'\nimport { VScaleTransition } from '../transitions'\n\n// Mixins\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport Loadable from '../../mixins/loadable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport { addOnceEventListener, deepEqual, keyCodes, createRange, convertToUnit, passiveSupported } from '../../util/helpers'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { VNode, VNodeChildrenArrayContents } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { ScopedSlotChildren } from 'vue/types/vnode'\n\ninterface options extends Vue {\n  $refs: {\n    track: HTMLElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof VInput,\n    typeof Loadable\n  ]>\n/* eslint-enable indent */\n>(\n  VInput,\n  Loadable\n/* @vue/component */\n).extend({\n  name: 'v-slider',\n\n  directives: {\n    ClickOutside,\n  },\n\n  mixins: [Loadable],\n\n  props: {\n    disabled: Boolean,\n    inverseLabel: Boolean,\n    max: {\n      type: [Number, String],\n      default: 100,\n    },\n    min: {\n      type: [Number, String],\n      default: 0,\n    },\n    step: {\n      type: [Number, String],\n      default: 1,\n    },\n    thumbColor: String,\n    thumbLabel: {\n      type: [Boolean, String],\n      default: null,\n      validator: v => typeof v === 'boolean' || v === 'always',\n    } as PropValidator<boolean | 'always' | null>,\n    thumbSize: {\n      type: [Number, String],\n      default: 32,\n    },\n    tickLabels: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    ticks: {\n      type: [Boolean, String],\n      default: false,\n      validator: v => typeof v === 'boolean' || v === 'always',\n    } as PropValidator<boolean | 'always'>,\n    tickSize: {\n      type: [Number, String],\n      default: 2,\n    },\n    trackColor: String,\n    trackFillColor: String,\n    value: [Number, String],\n    vertical: Boolean,\n  },\n\n  data: () => ({\n    app: null as any,\n    oldValue: null as any,\n    keyPressed: 0,\n    isFocused: false,\n    isActive: false,\n    lazyValue: 0,\n    noClick: false, // Prevent click event if dragging took place, hack for #7915\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input__slider': true,\n        'v-input__slider--vertical': this.vertical,\n        'v-input__slider--inverse-label': this.inverseLabel,\n      }\n    },\n    internalValue: {\n      get (): number {\n        return this.lazyValue\n      },\n      set (val: number) {\n        val = isNaN(val) ? this.minValue : val\n        // Round value to ensure the\n        // entire slider range can\n        // be selected with step\n        const value = this.roundValue(Math.min(Math.max(val, this.minValue), this.maxValue))\n\n        if (value === this.lazyValue) return\n\n        this.lazyValue = value\n\n        this.$emit('input', value)\n      },\n    },\n    trackTransition (): string {\n      return this.keyPressed >= 2 ? 'none' : ''\n    },\n    minValue (): number {\n      return parseFloat(this.min)\n    },\n    maxValue (): number {\n      return parseFloat(this.max)\n    },\n    stepNumeric (): number {\n      return this.step > 0 ? parseFloat(this.step) : 0\n    },\n    inputWidth (): number {\n      const value = (this.roundValue(this.internalValue) - this.minValue) / (this.maxValue - this.minValue) * 100\n\n      return value\n    },\n    trackFillStyles (): Partial<CSSStyleDeclaration> {\n      const startDir = this.vertical ? 'bottom' : 'left'\n      const endDir = this.vertical ? 'top' : 'right'\n      const valueDir = this.vertical ? 'height' : 'width'\n\n      const start = this.$vuetify.rtl ? 'auto' : '0'\n      const end = this.$vuetify.rtl ? '0' : 'auto'\n      const value = this.disabled ? `calc(${this.inputWidth}% - 10px)` : `${this.inputWidth}%`\n\n      return {\n        transition: this.trackTransition,\n        [startDir]: start,\n        [endDir]: end,\n        [valueDir]: value,\n      }\n    },\n    trackStyles (): Partial<CSSStyleDeclaration> {\n      const startDir = this.vertical ? this.$vuetify.rtl ? 'bottom' : 'top' : this.$vuetify.rtl ? 'left' : 'right'\n      const endDir = this.vertical ? 'height' : 'width'\n\n      const start = '0px'\n      const end = this.disabled ? `calc(${100 - this.inputWidth}% - 10px)` : `calc(${100 - this.inputWidth}%)`\n\n      return {\n        transition: this.trackTransition,\n        [startDir]: start,\n        [endDir]: end,\n      }\n    },\n    showTicks (): boolean {\n      return this.tickLabels.length > 0 ||\n        !!(!this.disabled && this.stepNumeric && this.ticks)\n    },\n    numTicks (): number {\n      return Math.ceil((this.maxValue - this.minValue) / this.stepNumeric)\n    },\n    showThumbLabel (): boolean {\n      return !this.disabled && !!(\n        this.thumbLabel ||\n        this.$scopedSlots['thumb-label']\n      )\n    },\n    computedTrackColor (): string | undefined {\n      if (this.disabled) return undefined\n      if (this.trackColor) return this.trackColor\n      if (this.isDark) return this.validationState\n      return this.validationState || 'primary lighten-3'\n    },\n    computedTrackFillColor (): string | undefined {\n      if (this.disabled) return undefined\n      if (this.trackFillColor) return this.trackFillColor\n      return this.validationState || this.computedColor\n    },\n    computedThumbColor (): string | undefined {\n      if (this.thumbColor) return this.thumbColor\n      return this.validationState || this.computedColor\n    },\n  },\n\n  watch: {\n    min (val) {\n      const parsed = parseFloat(val)\n      parsed > this.internalValue && this.$emit('input', parsed)\n    },\n    max (val) {\n      const parsed = parseFloat(val)\n      parsed < this.internalValue && this.$emit('input', parsed)\n    },\n    value: {\n      handler (v: number) {\n        this.internalValue = v\n      },\n    },\n  },\n\n  // If done in as immediate in\n  // value watcher, causes issues\n  // with vue-test-utils\n  beforeMount () {\n    this.internalValue = this.value\n  },\n\n  mounted () {\n    // Without a v-app, iOS does not work with body selectors\n    this.app = document.querySelector('[data-app]') ||\n      consoleWarn('Missing v-app or a non-body wrapping element with the [data-app] attribute', this)\n  },\n\n  methods: {\n    genDefaultSlot (): VNodeChildrenArrayContents {\n      const children: VNodeChildrenArrayContents = [this.genLabel()]\n      const slider = this.genSlider()\n      this.inverseLabel\n        ? children.unshift(slider)\n        : children.push(slider)\n\n      children.push(this.genProgress())\n\n      return children\n    },\n    genSlider (): VNode {\n      return this.$createElement('div', {\n        class: {\n          'v-slider': true,\n          'v-slider--horizontal': !this.vertical,\n          'v-slider--vertical': this.vertical,\n          'v-slider--focused': this.isFocused,\n          'v-slider--active': this.isActive,\n          'v-slider--disabled': this.disabled,\n          'v-slider--readonly': this.readonly,\n          ...this.themeClasses,\n        },\n        directives: [{\n          name: 'click-outside',\n          value: this.onBlur,\n        }],\n        on: {\n          click: this.onSliderClick,\n        },\n      }, this.genChildren())\n    },\n    genChildren (): VNodeChildrenArrayContents {\n      return [\n        this.genInput(),\n        this.genTrackContainer(),\n        this.genSteps(),\n        this.genThumbContainer(\n          this.internalValue,\n          this.inputWidth,\n          this.isActive,\n          this.isFocused,\n          this.onThumbMouseDown,\n          this.onFocus,\n          this.onBlur,\n        ),\n      ]\n    },\n    genInput (): VNode {\n      return this.$createElement('input', {\n        attrs: {\n          value: this.internalValue,\n          id: this.computedId,\n          disabled: this.disabled,\n          readonly: true,\n          tabindex: -1,\n          ...this.$attrs,\n        },\n        // on: this.genListeners(), // TODO: do we need to attach the listeners to input?\n      })\n    },\n    genTrackContainer (): VNode {\n      const children = [\n        this.$createElement('div', this.setBackgroundColor(this.computedTrackColor, {\n          staticClass: 'v-slider__track-background',\n          style: this.trackStyles,\n        })),\n        this.$createElement('div', this.setBackgroundColor(this.computedTrackFillColor, {\n          staticClass: 'v-slider__track-fill',\n          style: this.trackFillStyles,\n        })),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-slider__track-container',\n        ref: 'track',\n      }, children)\n    },\n    genSteps (): VNode | null {\n      if (!this.step || !this.showTicks) return null\n\n      const tickSize = parseFloat(this.tickSize)\n      const range = createRange(this.numTicks + 1)\n      const direction = this.vertical ? 'bottom' : 'left'\n      const offsetDirection = this.vertical ? 'right' : 'top'\n\n      if (this.vertical) range.reverse()\n\n      const ticks = range.map(i => {\n        const index = this.$vuetify.rtl ? this.maxValue - i : i\n        const children = []\n\n        if (this.tickLabels[index]) {\n          children.push(this.$createElement('div', {\n            staticClass: 'v-slider__tick-label',\n          }, this.tickLabels[index]))\n        }\n\n        const width = i * (100 / this.numTicks)\n        const filled = this.$vuetify.rtl ? (100 - this.inputWidth) < width : width < this.inputWidth\n\n        return this.$createElement('span', {\n          key: i,\n          staticClass: 'v-slider__tick',\n          class: {\n            'v-slider__tick--filled': filled,\n          },\n          style: {\n            width: `${tickSize}px`,\n            height: `${tickSize}px`,\n            [direction]: `calc(${width}% - ${tickSize / 2}px)`,\n            [offsetDirection]: `calc(50% - ${tickSize / 2}px)`,\n          },\n        }, children)\n      })\n\n      return this.$createElement('div', {\n        staticClass: 'v-slider__ticks-container',\n        class: {\n          'v-slider__ticks-container--always-show': this.ticks === 'always' || this.tickLabels.length > 0,\n        },\n      }, ticks)\n    },\n    genThumbContainer (\n      value: number,\n      valueWidth: number,\n      isActive: boolean,\n      isFocused: boolean,\n      onDrag: Function,\n      onFocus: Function,\n      onBlur: Function,\n      ref = 'thumb'\n    ): VNode {\n      const children = [this.genThumb()]\n\n      const thumbLabelContent = this.genThumbLabelContent(value)\n      this.showThumbLabel && children.push(this.genThumbLabel(thumbLabelContent))\n\n      return this.$createElement('div', this.setTextColor(this.computedThumbColor, {\n        ref,\n        staticClass: 'v-slider__thumb-container',\n        class: {\n          'v-slider__thumb-container--active': isActive,\n          'v-slider__thumb-container--focused': isFocused,\n          'v-slider__thumb-container--show-label': this.showThumbLabel,\n        },\n        style: this.getThumbContainerStyles(valueWidth),\n        attrs: {\n          role: 'slider',\n          tabindex: this.disabled || this.readonly ? -1 : this.$attrs.tabindex ? this.$attrs.tabindex : 0,\n          'aria-label': this.label,\n          'aria-valuemin': this.min,\n          'aria-valuemax': this.max,\n          'aria-valuenow': this.internalValue,\n          'aria-readonly': String(this.readonly),\n          'aria-orientation': this.vertical ? 'vertical' : 'horizontal',\n          ...this.$attrs,\n        },\n        on: {\n          focus: onFocus,\n          blur: onBlur,\n          keydown: this.onKeyDown,\n          keyup: this.onKeyUp,\n          touchstart: onDrag,\n          mousedown: onDrag,\n        },\n      }), children)\n    },\n    genThumbLabelContent (value: number | string): ScopedSlotChildren {\n      return this.$scopedSlots['thumb-label']\n        ? this.$scopedSlots['thumb-label']!({ value })\n        : [this.$createElement('span', [String(value)])]\n    },\n    genThumbLabel (content: ScopedSlotChildren): VNode {\n      const size = convertToUnit(this.thumbSize)\n\n      const transform = this.vertical\n        ? `translateY(20%) translateY(${(Number(this.thumbSize) / 3) - 1}px) translateX(55%) rotate(135deg)`\n        : `translateY(-20%) translateY(-12px) translateX(-50%) rotate(45deg)`\n\n      return this.$createElement(VScaleTransition, {\n        props: { origin: 'bottom center' },\n      }, [\n        this.$createElement('div', {\n          staticClass: 'v-slider__thumb-label-container',\n          directives: [{\n            name: 'show',\n            value: this.isFocused || this.isActive || this.thumbLabel === 'always',\n          }],\n        }, [\n          this.$createElement('div', this.setBackgroundColor(this.computedThumbColor, {\n            staticClass: 'v-slider__thumb-label',\n            style: {\n              height: size,\n              width: size,\n              transform,\n            },\n          }), [this.$createElement('div', content)]),\n        ]),\n      ])\n    },\n    genThumb (): VNode {\n      return this.$createElement('div', this.setBackgroundColor(this.computedThumbColor, {\n        staticClass: 'v-slider__thumb',\n      }))\n    },\n    getThumbContainerStyles (width: number): object {\n      const direction = this.vertical ? 'top' : 'left'\n      let value = this.$vuetify.rtl ? 100 - width : width\n      value = this.vertical ? 100 - value : value\n\n      return {\n        transition: this.trackTransition,\n        [direction]: `${value}%`,\n      }\n    },\n    onThumbMouseDown (e: MouseEvent) {\n      this.oldValue = this.internalValue\n      this.keyPressed = 2\n      this.isActive = true\n\n      const mouseUpOptions = passiveSupported ? { passive: true, capture: true } : true\n      const mouseMoveOptions = passiveSupported ? { passive: true } : false\n      if ('touches' in e) {\n        this.app.addEventListener('touchmove', this.onMouseMove, mouseMoveOptions)\n        addOnceEventListener(this.app, 'touchend', this.onSliderMouseUp, mouseUpOptions)\n      } else {\n        this.app.addEventListener('mousemove', this.onMouseMove, mouseMoveOptions)\n        addOnceEventListener(this.app, 'mouseup', this.onSliderMouseUp, mouseUpOptions)\n      }\n\n      this.$emit('start', this.internalValue)\n    },\n    onSliderMouseUp (e: Event) {\n      e.stopPropagation()\n      this.keyPressed = 0\n      const mouseMoveOptions = passiveSupported ? { passive: true } : false\n      this.app.removeEventListener('touchmove', this.onMouseMove, mouseMoveOptions)\n      this.app.removeEventListener('mousemove', this.onMouseMove, mouseMoveOptions)\n\n      this.$emit('end', this.internalValue)\n      if (!deepEqual(this.oldValue, this.internalValue)) {\n        this.$emit('change', this.internalValue)\n        this.noClick = true\n      }\n\n      this.isActive = false\n    },\n    onMouseMove (e: MouseEvent) {\n      const { value } = this.parseMouseMove(e)\n      this.internalValue = value\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.disabled || this.readonly) return\n\n      const value = this.parseKeyDown(e, this.internalValue)\n\n      if (value == null) return\n\n      this.internalValue = value\n      this.$emit('change', value)\n    },\n    onKeyUp () {\n      this.keyPressed = 0\n    },\n    onSliderClick (e: MouseEvent) {\n      if (this.noClick) {\n        this.noClick = false\n        return\n      }\n      const thumb = this.$refs.thumb as HTMLElement\n      thumb.focus()\n\n      this.onMouseMove(e)\n      this.$emit('change', this.internalValue)\n    },\n    onBlur (e: Event) {\n      this.isFocused = false\n\n      this.$emit('blur', e)\n    },\n    onFocus (e: Event) {\n      this.isFocused = true\n\n      this.$emit('focus', e)\n    },\n    parseMouseMove (e: MouseEvent) {\n      const start = this.vertical ? 'top' : 'left'\n      const length = this.vertical ? 'height' : 'width'\n      const click = this.vertical ? 'clientY' : 'clientX'\n\n      const {\n        [start]: trackStart,\n        [length]: trackLength,\n      } = this.$refs.track.getBoundingClientRect() as any\n      const clickOffset = 'touches' in e ? (e as any).touches[0][click] : e[click] // Can we get rid of any here?\n\n      // It is possible for left to be NaN, force to number\n      let clickPos = Math.min(Math.max((clickOffset - trackStart) / trackLength, 0), 1) || 0\n\n      if (this.vertical) clickPos = 1 - clickPos\n      if (this.$vuetify.rtl) clickPos = 1 - clickPos\n\n      const isInsideTrack = clickOffset >= trackStart && clickOffset <= trackStart + trackLength\n      const value = parseFloat(this.min) + clickPos * (this.maxValue - this.minValue)\n\n      return { value, isInsideTrack }\n    },\n    parseKeyDown (e: KeyboardEvent, value: number) {\n      if (this.disabled) return\n\n      const { pageup, pagedown, end, home, left, right, down, up } = keyCodes\n\n      if (![pageup, pagedown, end, home, left, right, down, up].includes(e.keyCode)) return\n\n      e.preventDefault()\n      const step = this.stepNumeric || 1\n      const steps = (this.maxValue - this.minValue) / step\n      if ([left, right, down, up].includes(e.keyCode)) {\n        this.keyPressed += 1\n\n        const increase = this.$vuetify.rtl ? [left, up] : [right, up]\n        const direction = increase.includes(e.keyCode) ? 1 : -1\n        const multiplier = e.shiftKey ? 3 : (e.ctrlKey ? 2 : 1)\n\n        value = value + (direction * step * multiplier)\n      } else if (e.keyCode === home) {\n        value = this.minValue\n      } else if (e.keyCode === end) {\n        value = this.maxValue\n      } else {\n        const direction = e.keyCode === pagedown ? 1 : -1\n        value = value - (direction * step * (steps > 100 ? steps / 10 : 10))\n      }\n\n      return value\n    },\n    roundValue (value: number): number {\n      if (!this.stepNumeric) return value\n      // Format input value using the same number\n      // of decimals places as in the step prop\n      const trimmedStep = this.step.toString().trim()\n      const decimals = trimmedStep.indexOf('.') > -1\n        ? (trimmedStep.length - trimmedStep.indexOf('.') - 1)\n        : 0\n      const offset = this.minValue % this.stepNumeric\n\n      const newValue = Math.round((value - offset) / this.stepNumeric) * this.stepNumeric + offset\n\n      return parseFloat(Math.min(newValue, this.maxValue).toFixed(decimals))\n    },\n  },\n})\n","import VSlider from './VSlider'\n\nexport { VSlider }\nexport default VSlider\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VSnackbar.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Toggleable from '../../mixins/toggleable'\nimport { factory as PositionableFactory } from '../../mixins/positionable'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { removed } from '../../util/console'\n\nexport default mixins(\n  Colorable,\n  Toggleable,\n  PositionableFactory(['absolute', 'top', 'bottom', 'left', 'right'])\n/* @vue/component */\n).extend({\n  name: 'v-snackbar',\n\n  props: {\n    multiLine: Boolean,\n    // TODO: change this to closeDelay to match other API in delayable.js\n    timeout: {\n      type: Number,\n      default: 6000,\n    },\n    vertical: Boolean,\n  },\n\n  data: () => ({\n    activeTimeout: -1,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-snack--active': this.isActive,\n        'v-snack--absolute': this.absolute,\n        'v-snack--bottom': this.bottom || !this.top,\n        'v-snack--left': this.left,\n        'v-snack--multi-line': this.multiLine && !this.vertical,\n        'v-snack--right': this.right,\n        'v-snack--top': this.top,\n        'v-snack--vertical': this.vertical,\n      }\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.setTimeout()\n    },\n  },\n\n  created () {\n    if (this.$attrs.hasOwnProperty('auto-height')) {\n      removed('auto-height', this)\n    }\n  },\n\n  mounted () {\n    this.setTimeout()\n  },\n\n  methods: {\n    setTimeout () {\n      window.clearTimeout(this.activeTimeout)\n\n      if (this.isActive && this.timeout) {\n        this.activeTimeout = window.setTimeout(() => {\n          this.isActive = false\n        }, this.timeout)\n      }\n    },\n  },\n\n  render (h): VNode {\n    return h('transition', {\n      attrs: { name: 'v-snack-transition' },\n    }, [\n      this.isActive && h('div', {\n        staticClass: 'v-snack',\n        class: this.classes,\n        on: this.$listeners,\n      }, [\n        h('div', this.setBackgroundColor(this.color, {\n          staticClass: 'v-snack__wrapper',\n        }), [\n          h('div', {\n            staticClass: 'v-snack__content',\n          }, this.$slots.default),\n        ]),\n      ]),\n    ])\n  },\n})\n","import VSnackbar from './VSnackbar'\n\nexport { VSnackbar }\nexport default VSnackbar\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VSparkline.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { genPoints, genBars } from './helpers/core'\nimport { genPath } from './helpers/path'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { Prop, PropValidator } from 'vue/types/options'\n\nexport type SparklineItem = number | { value: number }\n\nexport type SparklineText = {\n  x: number\n  value: string\n}\n\nexport interface Boundary {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n}\n\nexport interface Point {\n  x: number\n  y: number\n  value: number\n}\n\nexport interface Bar {\n  x: number\n  y: number\n  height: number\n  value: number\n}\n\nexport interface BarText {\n  points: Point[]\n  boundary: Boundary\n  offsetX: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    path: SVGPathElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable,\n    typeof Themeable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable,\n  Themeable,\n).extend({\n  name: 'VSparkline',\n\n  inheritAttrs: false,\n\n  props: {\n    autoDraw: Boolean,\n    autoDrawDuration: {\n      type: Number,\n      default: 2000,\n    },\n    autoDrawEasing: {\n      type: String,\n      default: 'ease',\n    },\n    autoLineWidth: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    fill: {\n      type: Boolean,\n      default: false,\n    },\n    gradient: {\n      type: Array as Prop<string[]>,\n      default: () => ([]),\n    },\n    gradientDirection: {\n      type: String as Prop<'top' | 'bottom' | 'left' | 'right'>,\n      validator: (val: string) => ['top', 'bottom', 'left', 'right'].includes(val),\n      default: 'top',\n    },\n    height: {\n      type: [String, Number],\n      default: 75,\n    },\n    labels: {\n      type: Array as Prop<SparklineItem[]>,\n      default: () => ([]),\n    },\n    labelSize: {\n      type: [Number, String],\n      default: 7,\n    },\n    lineWidth: {\n      type: [String, Number],\n      default: 4,\n    },\n    padding: {\n      type: [String, Number],\n      default: 8,\n    },\n    showLabels: Boolean,\n    smooth: {\n      type: [Boolean, Number, String],\n      default: false,\n    },\n    type: {\n      type: String,\n      default: 'trend',\n      validator: (val: string) => ['trend', 'bar'].includes(val),\n    } as PropValidator<'trend' | 'bar'>,\n    value: {\n      type: Array as Prop<SparklineItem[]>,\n      default: () => ([]),\n    },\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    lastLength: 0,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-sparkline': true,\n        ...this.themeClasses,\n      }\n    },\n    parsedPadding (): number {\n      return Number(this.padding)\n    },\n    parsedWidth (): number {\n      return Number(this.width)\n    },\n    parsedHeight (): number {\n      return parseInt(this.height, 10)\n    },\n    parsedLabelSize (): number {\n      return parseInt(this.labelSize, 10) || 7\n    },\n    totalHeight (): number {\n      let height = this.parsedHeight\n\n      if (this.hasLabels) height += parseInt(this.labelSize, 10) * 1.5\n\n      return height\n    },\n    totalWidth (): number {\n      let width = this.parsedWidth\n      if (this.type === 'bar') width = Math.max(this.value.length * this._lineWidth, width)\n\n      return width\n    },\n    totalValues (): number {\n      return this.value.length\n    },\n    _lineWidth (): number {\n      if (this.autoLineWidth && this.type !== 'trend') {\n        const totalPadding = this.parsedPadding * (this.totalValues + 1)\n        return (this.parsedWidth - totalPadding) / this.totalValues\n      } else {\n        return parseFloat(this.lineWidth) || 4\n      }\n    },\n    boundary (): Boundary {\n      if (this.type === 'bar') return { minX: 0, maxX: this.totalWidth, minY: 0, maxY: this.parsedHeight }\n\n      const padding = this.parsedPadding\n\n      return {\n        minX: padding,\n        maxX: this.totalWidth - padding,\n        minY: padding,\n        maxY: this.parsedHeight - padding,\n      }\n    },\n    hasLabels (): boolean {\n      return Boolean(\n        this.showLabels ||\n        this.labels.length > 0 ||\n        this.$scopedSlots.label\n      )\n    },\n    parsedLabels (): SparklineText[] {\n      const labels = []\n      const points = this._values\n      const len = points.length\n\n      for (let i = 0; labels.length < len; i++) {\n        const item = points[i]\n        let value = this.labels[i]\n\n        if (!value) {\n          value = typeof item === 'object'\n            ? item.value\n            : item\n        }\n\n        labels.push({\n          x: item.x,\n          value: String(value),\n        })\n      }\n\n      return labels\n    },\n    normalizedValues (): number[] {\n      return this.value.map(item => (typeof item === 'number' ? item : item.value))\n    },\n    _values (): Point[] | Bar[] {\n      return this.type === 'trend' ? genPoints(this.normalizedValues, this.boundary) : genBars(this.normalizedValues, this.boundary)\n    },\n    textY (): number {\n      let y = this.parsedHeight\n      if (this.type === 'trend') y -= 4\n      return y\n    },\n    _radius (): number {\n      return this.smooth === true ? 8 : Number(this.smooth)\n    },\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler () {\n        this.$nextTick(() => {\n          if (!this.autoDraw || this.type === 'bar') return\n\n          const path = this.$refs.path\n          const length = path.getTotalLength()\n\n          if (!this.fill) {\n            path.style.transition = 'none'\n            path.style.strokeDasharray = length + ' ' + length\n            path.style.strokeDashoffset = Math.abs(length - (this.lastLength || 0)).toString()\n            path.getBoundingClientRect()\n            path.style.transition = `stroke-dashoffset ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.strokeDashoffset = '0'\n          } else {\n            path.style.transformOrigin = 'bottom center'\n            path.style.transition = 'none'\n            path.style.transform = `scaleY(0)`\n            path.getBoundingClientRect()\n            path.style.transition = `transform ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.transform = `scaleY(1)`\n          }\n          this.lastLength = length\n        })\n      },\n    },\n  },\n\n  methods: {\n    genGradient () {\n      const gradientDirection = this.gradientDirection\n      const gradient = this.gradient.slice()\n\n      // Pushes empty string to force\n      // a fallback to currentColor\n      if (!gradient.length) gradient.push('')\n\n      const len = Math.max(gradient.length - 1, 1)\n      const stops = gradient.reverse().map((color, index) =>\n        this.$createElement('stop', {\n          attrs: {\n            offset: index / len,\n            'stop-color': color || this.color || 'currentColor',\n          },\n        })\n      )\n\n      return this.$createElement('defs', [\n        this.$createElement('linearGradient', {\n          attrs: {\n            id: this._uid,\n            x1: +(gradientDirection === 'left'),\n            y1: +(gradientDirection === 'top'),\n            x2: +(gradientDirection === 'right'),\n            y2: +(gradientDirection === 'bottom'),\n          },\n        }, stops),\n      ])\n    },\n    genG (children: VNode[]) {\n      return this.$createElement('g', {\n        style: {\n          fontSize: '8',\n          textAnchor: 'middle',\n          dominantBaseline: 'mathematical',\n          fill: this.color || 'currentColor',\n        } as object, // TODO: TS 3.5 is too eager with the array type here\n      }, children)\n    },\n    genPath () {\n      const points = genPoints(this.normalizedValues, this.boundary)\n\n      return this.$createElement('path', {\n        attrs: {\n          id: this._uid,\n          d: genPath(points, this._radius, this.fill, this.parsedHeight),\n          fill: this.fill ? `url(#${this._uid})` : 'none',\n          stroke: this.fill ? 'none' : `url(#${this._uid})`,\n        },\n        ref: 'path',\n      })\n    },\n    genLabels (offsetX: number) {\n      const children = this.parsedLabels.map((item, i) => (\n        this.$createElement('text', {\n          attrs: {\n            x: item.x + offsetX + this._lineWidth / 2,\n            y: this.textY + (this.parsedLabelSize * 0.75),\n            'font-size': Number(this.labelSize) || 7,\n          },\n        }, [this.genLabel(item, i)])\n      ))\n\n      return this.genG(children)\n    },\n    genLabel (item: SparklineText, index: number) {\n      return this.$scopedSlots.label\n        ? this.$scopedSlots.label({ index, value: item.value })\n        : item.value\n    },\n    genBars () {\n      if (!this.value || this.totalValues < 2) return undefined as never\n\n      const bars = genBars(this.normalizedValues, this.boundary)\n      const offsetX = (Math.abs(bars[0].x - bars[1].x) - this._lineWidth) / 2\n\n      return this.$createElement('svg', {\n        attrs: {\n          display: 'block',\n          viewBox: `0 0 ${this.totalWidth} ${this.totalHeight}`,\n        },\n        class: this.classes,\n      }, [\n        this.genGradient(),\n        this.genClipPath(bars, offsetX, this._lineWidth, 'sparkline-bar-' + this._uid),\n        this.hasLabels ? this.genLabels(offsetX) : undefined as never,\n        this.$createElement('g', {\n          attrs: {\n            'clip-path': `url(#sparkline-bar-${this._uid}-clip)`,\n            fill: `url(#${this._uid})`,\n          },\n        }, [\n          this.$createElement('rect', {\n            attrs: {\n              x: 0,\n              y: 0,\n              width: this.totalWidth,\n              height: this.height,\n            },\n          }),\n        ]),\n      ])\n    },\n    genClipPath (bars: Bar[], offsetX: number, lineWidth: number, id: string) {\n      const rounding = typeof this.smooth === 'number'\n        ? this.smooth\n        : this.smooth ? 2 : 0\n\n      return this.$createElement('clipPath', {\n        attrs: {\n          id: `${id}-clip`,\n        },\n      }, bars.map(item => {\n        return this.$createElement('rect', {\n          attrs: {\n            x: item.x + offsetX,\n            y: item.y,\n            width: lineWidth,\n            height: item.height,\n            rx: rounding,\n            ry: rounding,\n          },\n        }, [\n          this.autoDraw ? this.$createElement('animate', {\n            attrs: {\n              attributeName: 'height',\n              from: 0,\n              to: item.height,\n              dur: `${this.autoDrawDuration}ms`,\n              fill: 'freeze',\n            },\n          }) : undefined as never,\n        ])\n      }))\n    },\n    genTrend () {\n      return this.$createElement('svg', this.setTextColor(this.color, {\n        attrs: {\n          ...this.$attrs,\n          display: 'block',\n          'stroke-width': this._lineWidth || 1,\n          viewBox: `0 0 ${this.width} ${this.totalHeight}`,\n        },\n        class: this.classes,\n      }), [\n        this.genGradient(),\n        this.hasLabels && this.genLabels(-(this._lineWidth / 2)),\n        this.genPath(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    if (this.totalValues < 2) return undefined as never\n\n    return this.type === 'trend' ? this.genTrend() : this.genBars()\n  },\n})\n","import { Point, Boundary, Bar } from '../VSparkline'\n\nexport function genPoints (\n  values: number[],\n  boundary: Boundary\n): Point[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  const maxValue = Math.max(...values)\n  const minValue = Math.min(...values)\n\n  const gridX = (maxX - minX) / (totalValues - 1)\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n\n  return values.map((value, index) => {\n    return {\n      x: minX + index * gridX,\n      y:\n        maxY -\n        (value - minValue) * gridY +\n        +(index === totalValues - 1) * 0.00001 -\n        +(index === 0) * 0.00001,\n      value,\n    }\n  })\n}\n\nexport function genBars (\n  values: number[],\n  boundary: Boundary\n): Bar[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  let maxValue = Math.max(...values)\n  let minValue = Math.min(...values)\n\n  if (minValue > 0) minValue = 0\n  if (maxValue < 0) maxValue = 0\n\n  const gridX = maxX / totalValues\n  const gridY = (maxY - minY) / (maxValue - minValue)\n  const horizonY = maxY - Math.abs(minValue * gridY)\n\n  return values.map((value, index) => {\n    const height = Math.abs(gridY * value)\n\n    return {\n      x: minX + index * gridX,\n      y: horizonY - height +\n        +(value < 0) * height,\n      height,\n      value,\n    }\n  })\n}\n","import { Point } from '../VSparkline'\n\nfunction int (value: string | number): number {\n  return parseInt(value, 10)\n}\n\n/**\n * https://en.wikipedia.org/wiki/Collinearity\n * x=(x1+x2)/2\n * y=(y1+y2)/2\n */\nexport function checkCollinear (p0: Point, p1: Point, p2: Point): boolean {\n  return int(p0.x + p2.x) === int(2 * p1.x) && int(p0.y + p2.y) === int(2 * p1.y)\n}\n\nexport function getDistance (p1: Point, p2: Point): number {\n  return Math.sqrt(\n    Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2)\n  )\n}\n\nexport function moveTo (to: Point, from: Point, radius: number) {\n  const vector = { x: to.x - from.x, y: to.y - from.y }\n  const length = Math.sqrt((vector.x * vector.x) + (vector.y * vector.y))\n  const unitVector = { x: vector.x / length, y: vector.y / length }\n\n  return {\n    x: from.x + unitVector.x * radius,\n    y: from.y + unitVector.y * radius,\n  }\n}\n","import { Point } from '../VSparkline'\nimport { checkCollinear, getDistance, moveTo } from './math'\n\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\nexport function genPath (points: Point[], radius: number, fill = false, height = 75) {\n  const start = points.shift()!\n  const end = points[points.length - 1]\n\n  return (\n    (fill ? `M${start.x} ${height - start.x + 2} L${start.x} ${start.y}` : `M${start.x} ${start.y}`) +\n    points\n      .map((point, index) => {\n        const next = points[index + 1]\n        const prev = points[index - 1] || start\n        const isCollinear = next && checkCollinear(next, point, prev)\n\n        if (!next || isCollinear) {\n          return `L${point.x} ${point.y}`\n        }\n\n        const threshold = Math.min(\n          getDistance(prev, point),\n          getDistance(next, point)\n        )\n        const isTooCloseForRadius = threshold / 2 < radius\n        const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius\n\n        const before = moveTo(prev, point, radiusForPoint)\n        const after = moveTo(next, point, radiusForPoint)\n\n        return `L${before.x} ${before.y}S${point.x} ${point.y} ${after.x} ${after.y}`\n      })\n      .join('') +\n    (fill ? `L${end.x} ${height - start.x + 2} Z` : '')\n  )\n}\n","import VSparkline from './VSparkline'\n\nexport { VSparkline }\n\nexport default VSparkline\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VSpeedDial.sass'\n\n// Mixins\nimport Toggleable from '../../mixins/toggleable'\nimport Positionable from '../../mixins/positionable'\nimport Transitionable from '../../mixins/transitionable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(Positionable, Toggleable, Transitionable).extend({\n  name: 'v-speed-dial',\n\n  directives: { ClickOutside },\n\n  props: {\n    direction: {\n      type: String,\n      default: 'top',\n      validator: (val: string) => {\n        return ['top', 'right', 'bottom', 'left'].includes(val)\n      },\n    } as PropValidator<'top' | 'right' | 'bottom' | 'left'>,\n    openOnHover: Boolean,\n    transition: {\n      type: String,\n      default: 'scale-transition',\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-speed-dial': true,\n        'v-speed-dial--top': this.top,\n        'v-speed-dial--right': this.right,\n        'v-speed-dial--bottom': this.bottom,\n        'v-speed-dial--left': this.left,\n        'v-speed-dial--absolute': this.absolute,\n        'v-speed-dial--fixed': this.fixed,\n        [`v-speed-dial--direction-${this.direction}`]: true,\n        'v-speed-dial--is-active': this.isActive,\n      }\n    },\n  },\n\n  render (h): VNode {\n    let children: VNode[] = []\n    const data: VNodeData = {\n      class: this.classes,\n      directives: [{\n        name: 'click-outside',\n        value: () => (this.isActive = false),\n      }],\n      on: {\n        click: () => (this.isActive = !this.isActive),\n      },\n    }\n\n    if (this.openOnHover) {\n      data.on!.mouseenter = () => (this.isActive = true)\n      data.on!.mouseleave = () => (this.isActive = false)\n    }\n\n    if (this.isActive) {\n      let btnCount = 0\n      children = (this.$slots.default || []).map((b, i) => {\n        if (b.tag && typeof b.componentOptions !== 'undefined' && (b.componentOptions.Ctor.options.name === 'v-btn' || b.componentOptions.Ctor.options.name === 'v-tooltip')) {\n          btnCount++\n          return h('div', {\n            style: {\n              transitionDelay: btnCount * 0.05 + 's',\n            },\n            key: i,\n          }, [b])\n        } else {\n          b.key = i\n          return b\n        }\n      })\n    }\n\n    const list = h('transition-group', {\n      class: 'v-speed-dial__list',\n      props: {\n        name: this.transition,\n        mode: this.mode,\n        origin: this.origin,\n        tag: 'div',\n      },\n    }, children)\n\n    return h('div', data, [this.$slots.activator, list])\n  },\n})\n","import VSpeedDial from './VSpeedDial'\n\nexport { VSpeedDial }\nexport default VSpeedDial\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VStepper.sass'\n\n// Components\nimport VStepperStep from './VStepperStep'\nimport VStepperContent from './VStepperContent'\n\n// Mixins\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  RegistrableProvide('stepper'),\n  Proxyable,\n  Themeable\n)\n\ntype VStepperStepInstance = InstanceType<typeof VStepperStep>\ntype VStepperContentInstance = InstanceType<typeof VStepperContent>\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-stepper',\n\n  provide (): object {\n    return {\n      stepClick: this.stepClick,\n      isVertical: this.vertical,\n    }\n  },\n\n  props: {\n    altLabels: Boolean,\n    nonLinear: Boolean,\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      isBooted: false,\n      steps: [] as VStepperStepInstance[],\n      content: [] as VStepperContentInstance[],\n      isReverse: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-stepper--is-booted': this.isBooted,\n        'v-stepper--vertical': this.vertical,\n        'v-stepper--alt-labels': this.altLabels,\n        'v-stepper--non-linear': this.nonLinear,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val, oldVal) {\n      this.isReverse = Number(val) < Number(oldVal)\n\n      oldVal && (this.isBooted = true)\n\n      this.updateView()\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$listeners.input) {\n      breaking('@input', '@change', this)\n    }\n  },\n\n  mounted () {\n    this.internalLazyValue = this.value || (this.steps[0] || {}).step || 1\n    this.updateView()\n  },\n\n  methods: {\n    register (item: VStepperStepInstance | VStepperContentInstance) {\n      if (item.$options.name === 'v-stepper-step') {\n        this.steps.push(item as VStepperStepInstance)\n      } else if (item.$options.name === 'v-stepper-content') {\n        (item as VStepperContentInstance).isVertical = this.vertical\n        this.content.push(item as VStepperContentInstance)\n      }\n    },\n    unregister (item: VStepperStepInstance | VStepperContentInstance) {\n      if (item.$options.name === 'v-stepper-step') {\n        this.steps = this.steps.filter((i: VStepperStepInstance) => i !== item)\n      } else if (item.$options.name === 'v-stepper-content') {\n        (item as VStepperContentInstance).isVertical = this.vertical\n        this.content = this.content.filter((i: VStepperContentInstance) => i !== item)\n      }\n    },\n    stepClick (step: string | number) {\n      this.$nextTick(() => (this.internalValue = step))\n    },\n    updateView () {\n      for (let index = this.steps.length; --index >= 0;) {\n        this.steps[index].toggle(this.internalValue as any)\n      }\n      for (let index = this.content.length; --index >= 0;) {\n        this.content[index].toggle(this.internalValue as any, this.isReverse)\n      }\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-stepper',\n      class: this.classes,\n    }, this.$slots.default)\n  },\n})\n","// Components\nimport {\n  VTabTransition,\n  VTabReverseTransition,\n} from '../transitions'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode, FunctionalComponentOptions, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  RegistrableInject('stepper', 'v-stepper-content', 'v-stepper')\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    wrapper: HTMLElement\n  }\n  isVerticalProvided: boolean\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-stepper-content',\n\n  inject: {\n    isVerticalProvided: {\n      from: 'isVertical',\n    },\n  },\n\n  props: {\n    step: {\n      type: [Number, String],\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      height: 0 as number | string,\n      // Must be null to allow\n      // previous comparison\n      isActive: null as boolean | null,\n      isReverse: false,\n      isVertical: this.isVerticalProvided,\n    }\n  },\n\n  computed: {\n    computedTransition (): FunctionalComponentOptions {\n      // Fix for #8978\n      const reverse = this.$vuetify.rtl ? !this.isReverse : this.isReverse\n\n      return reverse\n        ? VTabReverseTransition\n        : VTabTransition\n    },\n    styles (): object {\n      if (!this.isVertical) return {}\n\n      return {\n        height: convertToUnit(this.height),\n      }\n    },\n  },\n\n  watch: {\n    isActive (current, previous) {\n      // If active and the previous state\n      // was null, is just booting up\n      if (current && previous == null) {\n        this.height = 'auto'\n        return\n      }\n\n      if (!this.isVertical) return\n\n      if (this.isActive) this.enter()\n      else this.leave()\n    },\n  },\n\n  mounted () {\n    this.$refs.wrapper.addEventListener(\n      'transitionend',\n      this.onTransition,\n      false\n    )\n    this.stepper && this.stepper.register(this)\n  },\n\n  beforeDestroy () {\n    this.$refs.wrapper.removeEventListener(\n      'transitionend',\n      this.onTransition,\n      false\n    )\n    this.stepper && this.stepper.unregister(this)\n  },\n\n  methods: {\n    onTransition (e: TransitionEvent) {\n      if (!this.isActive ||\n        e.propertyName !== 'height'\n      ) return\n\n      this.height = 'auto'\n    },\n    enter () {\n      let scrollHeight = 0\n\n      // Render bug with height\n      requestAnimationFrame(() => {\n        scrollHeight = this.$refs.wrapper.scrollHeight\n      })\n\n      this.height = 0\n\n      // Give the collapsing element time to collapse\n      setTimeout(() => this.isActive && (this.height = (scrollHeight || 'auto')), 450)\n    },\n    leave () {\n      this.height = this.$refs.wrapper.clientHeight\n      setTimeout(() => (this.height = 0), 10)\n    },\n    toggle (step: string | number, reverse: boolean) {\n      this.isActive = step.toString() === this.step.toString()\n      this.isReverse = reverse\n    },\n  },\n\n  render (h): VNode {\n    const contentData = {\n      staticClass: 'v-stepper__content',\n    } as VNodeData\n    const wrapperData = {\n      staticClass: 'v-stepper__wrapper',\n      style: this.styles,\n      ref: 'wrapper',\n    }\n\n    if (!this.isVertical) {\n      contentData.directives = [{\n        name: 'show',\n        value: this.isActive,\n      }]\n    }\n\n    const wrapper = h('div', wrapperData, [this.$slots.default])\n    const content = h('div', contentData, [wrapper])\n\n    return h(this.computedTransition, {\n      on: this.$listeners,\n    }, [content])\n  },\n})\n","// Components\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VuetifyStepperRuleValidator = () => string | boolean\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('stepper', 'v-stepper-step', 'v-stepper')\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  stepClick: (step: number | string) => void\n}\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-stepper-step',\n\n  directives: { ripple },\n\n  inject: ['stepClick'],\n\n  props: {\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    complete: Boolean,\n    completeIcon: {\n      type: String,\n      default: '$complete',\n    },\n    editable: Boolean,\n    editIcon: {\n      type: String,\n      default: '$edit',\n    },\n    errorIcon: {\n      type: String,\n      default: '$error',\n    },\n    rules: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<VuetifyStepperRuleValidator[]>,\n    step: [Number, String],\n  },\n\n  data () {\n    return {\n      isActive: false,\n      isInactive: true,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-stepper__step--active': this.isActive,\n        'v-stepper__step--editable': this.editable,\n        'v-stepper__step--inactive': this.isInactive,\n        'v-stepper__step--error error--text': this.hasError,\n        'v-stepper__step--complete': this.complete,\n      }\n    },\n    hasError (): boolean {\n      return this.rules.some(validate => validate() !== true)\n    },\n  },\n\n  mounted () {\n    this.stepper && this.stepper.register(this)\n  },\n\n  beforeDestroy () {\n    this.stepper && this.stepper.unregister(this)\n  },\n\n  methods: {\n    click (e: MouseEvent) {\n      e.stopPropagation()\n\n      this.$emit('click', e)\n\n      if (this.editable) {\n        this.stepClick(this.step)\n      }\n    },\n    genIcon (icon: string) {\n      return this.$createElement(VIcon, icon)\n    },\n    genLabel () {\n      return this.$createElement('div', {\n        staticClass: 'v-stepper__label',\n      }, this.$slots.default)\n    },\n    genStep () {\n      const color = (!this.hasError && (this.complete || this.isActive)) ? this.color : false\n\n      return this.$createElement('span', this.setBackgroundColor(color, {\n        staticClass: 'v-stepper__step__step',\n      }), this.genStepContent())\n    },\n    genStepContent () {\n      const children = []\n\n      if (this.hasError) {\n        children.push(this.genIcon(this.errorIcon))\n      } else if (this.complete) {\n        if (this.editable) {\n          children.push(this.genIcon(this.editIcon))\n        } else {\n          children.push(this.genIcon(this.completeIcon))\n        }\n      } else {\n        children.push(String(this.step))\n      }\n\n      return children\n    },\n    toggle (step: number | string) {\n      this.isActive = step.toString() === this.step.toString()\n      this.isInactive = Number(step) < Number(this.step)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-stepper__step',\n      class: this.classes,\n      directives: [{\n        name: 'ripple',\n        value: this.editable,\n      }],\n      on: { click: this.click },\n    }, [\n      this.genStep(),\n      this.genLabel(),\n    ])\n  },\n})\n","import { createSimpleFunctional } from '../../util/helpers'\nimport VStepper from './VStepper'\nimport VStepperStep from './VStepperStep'\nimport VStepperContent from './VStepperContent'\n\nconst VStepperHeader = createSimpleFunctional('v-stepper__header')\nconst VStepperItems = createSimpleFunctional('v-stepper__items')\n\nexport {\n  VStepper,\n  VStepperContent,\n  VStepperStep,\n  VStepperHeader,\n  VStepperItems,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VStepper,\n    VStepperContent,\n    VStepperStep,\n    VStepperHeader,\n    VStepperItems,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// extracted by mini-css-extract-plugin","// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VSwitch.sass'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\nimport VInput from '../VInput'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport { VFabTransition } from '../transitions'\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'\n\n// Helpers\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-switch',\n\n  directives: { Touch },\n\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset,\n      }\n    },\n    attrs (): object {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.disabled),\n        role: 'switch',\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n    switchData (): VNodeData {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses,\n      })\n    },\n  },\n\n  methods: {\n    genDefaultSlot (): (VNode | null)[] {\n      return [\n        this.genSwitch(),\n        this.genLabel(),\n      ]\n    },\n    genSwitch (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput('checkbox', {\n          ...this.attrs,\n          ...this.attrs$,\n        }),\n        this.genRipple(this.setTextColor(this.validationState, {\n          directives: [{\n            name: 'touch',\n            value: {\n              left: this.onSwipeLeft,\n              right: this.onSwipeRight,\n            },\n          }],\n        })),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__track',\n          ...this.switchData,\n        }),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__thumb',\n          ...this.switchData,\n        }, [this.genProgress()]),\n      ])\n    },\n    genProgress (): VNode {\n      return this.$createElement(VFabTransition, {}, [\n        this.loading === false\n          ? null\n          : this.$slots.progress || this.$createElement(VProgressCircular, {\n            props: {\n              color: (this.loading === true || this.loading === '')\n                ? (this.color || 'primary')\n                : this.loading,\n              size: 16,\n              width: 2,\n              indeterminate: true,\n            },\n          }),\n      ])\n    },\n    onSwipeLeft () {\n      if (this.isActive) this.onChange()\n    },\n    onSwipeRight () {\n      if (!this.isActive) this.onChange()\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (\n        (e.keyCode === keyCodes.left && this.isActive) ||\n        (e.keyCode === keyCodes.right && !this.isActive)\n      ) this.onChange()\n    },\n  },\n})\n","import VSwitch from './VSwitch'\n\nexport { VSwitch }\nexport default VSwitch\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VSystemBar.sass'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { convertToUnit, getSlot } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue/types'\n\nexport default mixins(\n  Applicationable('bar', [\n    'height',\n    'window',\n  ]),\n  Colorable,\n  Themeable\n/* @vue/component */\n).extend({\n  name: 'v-system-bar',\n\n  props: {\n    height: [Number, String],\n    lightsOut: Boolean,\n    window: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-system-bar--lights-out': this.lightsOut,\n        'v-system-bar--absolute': this.absolute,\n        'v-system-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-system-bar--window': this.window,\n        ...this.themeClasses,\n      }\n    },\n    computedHeight (): number | string {\n      if (this.height) {\n        return isNaN(parseInt(this.height)) ? this.height : parseInt(this.height)\n      }\n\n      return this.window ? 32 : 24\n    },\n    styles (): object {\n      return {\n        height: convertToUnit(this.computedHeight),\n      }\n    },\n  },\n\n  methods: {\n    updateApplication () {\n      return this.$el\n        ? this.$el.clientHeight\n        : this.computedHeight\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-system-bar',\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    }\n\n    return h('div', this.setBackgroundColor(this.color, data), getSlot(this))\n  },\n})\n","import VSystemBar from './VSystemBar'\n\nexport { VSystemBar }\nexport default VSystemBar\n","// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Routable from '../../mixins/routable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { ExtractVue } from './../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Routable,\n  // Must be after routable\n  // to overwrite activeClass\n  GroupableFactory('tabsBar'),\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-tab',\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  data: () => ({\n    proxyClass: 'v-tab--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tab': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-tab--disabled': this.disabled,\n        ...this.groupClasses,\n      }\n    },\n    value (): any {\n      let to = this.to || this.href || ''\n\n      if (this.$router &&\n        this.to === Object(this.to)\n      ) {\n        const resolve = this.$router.resolve(\n          this.to,\n          this.$route,\n          this.append\n        )\n\n        to = resolve.href\n      }\n\n      return to.replace('#', '')\n    },\n  },\n\n  mounted () {\n    this.onRouteChange()\n  },\n\n  methods: {\n    click (e: KeyboardEvent | MouseEvent): void {\n      // If user provides an\n      // actual link, do not\n      // prevent default\n      if (this.href &&\n        this.href.indexOf('#') > -1\n      ) e.preventDefault()\n\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      'aria-selected': String(this.isActive),\n      role: 'tab',\n      tabindex: 0,\n    }\n    data.on = {\n      ...data.on,\n      keydown: (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    return h(tag, data, this.$slots.default)\n  },\n})\n","// Extensions\nimport VWindowItem from '../VWindow/VWindowItem'\n\n/* @vue/component */\nexport default VWindowItem.extend({\n  name: 'v-tab-item',\n\n  props: {\n    id: String,\n  },\n\n  methods: {\n    genWindowItem () {\n      const item = VWindowItem.options.methods.genWindowItem.call(this)\n\n      item.data!.domProps = item.data!.domProps || {}\n      item.data!.domProps.id = this.id || this.value\n\n      return item\n    },\n  },\n})\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VTabs.sass'\n\n// Components\nimport VTabsBar from './VTabsBar'\nimport VTabsItems from './VTabsItems'\nimport VTabsSlider from './VTabsSlider'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Colorable,\n  Proxyable,\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $refs: {\n    items: InstanceType<typeof VTabsBar>\n  }\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-tabs',\n\n  directives: {\n    Resize,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    alignWithTitle: Boolean,\n    backgroundColor: String,\n    centerActive: Boolean,\n    centered: Boolean,\n    fixedTabs: Boolean,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    iconsAndText: Boolean,\n    mobileBreakPoint: {\n      type: [Number, String],\n      default: 1264,\n    },\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    optional: Boolean,\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    right: Boolean,\n    showArrows: Boolean,\n    sliderColor: String,\n    sliderSize: {\n      type: [Number, String],\n      default: 2,\n    },\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      resizeTimeout: 0,\n      slider: {\n        height: null as null | number,\n        left: null as null | number,\n        right: null as null | number,\n        top: null as null | number,\n        width: null as null | number,\n      },\n      transitionTime: 300,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tabs--align-with-title': this.alignWithTitle,\n        'v-tabs--centered': this.centered,\n        'v-tabs--fixed-tabs': this.fixedTabs,\n        'v-tabs--grow': this.grow,\n        'v-tabs--icons-and-text': this.iconsAndText,\n        'v-tabs--right': this.right,\n        'v-tabs--vertical': this.vertical,\n        ...this.themeClasses,\n      }\n    },\n    isReversed (): boolean {\n      return this.$vuetify.rtl && this.vertical\n    },\n    sliderStyles (): object {\n      return {\n        height: convertToUnit(this.slider.height),\n        left: this.isReversed ? undefined : convertToUnit(this.slider.left),\n        right: this.isReversed ? convertToUnit(this.slider.right) : undefined,\n        top: this.vertical ? convertToUnit(this.slider.top) : undefined,\n        transition: this.slider.left != null ? null : 'none',\n        width: convertToUnit(this.slider.width),\n      }\n    },\n    computedColor (): string {\n      if (this.color) return this.color\n      else if (this.isDark && !this.appIsDark) return 'white'\n      else return 'primary'\n    },\n  },\n\n  watch: {\n    alignWithTitle: 'callSlider',\n    centered: 'callSlider',\n    centerActive: 'callSlider',\n    fixedTabs: 'callSlider',\n    grow: 'callSlider',\n    right: 'callSlider',\n    showArrows: 'callSlider',\n    vertical: 'callSlider',\n    '$vuetify.application.left': 'onResize',\n    '$vuetify.application.right': 'onResize',\n    '$vuetify.rtl': 'onResize',\n  },\n\n  mounted () {\n    this.$nextTick(() => {\n      window.setTimeout(this.callSlider, 30)\n    })\n  },\n\n  methods: {\n    callSlider () {\n      if (\n        this.hideSlider ||\n        !this.$refs.items ||\n        !this.$refs.items.selectedItems.length\n      ) {\n        this.slider.width = 0\n        return false\n      }\n\n      this.$nextTick(() => {\n        // Give screen time to paint\n        const activeTab = this.$refs.items.selectedItems[0]\n        /* istanbul ignore if */\n        if (!activeTab || !activeTab.$el) {\n          this.slider.width = 0\n          this.slider.left = 0\n          return\n        }\n        const el = activeTab.$el as HTMLElement\n\n        this.slider = {\n          height: !this.vertical ? Number(this.sliderSize) : el.scrollHeight,\n          left: this.vertical ? 0 : el.offsetLeft,\n          right: this.vertical ? 0 : el.offsetLeft + el.offsetWidth,\n          top: el.offsetTop,\n          width: this.vertical ? Number(this.sliderSize) : el.scrollWidth,\n        }\n      })\n\n      return true\n    },\n    genBar (items: VNode[], slider: VNode | null) {\n      const data = {\n        style: {\n          height: convertToUnit(this.height),\n        },\n        props: {\n          activeClass: this.activeClass,\n          centerActive: this.centerActive,\n          dark: this.dark,\n          light: this.light,\n          mandatory: !this.optional,\n          mobileBreakPoint: this.mobileBreakPoint,\n          nextIcon: this.nextIcon,\n          prevIcon: this.prevIcon,\n          showArrows: this.showArrows,\n          value: this.internalValue,\n        },\n        on: {\n          'call:slider': this.callSlider,\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n        ref: 'items',\n      }\n\n      this.setTextColor(this.computedColor, data)\n      this.setBackgroundColor(this.backgroundColor, data)\n\n      return this.$createElement(VTabsBar, data, [\n        this.genSlider(slider),\n        items,\n      ])\n    },\n    genItems (items: VNode | null, item: VNode[]) {\n      // If user provides items\n      // opt to use theirs\n      if (items) return items\n\n      // If no tabs are provided\n      // render nothing\n      if (!item.length) return null\n\n      return this.$createElement(VTabsItems, {\n        props: {\n          value: this.internalValue,\n        },\n        on: {\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n      }, item)\n    },\n    genSlider (slider: VNode | null) {\n      if (this.hideSlider) return null\n\n      if (!slider) {\n        slider = this.$createElement(VTabsSlider, {\n          props: { color: this.sliderColor },\n        })\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-tabs-slider-wrapper',\n        style: this.sliderStyles,\n      }, [slider])\n    },\n    onResize () {\n      if (this._isDestroyed) return\n\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.callSlider, 0)\n    },\n    parseNodes () {\n      let items = null\n      let slider = null\n      const item = []\n      const tab = []\n      const slot = this.$slots.default || []\n      const length = slot.length\n\n      for (let i = 0; i < length; i++) {\n        const vnode = slot[i]\n\n        if (vnode.componentOptions) {\n          switch (vnode.componentOptions.Ctor.options.name) {\n            case 'v-tabs-slider': slider = vnode\n              break\n            case 'v-tabs-items': items = vnode\n              break\n            case 'v-tab-item': item.push(vnode)\n              break\n            // case 'v-tab' - intentionally omitted\n            default: tab.push(vnode)\n          }\n        } else {\n          tab.push(vnode)\n        }\n      }\n\n      /**\n       * tab: array of `v-tab`\n       * slider: single `v-tabs-slider`\n       * items: single `v-tabs-items`\n       * item: array of `v-tab-item`\n       */\n      return { tab, slider, items, item }\n    },\n  },\n\n  render (h): VNode {\n    const { tab, slider, items, item } = this.parseNodes()\n\n    return h('div', {\n      staticClass: 'v-tabs',\n      class: this.classes,\n      directives: [{\n        name: 'resize',\n        modifiers: { quiet: true },\n        value: this.onResize,\n      }],\n    }, [\n      this.genBar(tab, slider),\n      this.genItems(items, item),\n    ])\n  },\n})\n","// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Components\nimport VTab from './VTab'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport SSRBootable from '../../mixins/ssr-bootable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { Route } from 'vue-router'\nimport { VNode } from 'vue'\n\ntype VTabInstance = InstanceType<typeof VTab>\n\nexport default mixins(\n  BaseSlideGroup,\n  SSRBootable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n\n  provide () {\n    return {\n      tabsBar: this,\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange',\n  },\n\n  methods: {\n    callSlider () {\n      if (!this.isBooted) return\n\n      this.$emit('call:slider')\n    },\n    genContent () {\n      const render = BaseSlideGroup.options.methods.genContent.call(this)\n\n      render.data = render.data || {}\n      render.data.staticClass += ' v-tabs-bar__content'\n\n      return render\n    },\n    onRouteChange (val: Route, oldVal: Route) {\n      /* istanbul ignore next */\n      if (this.mandatory) return\n\n      const items = this.items as VTabInstance[]\n      const newPath = val.path\n      const oldPath = oldVal.path\n\n      let hasNew = false\n      let hasOld = false\n\n      for (const item of items) {\n        if (item.to === newPath) hasNew = true\n        else if (item.to === oldPath) hasOld = true\n\n        if (hasNew && hasOld) break\n      }\n\n      // If we have an old item and not a new one\n      // it's assumed that the user navigated to\n      // a path that is not present in the items\n      if (!hasNew && hasOld) this.internalValue = undefined\n    },\n  },\n\n  render (h): VNode {\n    const render = BaseSlideGroup.options.render.call(this, h)\n\n    render.data!.attrs = {\n      role: 'tablist',\n    }\n\n    return render\n  },\n})\n","// Extensions\nimport VWindow from '../VWindow/VWindow'\n\n// Types & Components\nimport { BaseItemGroup, GroupableInstance } from './../VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default VWindow.extend({\n  name: 'v-tabs-items',\n\n  props: {\n    mandatory: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VWindow.options.computed.classes.call(this),\n        'v-tabs-items': true,\n      }\n    },\n    isDark (): boolean {\n      return this.rootIsDark\n    },\n  },\n\n  methods: {\n    getValue (item: GroupableInstance, i: number) {\n      return item.id || BaseItemGroup.options.methods.getValue.call(this, item, i)\n    },\n  },\n})\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\n/* @vue/component */\nexport default mixins(Colorable).extend({\n  name: 'v-tabs-slider',\n\n  render (h): VNode {\n    return h('div', this.setBackgroundColor(this.color, {\n      staticClass: 'v-tabs-slider',\n    }))\n  },\n})\n","import VTabs from './VTabs'\nimport VTab from './VTab'\nimport VTabsItems from './VTabsItems'\nimport VTabItem from './VTabItem'\nimport VTabsSlider from './VTabsSlider'\n\nexport { VTabs, VTab, VTabItem, VTabsItems, VTabsSlider }\n\nexport default {\n  $_vuetify_subcomponents: {\n    VTabs,\n    VTab,\n    VTabsItems,\n    VTabItem,\n    VTabsSlider,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Loadable\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: { ripple },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    counterValue (): number {\n      return (this.internalValue || '').toString().length\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return (this.lazyValue != null &&\n        this.lazyValue.toString().length > 0) ||\n        this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined ||\n        this.fullWidth\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return this.isSolo || this.singleLine || this.fullWidth\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && (!this.isSingle || (!this.isLabelActive && !this.placeholder))\n    },\n    labelValue (): boolean {\n      return !this.isSingle &&\n        Boolean(this.isFocused || this.isLabelActive || this.placeholder)\n    },\n  },\n\n  watch: {\n    labelValue: 'setLabelWidth',\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused (val) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    this.autofocus && this.onFocus()\n    this.setLabelWidth()\n    this.setPrefixWidth()\n    this.setPrependWidth()\n    requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots['append']) {\n        slot.push(this.$slots['append'] as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      const icon = this.isDirty ? 'clear' : ''\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon(\n          icon,\n          this.clearableCallback\n        ),\n      ])\n    },\n    genCounter () {\n      if (this.counter === false || this.counter == null) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      return this.$createElement(VCounter, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          max,\n          value: this.counterValue,\n        },\n      })\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.disabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners['change'] // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: this.lazyValue,\n        },\n        attrs: {\n          ...this.attrs$,\n          autofocus: this.autofocus,\n          disabled: this.disabled,\n          id: this.computedId,\n          placeholder: this.placeholder,\n          readonly: this.readonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n      })\n    },\n    genMessages () {\n      if (this.hideDetails) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        VInput.options.methods.genMessages.call(this),\n        this.genCounter(),\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.disabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      if (document.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.enter) this.$emit('change', this.internalValue)\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined || !this.$refs.label) return\n\n      this.labelWidth = this.$refs.label.scrollWidth * 0.75 + 6\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n  },\n})\n","import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n","import VTextarea from './VTextarea'\n\nexport { VTextarea }\nexport default VTextarea\n","// Components\nimport VTimePickerTitle from './VTimePickerTitle'\nimport VTimePickerClock from './VTimePickerClock'\n\n// Mixins\nimport Picker from '../../mixins/picker'\nimport PickerButton from '../../mixins/picker-button'\n\n// Utils\nimport { createRange } from '../../util/helpers'\nimport pad from '../VDatePicker/util/pad'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst rangeHours24 = createRange(24)\nconst rangeHours12am = createRange(12)\nconst rangeHours12pm = rangeHours12am.map(v => v + 12)\nconst range60 = createRange(60)\nenum SelectingTimes {\n  Hour = 1,\n  Minute = 2,\n  Second = 3\n}\nconst selectingNames = { 1: 'hour', 2: 'minute', 3: 'second' }\nexport { SelectingTimes }\n\ntype Period = 'am' | 'pm'\ntype AllowFunction = (val: number) => boolean\n\nexport default mixins(\n  Picker,\n  PickerButton\n/* @vue/component */\n).extend({\n  name: 'v-time-picker',\n\n  props: {\n    allowedHours: {\n      type: [Function, Array],\n    } as PropValidator<AllowFunction | number[]>,\n    allowedMinutes: {\n      type: [Function, Array],\n    } as PropValidator<AllowFunction | number[]>,\n    allowedSeconds: {\n      type: [Function, Array],\n    } as PropValidator<AllowFunction | number[]>,\n    disabled: Boolean,\n    format: {\n      type: String,\n      default: 'ampm',\n      validator (val) {\n        return ['ampm', '24hr'].includes(val)\n      },\n    } as PropValidator<'ampm' | '24hr'>,\n    min: String,\n    max: String,\n    readonly: Boolean,\n    scrollable: Boolean,\n    useSeconds: Boolean,\n    value: null as any as PropValidator<any>,\n    ampmInTitle: Boolean,\n  },\n\n  data () {\n    return {\n      inputHour: null as number | null,\n      inputMinute: null as number | null,\n      inputSecond: null as number | null,\n      lazyInputHour: null as number | null,\n      lazyInputMinute: null as number | null,\n      lazyInputSecond: null as number | null,\n      period: 'am' as Period,\n      selecting: SelectingTimes.Hour,\n    }\n  },\n\n  computed: {\n    selectingHour: {\n      get (): boolean {\n        return this.selecting === SelectingTimes.Hour\n      },\n      set (v: boolean) {\n        this.selecting = SelectingTimes.Hour\n      },\n    },\n    selectingMinute: {\n      get (): boolean {\n        return this.selecting === SelectingTimes.Minute\n      },\n      set (v: boolean) {\n        this.selecting = SelectingTimes.Minute\n      },\n    },\n    selectingSecond: {\n      get (): boolean {\n        return this.selecting === SelectingTimes.Second\n      },\n      set (v: boolean) {\n        this.selecting = SelectingTimes.Second\n      },\n    },\n    isAllowedHourCb (): AllowFunction {\n      let cb: AllowFunction\n\n      if (this.allowedHours instanceof Array) {\n        cb = (val: number) => (this.allowedHours as number[]).includes(val)\n      } else {\n        cb = this.allowedHours\n      }\n\n      if (!this.min && !this.max) return cb\n\n      const minHour = this.min ? Number(this.min.split(':')[0]) : 0\n      const maxHour = this.max ? Number(this.max.split(':')[0]) : 23\n\n      return (val: number) => {\n        return val >= minHour * 1 &&\n          val <= maxHour * 1 &&\n          (!cb || cb(val))\n      }\n    },\n    isAllowedMinuteCb (): AllowFunction {\n      let cb: AllowFunction\n\n      const isHourAllowed = !this.isAllowedHourCb || this.inputHour === null || this.isAllowedHourCb(this.inputHour)\n      if (this.allowedMinutes instanceof Array) {\n        cb = (val: number) => (this.allowedMinutes as number[]).includes(val)\n      } else {\n        cb = this.allowedMinutes\n      }\n\n      if (!this.min && !this.max) {\n        return isHourAllowed ? cb : () => false\n      }\n\n      const [minHour, minMinute] = this.min ? this.min.split(':').map(Number) : [0, 0]\n      const [maxHour, maxMinute] = this.max ? this.max.split(':').map(Number) : [23, 59]\n      const minTime = minHour * 60 + minMinute * 1\n      const maxTime = maxHour * 60 + maxMinute * 1\n\n      return (val: number) => {\n        const time = 60 * this.inputHour! + val\n        return time >= minTime &&\n          time <= maxTime &&\n          isHourAllowed &&\n          (!cb || cb(val))\n      }\n    },\n    isAllowedSecondCb (): AllowFunction {\n      let cb: AllowFunction\n\n      const isHourAllowed = !this.isAllowedHourCb || this.inputHour === null || this.isAllowedHourCb(this.inputHour)\n      const isMinuteAllowed = isHourAllowed &&\n        (!this.isAllowedMinuteCb ||\n          this.inputMinute === null ||\n          this.isAllowedMinuteCb(this.inputMinute)\n        )\n\n      if (this.allowedSeconds instanceof Array) {\n        cb = (val: number) => (this.allowedSeconds as number[]).includes(val)\n      } else {\n        cb = this.allowedSeconds\n      }\n\n      if (!this.min && !this.max) {\n        return isMinuteAllowed ? cb : () => false\n      }\n\n      const [minHour, minMinute, minSecond] = this.min ? this.min.split(':').map(Number) : [0, 0, 0]\n      const [maxHour, maxMinute, maxSecond] = this.max ? this.max.split(':').map(Number) : [23, 59, 59]\n      const minTime = minHour * 3600 + minMinute * 60 + (minSecond || 0) * 1\n      const maxTime = maxHour * 3600 + maxMinute * 60 + (maxSecond || 0) * 1\n\n      return (val: number) => {\n        const time = 3600 * this.inputHour! + 60 * this.inputMinute! + val\n        return time >= minTime &&\n          time <= maxTime &&\n          isMinuteAllowed &&\n          (!cb || cb(val))\n      }\n    },\n    isAmPm (): boolean {\n      return this.format === 'ampm'\n    },\n  },\n\n  watch: {\n    value: 'setInputData',\n  },\n\n  mounted () {\n    this.setInputData(this.value)\n    this.$on('update:period', this.setPeriod)\n  },\n\n  methods: {\n    genValue () {\n      if (this.inputHour != null && this.inputMinute != null && (!this.useSeconds || this.inputSecond != null)) {\n        return `${pad(this.inputHour)}:${pad(this.inputMinute)}` + (this.useSeconds ? `:${pad(this.inputSecond!)}` : '')\n      }\n\n      return null\n    },\n    emitValue () {\n      const value = this.genValue()\n      if (value !== null) this.$emit('input', value)\n    },\n    setPeriod (period: Period) {\n      this.period = period\n      if (this.inputHour != null) {\n        const newHour = this.inputHour! + (period === 'am' ? -12 : 12)\n        this.inputHour = this.firstAllowed('hour', newHour)\n        this.emitValue()\n      }\n    },\n    setInputData (value: string | null | Date) {\n      if (value == null || value === '') {\n        this.inputHour = null\n        this.inputMinute = null\n        this.inputSecond = null\n      } else if (value instanceof Date) {\n        this.inputHour = value.getHours()\n        this.inputMinute = value.getMinutes()\n        this.inputSecond = value.getSeconds()\n      } else {\n        const [, hour, minute, , second, period] = value.trim().toLowerCase().match(/^(\\d+):(\\d+)(:(\\d+))?([ap]m)?$/) || new Array(6)\n\n        this.inputHour = period ? this.convert12to24(parseInt(hour, 10), period as Period) : parseInt(hour, 10)\n        this.inputMinute = parseInt(minute, 10)\n        this.inputSecond = parseInt(second || 0, 10)\n      }\n\n      this.period = (this.inputHour == null || this.inputHour < 12) ? 'am' : 'pm'\n    },\n    convert24to12 (hour: number) {\n      return hour ? ((hour - 1) % 12 + 1) : 12\n    },\n    convert12to24 (hour: number, period: Period) {\n      return hour % 12 + (period === 'pm' ? 12 : 0)\n    },\n    onInput (value: number) {\n      if (this.selecting === SelectingTimes.Hour) {\n        this.inputHour = this.isAmPm ? this.convert12to24(value, this.period) : value\n      } else if (this.selecting === SelectingTimes.Minute) {\n        this.inputMinute = value\n      } else {\n        this.inputSecond = value\n      }\n      this.emitValue()\n    },\n    onChange (value: number) {\n      this.$emit(`click:${selectingNames[this.selecting]}`, value)\n\n      const emitChange = this.selecting === (this.useSeconds ? SelectingTimes.Second : SelectingTimes.Minute)\n\n      if (this.selecting === SelectingTimes.Hour) {\n        this.selecting = SelectingTimes.Minute\n      } else if (this.useSeconds && this.selecting === SelectingTimes.Minute) {\n        this.selecting = SelectingTimes.Second\n      }\n\n      if (this.inputHour === this.lazyInputHour &&\n        this.inputMinute === this.lazyInputMinute &&\n        (!this.useSeconds || this.inputSecond === this.lazyInputSecond)\n      ) return\n\n      const time = this.genValue()\n      if (time === null) return\n\n      this.lazyInputHour = this.inputHour\n      this.lazyInputMinute = this.inputMinute\n      this.useSeconds && (this.lazyInputSecond = this.inputSecond)\n\n      emitChange && this.$emit('change', time)\n    },\n    firstAllowed (type: 'hour' | 'minute' | 'second', value: number) {\n      const allowedFn = type === 'hour' ? this.isAllowedHourCb : (type === 'minute' ? this.isAllowedMinuteCb : this.isAllowedSecondCb)\n      if (!allowedFn) return value\n\n      // TODO: clean up\n      const range = type === 'minute'\n        ? range60\n        : (type === 'second'\n          ? range60\n          : (this.isAmPm\n            ? (value < 12\n              ? rangeHours12am\n              : rangeHours12pm)\n            : rangeHours24))\n      const first = range.find(v => allowedFn((v + value) % range.length + range[0]))\n      return ((first || 0) + value) % range.length + range[0]\n    },\n    genClock () {\n      return this.$createElement(VTimePickerClock, {\n        props: {\n          allowedValues:\n            this.selecting === SelectingTimes.Hour\n              ? this.isAllowedHourCb\n              : (this.selecting === SelectingTimes.Minute\n                ? this.isAllowedMinuteCb\n                : this.isAllowedSecondCb),\n          color: this.color,\n          dark: this.dark,\n          disabled: this.disabled,\n          double: this.selecting === SelectingTimes.Hour && !this.isAmPm,\n          format: this.selecting === SelectingTimes.Hour\n            ? (this.isAmPm ? this.convert24to12 : (val: number) => val)\n            : (val: number) => pad(val, 2),\n          light: this.light,\n          max: this.selecting === SelectingTimes.Hour ? (this.isAmPm && this.period === 'am' ? 11 : 23) : 59,\n          min: this.selecting === SelectingTimes.Hour && this.isAmPm && this.period === 'pm' ? 12 : 0,\n          readonly: this.readonly,\n          scrollable: this.scrollable,\n          size: Number(this.width) - ((!this.fullWidth && this.landscape) ? 80 : 20),\n          step: this.selecting === SelectingTimes.Hour ? 1 : 5,\n          value: this.selecting === SelectingTimes.Hour\n            ? this.inputHour\n            : (this.selecting === SelectingTimes.Minute\n              ? this.inputMinute\n              : this.inputSecond),\n        },\n        on: {\n          input: this.onInput,\n          change: this.onChange,\n        },\n        ref: 'clock',\n      })\n    },\n    genClockAmPm () {\n      return this.$createElement('div', this.setTextColor(this.color || 'primary', {\n        staticClass: 'v-time-picker-clock__ampm',\n      }), [\n        this.genPickerButton('period', 'am', this.$vuetify.lang.t('$vuetify.timePicker.am'), this.disabled || this.readonly),\n        this.genPickerButton('period', 'pm', this.$vuetify.lang.t('$vuetify.timePicker.pm'), this.disabled || this.readonly),\n      ])\n    },\n    genPickerBody () {\n      return this.$createElement('div', {\n        staticClass: 'v-time-picker-clock__container',\n        key: this.selecting,\n      }, [\n        !this.ampmInTitle && this.isAmPm && this.genClockAmPm(),\n        this.genClock(),\n      ])\n    },\n    genPickerTitle () {\n      return this.$createElement(VTimePickerTitle, {\n        props: {\n          ampm: this.ampmInTitle && this.isAmPm,\n          disabled: this.disabled,\n          hour: this.inputHour,\n          minute: this.inputMinute,\n          second: this.inputSecond,\n          period: this.period,\n          readonly: this.readonly,\n          useSeconds: this.useSeconds,\n          selecting: this.selecting,\n        },\n        on: {\n          'update:selecting': (value: 1 | 2 | 3) => (this.selecting = value),\n          'update:period': this.setPeriod,\n        },\n        ref: 'title',\n        slot: 'title',\n      })\n    },\n  },\n\n  render (): VNode {\n    return this.genPicker('v-picker--time')\n  },\n})\n","// extracted by mini-css-extract-plugin","import './VTimePickerClock.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport Vue, { VNode } from 'vue'\n\ninterface Point {\n  x: number\n  y: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    clock: HTMLElement\n    innerClock: HTMLElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable,\n    typeof Themeable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable,\n  Themeable\n/* @vue/component */\n).extend({\n  name: 'v-time-picker-clock',\n\n  props: {\n    allowedValues: Function,\n    ampm: Boolean,\n    disabled: Boolean,\n    double: Boolean,\n    format: {\n      type: Function,\n      default: (val: string | number) => val,\n    },\n    max: {\n      type: Number,\n      required: true,\n    },\n    min: {\n      type: Number,\n      required: true,\n    },\n    scrollable: Boolean,\n    readonly: Boolean,\n    rotate: {\n      type: Number,\n      default: 0,\n    },\n    step: {\n      type: Number,\n      default: 1,\n    },\n    value: Number,\n  },\n\n  data () {\n    return {\n      inputValue: this.value,\n      isDragging: false,\n      valueOnMouseDown: null as number | null,\n      valueOnMouseUp: null as number | null,\n    }\n  },\n\n  computed: {\n    count (): number {\n      return this.max - this.min + 1\n    },\n    degreesPerUnit (): number {\n      return 360 / this.roundCount\n    },\n    degrees (): number {\n      return this.degreesPerUnit * Math.PI / 180\n    },\n    displayedValue (): number {\n      return this.value == null ? this.min : this.value\n    },\n    innerRadiusScale (): number {\n      return 0.62\n    },\n    roundCount (): number {\n      return this.double ? (this.count / 2) : this.count\n    },\n  },\n\n  watch: {\n    value (value) {\n      this.inputValue = value\n    },\n  },\n\n  methods: {\n    wheel (e: WheelEvent) {\n      e.preventDefault()\n\n      const delta = Math.sign(-e.deltaY || 1)\n      let value = this.displayedValue\n      do {\n        value = value + delta\n        value = (value - this.min + this.count) % this.count + this.min\n      } while (!this.isAllowed(value) && value !== this.displayedValue)\n\n      if (value !== this.displayedValue) {\n        this.update(value)\n      }\n    },\n    isInner (value: number) {\n      return this.double && (value - this.min >= this.roundCount)\n    },\n    handScale (value: number) {\n      return this.isInner(value) ? this.innerRadiusScale : 1\n    },\n    isAllowed (value: number) {\n      return !this.allowedValues || this.allowedValues(value)\n    },\n    genValues () {\n      const children: VNode[] = []\n\n      for (let value = this.min; value <= this.max; value = value + this.step) {\n        const color = value === this.value && (this.color || 'accent')\n        children.push(this.$createElement('span', this.setBackgroundColor(color, {\n          staticClass: 'v-time-picker-clock__item',\n          class: {\n            'v-time-picker-clock__item--active': value === this.displayedValue,\n            'v-time-picker-clock__item--disabled': this.disabled || !this.isAllowed(value),\n          },\n          style: this.getTransform(value),\n          domProps: { innerHTML: `<span>${this.format(value)}</span>` },\n        })))\n      }\n\n      return children\n    },\n    genHand () {\n      const scale = `scaleY(${this.handScale(this.displayedValue)})`\n      const angle = this.rotate + this.degreesPerUnit * (this.displayedValue - this.min)\n      const color = (this.value != null) && (this.color || 'accent')\n      return this.$createElement('div', this.setBackgroundColor(color, {\n        staticClass: 'v-time-picker-clock__hand',\n        class: {\n          'v-time-picker-clock__hand--inner': this.isInner(this.value),\n        },\n        style: {\n          transform: `rotate(${angle}deg) ${scale}`,\n        },\n      }))\n    },\n    getTransform (i: number) {\n      const { x, y } = this.getPosition(i)\n      return {\n        left: `${50 + x * 50}%`,\n        top: `${50 + y * 50}%`,\n      }\n    },\n    getPosition (value: number) {\n      const rotateRadians = this.rotate * Math.PI / 180\n      return {\n        x: Math.sin((value - this.min) * this.degrees + rotateRadians) * this.handScale(value),\n        y: -Math.cos((value - this.min) * this.degrees + rotateRadians) * this.handScale(value),\n      }\n    },\n    onMouseDown (e: MouseEvent | TouchEvent) {\n      e.preventDefault()\n\n      this.valueOnMouseDown = null\n      this.valueOnMouseUp = null\n      this.isDragging = true\n      this.onDragMove(e)\n    },\n    onMouseUp (e: MouseEvent | TouchEvent) {\n      e.stopPropagation()\n\n      this.isDragging = false\n      if (this.valueOnMouseUp !== null && this.isAllowed(this.valueOnMouseUp)) {\n        this.$emit('change', this.valueOnMouseUp)\n      }\n    },\n    onDragMove (e: MouseEvent | TouchEvent) {\n      e.preventDefault()\n      if (!this.isDragging && e.type !== 'click') return\n\n      const { width, top, left } = this.$refs.clock.getBoundingClientRect()\n      const { width: innerWidth } = this.$refs.innerClock.getBoundingClientRect()\n      const { clientX, clientY } = 'touches' in e ? e.touches[0] : e\n      const center = { x: width / 2, y: -width / 2 }\n      const coords = { x: clientX - left, y: top - clientY }\n      const handAngle = Math.round(this.angle(center, coords) - this.rotate + 360) % 360\n      const insideClick = this.double && this.euclidean(center, coords) < (innerWidth + innerWidth * this.innerRadiusScale) / 4\n      const value = (\n        Math.round(handAngle / this.degreesPerUnit) +\n        (insideClick ? this.roundCount : 0)\n      ) % this.count + this.min\n\n      // Necessary to fix edge case when selecting left part of the value(s) at 12 o'clock\n      let newValue: number\n      if (handAngle >= (360 - this.degreesPerUnit / 2)) {\n        newValue = insideClick ? this.max - this.roundCount + 1 : this.min\n      } else {\n        newValue = value\n      }\n\n      if (this.isAllowed(value)) {\n        if (this.valueOnMouseDown === null) {\n          this.valueOnMouseDown = newValue\n        }\n        this.valueOnMouseUp = newValue\n        this.update(newValue)\n      }\n    },\n    update (value: number) {\n      if (this.inputValue !== value) {\n        this.inputValue = value\n        this.$emit('input', value)\n      }\n    },\n    euclidean (p0: Point, p1: Point) {\n      const dx = p1.x - p0.x\n      const dy = p1.y - p0.y\n\n      return Math.sqrt(dx * dx + dy * dy)\n    },\n    angle (center: Point, p1: Point) {\n      const value = 2 * Math.atan2(p1.y - center.y - this.euclidean(center, p1), p1.x - center.x)\n      return Math.abs(value * 180 / Math.PI)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-time-picker-clock',\n      class: {\n        'v-time-picker-clock--indeterminate': this.value == null,\n        ...this.themeClasses,\n      },\n      on: (this.readonly || this.disabled) ? undefined : Object.assign({\n        mousedown: this.onMouseDown,\n        mouseup: this.onMouseUp,\n        mouseleave: (e: MouseEvent) => (this.isDragging && this.onMouseUp(e)),\n        touchstart: this.onMouseDown,\n        touchend: this.onMouseUp,\n        mousemove: this.onDragMove,\n        touchmove: this.onDragMove,\n      }, this.scrollable ? {\n        wheel: this.wheel,\n      } : {}),\n      ref: 'clock',\n    }\n\n    return h('div', data, [\n      h('div', {\n        staticClass: 'v-time-picker-clock__inner',\n        ref: 'innerClock',\n      }, [\n        this.genHand(),\n        this.genValues(),\n      ]),\n    ])\n  },\n})\n","// extracted by mini-css-extract-plugin","import './VTimePickerTitle.sass'\n\n// Mixins\nimport PickerButton from '../../mixins/picker-button'\n\n// Utils\nimport { pad } from '../VDatePicker/util'\nimport mixins from '../../util/mixins'\n\nimport { SelectingTimes } from './VTimePicker'\nimport { PropValidator } from 'vue/types/options'\nimport { VNode } from 'vue'\n\nexport default mixins(\n  PickerButton\n/* @vue/component */\n).extend({\n  name: 'v-time-picker-title',\n\n  props: {\n    ampm: Boolean,\n    disabled: Boolean,\n    hour: Number,\n    minute: Number,\n    second: Number,\n    period: {\n      type: String,\n      validator: period => period === 'am' || period === 'pm',\n    } as PropValidator<'am' | 'pm'>,\n    readonly: Boolean,\n    useSeconds: Boolean,\n    selecting: Number,\n  },\n\n  methods: {\n    genTime () {\n      let hour = this.hour\n      if (this.ampm) {\n        hour = hour ? ((hour - 1) % 12 + 1) : 12\n      }\n\n      const displayedHour = this.hour == null ? '--' : this.ampm ? String(hour) : pad(hour)\n      const displayedMinute = this.minute == null ? '--' : pad(this.minute)\n      const titleContent = [\n        this.genPickerButton('selecting', SelectingTimes.Hour, displayedHour, this.disabled),\n        this.$createElement('span', ':'),\n        this.genPickerButton('selecting', SelectingTimes.Minute, displayedMinute, this.disabled),\n      ]\n\n      if (this.useSeconds) {\n        const displayedSecond = this.second == null ? '--' : pad(this.second)\n        titleContent.push(this.$createElement('span', ':'))\n        titleContent.push(this.genPickerButton('selecting', SelectingTimes.Second, displayedSecond, this.disabled))\n      }\n      return this.$createElement('div', {\n        class: 'v-time-picker-title__time',\n      }, titleContent)\n    },\n    genAmPm () {\n      return this.$createElement('div', {\n        staticClass: 'v-time-picker-title__ampm',\n      }, [\n        this.genPickerButton('period', 'am', this.$vuetify.lang.t('$vuetify.timePicker.am'), this.disabled || this.readonly),\n        this.genPickerButton('period', 'pm', this.$vuetify.lang.t('$vuetify.timePicker.pm'), this.disabled || this.readonly),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genTime()]\n\n    this.ampm && children.push(this.genAmPm())\n\n    return h('div', {\n      staticClass: 'v-time-picker-title',\n    }, children)\n  },\n})\n","import VTimePicker from './VTimePicker'\nimport VTimePickerClock from './VTimePickerClock'\nimport VTimePickerTitle from './VTimePickerTitle'\n\nexport { VTimePicker, VTimePickerClock, VTimePickerTitle }\n\nexport default {\n  $_vuetify_subcomponents: {\n    VTimePicker,\n    VTimePickerClock,\n    VTimePickerTitle,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VTimeline.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default mixins(\n  Themeable\n/* @vue/component */\n).extend({\n  name: 'v-timeline',\n\n  provide (): object {\n    return { timeline: this }\n  },\n\n  props: {\n    alignTop: Boolean,\n    dense: Boolean,\n    reverse: Boolean,\n  },\n\n  computed: {\n    classes (): {} {\n      return {\n        'v-timeline--align-top': this.alignTop,\n        'v-timeline--dense': this.dense,\n        'v-timeline--reverse': this.reverse,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-timeline',\n      class: this.classes,\n    }, this.$slots.default)\n  },\n})\n","// Types\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { VNode, VNodeData } from 'vue'\n\n// Components\nimport VTimeline from './VTimeline'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport Colorable from '../../mixins/colorable'\n\nconst baseMixins = mixins(\n  Colorable,\n  Themeable\n/* @vue/component */\n)\n\ntype VTimelineInstance = InstanceType<typeof VTimeline>\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  timeline: VTimelineInstance\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-timeline-item',\n\n  inject: ['timeline'],\n\n  props: {\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    fillDot: Boolean,\n    hideDot: Boolean,\n    icon: String,\n    iconColor: String,\n    large: Boolean,\n    left: Boolean,\n    right: Boolean,\n    small: Boolean,\n  },\n\n  computed: {\n    hasIcon (): boolean {\n      return !!this.icon || !!this.$slots.icon\n    },\n  },\n\n  methods: {\n    genBody () {\n      return this.$createElement('div', {\n        staticClass: 'v-timeline-item__body',\n      }, this.$slots.default)\n    },\n    genIcon (): VNode | VNode[] {\n      if (this.$slots.icon) {\n        return this.$slots.icon\n      }\n\n      return this.$createElement(VIcon, {\n        props: {\n          color: this.iconColor,\n          dark: !this.theme.isDark,\n          small: this.small,\n        },\n      }, this.icon)\n    },\n    genInnerDot () {\n      const data: VNodeData = this.setBackgroundColor(this.color)\n\n      return this.$createElement('div', {\n        staticClass: 'v-timeline-item__inner-dot',\n        ...data,\n      }, [this.hasIcon && this.genIcon()])\n    },\n    genDot () {\n      return this.$createElement('div', {\n        staticClass: 'v-timeline-item__dot',\n        class: {\n          'v-timeline-item__dot--small': this.small,\n          'v-timeline-item__dot--large': this.large,\n        },\n      }, [this.genInnerDot()])\n    },\n    genDivider () {\n      const children = []\n\n      if (!this.hideDot) children.push(this.genDot())\n\n      return this.$createElement('div', {\n        staticClass: 'v-timeline-item__divider',\n      }, children)\n    },\n    genOpposite () {\n      return this.$createElement('div', {\n        staticClass: 'v-timeline-item__opposite',\n      }, this.$slots.opposite)\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genBody(),\n      this.genDivider(),\n    ]\n\n    if (this.$slots.opposite) children.push(this.genOpposite())\n\n    return h('div', {\n      staticClass: 'v-timeline-item',\n      class: {\n        'v-timeline-item--fill-dot': this.fillDot,\n        'v-timeline-item--before': this.timeline.reverse ? this.right : this.left,\n        'v-timeline-item--after': this.timeline.reverse ? this.left : this.right,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n","import VTimeline from './VTimeline'\nimport VTimelineItem from './VTimelineItem'\n\nexport { VTimeline, VTimelineItem }\n\nexport default {\n  $_vuetify_subcomponents: {\n    VTimeline,\n    VTimelineItem,\n  },\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VToolbar.sass'\n\n// Extensions\nimport VSheet from '../VSheet/VSheet'\n\n// Components\nimport VImg, { srcObject } from '../VImg/VImg'\n\n// Utilities\nimport { convertToUnit, getSlot } from '../../util/helpers'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VSheet.extend({\n  name: 'v-toolbar',\n\n  props: {\n    absolute: Boolean,\n    bottom: Boolean,\n    collapse: Boolean,\n    dense: Boolean,\n    extended: Boolean,\n    extensionHeight: {\n      default: 48,\n      type: [Number, String],\n    },\n    flat: Boolean,\n    floating: Boolean,\n    prominent: Boolean,\n    short: Boolean,\n    src: {\n      type: [String, Object],\n      default: '',\n    } as PropValidator<string | srcObject>,\n    tag: {\n      type: String,\n      default: 'header',\n    },\n    tile: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    isExtended: false,\n  }),\n\n  computed: {\n    computedHeight (): number {\n      const height = this.computedContentHeight\n\n      if (!this.isExtended) return height\n\n      const extensionHeight = parseInt(this.extensionHeight)\n\n      return this.isCollapsed\n        ? height\n        : height + (!isNaN(extensionHeight) ? extensionHeight : 0)\n    },\n    computedContentHeight (): number {\n      if (this.height) return parseInt(this.height)\n      if (this.isProminent && this.dense) return 96\n      if (this.isProminent && this.short) return 112\n      if (this.isProminent) return 128\n      if (this.dense) return 48\n      if (this.short || this.$vuetify.breakpoint.smAndDown) return 56\n      return 64\n    },\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-toolbar': true,\n        'v-toolbar--absolute': this.absolute,\n        'v-toolbar--bottom': this.bottom,\n        'v-toolbar--collapse': this.collapse,\n        'v-toolbar--collapsed': this.isCollapsed,\n        'v-toolbar--dense': this.dense,\n        'v-toolbar--extended': this.isExtended,\n        'v-toolbar--flat': this.flat,\n        'v-toolbar--floating': this.floating,\n        'v-toolbar--prominent': this.isProminent,\n      }\n    },\n    isCollapsed (): boolean {\n      return this.collapse\n    },\n    isProminent (): boolean {\n      return this.prominent\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n        height: convertToUnit(this.computedHeight),\n      }\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['app', '<v-app-bar app>'],\n      ['manual-scroll', '<v-app-bar :value=\"false\">'],\n      ['clipped-left', '<v-app-bar clipped-left>'],\n      ['clipped-right', '<v-app-bar clipped-right>'],\n      ['inverted-scroll', '<v-app-bar inverted-scroll>'],\n      ['scroll-off-screen', '<v-app-bar scroll-off-screen>'],\n      ['scroll-target', '<v-app-bar scroll-target>'],\n      ['scroll-threshold', '<v-app-bar scroll-threshold>'],\n      ['card', '<v-app-bar flat>'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    genBackground () {\n      const props = {\n        height: convertToUnit(this.computedHeight),\n        src: this.src,\n      }\n\n      const image = this.$scopedSlots.img\n        ? this.$scopedSlots.img({ props })\n        : this.$createElement(VImg, { props })\n\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__image',\n      }, [image])\n    },\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__content',\n        style: {\n          height: convertToUnit(this.computedContentHeight),\n        },\n      }, getSlot(this))\n    },\n    genExtension () {\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__extension',\n        style: {\n          height: convertToUnit(this.extensionHeight),\n        },\n      }, getSlot(this, 'extension'))\n    },\n  },\n\n  render (h): VNode {\n    this.isExtended = this.extended || !!this.$scopedSlots.extension\n\n    const children = [this.genContent()]\n    const data = this.setBackgroundColor(this.color, {\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    })\n\n    if (this.isExtended) children.push(this.genExtension())\n    if (this.src || this.$scopedSlots.img) children.unshift(this.genBackground())\n\n    return h(this.tag, data, children)\n  },\n})\n","// Components\nimport VToolbar from './VToolbar'\n\n// Utilities\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VToolbarTitle = createSimpleFunctional('v-toolbar__title')\nconst VToolbarItems = createSimpleFunctional('v-toolbar__items')\n\nexport {\n  VToolbar,\n  VToolbarItems,\n  VToolbarTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VToolbar,\n    VToolbarItems,\n    VToolbarTitle,\n  },\n}\n","// extracted by mini-css-extract-plugin","import './VTooltip.sass'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Colorable from '../../mixins/colorable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Helpers\nimport { convertToUnit, keyCodes, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Colorable, Delayable, Dependent, Detachable, Menuable, Toggleable).extend({\n  name: 'v-tooltip',\n\n  props: {\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    disabled: Boolean,\n    fixed: {\n      type: Boolean,\n      default: true,\n    },\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    openOnHover: {\n      type: Boolean,\n      default: true,\n    },\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    transition: String,\n    zIndex: {\n      default: null,\n    },\n  },\n\n  data: () => ({\n    calculatedMinWidth: 0,\n    closeDependents: false,\n  }),\n\n  computed: {\n    calculatedLeft (): string {\n      const { activator, content } = this.dimensions\n      const unknown = !this.bottom && !this.left && !this.top && !this.right\n      const activatorLeft = this.attach !== false ? activator.offsetLeft : activator.left\n      let left = 0\n\n      if (this.top || this.bottom || unknown) {\n        left = (\n          activatorLeft +\n          (activator.width / 2) -\n          (content.width / 2)\n        )\n      } else if (this.left || this.right) {\n        left = (\n          activatorLeft +\n          (this.right ? activator.width : -content.width) +\n          (this.right ? 10 : -10)\n        )\n      }\n\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return `${this.calcXOverflow(left, this.dimensions.content.width)}px`\n    },\n    calculatedTop (): string {\n      const { activator, content } = this.dimensions\n      const activatorTop = this.attach !== false ? activator.offsetTop : activator.top\n      let top = 0\n\n      if (this.top || this.bottom) {\n        top = (\n          activatorTop +\n          (this.bottom ? activator.height : -content.height) +\n          (this.bottom ? 10 : -10)\n        )\n      } else if (this.left || this.right) {\n        top = (\n          activatorTop +\n          (activator.height / 2) -\n          (content.height / 2)\n        )\n      }\n\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return `${this.calcYOverflow(top + this.pageYOffset)}px`\n    },\n    classes (): object {\n      return {\n        'v-tooltip--top': this.top,\n        'v-tooltip--right': this.right,\n        'v-tooltip--bottom': this.bottom,\n        'v-tooltip--left': this.left,\n        'v-tooltip--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      }\n    },\n    computedTransition (): string {\n      if (this.transition) return this.transition\n\n      return this.isActive ? 'scale-transition' : 'fade-transition'\n    },\n    offsetY (): boolean {\n      return this.top || this.bottom\n    },\n    offsetX (): boolean {\n      return this.left || this.right\n    },\n    styles (): object {\n      return {\n        left: this.calculatedLeft,\n        maxWidth: convertToUnit(this.maxWidth),\n        minWidth: convertToUnit(this.minWidth),\n        opacity: this.isActive ? 0.9 : 0,\n        top: this.calculatedTop,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.value && this.callActivate()\n    })\n  },\n\n  mounted () {\n    if (getSlotType(this, 'activator', true) === 'v-slot') {\n      consoleError(`v-tooltip's activator slot must be bound, try '<template #activator=\"data\"><v-btn v-on=\"data.on>'`, this)\n    }\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(this.startTransition)\n    },\n    deactivate () {\n      this.runDelay('close')\n    },\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      listeners.focus = (e: Event) => {\n        this.getActivator(e)\n        this.runDelay('open')\n      }\n      listeners.blur = (e: Event) => {\n        this.getActivator(e)\n        this.runDelay('close')\n      }\n      listeners.keydown = (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.esc) {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      }\n\n      return listeners\n    },\n  },\n\n  render (h): VNode {\n    const tooltip = h('div', this.setBackgroundColor(this.color, {\n      staticClass: 'v-tooltip__content',\n      class: {\n        [this.contentClass]: true,\n        menuable__content__active: this.isActive,\n        'v-tooltip__content--fixed': this.activatorFixed,\n      },\n      style: this.styles,\n      attrs: this.getScopeIdAttrs(),\n      directives: [{\n        name: 'show',\n        value: this.isContentActive,\n      }],\n      ref: 'content',\n    }), this.showLazyContent(this.getContentSlot()))\n\n    return h(this.tag, {\n      staticClass: 'v-tooltip',\n      class: this.classes,\n    }, [\n      h('transition', {\n        props: {\n          name: this.computedTransition,\n        },\n      }, [tooltip]),\n      this.genActivator(),\n    ])\n  },\n})\n","import VTooltip from './VTooltip'\n\nexport { VTooltip }\nexport default VTooltip\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  FilterTreeItemFunction,\n  filterTreeItem,\n} from './util/filterTreeItems'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    dense: Boolean,\n    filter: Function as PropValidator<FilterTreeItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    selectionType: {\n      type: String,\n      default: 'leaf',\n      validator: (v: string) => ['leaf', 'independent'].includes(v),\n    } as PropValidator<'leaf' | 'independent'>,\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    this.buildTree(this.items)\n    this.value.forEach(key => this.updateSelected(key, true))\n    this.active.forEach(key => this.updateActive(key, true))\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren, [])\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected\n          node.isIndeterminate = this.nodes[parent].isIndeterminate\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = !children.length ? node : this.calculateState(node, this.nodes)\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: NodeState, state: Record<string | number, NodeState>) {\n      const counts = node.children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n        return counts\n      }, [0, 0])\n\n      node.isSelected = !!node.children.length && counts[0] === node.children.length\n      node.isIndeterminate = !node.isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return node\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        const descendants = [key, ...this.getDescendants(key)]\n        descendants.forEach(descendant => {\n          this.nodes[descendant].isSelected = isSelected\n          this.nodes[descendant].isIndeterminate = false\n          changed.set(descendant, isSelected)\n        })\n\n        const parents = this.getParents(key)\n        parents.forEach(parent => {\n          this.nodes[parent] = this.calculateState(this.nodes[parent], this.nodes)\n          changed.set(parent, this.nodes[parent].isSelected)\n        })\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.map(VTreeviewNode.options.methods.genChild.bind(this))\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\nimport VTreeviewNode from './VTreeviewNode'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath } from '../../util/helpers'\nimport { PropValidator } from 'vue/types/options'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropValidator<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    item: {\n      type: Object,\n      default: () => null,\n    },\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): string {\n      return getObjectValueByPath(this.item, this.itemDisabled)\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      return getObjectValueByPath(this.item, this.itemChildren)\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genContent () {\n      const children = [\n        this.$scopedSlots.prepend && this.$scopedSlots.prepend(this.scopedProps),\n        this.genLabel(),\n        this.$scopedSlots.append && this.$scopedSlots.append(this.scopedProps),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected ? this.selectedColor : undefined,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genNode (): VNode {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n      if (this.hasChildren) children.unshift(this.genToggle())\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.disabled) return\n\n            if (this.openOnClick && this.hasChildren) {\n              this.open()\n            } else if (this.activatable) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any): VNode {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper (): any {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(this.genChild)]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n        'v-treeview-node--excluded': this.treeview.isExcluded(this.key),\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n","import VTreeview from './VTreeview'\nimport VTreeviewNode from './VTreeviewNode'\n\nexport { VTreeview, VTreeviewNode }\n\nexport default {\n  $_vuetify_subcomponents: {\n    VTreeview,\n    VTreeviewNode,\n  },\n}\n","import { getObjectValueByPath } from '../../../util/helpers'\n\nexport type FilterTreeItemFunction = (item: object, search: string, textKey: string) => boolean\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: FilterTreeItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VWindow.sass'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Types\nimport { VNode, VNodeDirective } from 'vue/types/vnode'\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-window',\n\n  provide (): object {\n    return {\n      windowGroup: this,\n    }\n  },\n\n  directives: { Touch },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-window-item--active',\n    },\n    continuous: Boolean,\n    mandatory: {\n      type: Boolean,\n      default: true,\n    },\n    nextIcon: {\n      type: [Boolean, String],\n      default: '$next',\n    },\n    prevIcon: {\n      type: [Boolean, String],\n      default: '$prev',\n    },\n    reverse: {\n      type: Boolean,\n      default: undefined,\n    },\n    showArrows: Boolean,\n    showArrowsOnHover: Boolean,\n    touch: Object,\n    touchless: Boolean,\n    value: {\n      required: false,\n    },\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      changedByDelimiters: false,\n      internalHeight: undefined as undefined | string, // This can be fixed by child class.\n      transitionHeight: undefined as undefined | string, // Intermediate height during transition.\n      transitionCount: 0, // Number of windows in transition state.\n      isBooted: false,\n      isReverse: false,\n    }\n  },\n\n  computed: {\n    isActive (): boolean {\n      return this.transitionCount > 0\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-window--show-arrows-on-hover': this.showArrowsOnHover,\n      }\n    },\n    computedTransition (): string {\n      if (!this.isBooted) return ''\n\n      const axis = this.vertical ? 'y' : 'x'\n      const direction = this.internalReverse ? '-reverse' : ''\n\n      return `v-window-${axis}${direction}-transition`\n    },\n    hasActiveItems (): boolean {\n      return Boolean(\n        this.items.find(item => !item.disabled)\n      )\n    },\n    hasNext (): boolean {\n      return this.continuous || this.internalIndex < this.items.length - 1\n    },\n    hasPrev (): boolean {\n      return this.continuous || this.internalIndex > 0\n    },\n    internalIndex (): number {\n      return this.items.findIndex((item, i) => {\n        return this.internalValue === this.getValue(item, i)\n      })\n    },\n    internalReverse (): boolean {\n      if (this.reverse !== undefined) return this.reverse\n\n      return this.isReverse\n    },\n  },\n\n  watch: {\n    internalIndex: 'updateReverse',\n  },\n\n  mounted () {\n    window.requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    genContainer (): VNode {\n      const children = [this.$slots.default]\n\n      if (this.showArrows) {\n        children.push(this.genControlIcons())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-window__container',\n        class: {\n          'v-window__container--is-active': this.isActive,\n        },\n        style: {\n          height: this.internalHeight || this.transitionHeight,\n        },\n      }, children)\n    },\n    genIcon (\n      direction: 'prev' | 'next',\n      icon: string,\n      fn: () => void\n    ) {\n      return this.$createElement('div', {\n        staticClass: `v-window__${direction}`,\n      }, [\n        this.$createElement(VBtn, {\n          props: { icon: true },\n          attrs: {\n            'aria-label': this.$vuetify.lang.t(`$vuetify.carousel.${direction}`),\n          },\n          on: {\n            click: () => {\n              this.changedByDelimiters = true\n              fn()\n            },\n          },\n        }, [\n          this.$createElement(VIcon, {\n            props: { large: true },\n          }, icon),\n        ]),\n      ])\n    },\n    genControlIcons () {\n      const icons = []\n\n      const prevIcon = this.$vuetify.rtl\n        ? this.nextIcon\n        : this.prevIcon\n\n      /* istanbul ignore else */\n      if (\n        this.hasPrev &&\n        prevIcon &&\n        typeof prevIcon === 'string'\n      ) {\n        const icon = this.genIcon('prev', prevIcon, this.prev)\n        icon && icons.push(icon)\n      }\n\n      const nextIcon = this.$vuetify.rtl\n        ? this.prevIcon\n        : this.nextIcon\n\n      /* istanbul ignore else */\n      if (\n        this.hasNext &&\n        nextIcon &&\n        typeof nextIcon === 'string'\n      ) {\n        const icon = this.genIcon('next', nextIcon, this.next)\n        icon && icons.push(icon)\n      }\n\n      return icons\n    },\n    getNextIndex (index: number): number {\n      const nextIndex = (index + 1) % this.items.length\n      const item = this.items[nextIndex]\n\n      if (item.disabled) return this.getNextIndex(nextIndex)\n\n      return nextIndex\n    },\n    getPrevIndex (index: number): number {\n      const prevIndex = (index + this.items.length - 1) % this.items.length\n      const item = this.items[prevIndex]\n\n      if (item.disabled) return this.getPrevIndex(prevIndex)\n\n      return prevIndex\n    },\n    next () {\n      this.isReverse = this.$vuetify.rtl\n\n      /* istanbul ignore if */\n      if (!this.hasActiveItems || !this.hasNext) return\n\n      const nextIndex = this.getNextIndex(this.internalIndex)\n      const item = this.items[nextIndex]\n\n      this.internalValue = this.getValue(item, nextIndex)\n    },\n    prev () {\n      this.isReverse = !this.$vuetify.rtl\n\n      /* istanbul ignore if */\n      if (!this.hasActiveItems || !this.hasPrev) return\n\n      const lastIndex = this.getPrevIndex(this.internalIndex)\n      const item = this.items[lastIndex]\n\n      this.internalValue = this.getValue(item, lastIndex)\n    },\n    updateReverse (val: number, oldVal: number) {\n      if (this.changedByDelimiters) {\n        this.changedByDelimiters = false\n        return\n      }\n\n      this.isReverse = val < oldVal\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-window',\n      class: this.classes,\n      directives: [] as VNodeDirective[],\n    }\n\n    if (!this.touchless) {\n      const value = this.touch || {\n        left: () => {\n          this.$vuetify.rtl ? this.prev() : this.next()\n        },\n        right: () => {\n          this.$vuetify.rtl ? this.next() : this.prev()\n        },\n        end: (e: TouchEvent) => {\n          e.stopPropagation()\n        },\n        start: (e: TouchEvent) => {\n          e.stopPropagation()\n        },\n      }\n\n      data.directives.push({\n        name: 'touch',\n        value,\n      })\n    }\n\n    return h('div', data, [this.genContainer()])\n  },\n})\n","// Components\nimport VWindow from './VWindow'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  GroupableFactory('windowGroup', 'v-window-item', 'v-window')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  windowGroup: InstanceType<typeof VWindow>\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-window-item',\n\n  directives: {\n    Touch,\n  },\n\n  props: {\n    disabled: Boolean,\n    reverseTransition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    transition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    value: {\n      required: false,\n    },\n  },\n\n  data () {\n    return {\n      isActive: false,\n      inTransition: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return this.groupClasses\n    },\n    computedTransition (): string | boolean {\n      if (!this.windowGroup.internalReverse) {\n        return typeof this.transition !== 'undefined'\n          ? this.transition || ''\n          : this.windowGroup.computedTransition\n      }\n\n      return typeof this.reverseTransition !== 'undefined'\n        ? this.reverseTransition || ''\n        : this.windowGroup.computedTransition\n    },\n  },\n\n  methods: {\n    genDefaultSlot () {\n      return this.$slots.default\n    },\n    genWindowItem () {\n      return this.$createElement('div', {\n        staticClass: 'v-window-item',\n        class: this.classes,\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n        on: this.$listeners,\n      }, this.showLazyContent(this.genDefaultSlot()))\n    },\n    onAfterTransition () {\n      if (!this.inTransition) {\n        return\n      }\n\n      // Finalize transition state.\n      this.inTransition = false\n      if (this.windowGroup.transitionCount > 0) {\n        this.windowGroup.transitionCount--\n\n        // Remove container height if we are out of transition.\n        if (this.windowGroup.transitionCount === 0) {\n          this.windowGroup.transitionHeight = undefined\n        }\n      }\n    },\n    onBeforeTransition () {\n      if (this.inTransition) {\n        return\n      }\n\n      // Initialize transition state here.\n      this.inTransition = true\n      if (this.windowGroup.transitionCount === 0) {\n        // Set initial height for height transition.\n        this.windowGroup.transitionHeight = convertToUnit(this.windowGroup.$el.clientHeight)\n      }\n      this.windowGroup.transitionCount++\n    },\n    onTransitionCancelled () {\n      this.onAfterTransition() // This should have the same path as normal transition end.\n    },\n    onEnter (el: HTMLElement) {\n      if (!this.inTransition) {\n        return\n      }\n\n      this.$nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!this.computedTransition || !this.inTransition) {\n          return\n        }\n\n        // Set transition target height.\n        this.windowGroup.transitionHeight = convertToUnit(el.clientHeight)\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('transition', {\n      props: {\n        name: this.computedTransition,\n      },\n      on: {\n        // Handlers for enter windows.\n        beforeEnter: this.onBeforeTransition,\n        afterEnter: this.onAfterTransition,\n        enterCancelled: this.onTransitionCancelled,\n\n        // Handlers for leave windows.\n        beforeLeave: this.onBeforeTransition,\n        afterLeave: this.onAfterTransition,\n        leaveCancelled: this.onTransitionCancelled,\n\n        // Enter handler for height transition.\n        enter: this.onEnter,\n      },\n    }, [this.genWindowItem()])\n  },\n})\n","import VWindow from './VWindow'\nimport VWindowItem from './VWindowItem'\n\nexport { VWindow, VWindowItem }\n\nexport default {\n  $_vuetify_subcomponents: {\n    VWindow,\n    VWindowItem,\n  },\n}\n","export * from './VApp'\nexport * from './VAppBar'\nexport * from './VAlert'\nexport * from './VAutocomplete'\nexport * from './VAvatar'\nexport * from './VBadge'\nexport * from './VBanner'\nexport * from './VBottomNavigation'\nexport * from './VBottomSheet'\nexport * from './VBreadcrumbs'\nexport * from './VBtn'\nexport * from './VBtnToggle'\nexport * from './VCalendar'\nexport * from './VCard'\nexport * from './VCarousel'\nexport * from './VCheckbox'\nexport * from './VChip'\nexport * from './VChipGroup'\nexport * from './VColorPicker'\nexport * from './VContent'\nexport * from './VCombobox'\nexport * from './VCounter'\nexport * from './VData'\nexport * from './VDataIterator'\nexport * from './VDataTable'\nexport * from './VDatePicker'\nexport * from './VDialog'\nexport * from './VDivider'\nexport * from './VExpansionPanel'\nexport * from './VFileInput'\nexport * from './VFooter'\nexport * from './VForm'\nexport * from './VGrid'\nexport * from './VHover'\nexport * from './VIcon'\nexport * from './VImg'\nexport * from './VInput'\nexport * from './VItemGroup'\nexport * from './VLabel'\nexport * from './VLazy'\nexport * from './VList'\nexport * from './VMenu'\nexport * from './VMessages'\nexport * from './VNavigationDrawer'\nexport * from './VOverflowBtn'\nexport * from './VOverlay'\nexport * from './VPagination'\nexport * from './VSheet'\nexport * from './VParallax'\nexport * from './VPicker'\nexport * from './VProgressCircular'\nexport * from './VProgressLinear'\nexport * from './VRadioGroup'\nexport * from './VRangeSlider'\nexport * from './VRating'\nexport * from './VResponsive'\nexport * from './VSelect'\nexport * from './VSkeletonLoader'\nexport * from './VSlider'\nexport * from './VSlideGroup'\nexport * from './VSnackbar'\nexport * from './VSparkline'\nexport * from './VSpeedDial'\nexport * from './VStepper'\nexport * from './VSubheader'\nexport * from './VSwitch'\nexport * from './VSystemBar'\nexport * from './VTabs'\nexport * from './VTextarea'\nexport * from './VTextField'\nexport * from './VTimeline'\nexport * from './VTimePicker'\nexport * from './VToolbar'\nexport * from './VTooltip'\nexport * from './VTreeview'\nexport * from './VWindow'\nexport * from './transitions'\n","import { upperFirst } from '../../util/helpers'\n\ninterface HTMLExpandElement extends HTMLElement {\n  _parent?: (Node & ParentNode & HTMLElement) | null\n  _initialStyle: {\n    transition: string\n    visibility: string | null\n    overflow: string | null\n    height?: string | null\n    width?: string | null\n  }\n}\n\nexport default function (expandedParentClass = '', x = false) {\n  const sizeProperty = x ? 'width' : 'height' as 'width' | 'height'\n  const offsetProperty = `offset${upperFirst(sizeProperty)}` as 'offsetHeight' | 'offsetWidth'\n\n  return {\n    beforeEnter (el: HTMLExpandElement) {\n      el._parent = el.parentNode as (Node & ParentNode & HTMLElement) | null\n      el._initialStyle = {\n        transition: el.style.transition,\n        visibility: el.style.visibility,\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n    },\n\n    enter (el: HTMLExpandElement) {\n      const initialStyle = el._initialStyle\n      const offset = `${el[offsetProperty]}px`\n\n      el.style.setProperty('transition', 'none', 'important')\n      el.style.visibility = 'hidden'\n      el.style.visibility = initialStyle.visibility\n      el.style.overflow = 'hidden'\n      el.style[sizeProperty] = '0'\n\n      void el.offsetHeight // force reflow\n\n      el.style.transition = initialStyle.transition\n\n      if (expandedParentClass && el._parent) {\n        el._parent.classList.add(expandedParentClass)\n      }\n\n      requestAnimationFrame(() => {\n        el.style[sizeProperty] = offset\n      })\n    },\n\n    afterEnter: resetStyles,\n    enterCancelled: resetStyles,\n\n    leave (el: HTMLExpandElement) {\n      el._initialStyle = {\n        transition: '',\n        visibility: '',\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n\n      el.style.overflow = 'hidden'\n      el.style[sizeProperty] = `${el[offsetProperty]}px`\n      void el.offsetHeight // force reflow\n\n      requestAnimationFrame(() => (el.style[sizeProperty] = '0'))\n    },\n\n    afterLeave,\n    leaveCancelled: afterLeave,\n  }\n\n  function afterLeave (el: HTMLExpandElement) {\n    if (expandedParentClass && el._parent) {\n      el._parent.classList.remove(expandedParentClass)\n    }\n    resetStyles(el)\n  }\n\n  function resetStyles (el: HTMLExpandElement) {\n    const size = el._initialStyle[sizeProperty]\n    el.style.overflow = el._initialStyle.overflow\n    if (size != null) el.style[sizeProperty] = size\n    delete el._initialStyle\n  }\n}\n","import {\n  createSimpleTransition,\n  createJavaScriptTransition,\n} from '../../util/helpers'\n\nimport ExpandTransitionGenerator from './expand-transition'\n\n// Component specific transitions\nexport const VCarouselTransition = createSimpleTransition('carousel-transition')\nexport const VCarouselReverseTransition = createSimpleTransition('carousel-reverse-transition')\nexport const VTabTransition = createSimpleTransition('tab-transition')\nexport const VTabReverseTransition = createSimpleTransition('tab-reverse-transition')\nexport const VMenuTransition = createSimpleTransition('menu-transition')\nexport const VFabTransition = createSimpleTransition('fab-transition', 'center center', 'out-in')\n\n// Generic transitions\nexport const VDialogTransition = createSimpleTransition('dialog-transition')\nexport const VDialogBottomTransition = createSimpleTransition('dialog-bottom-transition')\nexport const VFadeTransition = createSimpleTransition('fade-transition')\nexport const VScaleTransition = createSimpleTransition('scale-transition')\nexport const VScrollXTransition = createSimpleTransition('scroll-x-transition')\nexport const VScrollXReverseTransition = createSimpleTransition('scroll-x-reverse-transition')\nexport const VScrollYTransition = createSimpleTransition('scroll-y-transition')\nexport const VScrollYReverseTransition = createSimpleTransition('scroll-y-reverse-transition')\nexport const VSlideXTransition = createSimpleTransition('slide-x-transition')\nexport const VSlideXReverseTransition = createSimpleTransition('slide-x-reverse-transition')\nexport const VSlideYTransition = createSimpleTransition('slide-y-transition')\nexport const VSlideYReverseTransition = createSimpleTransition('slide-y-reverse-transition')\n\n// JavaScript transitions\nexport const VExpandTransition = createJavaScriptTransition('expand-transition', ExpandTransitionGenerator())\nexport const VExpandXTransition = createJavaScriptTransition('expand-x-transition', ExpandTransitionGenerator('', true))\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCarouselTransition,\n    VCarouselReverseTransition,\n    VDialogTransition,\n    VDialogBottomTransition,\n    VFabTransition,\n    VFadeTransition,\n    VMenuTransition,\n    VScaleTransition,\n    VScrollXTransition,\n    VScrollXReverseTransition,\n    VScrollYTransition,\n    VScrollYReverseTransition,\n    VSlideXTransition,\n    VSlideXReverseTransition,\n    VSlideYTransition,\n    VSlideYReverseTransition,\n    VTabReverseTransition,\n    VTabTransition,\n    VExpandTransition,\n    VExpandXTransition,\n  },\n}\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ClickOutsideBindingArgs {\n  closeConditional?: (e: Event) => boolean\n  include?: () => HTMLElement[]\n}\n\ninterface ClickOutsideDirective extends VNodeDirective {\n  value?: (e: Event) => void\n  args?: ClickOutsideBindingArgs\n}\n\nfunction closeConditional () {\n  return false\n}\n\nfunction directive (e: PointerEvent, el: HTMLElement, binding: ClickOutsideDirective): void {\n  // Args may not always be supplied\n  binding.args = binding.args || {}\n\n  // If no closeConditional was supplied assign a default\n  const isActive = (binding.args.closeConditional || closeConditional)\n\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || isActive(e) === false) return\n\n  // If click was triggered programmaticaly (domEl.click()) then\n  // it shouldn't be treated as click-outside\n  // Chrome/Firefox support isTrusted property\n  // IE/Edge support pointerType property (empty if not triggered\n  // by pointing device)\n  if (('isTrusted' in e && !e.isTrusted) ||\n    ('pointerType' in e && !e.pointerType)\n  ) return\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = (binding.args.include || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  !elements.some(el => el.contains(e.target as Node)) && setTimeout(() => {\n    isActive(e) && binding.value && binding.value(e)\n  }, 0)\n}\n\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  inserted (el: HTMLElement, binding: ClickOutsideDirective) {\n    const onClick = (e: Event) => directive(e as PointerEvent, el, binding)\n    // iOS does not recognize click events on document\n    // or body, this is the entire purpose of the v-app\n    // component and [data-app], stop removing this\n    const app = document.querySelector('[data-app]') ||\n      document.body // This is only for unit tests\n    app.addEventListener('click', onClick, true)\n    el._clickOutside = onClick\n  },\n\n  unbind (el: HTMLElement) {\n    if (!el._clickOutside) return\n\n    const app = document.querySelector('[data-app]') ||\n      document.body // This is only for unit tests\n    app && app.removeEventListener('click', el._clickOutside, true)\n    delete el._clickOutside\n  },\n}\n\nexport default ClickOutside\n","export { ClickOutside } from './click-outside'\nexport { Intersect } from './intersect'\nexport { Mutate } from './mutate'\nexport { Resize } from './resize'\nexport { Ripple } from './ripple'\nexport { Scroll } from './scroll'\nexport { Touch } from './touch'\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ObserveVNodeDirective extends VNodeDirective {\n  options?: IntersectionObserverInit\n}\n\nfunction inserted (el: HTMLElement, binding: ObserveVNodeDirective) {\n  const modifiers = binding.modifiers || /* istanbul ignore next */ {}\n  const value = binding.value\n  const isObject = typeof value === 'object'\n  const callback = isObject ? value.handler : value\n  const observer = new IntersectionObserver((\n    entries: IntersectionObserverEntry[] = [],\n    observer: IntersectionObserver\n  ) => {\n    /* istanbul ignore if */\n    if (!el._observe) return // Just in case, should never fire\n\n    // If is not quiet or has already been\n    // initted, invoke the user callback\n    if (\n      callback && (\n        !modifiers.quiet ||\n        el._observe.init\n      )\n    ) {\n      const isIntersecting = Boolean(entries.find(entry => entry.isIntersecting))\n\n      callback(entries, observer, isIntersecting)\n    }\n\n    // If has already been initted and\n    // has the once modifier, unbind\n    if (el._observe.init && modifiers.once) unbind(el)\n    // Otherwise, mark the observer as initted\n    else (el._observe.init = true)\n  }, value.options || {})\n\n  el._observe = { init: false, observer }\n\n  observer.observe(el)\n}\n\nfunction unbind (el: HTMLElement) {\n  /* istanbul ignore if */\n  if (!el._observe) return\n\n  el._observe.observer.unobserve(el)\n  delete el._observe\n}\n\nexport const Intersect = {\n  inserted,\n  unbind,\n}\n\nexport default Intersect\n","import { VNodeDirective } from 'vue'\n\ninterface MutateVNodeDirective extends VNodeDirective {\n  options?: MutationObserverInit\n}\n\nfunction inserted (el: HTMLElement, binding: MutateVNodeDirective) {\n  const modifiers = binding.modifiers || /* istanbul ignore next */ {}\n  const value = binding.value\n  const isObject = typeof value === 'object'\n  const callback = isObject ? value.handler : value\n  const { once, ...modifierKeys } = modifiers\n  const hasModifiers = Object.keys(modifierKeys).length > 0\n  const hasOptions = isObject && value.options\n\n  // Options take top priority\n  const options = hasOptions ? value.options : hasModifiers\n    // If we have modifiers, use only those provided\n    ? {\n      attributes: modifierKeys.attr,\n      childList: modifierKeys.child,\n      subtree: modifierKeys.sub,\n      characterData: modifierKeys.char,\n    }\n    // Defaults to everything on\n    : {\n      attributes: true,\n      childList: true,\n      subtree: true,\n      characterData: true,\n    }\n\n  const observer = new MutationObserver((\n    mutationsList: MutationRecord[],\n    observer: MutationObserver\n  ) => {\n    /* istanbul ignore if */\n    if (!el._mutate) return // Just in case, should never fire\n\n    callback(mutationsList, observer)\n\n    // If has the once modifier, unbind\n    once && unbind(el)\n  })\n\n  observer.observe(el, options)\n  el._mutate = { observer }\n}\n\nfunction unbind (el: HTMLElement) {\n  /* istanbul ignore if */\n  if (!el._mutate) return\n\n  el._mutate.observer.disconnect()\n  delete el._mutate\n}\n\nexport const Mutate = {\n  inserted,\n  unbind,\n}\n\nexport default Mutate\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ResizeVNodeDirective extends VNodeDirective {\n  value?: () => void\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: HTMLElement, binding: ResizeVNodeDirective) {\n  const callback = binding.value!\n  const options = binding.options || { passive: true }\n\n  window.addEventListener('resize', callback, options)\n  el._onResize = {\n    callback,\n    options,\n  }\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback()\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onResize) return\n\n  const { callback, options } = el._onResize\n  window.removeEventListener('resize', callback, options)\n  delete el._onResize\n}\n\nexport const Resize = {\n  inserted,\n  unbind,\n}\n\nexport default Resize\n","// extracted by mini-css-extract-plugin","// Styles\nimport './VRipple.sass'\n\nimport { VNode, VNodeDirective } from 'vue'\nimport { consoleWarn } from '../../util/console'\n\nfunction transform (el: HTMLElement, value: string) {\n  el.style['transform'] = value\n  el.style['webkitTransform'] = value\n}\n\nfunction opacity (el: HTMLElement, value: number) {\n  el.style['opacity'] = value.toString()\n}\n\nexport interface RippleOptions {\n  class?: string\n  center?: boolean\n  circle?: boolean\n}\n\nfunction isTouchEvent (e: MouseEvent | TouchEvent): e is TouchEvent {\n  return e.constructor.name === 'TouchEvent'\n}\n\nconst calculate = (e: MouseEvent | TouchEvent, el: HTMLElement, value: RippleOptions = {}) => {\n  const offset = el.getBoundingClientRect()\n  const target = isTouchEvent(e) ? e.touches[e.touches.length - 1] : e\n  const localX = target.clientX - offset.left\n  const localY = target.clientY - offset.top\n\n  let radius = 0\n  let scale = 0.3\n  if (el._ripple && el._ripple.circle) {\n    scale = 0.15\n    radius = el.clientWidth / 2\n    radius = value.center ? radius : radius + Math.sqrt((localX - radius) ** 2 + (localY - radius) ** 2) / 4\n  } else {\n    radius = Math.sqrt(el.clientWidth ** 2 + el.clientHeight ** 2) / 2\n  }\n\n  const centerX = `${(el.clientWidth - (radius * 2)) / 2}px`\n  const centerY = `${(el.clientHeight - (radius * 2)) / 2}px`\n\n  const x = value.center ? centerX : `${localX - radius}px`\n  const y = value.center ? centerY : `${localY - radius}px`\n\n  return { radius, scale, x, y, centerX, centerY }\n}\n\nconst ripples = {\n  /* eslint-disable max-statements */\n  show (e: MouseEvent | TouchEvent, el: HTMLElement, value: RippleOptions = {}) {\n    if (!el._ripple || !el._ripple.enabled) {\n      return\n    }\n\n    const container = document.createElement('span')\n    const animation = document.createElement('span')\n\n    container.appendChild(animation)\n    container.className = 'v-ripple__container'\n\n    if (value.class) {\n      container.className += ` ${value.class}`\n    }\n\n    const { radius, scale, x, y, centerX, centerY } = calculate(e, el, value)\n\n    const size = `${radius * 2}px`\n    animation.className = 'v-ripple__animation'\n    animation.style.width = size\n    animation.style.height = size\n\n    el.appendChild(container)\n\n    const computed = window.getComputedStyle(el)\n    if (computed && computed.position === 'static') {\n      el.style.position = 'relative'\n      el.dataset.previousPosition = 'static'\n    }\n\n    animation.classList.add('v-ripple__animation--enter')\n    animation.classList.add('v-ripple__animation--visible')\n    transform(animation, `translate(${x}, ${y}) scale3d(${scale},${scale},${scale})`)\n    opacity(animation, 0)\n    animation.dataset.activated = String(performance.now())\n\n    setTimeout(() => {\n      animation.classList.remove('v-ripple__animation--enter')\n      animation.classList.add('v-ripple__animation--in')\n      transform(animation, `translate(${centerX}, ${centerY}) scale3d(1,1,1)`)\n      opacity(animation, 0.25)\n    }, 0)\n  },\n\n  hide (el: HTMLElement | null) {\n    if (!el || !el._ripple || !el._ripple.enabled) return\n\n    const ripples = el.getElementsByClassName('v-ripple__animation')\n\n    if (ripples.length === 0) return\n    const animation = ripples[ripples.length - 1]\n\n    if (animation.dataset.isHiding) return\n    else animation.dataset.isHiding = 'true'\n\n    const diff = performance.now() - Number(animation.dataset.activated)\n    const delay = Math.max(250 - diff, 0)\n\n    setTimeout(() => {\n      animation.classList.remove('v-ripple__animation--in')\n      animation.classList.add('v-ripple__animation--out')\n      opacity(animation, 0)\n\n      setTimeout(() => {\n        const ripples = el.getElementsByClassName('v-ripple__animation')\n        if (ripples.length === 1 && el.dataset.previousPosition) {\n          el.style.position = el.dataset.previousPosition\n          delete el.dataset.previousPosition\n        }\n\n        animation.parentNode && el.removeChild(animation.parentNode)\n      }, 300)\n    }, delay)\n  },\n}\n\nfunction isRippleEnabled (value: any): value is true {\n  return typeof value === 'undefined' || !!value\n}\n\nfunction rippleShow (e: MouseEvent | TouchEvent) {\n  const value: RippleOptions = {}\n  const element = e.currentTarget as HTMLElement\n  if (!element || !element._ripple || element._ripple.touched) return\n  if (isTouchEvent(e)) {\n    element._ripple.touched = true\n    element._ripple.isTouch = true\n  } else {\n    // It's possible for touch events to fire\n    // as mouse events on Android/iOS, this\n    // will skip the event call if it has\n    // already been registered as touch\n    if (element._ripple.isTouch) return\n  }\n  value.center = element._ripple.centered\n  if (element._ripple.class) {\n    value.class = element._ripple.class\n  }\n  ripples.show(e, element, value)\n}\n\nfunction rippleHide (e: Event) {\n  const element = e.currentTarget as HTMLElement | null\n  if (!element) return\n\n  window.setTimeout(() => {\n    if (element._ripple) {\n      element._ripple.touched = false\n    }\n  })\n  ripples.hide(element)\n}\n\nfunction updateRipple (el: HTMLElement, binding: VNodeDirective, wasEnabled: boolean) {\n  const enabled = isRippleEnabled(binding.value)\n  if (!enabled) {\n    ripples.hide(el)\n  }\n  el._ripple = el._ripple || {}\n  el._ripple.enabled = enabled\n  const value = binding.value || {}\n  if (value.center) {\n    el._ripple.centered = true\n  }\n  if (value.class) {\n    el._ripple.class = binding.value.class\n  }\n  if (value.circle) {\n    el._ripple.circle = value.circle\n  }\n  if (enabled && !wasEnabled) {\n    el.addEventListener('touchstart', rippleShow, { passive: true })\n    el.addEventListener('touchend', rippleHide, { passive: true })\n    el.addEventListener('touchcancel', rippleHide)\n\n    el.addEventListener('mousedown', rippleShow)\n    el.addEventListener('mouseup', rippleHide)\n    el.addEventListener('mouseleave', rippleHide)\n    // Anchor tags can be dragged, causes other hides to fail - #1537\n    el.addEventListener('dragstart', rippleHide, { passive: true })\n  } else if (!enabled && wasEnabled) {\n    removeListeners(el)\n  }\n}\n\nfunction removeListeners (el: HTMLElement) {\n  el.removeEventListener('mousedown', rippleShow)\n  el.removeEventListener('touchstart', rippleHide)\n  el.removeEventListener('touchend', rippleHide)\n  el.removeEventListener('touchcancel', rippleHide)\n  el.removeEventListener('mouseup', rippleHide)\n  el.removeEventListener('mouseleave', rippleHide)\n  el.removeEventListener('dragstart', rippleHide)\n}\n\nfunction directive (el: HTMLElement, binding: VNodeDirective, node: VNode) {\n  updateRipple(el, binding, false)\n\n  if (process.env.NODE_ENV === 'development') {\n    // warn if an inline element is used, waiting for el to be in the DOM first\n    node.context && node.context.$nextTick(() => {\n      const computed = window.getComputedStyle(el)\n      if (computed && computed.display === 'inline') {\n        const context = (node as any).fnOptions ? [(node as any).fnOptions, node.context] : [node.componentInstance]\n        consoleWarn('v-ripple can only be used on block-level elements', ...context)\n      }\n    })\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  delete el._ripple\n  removeListeners(el)\n}\n\nfunction update (el: HTMLElement, binding: VNodeDirective) {\n  if (binding.value === binding.oldValue) {\n    return\n  }\n\n  const wasEnabled = isRippleEnabled(binding.oldValue)\n  updateRipple(el, binding, wasEnabled)\n}\n\nexport const Ripple = {\n  bind: directive,\n  unbind,\n  update,\n}\n\nexport default Ripple\n","import { VNodeDirective } from 'vue/types/vnode'\nimport { DirectiveOptions } from 'vue'\n\ninterface ScrollVNodeDirective extends VNodeDirective {\n  arg: string\n  value: EventListenerOrEventListenerObject\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: HTMLElement, binding: ScrollVNodeDirective) {\n  const callback = binding.value\n  const options = binding.options || { passive: true }\n  const target = binding.arg ? document.querySelector(binding.arg) : window\n  if (!target) return\n\n  target.addEventListener('scroll', callback, options)\n\n  el._onScroll = {\n    callback,\n    options,\n    target,\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onScroll) return\n\n  const { callback, options, target } = el._onScroll\n\n  target.removeEventListener('scroll', callback, options)\n  delete el._onScroll\n}\n\nexport const Scroll = {\n  inserted,\n  unbind,\n} as DirectiveOptions\n\nexport default Scroll\n","import { VNodeDirective, VNode } from 'vue/types/vnode'\nimport { keys } from '../../util/helpers'\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchHandlers {\n  start?: (wrapperEvent: TouchEvent & TouchWrapper) => void\n  end?: (wrapperEvent: TouchEvent & TouchWrapper) => void\n  move?: (wrapperEvent: TouchEvent & TouchWrapper) => void\n  left?: (wrapper: TouchWrapper) => void\n  right?: (wrapper: TouchWrapper) => void\n  up?: (wrapper: TouchWrapper) => void\n  down?: (wrapper: TouchWrapper) => void\n}\n\nexport interface TouchWrapper extends TouchHandlers {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  touchendX: number\n  touchendY: number\n  offsetX: number\n  offsetY: number\n}\n\ninterface TouchVNodeDirective extends VNodeDirective {\n  value?: TouchHandlers & {\n    parent?: boolean\n    options?: AddEventListenerOptions\n  }\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start &&\n    wrapper.start(Object.assign(event, wrapper))\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end &&\n    wrapper.end(Object.assign(event, wrapper))\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper))\n}\n\nfunction createHandlers (value: TouchHandlers): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const value = binding.value!\n  const target = value.parent ? el.parentElement : el\n  const options = value.options || { passive: true }\n\n  // Needed to pass unit tests\n  if (!target) return\n\n  const handlers = createHandlers(binding.value!)\n  target._touchHandlers = Object(target._touchHandlers)\n  target._touchHandlers![vnode.context!._uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName] as EventListener, options)\n  })\n}\n\nfunction unbind (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const target = binding.value!.parent ? el.parentElement : el\n  if (!target || !target._touchHandlers) return\n\n  const handlers = target._touchHandlers[vnode.context!._uid]\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n  delete target._touchHandlers[vnode.context!._uid]\n}\n\nexport const Touch = {\n  inserted,\n  unbind,\n}\n\nexport default Touch\n","import { install } from './install'\n\n// Types\nimport {\n  VuetifyService,\n  VuetifyServiceContract,\n} from 'vuetify/types/services'\nimport { VuetifyPreset } from 'vuetify/types/presets'\nimport Vue from 'vue'\n\n// Services\nimport * as services from './services'\n\n// Styles\nimport './styles/main.sass'\n\nexport default class Vuetify {\n  static install = install\n\n  static installed = false\n\n  static version = __VUETIFY_VERSION__\n\n  framework: Record<string, VuetifyServiceContract> = {}\n\n  installed: string[] = []\n\n  preset: Partial<VuetifyPreset> = {}\n\n  constructor (preset: Partial<VuetifyPreset> = {}) {\n    this.preset = preset\n\n    this.use(services.Application)\n    this.use(services.Breakpoint)\n    this.use(services.Goto)\n    this.use(services.Icons)\n    this.use(services.Lang)\n    this.use(services.Theme)\n  }\n\n  // Called on the new vuetify instance\n  // bootstrap in install beforeCreate\n  // Exposes ssrContext if available\n  init (root: Vue, ssrContext?: object) {\n    this.installed.forEach(property => {\n      const service = this.framework[property]\n      service.framework = this.framework\n\n      service.init(root, ssrContext)\n    })\n\n    // rtl is not installed and\n    // will never be called by\n    // the init process\n    this.framework.rtl = Boolean(this.preset.rtl) as any\n  }\n\n  // Instantiate a VuetifyService\n  use (Service: VuetifyService) {\n    const property = Service.property\n\n    if (this.installed.includes(property)) return\n\n    this.framework[property] = new Service(this.preset[property])\n    this.installed.push(property)\n  }\n}\n","import * as components from './components'\nimport * as directives from './directives'\nimport Vuetify from './framework'\n\nexport default Vuetify\n\nconst install = Vuetify.install\n\nVuetify.install = (Vue, args) => {\n  install.call(Vuetify, Vue, {\n    components,\n    directives,\n    ...args,\n  })\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(Vuetify)\n}\n","import OurVue, { VueConstructor } from 'vue'\nimport { VuetifyUseOptions } from 'types'\nimport { consoleError } from './util/console'\n\nexport function install (Vue: VueConstructor, args: VuetifyUseOptions = {}) {\n  if ((install as any).installed) return\n  (install as any).installed = true\n\n  if (OurVue !== Vue) {\n    consoleError('Multiple instances of Vue detected\\nSee https://github.com/vuetifyjs/vuetify/issues/4068\\n\\nIf you\\'re seeing \"$attrs is readonly\", it\\'s caused by this')\n  }\n\n  const components = args.components || {}\n  const directives = args.directives || {}\n\n  for (const name in directives) {\n    const directive = directives[name]\n\n    Vue.directive(name, directive)\n  }\n\n  (function registerComponents (components: any) {\n    if (components) {\n      for (const key in components) {\n        const component = components[key]\n        if (component && !registerComponents(component.$_vuetify_subcomponents)) {\n          Vue.component(key, component as typeof Vue)\n        }\n      }\n      return true\n    }\n    return false\n  })(components)\n\n  // Used to avoid multiple mixins being setup\n  // when in dev mode and hot module reload\n  // https://github.com/vuejs/vue/issues/5089#issuecomment-284260111\n  if (Vue.$_vuetify_installed) return\n  Vue.$_vuetify_installed = true\n\n  Vue.mixin({\n    beforeCreate () {\n      const options = this.$options as any\n\n      if (options.vuetify) {\n        options.vuetify.init(this, options.ssrContext)\n        this.$vuetify = Vue.observable(options.vuetify.framework)\n      } else {\n        this.$vuetify = (options.parent && options.parent.$vuetify) || this\n      }\n    },\n  })\n}\n","export default {\n  close: 'Close',\n  dataIterator: {\n    noResultsText: 'No matching records found',\n    loadingText: 'Loading items...',\n  },\n  dataTable: {\n    itemsPerPageText: 'Rows per page:',\n    ariaLabel: {\n      sortDescending: ': Sorted descending. Activate to remove sorting.',\n      sortAscending: ': Sorted ascending. Activate to sort descending.',\n      sortNone: ': Not sorted. Activate to sort ascending.',\n    },\n    sortBy: 'Sort by',\n  },\n  dataFooter: {\n    itemsPerPageText: 'Items per page:',\n    itemsPerPageAll: 'All',\n    nextPage: 'Next page',\n    prevPage: 'Previous page',\n    firstPage: 'First page',\n    lastPage: 'Last page',\n    pageText: '{0}-{1} of {2}',\n  },\n  datePicker: {\n    itemsSelected: '{0} selected',\n  },\n  noDataText: 'No data available',\n  carousel: {\n    prev: 'Previous visual',\n    next: 'Next visual',\n    ariaLabel: {\n      delimiter: 'Carousel slide {0} of {1}',\n    },\n  },\n  calendar: {\n    moreEvents: '{0} more',\n  },\n  fileInput: {\n    counter: '{0} files',\n    counterSize: '{0} files ({1} in total)',\n  },\n  timePicker: {\n    am: 'AM',\n    pm: 'PM',\n  },\n}\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    } as PropValidator<string | HTMLElement | VNode | Element | null>,\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave'],\n    listeners: {} as Record<string, (e: MouseEvent & KeyboardEvent) => void>,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Record<string, (e: MouseEvent & KeyboardEvent) => void> = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","import { factory as PositionableFactory } from '../positionable'\nimport { TargetProp } from 'vuetify/types/services/application'\n\n// Util\nimport mixins from '../../util/mixins'\n\nexport default function applicationable (value: TargetProp, events: string[] = []) {\n  /* @vue/component */\n  return mixins(PositionableFactory(['absolute', 'fixed'])).extend({\n    name: 'applicationable',\n\n    props: {\n      app: Boolean,\n    },\n\n    computed: {\n      applicationProperty (): TargetProp {\n        return value\n      },\n    },\n\n    watch: {\n      // If previous value was app\n      // reset the provided prop\n      app (x: boolean, prev: boolean) {\n        prev\n          ? this.removeApplication(true)\n          : this.callUpdate()\n      },\n      applicationProperty (newVal, oldVal) {\n        this.$vuetify.application.unregister(this._uid, oldVal)\n      },\n    },\n\n    activated () {\n      this.callUpdate()\n    },\n\n    created () {\n      for (let i = 0, length = events.length; i < length; i++) {\n        this.$watch(events[i], this.callUpdate)\n      }\n      this.callUpdate()\n    },\n\n    mounted () {\n      this.callUpdate()\n    },\n\n    deactivated () {\n      this.removeApplication()\n    },\n\n    destroyed () {\n      this.removeApplication()\n    },\n\n    methods: {\n      callUpdate () {\n        if (!this.app) return\n\n        this.$vuetify.application.register(\n          this._uid,\n          this.applicationProperty,\n          this.updateApplication()\n        )\n      },\n      removeApplication (force = false) {\n        if (!force && !this.app) return\n\n        this.$vuetify.application.unregister(\n          this._uid,\n          this.applicationProperty\n        )\n      },\n      updateApplication: () => 0,\n    },\n  })\n}\n","import Vue, { WatchHandler } from 'vue'\n\n/**\n * This mixin provides `attrs$` and `listeners$` to work around\n * vue bug https://github.com/vuejs/vue/issues/10115\n */\n\nfunction makeWatcher (property: string): ThisType<Vue> & WatchHandler<any> {\n  return function (this: Vue, val, oldVal) {\n    for (const attr in oldVal) {\n      if (!Object.prototype.hasOwnProperty.call(val, attr)) {\n        this.$delete(this.$data[property], attr)\n      }\n    }\n    for (const attr in val) {\n      this.$set(this.$data[property], attr, val[attr])\n    }\n  }\n}\n\nexport default Vue.extend({\n  data: () => ({\n    attrs$: {} as Dictionary<string>,\n    listeners$: {} as Dictionary<Function | Function[]>,\n  }),\n\n  created () {\n    // Work around unwanted re-renders: https://github.com/vuejs/vue/issues/10115\n    // Make sure to use `attrs$` instead of `$attrs` (confusing right?)\n    this.$watch('$attrs', makeWatcher('attrs$'), { immediate: true })\n    this.$watch('$listeners', makeWatcher('listeners$'), { immediate: true })\n  },\n})\n","// Utilities\nimport { removed } from '../../util/console'\n\n// Types\nimport Vue, { VNode } from 'vue'\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    eager: Boolean,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || this.eager || this.isActive\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this)\n    }\n  },\n\n  methods: {\n    showLazyContent (content?: VNode[]): VNode[] | undefined {\n      return this.hasContent ? content : undefined\n    },\n  },\n})\n","// Extensions\nimport { BaseItemGroup } from '../../components/VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'button-group',\n\n  provide (): object {\n    return {\n      btnToggle: this,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return BaseItemGroup.options.computed.classes.call(this)\n    },\n  },\n\n  methods: {\n    // Isn't being passed down through types\n    genData: BaseItemGroup.options.methods.genData,\n  },\n})\n","import Vue from 'vue'\nimport { VNodeData } from 'vue/types/vnode'\nimport { consoleError } from '../../util/console'\n\nfunction isCssColor (color?: string | false): boolean {\n  return !!color && !!color.match(/^(#|(rgb|hsl)a?\\()/)\n}\n\nexport default Vue.extend({\n  name: 'colorable',\n\n  props: {\n    color: String,\n  },\n\n  methods: {\n    setBackgroundColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          'background-color': `${color}`,\n          'border-color': `${color}`,\n        }\n      } else if (color) {\n        data.class = {\n          ...data.class,\n          [color]: true,\n        }\n      }\n\n      return data\n    },\n\n    setTextColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          color: `${color}`,\n          'caret-color': `${color}`,\n        }\n      } else if (color) {\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2) as (string | undefined)[]\n        data.class = {\n          ...data.class,\n          [colorName + '--text']: true,\n        }\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true\n        }\n      }\n      return data\n    },\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as any as PropValidator<typeof deepEqual>,\n  },\n})\n","import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport mixins from '../../util/mixins'\nimport { VOverlay } from '../../components/VOverlay'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n  overlay?: InstanceType<typeof VOverlay>\n}\n\ninterface DependentInstance extends Vue {\n  isActive?: boolean\n  isDependent?: boolean\n}\n\nfunction searchChildren (children: Vue[]): DependentInstance[] {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index] as DependentInstance\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\n/* @vue/component */\nexport default mixins<options>().extend({\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    },\n  },\n\n  methods: {\n    getOpenDependents (): any[] {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements (): HTMLElement[] {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements (): HTMLElement[] {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      if (this.overlay) result.push(this.overlay.$el as HTMLElement)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent: 'initDetach',\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.insertBefore(\n        this.$refs.content,\n        target.firstChild\n      )\n\n      this.hasDetached = true\n    },\n  },\n})\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'elevatable',\n\n  props: {\n    elevation: [Number, String],\n  },\n\n  computed: {\n    computedElevation (): string | number | undefined {\n      return this.elevation\n    },\n    elevationClasses (): Record<string, boolean> {\n      const elevation = this.computedElevation\n\n      if (elevation == null) return {}\n      if (isNaN(parseInt(elevation))) return {}\n      return { [`elevation-${this.elevation}`]: true }\n    },\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Mixins\nimport { Registrable, inject as RegistrableInject } from '../registrable'\n\n// Utilities\nimport { ExtractVue } from '../../util/mixins'\nimport { PropValidator } from 'vue/types/options'\nimport { VueConstructor } from 'vue'\n\n/* eslint-disable-next-line no-use-before-define */\nexport type Groupable<T extends string, C extends VueConstructor | null = null> = VueConstructor<ExtractVue<Registrable<T, C>> & {\n  activeClass: string\n  isActive: boolean\n  disabled: boolean\n  groupClasses: object\n  toggle (): void\n}>\n\nexport function factory<T extends string, C extends VueConstructor | null = null> (\n  namespace: T,\n  child?: string,\n  parent?: string\n): Groupable<T, C> {\n  // TODO: ts 3.4 broke directly returning this\n  const R = RegistrableInject<T, C>(namespace, child, parent).extend({\n    name: 'groupable',\n\n    props: {\n      activeClass: {\n        type: String,\n        default (): string | undefined {\n          if (!this[namespace]) return undefined\n\n          return this[namespace].activeClass\n        },\n      } as any as PropValidator<string>,\n      disabled: Boolean,\n    },\n\n    data () {\n      return {\n        isActive: false,\n      }\n    },\n\n    computed: {\n      groupClasses (): object {\n        if (!this.activeClass) return {}\n\n        return {\n          [this.activeClass]: this.isActive,\n        }\n      },\n    },\n\n    created () {\n      this[namespace] && (this[namespace] as any).register(this)\n    },\n\n    beforeDestroy () {\n      this[namespace] && (this[namespace] as any).unregister(this)\n    },\n\n    methods: {\n      toggle () {\n        this.$emit('change')\n      },\n    },\n  })\n\n  return R\n}\n\n/* eslint-disable-next-line no-redeclare */\nconst Groupable = factory('itemGroup')\n\nexport default Groupable\n","import Vue, { VNode } from 'vue'\nimport VProgressLinear from '../../components/VProgressLinear'\n\ninterface colorable extends Vue {\n  color?: string\n}\n\n/**\n * Loadable\n *\n * @mixin\n *\n * Used to add linear progress bar to components\n * Can use a default bar with a specific color\n * or designate a custom progress linear bar\n */\n/* @vue/component */\nexport default Vue.extend<colorable>().extend({\n  name: 'loadable',\n\n  props: {\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    loaderHeight: {\n      type: [Number, String],\n      default: 2,\n    },\n  },\n\n  methods: {\n    genProgress (): VNode | VNode[] | null {\n      if (this.loading === false) return null\n\n      return this.$slots.progress || this.$createElement(VProgressLinear, {\n        props: {\n          absolute: true,\n          color: (this.loading === true || this.loading === '')\n            ? (this.color || 'primary')\n            : this.loading,\n          height: this.loaderHeight,\n          indeterminate: true,\n        },\n      })\n    },\n  },\n})\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'localable',\n\n  props: {\n    locale: String,\n  },\n\n  computed: {\n    currentLocale (): string {\n      return this.locale || this.$vuetify.lang.current\n    },\n  },\n})\n","// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport type NumberOrNumberString = PropValidator<string | number | undefined>\n\nexport default Vue.extend({\n  name: 'measurable',\n\n  props: {\n    height: [Number, String] as NumberOrNumberString,\n    maxHeight: [Number, String] as NumberOrNumberString,\n    maxWidth: [Number, String] as NumberOrNumberString,\n    minHeight: [Number, String] as NumberOrNumberString,\n    minWidth: [Number, String] as NumberOrNumberString,\n    width: [Number, String] as NumberOrNumberString,\n  },\n\n  computed: {\n    measurableStyles (): object {\n      const styles: Record<string, string> = {}\n\n      const height = convertToUnit(this.height)\n      const minHeight = convertToUnit(this.minHeight)\n      const minWidth = convertToUnit(this.minWidth)\n      const maxHeight = convertToUnit(this.maxHeight)\n      const maxWidth = convertToUnit(this.maxWidth)\n      const width = convertToUnit(this.width)\n\n      if (height) styles.height = height\n      if (minHeight) styles.minHeight = minHeight\n      if (minWidth) styles.minWidth = minWidth\n      if (maxHeight) styles.maxHeight = maxHeight\n      if (maxWidth) styles.maxWidth = maxWidth\n      if (width) styles.width = width\n\n      return styles\n    },\n  },\n})\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {}\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        dimensions.content = this.measure(this.$refs.content)\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n","// Components\nimport VOverlay from '../../components/VOverlay'\n\n// Utilities\nimport {\n  keyCodes,\n  addOnceEventListener,\n  addPassiveEventListener,\n  getZIndex,\n} from '../../util/helpers'\n\n// Types\nimport Vue from 'vue'\n\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\ninterface Stackable extends Vue {\n  activeZIndex: number\n}\n\ninterface options {\n  absolute?: boolean\n  $refs: {\n    dialog?: HTMLElement\n    content?: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable & Stackable & options>().extend({\n  name: 'overlayable',\n\n  props: {\n    hideOverlay: Boolean,\n    overlayColor: String,\n    overlayOpacity: [Number, String],\n  },\n\n  data () {\n    return {\n      overlay: null as InstanceType<typeof VOverlay> | null,\n    }\n  },\n\n  watch: {\n    hideOverlay (value) {\n      if (!this.isActive) return\n\n      if (value) this.removeOverlay()\n      else this.genOverlay()\n    },\n  },\n\n  beforeDestroy () {\n    this.removeOverlay()\n  },\n\n  methods: {\n    createOverlay () {\n      const overlay = new VOverlay({\n        propsData: {\n          absolute: this.absolute,\n          value: false,\n          color: this.overlayColor,\n          opacity: this.overlayOpacity,\n        },\n      })\n\n      overlay.$mount()\n\n      const parent = this.absolute\n        ? this.$el.parentNode\n        : document.querySelector('[data-app]')\n\n      parent && parent.insertBefore(overlay.$el, parent.firstChild)\n\n      this.overlay = overlay\n    },\n    genOverlay () {\n      this.hideScroll()\n\n      if (this.hideOverlay) return\n\n      if (!this.overlay) this.createOverlay()\n\n      requestAnimationFrame(() => {\n        if (!this.overlay) return\n\n        if (this.activeZIndex !== undefined) {\n          this.overlay.zIndex = String(this.activeZIndex - 1)\n        } else if (this.$el) {\n          this.overlay.zIndex = getZIndex(this.$el)\n        }\n\n        this.overlay.value = true\n      })\n\n      return true\n    },\n    /** removeOverlay(false) will not restore the scollbar afterwards */\n    removeOverlay (showScroll = true) {\n      if (this.overlay) {\n        addOnceEventListener(this.overlay.$el, 'transitionend', () => {\n          if (\n            !this.overlay ||\n            !this.overlay.$el ||\n            !this.overlay.$el.parentNode ||\n            this.overlay.value\n          ) return\n\n          this.overlay.$el.parentNode.removeChild(this.overlay.$el)\n          this.overlay.$destroy()\n          this.overlay = null\n        })\n\n        this.overlay.value = false\n      }\n\n      showScroll && this.showScroll()\n    },\n    scrollListener (e: WheelEvent & KeyboardEvent) {\n      if (e.type === 'keydown') {\n        if (\n          ['INPUT', 'TEXTAREA', 'SELECT'].includes((e.target as Element).tagName) ||\n          // https://github.com/vuetifyjs/vuetify/issues/4715\n          (e.target as HTMLElement).isContentEditable\n        ) return\n\n        const up = [keyCodes.up, keyCodes.pageup]\n        const down = [keyCodes.down, keyCodes.pagedown]\n\n        if (up.includes(e.keyCode)) {\n          (e as any).deltaY = -1\n        } else if (down.includes(e.keyCode)) {\n          (e as any).deltaY = 1\n        } else {\n          return\n        }\n      }\n\n      if (e.target === this.overlay ||\n        (e.type !== 'keydown' && e.target === document.body) ||\n        this.checkPath(e)) e.preventDefault()\n    },\n    hasScrollbar (el?: Element) {\n      if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n      const style = window.getComputedStyle(el)\n      return ['auto', 'scroll'].includes(style.overflowY!) && el.scrollHeight > el.clientHeight\n    },\n    shouldScroll (el: Element, delta: number) {\n      if (el.scrollTop === 0 && delta < 0) return true\n      return el.scrollTop + el.clientHeight === el.scrollHeight && delta > 0\n    },\n    isInside (el: Element, parent: Element): boolean {\n      if (el === parent) {\n        return true\n      } else if (el === null || el === document.body) {\n        return false\n      } else {\n        return this.isInside(el.parentNode as Element, parent)\n      }\n    },\n    checkPath (e: WheelEvent) {\n      const path = e.path || this.composedPath(e)\n      const delta = e.deltaY\n\n      if (e.type === 'keydown' && path[0] === document.body) {\n        const dialog = this.$refs.dialog\n        // getSelection returns null in firefox in some edge cases, can be ignored\n        const selected = window.getSelection()!.anchorNode as Element\n        if (dialog && this.hasScrollbar(dialog) && this.isInside(selected, dialog)) {\n          return this.shouldScroll(dialog, delta)\n        }\n        return true\n      }\n\n      for (let index = 0; index < path.length; index++) {\n        const el = path[index]\n\n        if (el === document) return true\n        if (el === document.documentElement) return true\n        if (el === this.$refs.content) return true\n\n        if (this.hasScrollbar(el as Element)) return this.shouldScroll(el as Element, delta)\n      }\n\n      return true\n    },\n    /**\n     * Polyfill for Event.prototype.composedPath\n     */\n    composedPath (e: WheelEvent): EventTarget[] {\n      if (e.composedPath) return e.composedPath()\n\n      const path = []\n      let el = e.target as Element\n\n      while (el) {\n        path.push(el)\n\n        if (el.tagName === 'HTML') {\n          path.push(document)\n          path.push(window)\n\n          return path\n        }\n\n        el = el.parentElement!\n      }\n      return path\n    },\n    hideScroll () {\n      if (this.$vuetify.breakpoint.smAndDown) {\n        document.documentElement!.classList.add('overflow-y-hidden')\n      } else {\n        addPassiveEventListener(window, 'wheel', this.scrollListener as EventHandlerNonNull, { passive: false })\n        window.addEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n      }\n    },\n    showScroll () {\n      document.documentElement!.classList.remove('overflow-y-hidden')\n      window.removeEventListener('wheel', this.scrollListener as EventHandlerNonNull)\n      window.removeEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n    },\n  },\n})\n","// Mixins\nimport Colorable from '../colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { kebabCase } from '../../util/helpers'\n\n// Types\nimport { VNodeChildren } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Colorable\n).extend({\n  methods: {\n    genPickerButton (\n      prop: string,\n      value: any,\n      content: VNodeChildren,\n      readonly = false,\n      staticClass = ''\n    ) {\n      const active = (this as any)[prop] === value\n      const click = (event: Event) => {\n        event.stopPropagation()\n        this.$emit(`update:${kebabCase(prop)}`, value)\n      }\n\n      return this.$createElement('div', {\n        staticClass: `v-picker__title__btn ${staticClass}`.trim(),\n        class: {\n          'v-picker__title__btn--active': active,\n          'v-picker__title__btn--readonly': readonly,\n        },\n        on: (active || readonly) ? undefined : { click },\n      }, Array.isArray(content) ? content : [content])\n    },\n  },\n})\n","// Components\nimport VPicker from '../../components/VPicker'\n\n// Mixins\nimport Colorable from '../colorable'\nimport Themeable from '../themeable'\n\n// Utils\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Colorable,\n  Themeable\n/* @vue/component */\n).extend({\n  name: 'picker',\n\n  props: {\n    fullWidth: Boolean,\n    headerColor: String,\n    landscape: Boolean,\n    noTitle: Boolean,\n    width: {\n      type: [Number, String],\n      default: 290,\n    },\n  },\n\n  methods: {\n    genPickerTitle (): VNode | null {\n      return null\n    },\n    genPickerBody (): VNode | null {\n      return null\n    },\n    genPickerActionsSlot () {\n      return this.$scopedSlots.default ? this.$scopedSlots.default({\n        save: (this as any).save,\n        cancel: (this as any).cancel,\n      }) : this.$slots.default\n    },\n    genPicker (staticClass: string) {\n      const children: VNode[] = []\n\n      if (!this.noTitle) {\n        const title = this.genPickerTitle()\n        title && children.push(title)\n      }\n\n      const body = this.genPickerBody()\n      body && children.push(body)\n\n      children.push(this.$createElement('template', { slot: 'actions' }, [this.genPickerActionsSlot()]))\n\n      return this.$createElement(VPicker, {\n        staticClass,\n        props: {\n          color: this.headerColor || this.color,\n          dark: this.dark,\n          fullWidth: this.fullWidth,\n          landscape: this.landscape,\n          light: this.light,\n          width: this.width,\n          noTitle: this.noTitle,\n        },\n      }, children)\n    },\n  },\n})\n","import Vue from 'vue'\nimport { filterObjectOnKeys } from '../../util/helpers'\nimport { OptionsVue, VueConstructor } from 'vue/types/vue'\n\nconst availableProps = {\n  absolute: Boolean,\n  bottom: Boolean,\n  fixed: Boolean,\n  left: Boolean,\n  right: Boolean,\n  top: Boolean,\n}\ntype props = Record<keyof typeof availableProps, boolean>\n\nexport type Positionable<S extends keyof props> = VueConstructor<Vue & { [P in S]: boolean }, { [P in S]: BooleanConstructor }>\n\nexport function factory <S extends keyof props> (selected?: S[]): Positionable<S>\nexport function factory (selected: undefined): OptionsVue<Vue, {}, {}, {}, props, typeof availableProps>\nexport function factory (selected: any[] = []): any {\n  return Vue.extend({\n    name: 'positionable',\n    props: selected.length ? filterObjectOnKeys(availableProps, selected) : availableProps,\n  })\n}\n\nexport default factory()\n\n// Add a `*` before the second `/`\n/* Tests /\nlet single = factory(['top']).extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n  }\n})\n\nlet some = factory(['top', 'bottom']).extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n  }\n})\n\nlet all = factory().extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n    this.foobar\n  }\n})\n/**/\n","import Vue, { VueConstructor } from 'vue'\n\n/* eslint-disable-next-line no-use-before-define */\nexport type Proxyable<T extends string = 'value'> = VueConstructor<Vue & {\n  internalLazyValue: unknown\n  internalValue: unknown\n} & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Proxyable<T>\nexport function factory (\n  prop = 'value',\n  event = 'change'\n) {\n  return Vue.extend({\n    name: 'proxyable',\n\n    model: {\n      prop,\n      event,\n    },\n\n    props: {\n      [prop]: {\n        required: false,\n      },\n    },\n\n    data () {\n      return {\n        internalLazyValue: this[prop] as unknown,\n      }\n    },\n\n    computed: {\n      internalValue: {\n        get (): unknown {\n          return this.internalLazyValue\n        },\n        set (val: any) {\n          if (val === this.internalLazyValue) return\n\n          this.internalLazyValue = val\n\n          this.$emit(event, val)\n        },\n      },\n    },\n\n    watch: {\n      [prop] (val) {\n        this.internalLazyValue = val\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line no-redeclare */\nconst Proxyable = factory()\n\nexport default Proxyable\n","import Vue from 'vue'\nimport { VueConstructor } from 'vue/types/vue'\nimport { consoleWarn } from '../../util/console'\n\nfunction generateWarning (child: string, parent: string) {\n  return () => consoleWarn(`The ${child} component must be used inside a ${parent}`)\n}\n\nexport type Registrable<T extends string, C extends VueConstructor | null = null> = VueConstructor<Vue & {\n  [K in T]: C extends VueConstructor ? InstanceType<C> : {\n    register (...props: any[]): void\n    unregister (self: any): void\n  }\n}>\n\nexport function inject<\n  T extends string, C extends VueConstructor | null = null\n> (namespace: T, child?: string, parent?: string): Registrable<T, C> {\n  const defaultImpl = child && parent ? {\n    register: generateWarning(child, parent),\n    unregister: generateWarning(child, parent),\n  } : null\n\n  return Vue.extend({\n    name: 'registrable-inject',\n\n    inject: {\n      [namespace]: {\n        default: defaultImpl,\n      },\n    },\n  })\n}\n\nexport function provide (namespace: string, self = false) {\n  return Vue.extend({\n    name: 'registrable-provide',\n\n    methods: self ? {} : {\n      register: null,\n      unregister: null,\n    },\n    provide (): object {\n      return {\n        [namespace]: self ? this : {\n          register: this.register,\n          unregister: this.unregister,\n        },\n      }\n    },\n  })\n}\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n      data.on = Object.assign({\n        click: this.onChange,\n      }, this.$listeners)\n\n      return this.$createElement('div', data)\n    },\n    onChange () {},\n  },\n})\n","import Vue, { VNodeData } from 'vue'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Directives\nimport Ripple, { RippleOptions } from '../../directives/ripple'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'routable',\n\n  directives: {\n    Ripple,\n  },\n\n  props: {\n    activeClass: String,\n    append: Boolean,\n    disabled: Boolean,\n    exact: {\n      type: Boolean,\n      default: undefined,\n    } as PropValidator<boolean | undefined>,\n    exactActiveClass: String,\n    link: Boolean,\n    href: [String, Object],\n    to: [String, Object],\n    nuxt: Boolean,\n    replace: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: null,\n    },\n    tag: String,\n    target: String,\n  },\n\n  data: () => ({\n    isActive: false,\n    proxyClass: '',\n  }),\n\n  computed: {\n    classes (): object {\n      const classes: Record<string, boolean> = {}\n\n      if (this.to) return classes\n\n      if (this.activeClass) classes[this.activeClass] = this.isActive\n      if (this.proxyClass) classes[this.proxyClass] = this.isActive\n\n      return classes\n    },\n    computedRipple (): RippleOptions | boolean {\n      return this.ripple != null ? this.ripple : !this.disabled && this.isClickable\n    },\n    isClickable (): boolean {\n      if (this.disabled) return false\n\n      return Boolean(\n        this.isLink ||\n        this.$listeners.click ||\n        this.$listeners['!click'] ||\n        this.$attrs.tabindex\n      )\n    },\n    isLink (): boolean {\n      return this.to || this.href || this.link\n    },\n    styles: () => ({}),\n  },\n\n  watch: {\n    $route: 'onRouteChange',\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n    },\n    generateRouteLink () {\n      let exact = this.exact\n      let tag\n\n      const data: VNodeData = {\n        attrs: {\n          tabindex: 'tabindex' in this.$attrs ? this.$attrs.tabindex : undefined,\n        },\n        class: this.classes,\n        style: this.styles,\n        props: {},\n        directives: [{\n          name: 'ripple',\n          value: this.computedRipple,\n        }],\n        [this.to ? 'nativeOn' : 'on']: {\n          ...this.$listeners,\n          click: this.click,\n        },\n        ref: 'link',\n      }\n\n      if (typeof this.exact === 'undefined') {\n        exact = this.to === '/' ||\n          (this.to === Object(this.to) && this.to.path === '/')\n      }\n\n      if (this.to) {\n        // Add a special activeClass hook\n        // for component level styles\n        let activeClass = this.activeClass\n        let exactActiveClass = this.exactActiveClass || activeClass\n\n        if (this.proxyClass) {\n          activeClass = `${activeClass} ${this.proxyClass}`.trim()\n          exactActiveClass = `${exactActiveClass} ${this.proxyClass}`.trim()\n        }\n\n        tag = this.nuxt ? 'nuxt-link' : 'router-link'\n        Object.assign(data.props, {\n          to: this.to,\n          exact,\n          activeClass,\n          exactActiveClass,\n          append: this.append,\n          replace: this.replace,\n        })\n      } else {\n        tag = (this.href && 'a') || this.tag || 'div'\n\n        if (tag === 'a' && this.href) data.attrs!.href = this.href\n      }\n\n      if (this.target) data.attrs!.target = this.target\n\n      return { tag, data }\n    },\n    onRouteChange () {\n      if (!this.to || !this.$refs.link || !this.$route) return\n      const activeClass = `${this.activeClass} ${this.proxyClass || ''}`.trim()\n\n      const path = `_vnode.data.class.${activeClass}`\n\n      this.$nextTick(() => {\n        /* istanbul ignore else */\n        if (getObjectValueByPath(this.$refs.link, path)) {\n          this.toggle()\n        }\n      })\n    },\n    toggle: () => { /* noop */ },\n  },\n})\n","// Directives\nimport { Scroll } from '../../directives'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\n/**\n * Scrollable\n *\n * Used for monitoring scrolling and\n * invoking functions based upon\n * scrolling thresholds being\n * met.\n */\n/* @vue/component */\nexport default Vue.extend({\n  name: 'scrollable',\n\n  directives: { Scroll },\n\n  props: {\n    scrollTarget: String,\n    scrollThreshold: [String, Number],\n  },\n\n  data: () => ({\n    currentScroll: 0,\n    currentThreshold: 0,\n    isActive: false,\n    isScrollingUp: false,\n    previousScroll: 0,\n    savedScroll: 0,\n    target: null as Element | null,\n  }),\n\n  computed: {\n    /**\n     * A computed property that returns\n     * whether scrolling features are\n     * enabled or disabled\n     */\n    canScroll (): boolean {\n      return typeof window !== 'undefined'\n    },\n    /**\n     * The threshold that must be met before\n     * thresholdMet function is invoked\n     */\n    computedScrollThreshold (): number {\n      return this.scrollThreshold\n        ? Number(this.scrollThreshold)\n        : 300\n    },\n  },\n\n  watch: {\n    isScrollingUp () {\n      this.savedScroll = this.savedScroll || this.currentScroll\n    },\n    isActive () {\n      this.savedScroll = 0\n    },\n  },\n\n  mounted () {\n    if (this.scrollTarget) {\n      this.target = document.querySelector(this.scrollTarget)\n\n      if (!this.target) {\n        consoleWarn(`Unable to locate element with identifier ${this.scrollTarget}`, this)\n      }\n    }\n  },\n\n  methods: {\n    onScroll () {\n      if (!this.canScroll) return\n\n      this.previousScroll = this.currentScroll\n      this.currentScroll = this.target\n        ? this.target.scrollTop\n        : window.pageYOffset\n\n      this.isScrollingUp = this.currentScroll < this.previousScroll\n      this.currentThreshold = Math.abs(this.currentScroll - this.computedScrollThreshold)\n\n      this.$nextTick(() => {\n        if (\n          Math.abs(this.currentScroll - this.savedScroll) >\n          this.computedScrollThreshold\n        ) this.thresholdMet()\n      })\n    },\n    /**\n     * The method invoked when\n     * scrolling in any direction\n     * has exceeded the threshold\n     */\n    thresholdMet () { /* noop */ },\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'accent'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        click: (e: Event) => {\n          // Prevent label from\n          // causing the input\n          // to focus\n          e.preventDefault()\n\n          this.onChange()\n        },\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onChange () {\n      if (this.isDisabled) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'sizeable',\n\n  props: {\n    large: Boolean,\n    small: Boolean,\n    xLarge: Boolean,\n    xSmall: Boolean,\n  },\n\n  computed: {\n    medium (): boolean {\n      return Boolean(\n        !this.xSmall &&\n        !this.small &&\n        !this.large &&\n        !this.xLarge\n      )\n    },\n    sizeableClasses (): object {\n      return {\n        'v-size--x-small': this.xSmall,\n        'v-size--small': this.small,\n        'v-size--default': this.medium,\n        'v-size--large': this.large,\n        'v-size--x-large': this.xLarge,\n      }\n    },\n  },\n})\n","import Vue from 'vue'\n\n/**\n * SSRBootable\n *\n * @mixin\n *\n * Used in layout components (drawer, toolbar, content)\n * to avoid an entry animation when using SSR\n */\nexport default Vue.extend({\n  name: 'ssr-bootable',\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  mounted () {\n    // Use setAttribute instead of dataset\n    // because dataset does not work well\n    // with unit tests\n    window.requestAnimationFrame(() => {\n      this.$el.setAttribute('data-booted', 'true')\n      this.isBooted = true\n    })\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator, RenderContext } from 'vue/types/options'\n\n/* eslint-disable-next-line no-use-before-define */\ninterface Themeable extends Vue {\n  theme: {\n    isDark: boolean\n  }\n}\n\nexport function functionalThemeClasses (context: RenderContext): object {\n  const vm = {\n    ...context.props,\n    ...context.injections,\n  }\n  const isDark = Themeable.options.computed.isDark.call(vm)\n  return Themeable.options.computed.themeClasses.call({ isDark })\n}\n\n/* @vue/component */\nconst Themeable = Vue.extend<Themeable>().extend({\n  name: 'themeable',\n\n  provide (): object {\n    return {\n      theme: this.themeableProvide,\n    }\n  },\n\n  inject: {\n    theme: {\n      default: {\n        isDark: false,\n      },\n    },\n  },\n\n  props: {\n    dark: {\n      type: Boolean,\n      default: null,\n    } as PropValidator<boolean | null>,\n    light: {\n      type: Boolean,\n      default: null,\n    } as PropValidator<boolean | null>,\n  },\n\n  data () {\n    return {\n      themeableProvide: {\n        isDark: false,\n      },\n    }\n  },\n\n  computed: {\n    appIsDark (): boolean {\n      return this.$vuetify.theme.dark || false\n    },\n    isDark (): boolean {\n      if (this.dark === true) {\n        // explicitly dark\n        return true\n      } else if (this.light === true) {\n        // explicitly light\n        return false\n      } else {\n        // inherit from parent, or default false if there is none\n        return this.theme.isDark\n      }\n    },\n    themeClasses (): object {\n      return {\n        'theme--dark': this.isDark,\n        'theme--light': !this.isDark,\n      }\n    },\n    /** Used by menus and dialogs, inherits from v-app instead of the parent */\n    rootIsDark (): boolean {\n      if (this.dark === true) {\n        // explicitly dark\n        return true\n      } else if (this.light === true) {\n        // explicitly light\n        return false\n      } else {\n        // inherit from v-app\n        return this.appIsDark\n      }\n    },\n    rootThemeClasses (): Dictionary<boolean> {\n      return {\n        'theme--dark': this.rootIsDark,\n        'theme--light': !this.rootIsDark,\n      }\n    },\n  },\n\n  watch: {\n    isDark: {\n      handler (newVal, oldVal) {\n        if (newVal !== oldVal) {\n          this.themeableProvide.isDark = this.isDark\n        }\n      },\n      immediate: true,\n    },\n  },\n})\n\nexport default Themeable\n","import Vue, { VueConstructor } from 'vue'\n\n/* eslint-disable-next-line no-use-before-define */\nexport type Toggleable<T extends string = 'value'> = VueConstructor<Vue & { isActive: boolean } & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Toggleable<T>\nexport function factory (prop = 'value', event = 'input') {\n  return Vue.extend({\n    name: 'toggleable',\n\n    model: { prop, event },\n\n    props: {\n      [prop]: { required: false },\n    },\n\n    data () {\n      return {\n        isActive: !!this[prop],\n      }\n    },\n\n    watch: {\n      [prop] (val) {\n        this.isActive = !!val\n      },\n      isActive (val) {\n        !!val !== this[prop] && this.$emit(event, val)\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line no-redeclare */\nconst Toggleable = factory()\n\nexport default Toggleable\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'transitionable',\n\n  props: {\n    mode: String,\n    origin: String,\n    transition: String,\n  },\n})\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'translatable',\n\n  props: {\n    height: Number,\n  },\n\n  data: () => ({\n    elOffsetTop: 0,\n    parallax: 0,\n    parallaxDist: 0,\n    percentScrolled: 0,\n    scrollTop: 0,\n    windowHeight: 0,\n    windowBottom: 0,\n  }),\n\n  computed: {\n    imgHeight (): number {\n      return this.objHeight()\n    },\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('scroll', this.translate, false)\n    window.removeEventListener('resize', this.translate, false)\n  },\n\n  methods: {\n    calcDimensions () {\n      const offset = this.$el.getBoundingClientRect()\n\n      this.scrollTop = window.pageYOffset\n      this.parallaxDist = this.imgHeight - this.height\n      this.elOffsetTop = offset.top + this.scrollTop\n      this.windowHeight = window.innerHeight\n      this.windowBottom = this.scrollTop + this.windowHeight\n    },\n    listeners () {\n      window.addEventListener('scroll', this.translate, false)\n      window.addEventListener('resize', this.translate, false)\n    },\n    /** @abstract **/\n    objHeight (): number {\n      throw new Error('Not implemented !')\n    },\n    translate () {\n      this.calcDimensions()\n\n      this.percentScrolled = (\n        (this.windowBottom - this.elOffsetTop) /\n        (parseInt(this.height) + this.windowHeight)\n      )\n\n      this.parallax = Math.round(this.parallaxDist * this.percentScrolled)\n    },\n  },\n})\n","// Mixins\nimport Colorable from '../colorable'\nimport Themeable from '../themeable'\nimport { inject as RegistrableInject } from '../registrable'\n\n// Utilities\nimport { deepEqual } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\nexport type VuetifyRuleValidator = (value: any) => string | boolean\nexport type VuetifyMessage = string | string[]\nexport type VuetifyRuleValidations = (VuetifyRuleValidator | string)[]\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  RegistrableInject('form'),\n  Themeable\n).extend({\n  name: 'validatable',\n\n  props: {\n    disabled: Boolean,\n    error: Boolean,\n    errorCount: {\n      type: [Number, String],\n      default: 1,\n    },\n    errorMessages: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<VuetifyMessage>,\n    messages: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<VuetifyMessage>,\n    readonly: Boolean,\n    rules: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<VuetifyRuleValidations>,\n    success: Boolean,\n    successMessages: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<VuetifyMessage>,\n    validateOnBlur: Boolean,\n    value: { required: false },\n  },\n\n  data () {\n    return {\n      errorBucket: [] as string[],\n      hasColor: false,\n      hasFocused: false,\n      hasInput: false,\n      isFocused: false,\n      isResetting: false,\n      lazyValue: this.value,\n      valid: false,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (this.disabled) return undefined\n      if (this.color) return this.color\n      // It's assumed that if the input is on a\n      // dark background, the user will want to\n      // have a white color. If the entire app\n      // is setup to be dark, then they will\n      // like want to use their primary color\n      if (this.isDark && !this.appIsDark) return 'white'\n      else return 'primary'\n    },\n    hasError (): boolean {\n      return (\n        this.internalErrorMessages.length > 0 ||\n        this.errorBucket.length > 0 ||\n        this.error\n      )\n    },\n    // TODO: Add logic that allows the user to enable based\n    // upon a good validation\n    hasSuccess (): boolean {\n      return (\n        this.internalSuccessMessages.length > 0 ||\n        this.success\n      )\n    },\n    externalError (): boolean {\n      return this.internalErrorMessages.length > 0 || this.error\n    },\n    hasMessages (): boolean {\n      return this.validationTarget.length > 0\n    },\n    hasState (): boolean {\n      if (this.disabled) return false\n\n      return (\n        this.hasSuccess ||\n        (this.shouldValidate && this.hasError)\n      )\n    },\n    internalErrorMessages (): VuetifyRuleValidations {\n      return this.genInternalMessages(this.errorMessages)\n    },\n    internalMessages (): VuetifyRuleValidations {\n      return this.genInternalMessages(this.messages)\n    },\n    internalSuccessMessages (): VuetifyRuleValidations {\n      return this.genInternalMessages(this.successMessages)\n    },\n    internalValue: {\n      get (): unknown {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n\n        this.$emit('input', val)\n      },\n    },\n    shouldValidate (): boolean {\n      if (this.externalError) return true\n      if (this.isResetting) return false\n\n      return this.validateOnBlur\n        ? this.hasFocused && !this.isFocused\n        : (this.hasInput || this.hasFocused)\n    },\n    validations (): VuetifyRuleValidations {\n      return this.validationTarget.slice(0, Number(this.errorCount))\n    },\n    validationState (): string | undefined {\n      if (this.disabled) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor) return this.computedColor\n      return undefined\n    },\n    validationTarget (): VuetifyRuleValidations {\n      if (this.internalErrorMessages.length > 0) {\n        return this.internalErrorMessages\n      } else if (this.successMessages.length > 0) {\n        return this.internalSuccessMessages\n      } else if (this.messages.length > 0) {\n        return this.internalMessages\n      } else if (this.shouldValidate) {\n        return this.errorBucket\n      } else return []\n    },\n  },\n\n  watch: {\n    rules: {\n      handler (newVal, oldVal) {\n        if (deepEqual(newVal, oldVal)) return\n        this.validate()\n      },\n      deep: true,\n    },\n    internalValue () {\n      // If it's the first time we're setting input,\n      // mark it with hasInput\n      this.hasInput = true\n      this.validateOnBlur || this.$nextTick(this.validate)\n    },\n    isFocused (val) {\n      // Should not check validation\n      // if disabled\n      if (\n        !val &&\n        !this.disabled\n      ) {\n        this.hasFocused = true\n        this.validateOnBlur && this.validate()\n      }\n    },\n    isResetting () {\n      setTimeout(() => {\n        this.hasInput = false\n        this.hasFocused = false\n        this.isResetting = false\n        this.validate()\n      }, 0)\n    },\n    hasError (val) {\n      if (this.shouldValidate) {\n        this.$emit('update:error', val)\n      }\n    },\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  beforeMount () {\n    this.validate()\n  },\n\n  created () {\n    this.form && this.form.register(this)\n  },\n\n  beforeDestroy () {\n    this.form && this.form.unregister(this)\n  },\n\n  methods: {\n    genInternalMessages (messages: VuetifyMessage): VuetifyRuleValidations {\n      if (!messages) return []\n      else if (Array.isArray(messages)) return messages\n      else return [messages]\n    },\n    /** @public */\n    reset () {\n      this.isResetting = true\n      this.internalValue = Array.isArray(this.internalValue)\n        ? []\n        : undefined\n    },\n    /** @public */\n    resetValidation () {\n      this.isResetting = true\n    },\n    /** @public */\n    validate (force = false, value?: any): boolean {\n      const errorBucket = []\n      value = value || this.internalValue\n\n      if (force) this.hasInput = this.hasFocused = true\n\n      for (let index = 0; index < this.rules.length; index++) {\n        const rule = this.rules[index]\n        const valid = typeof rule === 'function' ? rule(value) : rule\n\n        if (typeof valid === 'string') {\n          errorBucket.push(valid)\n        } else if (typeof valid !== 'boolean') {\n          consoleError(`Rules should return a string or boolean, received '${typeof valid}' instead`, this)\n        }\n      }\n\n      this.errorBucket = errorBucket\n      this.valid = errorBucket.length === 0\n\n      return this.valid\n    },\n  },\n})\n","// Extensions\nimport { Service } from '../service'\n\n// Types\nimport { TargetPropValues, TargetProp, Application as IApplication } from 'vuetify/types/services/application'\n\nexport class Application extends Service implements IApplication {\n  static property = 'application'\n\n  bar = 0\n\n  top = 0\n\n  left = 0\n\n  insetFooter = 0\n\n  right = 0\n\n  bottom = 0\n\n  footer = 0\n\n  application: Dictionary<TargetPropValues> = {\n    bar: {},\n    top: {},\n    left: {},\n    insetFooter: {},\n    right: {},\n    bottom: {},\n    footer: {},\n  }\n\n  register (\n    uid: number,\n    location: TargetProp,\n    size: number\n  ) {\n    this.application[location][uid] = size\n\n    this.update(location)\n  }\n\n  unregister (uid: number, location: TargetProp) {\n    if (this.application[location][uid] == null) return\n\n    delete this.application[location][uid]\n    this.update(location)\n  }\n\n  update (location: TargetProp) {\n    this[location] = Object.values(this.application[location])\n      .reduce((acc: number, cur: number): number => (acc + cur), 0)\n  }\n}\n","// Extensions\nimport { Service } from '../service'\n\n// Types\nimport { BreakpointOptions, Breakpoint as IBreakpoint } from 'vuetify/types/services/breakpoint'\n\nexport class Breakpoint extends Service implements IBreakpoint {\n  public static property = 'breakpoint'\n\n  // Public\n  public xs = false\n\n  public sm = false\n\n  public md = false\n\n  public lg = false\n\n  public xl = false\n\n  public xsOnly = false\n\n  public smOnly = false\n\n  public smAndDown = false\n\n  public smAndUp = false\n\n  public mdOnly = false\n\n  public mdAndDown = false\n\n  public mdAndUp = false\n\n  public lgOnly = false\n\n  public lgAndDown = false\n\n  public lgAndUp = false\n\n  public xlOnly = false\n\n  public name = ''\n\n  public height = 0\n\n  public width = 0\n\n  public thresholds = {\n    xs: 600,\n    sm: 960,\n    md: 1280,\n    lg: 1920,\n  }\n\n  public scrollBarWidth = 16\n\n  private resizeTimeout = 0\n\n  constructor (options: Partial<BreakpointOptions> = {}) {\n    super()\n    this.thresholds = {\n      ...this.thresholds,\n      ...options.thresholds,\n    }\n    this.scrollBarWidth = (\n      options.scrollBarWidth ||\n      this.scrollBarWidth\n    )\n    this.init()\n  }\n\n  public init () {\n    /* istanbul ignore if */\n    if (typeof window === 'undefined') return\n\n    window.addEventListener(\n      'resize',\n      this.onResize.bind(this),\n      { passive: true }\n    )\n\n    this.update()\n  }\n\n  private onResize () {\n    clearTimeout(this.resizeTimeout)\n\n    // Added debounce to match what\n    // v-resize used to do but was\n    // removed due to a memory leak\n    // https://github.com/vuetifyjs/vuetify/pull/2997\n    this.resizeTimeout = window.setTimeout(this.update.bind(this), 200)\n  }\n\n  /* eslint-disable-next-line max-statements */\n  private update () {\n    const height = this.getClientHeight()\n    const width = this.getClientWidth()\n\n    const xs = width < this.thresholds.xs\n    const sm = width < this.thresholds.sm && !xs\n    const md = width < (this.thresholds.md - this.scrollBarWidth) && !(sm || xs)\n    const lg = width < (this.thresholds.lg - this.scrollBarWidth) && !(md || sm || xs)\n    const xl = width >= (this.thresholds.lg - this.scrollBarWidth)\n\n    this.height = height\n    this.width = width\n\n    this.xs = xs\n    this.sm = sm\n    this.md = md\n    this.lg = lg\n    this.xl = xl\n\n    this.xsOnly = xs\n    this.smOnly = sm\n    this.smAndDown = (xs || sm) && !(md || lg || xl)\n    this.smAndUp = !xs && (sm || md || lg || xl)\n    this.mdOnly = md\n    this.mdAndDown = (xs || sm || md) && !(lg || xl)\n    this.mdAndUp = !(xs || sm) && (md || lg || xl)\n    this.lgOnly = lg\n    this.lgAndDown = (xs || sm || md || lg) && !xl\n    this.lgAndUp = !(xs || sm || md) && (lg || xl)\n    this.xlOnly = xl\n\n    switch (true) {\n      case (xs):\n        this.name = 'xs'\n        break\n      case (sm):\n        this.name = 'sm'\n        break\n      case (md):\n        this.name = 'md'\n        break\n      case (lg):\n        this.name = 'lg'\n        break\n      default:\n        this.name = 'xl'\n        break\n    }\n  }\n\n  // Cross-browser support as described in:\n  // https://stackoverflow.com/questions/1248081\n  private getClientWidth () {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return 0 // SSR\n    return Math.max(\n      document.documentElement!.clientWidth,\n      window.innerWidth || 0\n    )\n  }\n\n  private getClientHeight () {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return 0 // SSR\n    return Math.max(\n      document.documentElement!.clientHeight,\n      window.innerHeight || 0\n    )\n  }\n}\n","export type EasingFunction = (t: number) => number\n\n// linear\nexport const linear = (t: number) => t\n// accelerating from zero velocity\nexport const easeInQuad = (t: number) => t ** 2\n// decelerating to zero velocity\nexport const easeOutQuad = (t: number) => t * (2 - t)\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = (t: number) => (t < 0.5 ? 2 * t ** 2 : -1 + (4 - 2 * t) * t)\n// accelerating from zero velocity\nexport const easeInCubic = (t: number) => t ** 3\n// decelerating to zero velocity\nexport const easeOutCubic = (t: number) => --t ** 3 + 1\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = (t: number) => t < 0.5 ? 4 * t ** 3 : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n// accelerating from zero velocity\nexport const easeInQuart = (t: number) => t ** 4\n// decelerating to zero velocity\nexport const easeOutQuart = (t: number) => 1 - --t ** 4\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = (t: number) => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t)\n// accelerating from zero velocity\nexport const easeInQuint = (t: number) => t ** 5\n// decelerating to zero velocity\nexport const easeOutQuint = (t: number) => 1 + --t ** 5\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = (t: number) => t < 0.5 ? 16 * t ** 5 : 1 + 16 * --t ** 5\n","// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport * as easingPatterns from './easing-patterns'\nimport {\n  getContainer,\n  getOffset,\n} from './util'\n\n// Types\nimport { GoToOptions, VuetifyGoToTarget } from 'vuetify/types/services/goto'\n\nimport { VuetifyServiceContract } from 'vuetify/types/services'\n\nexport default function goTo (\n  _target: VuetifyGoToTarget,\n  _settings: Partial<GoToOptions> = {}\n): Promise<number> {\n  const settings: GoToOptions = {\n    container: (document.scrollingElement as HTMLElement | null) || document.body || document.documentElement,\n    duration: 500,\n    offset: 0,\n    easing: 'easeInOutCubic',\n    appOffset: true,\n    ..._settings,\n  }\n  const container = getContainer(settings.container)\n\n  /* istanbul ignore else */\n  if (settings.appOffset && goTo.framework.application) {\n    const isDrawer = container.classList.contains('v-navigation-drawer')\n    const isClipped = container.classList.contains('v-navigation-drawer--clipped')\n    const { bar, top } = goTo.framework.application as any\n\n    settings.offset += bar\n    /* istanbul ignore else */\n    if (!isDrawer || isClipped) settings.offset += top\n  }\n\n  const startTime = performance.now()\n\n  let targetLocation: number\n  if (typeof _target === 'number') {\n    targetLocation = getOffset(_target) - settings.offset!\n  } else {\n    targetLocation = getOffset(_target) - getOffset(container) - settings.offset!\n  }\n\n  const startLocation = container.scrollTop\n  if (targetLocation === startLocation) return Promise.resolve(targetLocation)\n\n  const ease = typeof settings.easing === 'function'\n    ? settings.easing\n    : easingPatterns[settings.easing!]\n  /* istanbul ignore else */\n  if (!ease) throw new TypeError(`Easing function \"${settings.easing}\" not found.`)\n\n  // Cannot be tested properly in jsdom\n  // tslint:disable-next-line:promise-must-complete\n  /* istanbul ignore next */\n  return new Promise(resolve => requestAnimationFrame(function step (currentTime: number) {\n    const timeElapsed = currentTime - startTime\n    const progress = Math.abs(settings.duration ? Math.min(timeElapsed / settings.duration, 1) : 1)\n\n    container.scrollTop = Math.floor(startLocation + (targetLocation - startLocation) * ease(progress))\n\n    const clientHeight = container === document.body ? document.documentElement.clientHeight : container.clientHeight\n    if (progress === 1 || clientHeight + container.scrollTop === container.scrollHeight) {\n      return resolve(targetLocation)\n    }\n\n    requestAnimationFrame(step)\n  }))\n}\n\ngoTo.framework = {} as Record<string, VuetifyServiceContract>\ngoTo.init = () => {}\n\nexport class Goto extends Service {\n  public static property = 'goTo'\n\n  constructor () {\n    super()\n\n    return goTo\n  }\n}\n","import Vue from 'vue'\n\n// Return target's cumulative offset from the top\nexport function getOffset (target: any): number {\n  if (typeof target === 'number') {\n    return target\n  }\n\n  let el = $(target)\n  if (!el) {\n    throw typeof target === 'string'\n      ? new Error(`Target element \"${target}\" not found.`)\n      : new TypeError(`Target must be a Number/Selector/HTMLElement/VueComponent, received ${type(target)} instead.`)\n  }\n\n  let totalOffset = 0\n  while (el) {\n    totalOffset += el.offsetTop\n    el = el.offsetParent as HTMLElement\n  }\n\n  return totalOffset\n}\n\nexport function getContainer (container: any): HTMLElement {\n  const el = $(container)\n\n  if (el) return el\n\n  throw typeof container === 'string'\n    ? new Error(`Container element \"${container}\" not found.`)\n    : new TypeError(`Container must be a Selector/HTMLElement/VueComponent, received ${type(container)} instead.`)\n}\n\nfunction type (el: any) {\n  return el == null ? el : el.constructor.name\n}\n\nfunction $ (el: any): HTMLElement | null {\n  if (typeof el === 'string') {\n    return document.querySelector<HTMLElement>(el)\n  } else if (el && el._isVue) {\n    return (el as Vue).$el as HTMLElement\n  } else if (el instanceof HTMLElement) {\n    return el\n  } else {\n    return null\n  }\n}\n","// Extensions\nimport { Service } from '../service'\n\n// Types\nimport { Icons as IIcons } from 'vuetify/types/services/icons'\n\n// Presets\nimport presets from './presets'\n\nexport class Icons extends Service implements IIcons {\n  static property = 'icons'\n\n  public iconfont: IIcons['iconfont'] = 'mdi'\n\n  public values: IIcons['values'] = presets[this.iconfont]\n\n  constructor (options: Partial<IIcons> = {}) {\n    super()\n    if (options.iconfont) this.iconfont = options.iconfont\n\n    this.values = {\n      ...presets[this.iconfont],\n      ...(options.values || {}),\n    }\n  }\n}\n","import { VuetifyIcons } from 'vuetify/types/services/icons'\n\nconst icons: VuetifyIcons = {\n  complete: 'fas fa-check',\n  cancel: 'fas fa-times-circle',\n  close: 'fas fa-times',\n  delete: 'fas fa-times-circle', // delete (e.g. v-chip close)\n  clear: 'fas fa-times-circle', // delete (e.g. v-chip close)\n  success: 'fas fa-check-circle',\n  info: 'fas fa-info-circle',\n  warning: 'fas fa-exclamation',\n  error: 'fas fa-exclamation-triangle',\n  prev: 'fas fa-chevron-left',\n  next: 'fas fa-chevron-right',\n  checkboxOn: 'fas fa-check-square',\n  checkboxOff: 'far fa-square', // note 'far'\n  checkboxIndeterminate: 'fas fa-minus-square',\n  delimiter: 'fas fa-circle', // for carousel\n  sort: 'fas fa-sort-up',\n  expand: 'fas fa-chevron-down',\n  menu: 'fas fa-bars',\n  subgroup: 'fas fa-caret-down',\n  dropdown: 'fas fa-caret-down',\n  radioOn: 'far fa-dot-circle',\n  radioOff: 'far fa-circle',\n  edit: 'fas fa-edit',\n  ratingEmpty: 'far fa-star',\n  ratingFull: 'fas fa-star',\n  ratingHalf: 'fas fa-star-half',\n  loading: 'fas fa-sync',\n  first: 'fas fa-step-backward',\n  last: 'fas fa-step-forward',\n  unfold: 'fas fa-arrows-alt-v',\n  file: 'fas fa-paperclip',\n  plus: 'fas fa-plus',\n  minus: 'fas fa-minus',\n}\n\nexport default icons\n","import { VuetifyIcons } from 'vuetify/types/services/icons'\n\nconst icons: VuetifyIcons = {\n  complete: 'fa fa-check',\n  cancel: 'fa fa-times-circle',\n  close: 'fa fa-times',\n  delete: 'fa fa-times-circle', // delete (e.g. v-chip close)\n  clear: 'fa fa-times-circle', // delete (e.g. v-chip close)\n  success: 'fa fa-check-circle',\n  info: 'fa fa-info-circle',\n  warning: 'fa fa-exclamation',\n  error: 'fa fa-exclamation-triangle',\n  prev: 'fa fa-chevron-left',\n  next: 'fa fa-chevron-right',\n  checkboxOn: 'fa fa-check-square',\n  checkboxOff: 'far fa-square', // note 'far'\n  checkboxIndeterminate: 'fa fa-minus-square',\n  delimiter: 'fa fa-circle', // for carousel\n  sort: 'fa fa-sort-up',\n  expand: 'fa fa-chevron-down',\n  menu: 'fa fa-bars',\n  subgroup: 'fa fa-caret-down',\n  dropdown: 'fa fa-caret-down',\n  radioOn: 'fa fa-dot-circle-o',\n  radioOff: 'fa fa-circle-o',\n  edit: 'fa fa-pencil',\n  ratingEmpty: 'fa fa-star-o',\n  ratingFull: 'fa fa-star',\n  ratingHalf: 'fa fa-star-half-o',\n  loading: 'fa fa-refresh',\n  first: 'fa fa-step-backward',\n  last: 'fa fa-step-forward',\n  unfold: 'fa fa-angle-double-down',\n  file: 'fa fa-paperclip',\n  plus: 'fa fa-plus',\n  minus: 'fa fa-minus',\n}\n\nexport default icons\n","import mdiSvg from './mdi-svg'\nimport md from './md'\nimport mdi from './mdi'\nimport fa from './fa'\nimport fa4 from './fa4'\n\nexport default Object.freeze({\n  mdiSvg,\n  md,\n  mdi,\n  fa,\n  fa4,\n})\n","import { VuetifyIcons } from 'vuetify/types/services/icons'\n\nconst icons: VuetifyIcons = {\n  complete: 'check',\n  cancel: 'cancel',\n  close: 'close',\n  delete: 'cancel', // delete (e.g. v-chip close)\n  clear: 'clear',\n  success: 'check_circle',\n  info: 'info',\n  warning: 'priority_high',\n  error: 'warning',\n  prev: 'chevron_left',\n  next: 'chevron_right',\n  checkboxOn: 'check_box',\n  checkboxOff: 'check_box_outline_blank',\n  checkboxIndeterminate: 'indeterminate_check_box',\n  delimiter: 'fiber_manual_record', // for carousel\n  sort: 'arrow_upward',\n  expand: 'keyboard_arrow_down',\n  menu: 'menu',\n  subgroup: 'arrow_drop_down',\n  dropdown: 'arrow_drop_down',\n  radioOn: 'radio_button_checked',\n  radioOff: 'radio_button_unchecked',\n  edit: 'edit',\n  ratingEmpty: 'star_border',\n  ratingFull: 'star',\n  ratingHalf: 'star_half',\n  loading: 'cached',\n  first: 'first_page',\n  last: 'last_page',\n  unfold: 'unfold_more',\n  file: 'attach_file',\n  plus: 'add',\n  minus: 'remove',\n}\n\nexport default icons\n","import { VuetifyIcons } from 'vuetify/types/services/icons'\n\nconst icons: VuetifyIcons = {\n  complete: 'M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z',\n  cancel: 'M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z',\n  close: 'M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z',\n  delete: 'M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z', // delete (e.g. v-chip close)\n  clear: 'M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z',\n  success: 'M12,2C17.52,2 22,6.48 22,12C22,17.52 17.52,22 12,22C6.48,22 2,17.52 2,12C2,6.48 6.48,2 12,2M11,16.5L18,9.5L16.59,8.09L11,13.67L7.91,10.59L6.5,12L11,16.5Z',\n  info: 'M13,9H11V7H13M13,17H11V11H13M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2Z',\n  warning: 'M11,4.5H13V15.5H11V4.5M13,17.5V19.5H11V17.5H13Z',\n  error: 'M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z',\n  prev: 'M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z',\n  next: 'M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z',\n  checkboxOn: 'M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3Z',\n  checkboxOff: 'M19,3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z',\n  checkboxIndeterminate: 'M17,13H7V11H17M19,3H5C3.89,3 3,3.89 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.89 20.1,3 19,3Z',\n  delimiter: 'M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2Z', // for carousel\n  sort: 'M13,20H11V8L5.5,13.5L4.08,12.08L12,4.16L19.92,12.08L18.5,13.5L13,8V20Z',\n  expand: 'M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z',\n  menu: 'M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z',\n  subgroup: 'M7,10L12,15L17,10H7Z',\n  dropdown: 'M7,10L12,15L17,10H7Z',\n  radioOn: 'M12,20C7.58,20 4,16.42 4,12C4,7.58 7.58,4 12,4C16.42,4 20,7.58 20,12C20,16.42 16.42,20 12,20M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2M12,7C9.24,7 7,9.24 7,12C7,14.76 9.24,17 12,17C14.76,17 17,14.76 17,12C17,9.24 14.76,7 12,7Z',\n  radioOff: 'M12,20C7.58,20 4,16.42 4,12C4,7.58 7.58,4 12,4C16.42,4 20,7.58 20,12C20,16.42 16.42,20 12,20M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2Z',\n  edit: 'M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z',\n  ratingEmpty: 'M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z',\n  ratingFull: 'M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z',\n  ratingHalf: 'M12,15.4V6.1L13.71,10.13L18.09,10.5L14.77,13.39L15.76,17.67M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z',\n  loading: 'M19,8L15,12H18C18,15.31 15.31,18 12,18C11,18 10.03,17.75 9.2,17.3L7.74,18.76C8.97,19.54 10.43,20 12,20C16.42,20 20,16.42 20,12H23M6,12C6,8.69 8.69,6 12,6C13,6 13.97,6.25 14.8,6.7L16.26,5.24C15.03,4.46 13.57,4 12,4C7.58,4 4,7.58 4,12H1L5,16L9,12',\n  first: 'M18.41,16.59L13.82,12L18.41,7.41L17,6L11,12L17,18L18.41,16.59M6,6H8V18H6V6Z',\n  last: 'M5.59,7.41L10.18,12L5.59,16.59L7,18L13,12L7,6L5.59,7.41M16,6H18V18H16V6Z',\n  unfold: 'M12,18.17L8.83,15L7.42,16.41L12,21L16.59,16.41L15.17,15M12,5.83L15.17,9L16.58,7.59L12,3L7.41,7.59L8.83,9L12,5.83Z',\n  file: 'M16.5,6V17.5C16.5,19.71 14.71,21.5 12.5,21.5C10.29,21.5 8.5,19.71 8.5,17.5V5C8.5,3.62 9.62,2.5 11,2.5C12.38,2.5 13.5,3.62 13.5,5V15.5C13.5,16.05 13.05,16.5 12.5,16.5C11.95,16.5 11.5,16.05 11.5,15.5V6H10V15.5C10,16.88 11.12,18 12.5,18C13.88,18 15,16.88 15,15.5V5C15,2.79 13.21,1 11,1C8.79,1 7,2.79 7,5V17.5C7,20.54 9.46,23 12.5,23C15.54,23 18,20.54 18,17.5V6H16.5Z',\n  plus: 'M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z',\n  minus: 'M19,13H5V11H19V13Z',\n}\n\nexport default icons\n","import { VuetifyIcons } from 'vuetify/types/services/icons'\n\nconst icons: VuetifyIcons = {\n  complete: 'mdi-check',\n  cancel: 'mdi-close-circle',\n  close: 'mdi-close',\n  delete: 'mdi-close-circle', // delete (e.g. v-chip close)\n  clear: 'mdi-close',\n  success: 'mdi-check-circle',\n  info: 'mdi-information',\n  warning: 'mdi-exclamation',\n  error: 'mdi-alert',\n  prev: 'mdi-chevron-left',\n  next: 'mdi-chevron-right',\n  checkboxOn: 'mdi-checkbox-marked',\n  checkboxOff: 'mdi-checkbox-blank-outline',\n  checkboxIndeterminate: 'mdi-minus-box',\n  delimiter: 'mdi-circle', // for carousel\n  sort: 'mdi-arrow-up',\n  expand: 'mdi-chevron-down',\n  menu: 'mdi-menu',\n  subgroup: 'mdi-menu-down',\n  dropdown: 'mdi-menu-down',\n  radioOn: 'mdi-radiobox-marked',\n  radioOff: 'mdi-radiobox-blank',\n  edit: 'mdi-pencil',\n  ratingEmpty: 'mdi-star-outline',\n  ratingFull: 'mdi-star',\n  ratingHalf: 'mdi-star-half',\n  loading: 'mdi-cached',\n  first: 'mdi-page-first',\n  last: 'mdi-page-last',\n  unfold: 'mdi-unfold-more-horizontal',\n  file: 'mdi-paperclip',\n  plus: 'mdi-plus',\n  minus: 'mdi-minus',\n}\n\nexport default icons\n","export * from './application'\nexport * from './breakpoint'\nexport * from './goto'\nexport * from './icons'\nexport * from './lang'\nexport * from './theme'\n","// Extensions\nimport { Service } from '../service'\n\n// Language\nimport en from '../../locale/en'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport { consoleError, consoleWarn } from '../../util/console'\n\n// Types\nimport {\n  VuetifyLocale,\n  Lang as ILang,\n} from 'vuetify/types/services/lang'\n\nconst LANG_PREFIX = '$vuetify.'\nconst fallback = Symbol('Lang fallback')\n\nfunction getTranslation (\n  locale: VuetifyLocale,\n  key: string,\n  usingFallback = false\n): string {\n  const shortKey = key.replace(LANG_PREFIX, '')\n  let translation = getObjectValueByPath(locale, shortKey, fallback) as string | typeof fallback\n\n  if (translation === fallback) {\n    if (usingFallback) {\n      consoleError(`Translation key \"${shortKey}\" not found in fallback`)\n      translation = key\n    } else {\n      consoleWarn(`Translation key \"${shortKey}\" not found, falling back to default`)\n      translation = getTranslation(en, key, true)\n    }\n  }\n\n  return translation\n}\n\nexport class Lang extends Service implements ILang {\n  static property = 'lang'\n\n  public locales: Record<string, VuetifyLocale>\n\n  public current: string\n\n  private translator: ((key: string, ...params: any[]) => string) | undefined\n\n  constructor (options: Partial<ILang> = {}) {\n    super()\n    this.current = options.current || 'en'\n    this.locales = Object.assign({ en }, options.locales)\n    this.translator = options.t\n  }\n\n  public t (key: string, ...params: any[]) {\n    if (!key.startsWith(LANG_PREFIX)) return this.replace(key, params)\n\n    if (this.translator) return this.translator(key, ...params)\n\n    const translation = getTranslation(this.locales[this.current], key)\n\n    return this.replace(translation, params)\n  }\n\n  private replace (str: string, params: any[]) {\n    return str.replace(/\\{(\\d+)\\}/g, (match: string, index: string) => {\n      /* istanbul ignore next */\n      return String(params[+index])\n    })\n  }\n}\n","// Contracts\nimport { VuetifyServiceContract } from 'vuetify/types/services/index'\n\n// Types\nimport Vue from 'vue'\n\nexport class Service implements VuetifyServiceContract {\n  framework = {}\n\n  init (root: Vue, ssrContext?: object) {}\n}\n","/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport * as ThemeUtils from './utils'\n\n// Types\nimport Vue from 'vue'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemes,\n  VuetifyThemeVariant,\n  Theme as ITheme,\n} from 'vuetify/types/services/theme'\n\nexport class Theme extends Service {\n  static property = 'theme'\n\n  public disabled = false\n\n  public options!: ITheme['options']\n\n  public styleEl?: HTMLStyleElement\n\n  public themes: VuetifyThemes = {\n    light: {\n      primary: '#1976D2',   // blue.darken2\n      secondary: '#424242', // grey.darken3\n      accent: '#82B1FF',    // blue.accent1\n      error: '#FF5252',     // red.accent2\n      info: '#2196F3',      // blue.base\n      success: '#4CAF50',   // green.base\n      warning: '#FB8C00',    // amber.base\n    },\n    dark: {\n      primary: '#2196F3',   // blue.base\n      secondary: '#424242', // grey.darken3\n      accent: '#FF4081',    // pink.accent-2\n      error: '#FF5252',     // red.accent2\n      info: '#2196F3',      // blue.base\n      success: '#4CAF50',   // green.base\n      warning: '#FB8C00',    // amber.base\n    },\n  }\n\n  public defaults: VuetifyThemes = this.themes\n\n  private isDark = null as boolean | null\n\n  private vueInstance = null as Vue | null\n\n  private vueMeta = null as any | null\n\n  constructor (options: Partial<ITheme> = {}) {\n    super()\n    if (options.disable) {\n      this.disabled = true\n\n      return\n    }\n\n    this.options = options.options!\n\n    this.dark = Boolean(options.dark)\n    const themes = options.themes || {} as never\n\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false),\n    }\n  }\n\n  // When setting css, check for element\n  // and apply new values\n  set css (val: string) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23()\n      }\n      return\n    }\n    this.checkOrCreateStyleElement() && (this.styleEl!.innerHTML = val)\n  }\n\n  set dark (val: boolean) {\n    const oldDark = this.isDark\n\n    this.isDark = val\n    // Only apply theme after dark\n    // has already been set before\n    oldDark != null && this.applyTheme()\n  }\n\n  get dark () {\n    return Boolean(this.isDark)\n  }\n\n  // Apply current theme default\n  // only called on client side\n  public applyTheme (): void {\n    if (this.disabled) return this.clearCss()\n\n    this.css = this.generatedStyles\n  }\n\n  public clearCss (): void {\n    this.css = ''\n  }\n\n  // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n  public init (root: Vue, ssrContext?: any): void {\n    if (this.disabled) return\n\n    /* istanbul ignore else */\n    if ((root as any).$meta) {\n      this.initVueMeta(root)\n    } else if (ssrContext) {\n      this.initSSR(ssrContext)\n    }\n\n    this.initTheme()\n  }\n\n  // Allows for you to set target theme\n  public setTheme (theme: 'light' | 'dark', value: object) {\n    this.themes[theme] = Object.assign(this.themes[theme], value)\n    this.applyTheme()\n  }\n\n  // Reset theme defaults\n  public resetThemes () {\n    this.themes.light = Object.assign({}, this.defaults.light)\n    this.themes.dark = Object.assign({}, this.defaults.dark)\n    this.applyTheme()\n  }\n\n  // Check for existence of style element\n  private checkOrCreateStyleElement (): boolean {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet') as HTMLStyleElement\n\n    /* istanbul ignore next */\n    if (this.styleEl) return true\n\n    this.genStyleElement() // If doesn't have it, create it\n\n    return Boolean(this.styleEl)\n  }\n\n  private fillVariant (\n    theme: Partial<VuetifyThemeVariant> = {},\n    dark: boolean\n  ): VuetifyThemeVariant {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light']\n\n    return Object.assign({},\n      defaultTheme,\n      theme\n    )\n  }\n\n  // Generate the style element\n  // if applicable\n  private genStyleElement (): void {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return\n\n    /* istanbul ignore next */\n    const options = this.options || {}\n\n    this.styleEl = document.createElement('style')\n    this.styleEl.type = 'text/css'\n    this.styleEl.id = 'vuetify-theme-stylesheet'\n\n    if (options.cspNonce) {\n      this.styleEl.setAttribute('nonce', options.cspNonce)\n    }\n\n    document.head.appendChild(this.styleEl)\n  }\n\n  private initVueMeta (root: any) {\n    this.vueMeta = root.$meta()\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23()\n      })\n      return\n    }\n\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo'\n    const metaInfo = root.$options[metaKeyName] || {}\n\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || []\n\n      const vuetifyStylesheet = metaInfo.style.find((s: any) => s.id === 'vuetify-theme-stylesheet')\n\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce,\n        })\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles\n      }\n\n      return metaInfo\n    }\n  }\n\n  private applyVueMeta23 () {\n    const { set } = this.vueMeta.addApp('vuetify')\n\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: (this.options || {}).cspNonce,\n      }],\n    })\n  }\n\n  private initSSR (ssrContext?: any) {\n    const options = this.options || {}\n    // SSR\n    const nonce = options.cspNonce ? ` nonce=\"${options.cspNonce}\"` : ''\n    ssrContext.head = ssrContext.head || ''\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`\n  }\n\n  private initTheme () {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return\n\n    // If we get here somehow, ensure\n    // existing instance is removed\n    if (this.vueInstance) this.vueInstance.$destroy()\n\n    // Use Vue instance to track reactivity\n    // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n    this.vueInstance = new Vue({\n      data: { themes: this.themes },\n\n      watch: {\n        themes: {\n          immediate: true,\n          deep: true,\n          handler: () => this.applyTheme(),\n        },\n      },\n    })\n  }\n\n  get currentTheme () {\n    const target = this.dark ? 'dark' : 'light'\n\n    return this.themes[target]\n  }\n\n  get generatedStyles (): string {\n    const theme = this.parsedTheme\n    /* istanbul ignore next */\n    const options = this.options || {}\n    let css\n\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme)\n      /* istanbul ignore if */\n      if (css != null) return css\n    }\n\n    css = ThemeUtils.genStyles(theme, options.customProperties)\n\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css)\n    }\n\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css)\n    }\n\n    return css\n  }\n\n  get parsedTheme (): VuetifyParsedTheme {\n    /* istanbul ignore next */\n    const theme = this.currentTheme || {}\n    return ThemeUtils.parse(theme)\n  }\n\n  // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n  private get isVueMeta23 (): boolean {\n    return typeof this.vueMeta.addApp === 'function'\n  }\n}\n","import { colorToInt, intToHex, colorToHex, ColorInt } from '../../util/colorUtils'\nimport * as sRGB from '../../util/color/transformSRGB'\nimport * as LAB from '../../util/color/transformCIELAB'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemeItem,\n} from 'vuetify/types/services/theme'\n\nexport function parse (\n  theme: Record<string, VuetifyThemeItem>,\n  isItem = false\n): VuetifyParsedTheme {\n  const { anchor, ...variant } = theme\n  const colors = Object.keys(variant)\n  const parsedTheme: any = {}\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    if (value == null) continue\n\n    if (isItem) {\n      /* istanbul ignore else */\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\n        parsedTheme[name] = colorToHex(value)\n      }\n    } else if (typeof value === 'object') {\n      parsedTheme[name] = parse(value, true)\n    } else {\n      parsedTheme[name] = genVariations(name, colorToInt(value))\n    }\n  }\n\n  if (!isItem) {\n    parsedTheme.anchor = anchor || parsedTheme.base || parsedTheme.primary.base\n  }\n\n  return parsedTheme\n}\n\n/**\n * Generate the CSS for a base color (.primary)\n */\nconst genBaseColor = (name: string, value: string): string => {\n  return `\n.v-application .${name} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\n/**\n * Generate the CSS for a variant color (.primary.darken-2)\n */\nconst genVariantColor = (name: string, variant: string, value: string): string => {\n  const [type, n] = variant.split(/(\\d)/, 2)\n  return `\n.v-application .${name}.${type}-${n} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text.text--${type}-${n} {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\nconst genColorVariableName = (name: string, variant = 'base'): string => `--v-${name}-${variant}`\n\nconst genColorVariable = (name: string, variant = 'base'): string => `var(${genColorVariableName(name, variant)})`\n\nexport function genStyles (theme: VuetifyParsedTheme, cssVar = false): string {\n  const { anchor, ...variant } = theme\n  const colors = Object.keys(variant)\n\n  if (!colors.length) return ''\n\n  let variablesCss = ''\n  let css = ''\n\n  const aColor = cssVar ? genColorVariable('anchor') : anchor\n  css += `.v-application a { color: ${aColor}; }`\n  cssVar && (variablesCss += `  ${genColorVariableName('anchor')}: ${anchor};\\n`)\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base)\n    cssVar && (variablesCss += `  ${genColorVariableName(name)}: ${value.base};\\n`)\n\n    const variants = Object.keys(value)\n    for (let i = 0; i < variants.length; ++i) {\n      const variant = variants[i]\n      const variantValue = value[variant]\n      if (variant === 'base') continue\n\n      css += genVariantColor(name, variant, cssVar ? genColorVariable(name, variant) : variantValue)\n      cssVar && (variablesCss += `  ${genColorVariableName(name, variant)}: ${variantValue};\\n`)\n    }\n  }\n\n  if (cssVar) {\n    variablesCss = `:root {\\n${variablesCss}}\\n\\n`\n  }\n\n  return variablesCss + css\n}\n\nexport function genVariations (name: string, value: ColorInt): Record<string, string> {\n  const values: Record<string, string> = {\n    base: intToHex(value),\n  }\n\n  for (let i = 5; i > 0; --i) {\n    values[`lighten${i}`] = intToHex(lighten(value, i))\n  }\n\n  for (let i = 1; i <= 4; ++i) {\n    values[`darken${i}`] = intToHex(darken(value, i))\n  }\n\n  return values\n}\n\nexport function lighten (value: ColorInt, amount: number): ColorInt {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] + amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n\nexport function darken (value: ColorInt, amount: number): ColorInt {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n","// extracted by mini-css-extract-plugin","import { VNode } from 'vue'\nimport Themeable from '../mixins/themeable'\nimport mixins from './mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'theme-provider',\n\n  props: {\n    root: Boolean,\n  },\n\n  computed: {\n    isDark (): boolean {\n      return this.root ? this.rootIsDark : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    return this.$slots.default! && this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n  },\n})\n","import { XYZ, LAB } from '../colorUtils'\n\nconst delta = 0.20689655172413793 // 6÷29\n\nconst cielabForwardTransform = (t: number): number => (\n  t > delta ** 3\n    ? Math.cbrt(t)\n    : (t / (3 * delta ** 2)) + 4 / 29\n)\n\nconst cielabReverseTransform = (t: number): number => (\n  t > delta\n    ? t ** 3\n    : (3 * delta ** 2) * (t - 4 / 29)\n)\n\nexport function fromXYZ (xyz: XYZ): LAB {\n  const transform = cielabForwardTransform\n  const transformedY = transform(xyz[1])\n\n  return [\n    116 * transformedY - 16,\n    500 * (transform(xyz[0] / 0.95047) - transformedY),\n    200 * (transformedY - transform(xyz[2] / 1.08883)),\n  ]\n}\n\nexport function toXYZ (lab: LAB): XYZ {\n  const transform = cielabReverseTransform\n  const Ln = (lab[0] + 16) / 116\n  return [\n    transform(Ln + lab[1] / 500) * 0.95047,\n    transform(Ln),\n    transform(Ln - lab[2] / 200) * 1.08883,\n  ]\n}\n","import { ColorInt, XYZ } from '../colorUtils'\nimport { clamp } from '../../util/helpers'\n\n// For converting XYZ to sRGB\nconst srgbForwardMatrix = [\n  [3.2406, -1.5372, -0.4986],\n  [-0.9689, 1.8758, 0.0415],\n  [0.0557, -0.2040, 1.0570],\n]\n\n// Forward gamma adjust\nconst srgbForwardTransform = (C: number): number => (\n  C <= 0.0031308\n    ? C * 12.92\n    : 1.055 * C ** (1 / 2.4) - 0.055\n)\n\n// For converting sRGB to XYZ\nconst srgbReverseMatrix = [\n  [0.4124, 0.3576, 0.1805],\n  [0.2126, 0.7152, 0.0722],\n  [0.0193, 0.1192, 0.9505],\n]\n\n// Reverse gamma adjust\nconst srgbReverseTransform = (C: number): number => (\n  C <= 0.04045\n    ? C / 12.92\n    : ((C + 0.055) / 1.055) ** 2.4\n)\n\nexport function fromXYZ (xyz: XYZ): ColorInt {\n  const rgb = Array(3)\n  const transform = srgbForwardTransform\n  const matrix = srgbForwardMatrix\n\n  // Matrix transform, then gamma adjustment\n  for (let i = 0; i < 3; ++i) {\n    rgb[i] = Math.round(clamp(transform(\n      matrix[i][0] * xyz[0] +\n      matrix[i][1] * xyz[1] +\n      matrix[i][2] * xyz[2]\n    )) * 255)\n  }\n\n  // Rescale back to [0, 255]\n  return (rgb[0] << 16) + (rgb[1] << 8) + (rgb[2] << 0)\n}\n\nexport function toXYZ (rgb: ColorInt): XYZ {\n  const xyz: XYZ = [0, 0, 0]\n  const transform = srgbReverseTransform\n  const matrix = srgbReverseMatrix\n\n  // Rescale from [0, 255] to [0, 1] then adjust sRGB gamma to linear RGB\n  const r = transform((rgb >> 16 & 0xff) / 255)\n  const g = transform((rgb >> 8 & 0xff) / 255)\n  const b = transform((rgb >> 0 & 0xff) / 255)\n\n  // Matrix color space transform\n  for (let i = 0; i < 3; ++i) {\n    xyz[i] = matrix[i][0] * r + matrix[i][1] * g + matrix[i][2] * b\n  }\n\n  return xyz\n}\n","import { consoleWarn } from './console'\nimport { chunk, padEnd } from './helpers'\nimport { toXYZ } from './color/transformSRGB'\n\nexport type ColorInt = number\nexport type XYZ = [number, number, number]\nexport type LAB = [number, number, number]\nexport type HSV = { h: number, s: number, v: number }\nexport type HSVA = HSV & { a: number }\nexport type RGB = { r: number, g: number, b: number }\nexport type RGBA = RGB & { a: number }\nexport type HSL = { h: number, s: number, l: number }\nexport type HSLA = HSL & { a: number }\nexport type Hex = string\nexport type Hexa = string\nexport type Color = string | number | {}\n\nexport function colorToInt (color: Color): ColorInt {\n  let rgb\n\n  if (typeof color === 'number') {\n    rgb = color\n  } else if (typeof color === 'string') {\n    let c = color[0] === '#' ? color.substring(1) : color\n    if (c.length === 3) {\n      c = c.split('').map(char => char + char).join('')\n    }\n    if (c.length !== 6) {\n      consoleWarn(`'${color}' is not a valid rgb color`)\n    }\n    rgb = parseInt(c, 16)\n  } else {\n    throw new TypeError(`Colors can only be numbers or strings, recieved ${color == null ? color : color.constructor.name} instead`)\n  }\n\n  if (rgb < 0) {\n    consoleWarn(`Colors cannot be negative: '${color}'`)\n    rgb = 0\n  } else if (rgb > 0xffffff || isNaN(rgb)) {\n    consoleWarn(`'${color}' is not a valid rgb color`)\n    rgb = 0xffffff\n  }\n\n  return rgb\n}\n\nexport function intToHex (color: ColorInt): string {\n  let hexColor: string = color.toString(16)\n\n  if (hexColor.length < 6) hexColor = '0'.repeat(6 - hexColor.length) + hexColor\n\n  return '#' + hexColor\n}\n\nexport function colorToHex (color: Color): string {\n  return intToHex(colorToInt(color))\n}\n\n/**\n * Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color HSVA color as an array [0-360, 0-1, 0-1, 0-1]\n */\nexport function HSVAtoRGBA (hsva: HSVA): RGBA {\n  const { h, s, v, a } = hsva\n  const f = (n: number) => {\n    const k = (n + (h / 60)) % 6\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)\n  }\n\n  const rgb = [f(5), f(3), f(1)].map(v => Math.round(v * 255))\n\n  return { r: rgb[0], g: rgb[1], b: rgb[2], a }\n}\n\n/**\n * Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color RGBA color as an array [0-255, 0-255, 0-255, 0-1]\n */\nexport function RGBAtoHSVA (rgba: RGBA): HSVA {\n  if (!rgba) return { h: 0, s: 1, v: 1, a: 1 }\n\n  const r = rgba.r / 255\n  const g = rgba.g / 255\n  const b = rgba.b / 255\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h = 0\n\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + ((g - b) / (max - min)))\n    } else if (max === g) {\n      h = 60 * (2 + ((b - r) / (max - min)))\n    } else if (max === b) {\n      h = 60 * (4 + ((r - g) / (max - min)))\n    }\n  }\n\n  if (h < 0) h = h + 360\n\n  const s = max === 0 ? 0 : (max - min) / max\n  const hsv = [h, s, max]\n\n  return { h: hsv[0], s: hsv[1], v: hsv[2], a: rgba.a }\n}\n\nexport function HSVAtoHSLA (hsva: HSVA): HSLA {\n  const { h, s, v, a } = hsva\n\n  const l = v - (v * s / 2)\n\n  const sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l)\n\n  return { h, s: sprime, l, a }\n}\n\nexport function HSLAtoHSVA (hsl: HSLA): HSVA {\n  const { h, s, l, a } = hsl\n\n  const v = l + s * Math.min(l, 1 - l)\n\n  const sprime = v === 0 ? 0 : 2 - (2 * l / v)\n\n  return { h, s: sprime, v, a }\n}\n\nexport function RGBAtoCSS (rgba: RGBA): string {\n  return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`\n}\n\nexport function RGBtoCSS (rgba: RGBA): string {\n  return RGBAtoCSS({ ...rgba, a: 1 })\n}\n\nexport function RGBAtoHex (rgba: RGBA): Hex {\n  const toHex = (v: number) => {\n    const h = Math.round(v).toString(16)\n    return ('00'.substr(0, 2 - h.length) + h).toUpperCase()\n  }\n\n  return `#${[\n    toHex(rgba.r),\n    toHex(rgba.g),\n    toHex(rgba.b),\n    toHex(Math.round(rgba.a * 255)),\n  ].join('')}`\n}\n\nexport function HexToRGBA (hex: Hex): RGBA {\n  const rgba = chunk(hex.slice(1), 2).map((c: string) => parseInt(c, 16))\n\n  return {\n    r: rgba[0],\n    g: rgba[1],\n    b: rgba[2],\n    a: Math.round((rgba[3] / 255) * 100) / 100,\n  }\n}\n\nexport function HexToHSVA (hex: Hex): HSVA {\n  const rgb = HexToRGBA(hex)\n  return RGBAtoHSVA(rgb)\n}\n\nexport function HSVAtoHex (hsva: HSVA): Hex {\n  return RGBAtoHex(HSVAtoRGBA(hsva))\n}\n\nexport function parseHex (hex: string): Hex {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1)\n  }\n\n  hex = hex.replace(/([^0-9a-f])/gi, 'F')\n\n  if (hex.length === 3) {\n    hex = hex.split('').map(x => x + x).join('')\n  }\n\n  if (hex.length === 6) {\n    hex = padEnd(hex, 8, 'F')\n  } else {\n    hex = padEnd(padEnd(hex, 6), 8, 'F')\n  }\n\n  return `#${hex}`.toUpperCase().substr(0, 9)\n}\n\nexport function RGBtoInt (rgba: RGBA): ColorInt {\n  return (rgba.r << 16) + (rgba.g << 8) + rgba.b\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n *\n * @param c1 First color\n * @param c2 Second color\n */\nexport function contrastRatio (c1: RGBA, c2: RGBA): number {\n  const [, y1] = toXYZ(RGBtoInt(c1))\n  const [, y2] = toXYZ(RGBtoInt(c2))\n\n  return (Math.max(y1, y2) + 0.05) / (Math.min(y1, y2) + 0.05)\n}\n","const red = Object.freeze({\n  base: '#f44336',\n  lighten5: '#ffebee',\n  lighten4: '#ffcdd2',\n  lighten3: '#ef9a9a',\n  lighten2: '#e57373',\n  lighten1: '#ef5350',\n  darken1: '#e53935',\n  darken2: '#d32f2f',\n  darken3: '#c62828',\n  darken4: '#b71c1c',\n  accent1: '#ff8a80',\n  accent2: '#ff5252',\n  accent3: '#ff1744',\n  accent4: '#d50000',\n})\n\nconst pink = Object.freeze({\n  base: '#e91e63',\n  lighten5: '#fce4ec',\n  lighten4: '#f8bbd0',\n  lighten3: '#f48fb1',\n  lighten2: '#f06292',\n  lighten1: '#ec407a',\n  darken1: '#d81b60',\n  darken2: '#c2185b',\n  darken3: '#ad1457',\n  darken4: '#880e4f',\n  accent1: '#ff80ab',\n  accent2: '#ff4081',\n  accent3: '#f50057',\n  accent4: '#c51162',\n})\n\nconst purple = Object.freeze({\n  base: '#9c27b0',\n  lighten5: '#f3e5f5',\n  lighten4: '#e1bee7',\n  lighten3: '#ce93d8',\n  lighten2: '#ba68c8',\n  lighten1: '#ab47bc',\n  darken1: '#8e24aa',\n  darken2: '#7b1fa2',\n  darken3: '#6a1b9a',\n  darken4: '#4a148c',\n  accent1: '#ea80fc',\n  accent2: '#e040fb',\n  accent3: '#d500f9',\n  accent4: '#aa00ff',\n})\n\nconst deepPurple = Object.freeze({\n  base: '#673ab7',\n  lighten5: '#ede7f6',\n  lighten4: '#d1c4e9',\n  lighten3: '#b39ddb',\n  lighten2: '#9575cd',\n  lighten1: '#7e57c2',\n  darken1: '#5e35b1',\n  darken2: '#512da8',\n  darken3: '#4527a0',\n  darken4: '#311b92',\n  accent1: '#b388ff',\n  accent2: '#7c4dff',\n  accent3: '#651fff',\n  accent4: '#6200ea',\n})\n\nconst indigo = Object.freeze({\n  base: '#3f51b5',\n  lighten5: '#e8eaf6',\n  lighten4: '#c5cae9',\n  lighten3: '#9fa8da',\n  lighten2: '#7986cb',\n  lighten1: '#5c6bc0',\n  darken1: '#3949ab',\n  darken2: '#303f9f',\n  darken3: '#283593',\n  darken4: '#1a237e',\n  accent1: '#8c9eff',\n  accent2: '#536dfe',\n  accent3: '#3d5afe',\n  accent4: '#304ffe',\n})\n\nconst blue = Object.freeze({\n  base: '#2196f3',\n  lighten5: '#e3f2fd',\n  lighten4: '#bbdefb',\n  lighten3: '#90caf9',\n  lighten2: '#64b5f6',\n  lighten1: '#42a5f5',\n  darken1: '#1e88e5',\n  darken2: '#1976d2',\n  darken3: '#1565c0',\n  darken4: '#0d47a1',\n  accent1: '#82b1ff',\n  accent2: '#448aff',\n  accent3: '#2979ff',\n  accent4: '#2962ff',\n})\n\nconst lightBlue = Object.freeze({\n  base: '#03a9f4',\n  lighten5: '#e1f5fe',\n  lighten4: '#b3e5fc',\n  lighten3: '#81d4fa',\n  lighten2: '#4fc3f7',\n  lighten1: '#29b6f6',\n  darken1: '#039be5',\n  darken2: '#0288d1',\n  darken3: '#0277bd',\n  darken4: '#01579b',\n  accent1: '#80d8ff',\n  accent2: '#40c4ff',\n  accent3: '#00b0ff',\n  accent4: '#0091ea',\n})\n\nconst cyan = Object.freeze({\n  base: '#00bcd4',\n  lighten5: '#e0f7fa',\n  lighten4: '#b2ebf2',\n  lighten3: '#80deea',\n  lighten2: '#4dd0e1',\n  lighten1: '#26c6da',\n  darken1: '#00acc1',\n  darken2: '#0097a7',\n  darken3: '#00838f',\n  darken4: '#006064',\n  accent1: '#84ffff',\n  accent2: '#18ffff',\n  accent3: '#00e5ff',\n  accent4: '#00b8d4',\n})\n\nconst teal = Object.freeze({\n  base: '#009688',\n  lighten5: '#e0f2f1',\n  lighten4: '#b2dfdb',\n  lighten3: '#80cbc4',\n  lighten2: '#4db6ac',\n  lighten1: '#26a69a',\n  darken1: '#00897b',\n  darken2: '#00796b',\n  darken3: '#00695c',\n  darken4: '#004d40',\n  accent1: '#a7ffeb',\n  accent2: '#64ffda',\n  accent3: '#1de9b6',\n  accent4: '#00bfa5',\n})\n\nconst green = Object.freeze({\n  base: '#4caf50',\n  lighten5: '#e8f5e9',\n  lighten4: '#c8e6c9',\n  lighten3: '#a5d6a7',\n  lighten2: '#81c784',\n  lighten1: '#66bb6a',\n  darken1: '#43a047',\n  darken2: '#388e3c',\n  darken3: '#2e7d32',\n  darken4: '#1b5e20',\n  accent1: '#b9f6ca',\n  accent2: '#69f0ae',\n  accent3: '#00e676',\n  accent4: '#00c853',\n})\n\nconst lightGreen = Object.freeze({\n  base: '#8bc34a',\n  lighten5: '#f1f8e9',\n  lighten4: '#dcedc8',\n  lighten3: '#c5e1a5',\n  lighten2: '#aed581',\n  lighten1: '#9ccc65',\n  darken1: '#7cb342',\n  darken2: '#689f38',\n  darken3: '#558b2f',\n  darken4: '#33691e',\n  accent1: '#ccff90',\n  accent2: '#b2ff59',\n  accent3: '#76ff03',\n  accent4: '#64dd17',\n})\n\nconst lime = Object.freeze({\n  base: '#cddc39',\n  lighten5: '#f9fbe7',\n  lighten4: '#f0f4c3',\n  lighten3: '#e6ee9c',\n  lighten2: '#dce775',\n  lighten1: '#d4e157',\n  darken1: '#c0ca33',\n  darken2: '#afb42b',\n  darken3: '#9e9d24',\n  darken4: '#827717',\n  accent1: '#f4ff81',\n  accent2: '#eeff41',\n  accent3: '#c6ff00',\n  accent4: '#aeea00',\n})\n\nconst yellow = Object.freeze({\n  base: '#ffeb3b',\n  lighten5: '#fffde7',\n  lighten4: '#fff9c4',\n  lighten3: '#fff59d',\n  lighten2: '#fff176',\n  lighten1: '#ffee58',\n  darken1: '#fdd835',\n  darken2: '#fbc02d',\n  darken3: '#f9a825',\n  darken4: '#f57f17',\n  accent1: '#ffff8d',\n  accent2: '#ffff00',\n  accent3: '#ffea00',\n  accent4: '#ffd600',\n})\n\nconst amber = Object.freeze({\n  base: '#ffc107',\n  lighten5: '#fff8e1',\n  lighten4: '#ffecb3',\n  lighten3: '#ffe082',\n  lighten2: '#ffd54f',\n  lighten1: '#ffca28',\n  darken1: '#ffb300',\n  darken2: '#ffa000',\n  darken3: '#ff8f00',\n  darken4: '#ff6f00',\n  accent1: '#ffe57f',\n  accent2: '#ffd740',\n  accent3: '#ffc400',\n  accent4: '#ffab00',\n})\n\nconst orange = Object.freeze({\n  base: '#ff9800',\n  lighten5: '#fff3e0',\n  lighten4: '#ffe0b2',\n  lighten3: '#ffcc80',\n  lighten2: '#ffb74d',\n  lighten1: '#ffa726',\n  darken1: '#fb8c00',\n  darken2: '#f57c00',\n  darken3: '#ef6c00',\n  darken4: '#e65100',\n  accent1: '#ffd180',\n  accent2: '#ffab40',\n  accent3: '#ff9100',\n  accent4: '#ff6d00',\n})\n\nconst deepOrange = Object.freeze({\n  base: '#ff5722',\n  lighten5: '#fbe9e7',\n  lighten4: '#ffccbc',\n  lighten3: '#ffab91',\n  lighten2: '#ff8a65',\n  lighten1: '#ff7043',\n  darken1: '#f4511e',\n  darken2: '#e64a19',\n  darken3: '#d84315',\n  darken4: '#bf360c',\n  accent1: '#ff9e80',\n  accent2: '#ff6e40',\n  accent3: '#ff3d00',\n  accent4: '#dd2c00',\n})\n\nconst brown = Object.freeze({\n  base: '#795548',\n  lighten5: '#efebe9',\n  lighten4: '#d7ccc8',\n  lighten3: '#bcaaa4',\n  lighten2: '#a1887f',\n  lighten1: '#8d6e63',\n  darken1: '#6d4c41',\n  darken2: '#5d4037',\n  darken3: '#4e342e',\n  darken4: '#3e2723',\n})\n\nconst blueGrey = Object.freeze({\n  base: '#607d8b',\n  lighten5: '#eceff1',\n  lighten4: '#cfd8dc',\n  lighten3: '#b0bec5',\n  lighten2: '#90a4ae',\n  lighten1: '#78909c',\n  darken1: '#546e7a',\n  darken2: '#455a64',\n  darken3: '#37474f',\n  darken4: '#263238',\n})\n\nconst grey = Object.freeze({\n  base: '#9e9e9e',\n  lighten5: '#fafafa',\n  lighten4: '#f5f5f5',\n  lighten3: '#eeeeee',\n  lighten2: '#e0e0e0',\n  lighten1: '#bdbdbd',\n  darken1: '#757575',\n  darken2: '#616161',\n  darken3: '#424242',\n  darken4: '#212121',\n})\n\nconst shades = Object.freeze({\n  black: '#000000',\n  white: '#ffffff',\n  transparent: 'transparent',\n})\n\nexport default Object.freeze({\n  red,\n  pink,\n  purple,\n  deepPurple,\n  indigo,\n  blue,\n  lightBlue,\n  cyan,\n  teal,\n  green,\n  lightGreen,\n  lime,\n  yellow,\n  amber,\n  orange,\n  deepOrange,\n  brown,\n  blueGrey,\n  grey,\n  shades,\n})\n","function createMessage (message: string, vm?: any, parent?: any): string | void {\n  if (parent) {\n    vm = {\n      _isVue: true,\n      $parent: parent,\n      $options: vm,\n    }\n  }\n\n  if (vm) {\n    // Only show each message once per instance\n    vm.$_alreadyWarned = vm.$_alreadyWarned || []\n    if (vm.$_alreadyWarned.includes(message)) return\n    vm.$_alreadyWarned.push(message)\n  }\n\n  return `[Vuetify] ${message}` + (\n    vm ? generateComponentTrace(vm) : ''\n  )\n}\n\nexport function consoleInfo (message: string, vm?: any, parent?: any): void {\n  const newMessage = createMessage(message, vm, parent)\n  newMessage != null && console.info(newMessage)\n}\n\nexport function consoleWarn (message: string, vm?: any, parent?: any): void {\n  const newMessage = createMessage(message, vm, parent)\n  newMessage != null && console.warn(newMessage)\n}\n\nexport function consoleError (message: string, vm?: any, parent?: any): void {\n  const newMessage = createMessage(message, vm, parent)\n  newMessage != null && console.error(newMessage)\n}\n\nexport function deprecate (original: string, replacement: string, vm?: any, parent?: any) {\n  consoleWarn(`[UPGRADE] '${original}' is deprecated, use '${replacement}' instead.`, vm, parent)\n}\nexport function breaking (original: string, replacement: string, vm?: any, parent?: any) {\n  consoleError(`[BREAKING] '${original}' has been removed, use '${replacement}' instead. For more information, see the upgrade guide https://github.com/vuetifyjs/vuetify/releases/tag/v2.0.0#user-content-upgrade-guide`, vm, parent)\n}\nexport function removed (original: string, vm?: any, parent?: any) {\n  consoleWarn(`[REMOVED] '${original}' has been removed. You can safely omit it.`, vm, parent)\n}\n\n/**\n * Shamelessly stolen from vuejs/vue/blob/dev/src/core/util/debug.js\n */\n\nconst classifyRE = /(?:^|[-_])(\\w)/g\nconst classify = (str: string) => str\n  .replace(classifyRE, c => c.toUpperCase())\n  .replace(/[-_]/g, '')\n\nfunction formatComponentName (vm: any, includeFile?: boolean): string {\n  if (vm.$root === vm) {\n    return '<Root>'\n  }\n  const options = typeof vm === 'function' && vm.cid != null\n    ? vm.options\n    : vm._isVue\n      ? vm.$options || vm.constructor.options\n      : vm || {}\n  let name = options.name || options._componentTag\n  const file = options.__file\n  if (!name && file) {\n    const match = file.match(/([^/\\\\]+)\\.vue$/)\n    name = match && match[1]\n  }\n\n  return (\n    (name ? `<${classify(name)}>` : `<Anonymous>`) +\n    (file && includeFile !== false ? ` at ${file}` : '')\n  )\n}\n\nfunction generateComponentTrace (vm: any): string {\n  if (vm._isVue && vm.$parent) {\n    const tree: any[] = []\n    let currentRecursiveSequence = 0\n    while (vm) {\n      if (tree.length > 0) {\n        const last: any = tree[tree.length - 1]\n        if (last.constructor === vm.constructor) {\n          currentRecursiveSequence++\n          vm = vm.$parent\n          continue\n        } else if (currentRecursiveSequence > 0) {\n          tree[tree.length - 1] = [last, currentRecursiveSequence]\n          currentRecursiveSequence = 0\n        }\n      }\n      tree.push(vm)\n      vm = vm.$parent\n    }\n    return '\\n\\nfound in\\n\\n' + tree\n      .map((vm, i) => `${\n        i === 0 ? '---> ' : ' '.repeat(5 + i * 2)\n      }${\n        Array.isArray(vm)\n          ? `${formatComponentName(vm[0])}... (${vm[1]} recursive calls)`\n          : formatComponentName(vm)\n      }`)\n      .join('\\n')\n  } else {\n    return `\\n\\n(found in ${formatComponentName(vm)})`\n  }\n}\n","import { VNodeData } from 'vue'\n\n/**\n * Removes duplicate `@input` listeners when\n * using v-model with functional components\n *\n * @see https://github.com/vuetifyjs/vuetify/issues/4460\n */\nexport default function dedupeModelListeners (data: VNodeData): void {\n  if (data.model && data.on && data.on.input) {\n    if (Array.isArray(data.on.input)) {\n      const i = data.on.input.indexOf(data.model.callback)\n      if (i > -1) data.on.input.splice(i, 1)\n    } else {\n      delete data.on.input\n    }\n  }\n}\n","import Vue from 'vue'\nimport { VNode, VNodeDirective, FunctionalComponentOptions } from 'vue/types'\nimport { VuetifyIcon } from 'vuetify/types/services/icons'\n\nexport function createSimpleFunctional (\n  c: string,\n  el = 'div',\n  name?: string\n) {\n  return Vue.extend({\n    name: name || c.replace(/__/g, '-'),\n\n    functional: true,\n\n    render (h, { data, children }): VNode {\n      data.staticClass = (`${c} ${data.staticClass || ''}`).trim()\n\n      return h(el, data, children)\n    },\n  })\n}\n\nfunction mergeTransitions (\n  transitions: undefined | Function | Function[],\n  array: Function[]\n) {\n  if (Array.isArray(transitions)) return transitions.concat(array)\n  if (transitions) array.push(transitions)\n  return array\n}\n\nexport function createSimpleTransition (\n  name: string,\n  origin = 'top center 0',\n  mode?: string\n): FunctionalComponentOptions {\n  return {\n    name,\n\n    functional: true,\n\n    props: {\n      group: {\n        type: Boolean,\n        default: false,\n      },\n      hideOnLeave: {\n        type: Boolean,\n        default: false,\n      },\n      leaveAbsolute: {\n        type: Boolean,\n        default: false,\n      },\n      mode: {\n        type: String,\n        default: mode,\n      },\n      origin: {\n        type: String,\n        default: origin,\n      },\n    },\n\n    render (h, context): VNode {\n      const tag = `transition${context.props.group ? '-group' : ''}`\n      context.data = context.data || {}\n      context.data.props = {\n        name,\n        mode: context.props.mode,\n      }\n      context.data.on = context.data.on || {}\n      if (!Object.isExtensible(context.data.on)) {\n        context.data.on = { ...context.data.on }\n      }\n\n      const ourBeforeEnter: Function[] = []\n      const ourLeave: Function[] = []\n      const absolute = (el: HTMLElement) => (el.style.position = 'absolute')\n\n      ourBeforeEnter.push((el: HTMLElement) => {\n        el.style.transformOrigin = context.props.origin\n        el.style.webkitTransformOrigin = context.props.origin\n      })\n\n      if (context.props.leaveAbsolute) ourLeave.push(absolute)\n      if (context.props.hideOnLeave) {\n        ourLeave.push((el: HTMLElement) => (el.style.display = 'none'))\n      }\n\n      const { beforeEnter, leave } = context.data.on\n\n      // Type says Function | Function[] but\n      // will only work if provided a function\n      context.data.on.beforeEnter = () => mergeTransitions(beforeEnter, ourBeforeEnter)\n      context.data.on.leave = mergeTransitions(leave, ourLeave)\n\n      return h(tag, context.data, context.children)\n    },\n  }\n}\n\nexport function createJavaScriptTransition (\n  name: string,\n  functions: Record<string, any>,\n  mode = 'in-out'\n): FunctionalComponentOptions {\n  return {\n    name,\n\n    functional: true,\n\n    props: {\n      mode: {\n        type: String,\n        default: mode,\n      },\n    },\n\n    render (h, context): VNode {\n      const data = {\n        props: {\n          ...context.props,\n          name,\n        },\n        on: functions,\n      }\n\n      return h('transition', data, context.children)\n    },\n  }\n}\n\nexport type BindingConfig = Pick<VNodeDirective, 'arg' | 'modifiers' | 'value'>\nexport function directiveConfig (binding: BindingConfig, defaults = {}): VNodeDirective {\n  return {\n    ...defaults,\n    ...binding.modifiers,\n    value: binding.arg,\n    ...(binding.value || {}),\n  }\n}\n\nexport function addOnceEventListener (\n  el: EventTarget,\n  eventName: string,\n  cb: (event: Event) => void,\n  options: boolean | AddEventListenerOptions = false\n): void {\n  var once = (event: Event) => {\n    cb(event)\n    el.removeEventListener(eventName, once, options)\n  }\n\n  el.addEventListener(eventName, once, options)\n}\n\nlet passiveSupported = false\ntry {\n  if (typeof window !== 'undefined') {\n    const testListenerOpts = Object.defineProperty({}, 'passive', {\n      get: () => {\n        passiveSupported = true\n      },\n    })\n\n    window.addEventListener('testListener', testListenerOpts, testListenerOpts)\n    window.removeEventListener('testListener', testListenerOpts, testListenerOpts)\n  }\n} catch (e) { console.warn(e) }\nexport { passiveSupported }\n\nexport function addPassiveEventListener (\n  el: EventTarget,\n  event: string,\n  cb: EventHandlerNonNull | (() => void),\n  options: {}\n): void {\n  el.addEventListener(event, cb, passiveSupported ? options : false)\n}\n\nexport function getNestedValue (obj: any, path: (string | number)[], fallback?: any): any {\n  const last = path.length - 1\n\n  if (last < 0) return obj === undefined ? fallback : obj\n\n  for (let i = 0; i < last; i++) {\n    if (obj == null) {\n      return fallback\n    }\n    obj = obj[path[i]]\n  }\n\n  if (obj == null) return fallback\n\n  return obj[path[last]] === undefined ? fallback : obj[path[last]]\n}\n\nexport function deepEqual (a: any, b: any): boolean {\n  if (a === b) return true\n\n  if (a instanceof Date && b instanceof Date) {\n    // If the values are Date, they were convert to timestamp with getTime and compare it\n    if (a.getTime() !== b.getTime()) return false\n  }\n\n  if (a !== Object(a) || b !== Object(b)) {\n    // If the values aren't objects, they were already checked for equality\n    return false\n  }\n\n  const props = Object.keys(a)\n\n  if (props.length !== Object.keys(b).length) {\n    // Different number of props, don't bother to check\n    return false\n  }\n\n  return props.every(p => deepEqual(a[p], b[p]))\n}\n\nexport function getObjectValueByPath (obj: any, path: string, fallback?: any): any {\n  // credit: http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key#comment55278413_6491621\n  if (obj == null || !path || typeof path !== 'string') return fallback\n  if (obj[path] !== undefined) return obj[path]\n  path = path.replace(/\\[(\\w+)\\]/g, '.$1') // convert indexes to properties\n  path = path.replace(/^\\./, '') // strip a leading dot\n  return getNestedValue(obj, path.split('.'), fallback)\n}\n\nexport function getPropertyFromItem (\n  item: object,\n  property: string | (string | number)[] | ((item: object, fallback?: any) => any),\n  fallback?: any\n): any {\n  if (property == null) return item === undefined ? fallback : item\n\n  if (item !== Object(item)) return fallback === undefined ? item : fallback\n\n  if (typeof property === 'string') return getObjectValueByPath(item, property, fallback)\n\n  if (Array.isArray(property)) return getNestedValue(item, property, fallback)\n\n  if (typeof property !== 'function') return fallback\n\n  const value = property(item, fallback)\n\n  return typeof value === 'undefined' ? fallback : value\n}\n\nexport function createRange (length: number): number[] {\n  return Array.from({ length }, (v, k) => k)\n}\n\nexport function getZIndex (el?: Element | null): number {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return 0\n\n  const index = +window.getComputedStyle(el).getPropertyValue('z-index')\n\n  if (!index) return getZIndex(el.parentNode as Element)\n  return index\n}\n\nconst tagsToReplace = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n} as any\n\nexport function escapeHTML (str: string): string {\n  return str.replace(/[&<>]/g, tag => tagsToReplace[tag] || tag)\n}\n\nexport function filterObjectOnKeys<T, K extends keyof T> (obj: T, keys: K[]): { [N in K]: T[N] } {\n  const filtered = {} as { [N in K]: T[N] }\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i]\n    if (typeof obj[key] !== 'undefined') {\n      filtered[key] = obj[key]\n    }\n  }\n\n  return filtered\n}\n\nexport function convertToUnit (str: string | number | null | undefined, unit = 'px'): string | undefined {\n  if (str == null || str === '') {\n    return undefined\n  } else if (isNaN(+str!)) {\n    return String(str)\n  } else {\n    return `${Number(str)}${unit}`\n  }\n}\n\nexport function kebabCase (str: string): string {\n  return (str || '').replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n}\n\nexport function isObject (obj: any): obj is object {\n  return obj !== null && typeof obj === 'object'\n}\n\n// KeyboardEvent.keyCode aliases\nexport const keyCodes = Object.freeze({\n  enter: 13,\n  tab: 9,\n  delete: 46,\n  esc: 27,\n  space: 32,\n  up: 38,\n  down: 40,\n  left: 37,\n  right: 39,\n  end: 35,\n  home: 36,\n  del: 46,\n  backspace: 8,\n  insert: 45,\n  pageup: 33,\n  pagedown: 34,\n})\n\n// This remaps internal names like '$cancel' or '$vuetify.icons.cancel'\n// to the current name or component for that icon.\nexport function remapInternalIcon (vm: Vue, iconName: string): VuetifyIcon {\n  if (!iconName.startsWith('$')) {\n    return iconName\n  }\n\n  // Get the target icon name\n  const iconPath = `$vuetify.icons.values.${iconName.split('$').pop()!.split('.').pop()}`\n\n  // Now look up icon indirection name,\n  // e.g. '$vuetify.icons.values.cancel'\n  return getObjectValueByPath(vm, iconPath, iconName)\n}\n\nexport function keys<O> (o: O) {\n  return Object.keys(o) as (keyof O)[]\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nconst camelizeRE = /-(\\w)/g\nexport const camelize = (str: string): string => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '')\n}\n\n/**\n * Returns the set difference of B and A, i.e. the set of elements in B but not in A\n */\nexport function arrayDiff (a: any[], b: any[]): any[] {\n  const diff: any[] = []\n  for (let i = 0; i < b.length; i++) {\n    if (a.indexOf(b[i]) < 0) diff.push(b[i])\n  }\n  return diff\n}\n\n/**\n * Makes the first character of a string uppercase\n */\nexport function upperFirst (str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport function groupByProperty (xs: any[], key: string): Record<string, any[]> {\n  return xs.reduce((rv, x) => {\n    (rv[x[key]] = rv[x[key]] || []).push(x)\n    return rv\n  }, {})\n}\n\nexport function wrapInArray<T> (v: T | T[] | null | undefined): T[] { return v != null ? Array.isArray(v) ? v : [v] : [] }\n\nexport type compareFn<T = any> = (a: T, b: T) => number\n\nexport function sortItems (\n  items: any[],\n  sortBy: string[],\n  sortDesc: boolean[],\n  locale: string,\n  customSorters?: Record<string, compareFn>\n) {\n  if (sortBy === null || !sortBy.length) return items\n  const stringCollator = new Intl.Collator(locale, { sensitivity: 'accent', usage: 'sort' })\n\n  return items.sort((a, b) => {\n    for (let i = 0; i < sortBy.length; i++) {\n      const sortKey = sortBy[i]\n\n      let sortA = getObjectValueByPath(a, sortKey)\n      let sortB = getObjectValueByPath(b, sortKey)\n\n      if (sortDesc[i]) {\n        [sortA, sortB] = [sortB, sortA]\n      }\n\n      if (customSorters && customSorters[sortKey]) {\n        const customResult = customSorters[sortKey](sortA, sortB)\n\n        if (!customResult) continue\n\n        return customResult\n      }\n\n      // Check if both cannot be evaluated\n      if (sortA === null && sortB === null) {\n        continue\n      }\n\n      [sortA, sortB] = [sortA, sortB].map(s => (s || '').toString().toLocaleLowerCase())\n\n      if (sortA !== sortB) {\n        if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB)\n        return stringCollator.compare(sortA, sortB)\n      }\n    }\n\n    return 0\n  })\n}\n\nexport type FilterFn = (value: any, search: string | null, item: any) => boolean\n\nexport function defaultFilter (value: any, search: string | null, item: any) {\n  return value != null &&\n    search != null &&\n    typeof value !== 'boolean' &&\n    value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1\n}\n\nexport function searchItems (items: any[], search: string) {\n  if (!search) return items\n  search = search.toString().toLowerCase()\n  if (search.trim() === '') return items\n\n  return items.filter(item => Object.keys(item).some(key => defaultFilter(getObjectValueByPath(item, key), search, item)))\n}\n\n/**\n * Returns:\n *  - 'normal' for old style slots - `<template slot=\"default\">`\n *  - 'scoped' for old style scoped slots (`<template slot=\"default\" slot-scope=\"data\">`) or bound v-slot (`#default=\"data\"`)\n *  - 'v-slot' for unbound v-slot (`#default`) - only if the third param is true, otherwise counts as scoped\n */\nexport function getSlotType<T extends boolean = false> (vm: Vue, name: string, split?: T): (T extends true ? 'v-slot' : never) | 'normal' | 'scoped' | void {\n  if (vm.$slots[name] && vm.$scopedSlots[name] && (vm.$scopedSlots[name] as any).name) {\n    return split ? 'v-slot' as any : 'scoped'\n  }\n  if (vm.$slots[name]) return 'normal'\n  if (vm.$scopedSlots[name]) return 'scoped'\n}\n\nexport function debounce (fn: Function, delay: number) {\n  let timeoutId = 0 as any\n  return (...args: any[]) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => fn(...args), delay)\n  }\n}\n\nexport function getPrefixedScopedSlots (prefix: string, scopedSlots: any) {\n  return Object.keys(scopedSlots).filter(k => k.startsWith(prefix)).reduce((obj: any, k: string) => {\n    obj[k.replace(prefix, '')] = scopedSlots[k]\n    return obj\n  }, {})\n}\n\nexport function getSlot (vm: Vue, name = 'default', data?: object, optional = false) {\n  if (vm.$scopedSlots[name]) {\n    return vm.$scopedSlots[name]!(data)\n  } else if (vm.$slots[name] && (!data || optional)) {\n    return vm.$slots[name]\n  }\n  return undefined\n}\n\nexport function clamp (value: number, min = 0, max = 1) {\n  return Math.max(min, Math.min(max, value))\n}\n\nexport function padEnd (str: string, length: number, char = '0') {\n  return str + char.repeat(Math.max(0, length - str.length))\n}\n\nexport function chunk (str: string, size = 1) {\n  const chunked: string[] = []\n  let index = 0\n  while (index < str.length) {\n    chunked.push(str.substr(index, size))\n    index += size\n  }\n  return chunked\n}\n\nexport function humanReadableFileSize (bytes: number, binary = false): string {\n  const base = binary ? 1024 : 1000\n  if (bytes < base) {\n    return `${bytes} B`\n  }\n\n  const prefix = binary ? ['Ki', 'Mi', 'Gi'] : ['k', 'M', 'G']\n  let unit = -1\n  while (Math.abs(bytes) >= base && unit < prefix.length - 1) {\n    bytes /= base\n    ++unit\n  }\n  return `${bytes.toFixed(1)} ${prefix[unit]}B`\n}\n\nexport function camelizeObjectKeys (obj: Record<string, any> | null | undefined) {\n  if (!obj) return {}\n\n  return Object.keys(obj).reduce((o: any, key: string) => {\n    o[camelize(key)] = obj[key]\n    return o\n  }, {})\n}\n","/**\n * @copyright 2017 Alex Regan\n * @license MIT\n * @see https://github.com/alexsasharegan/vue-functional-data-merge\n */\n/* eslint-disable max-statements */\nimport { VNodeData } from 'vue'\nimport { camelize } from './helpers'\n\nconst pattern = {\n  styleList: /;(?![^(]*\\))/g,\n  styleProp: /:(.*)/,\n} as const\n\nfunction parseStyle (style: string) {\n  const styleMap: Dictionary<any> = {}\n\n  for (const s of style.split(pattern.styleList)) {\n    let [key, val] = s.split(pattern.styleProp)\n    key = key.trim()\n    if (!key) {\n      continue\n    }\n    // May be undefined if the `key: value` pair is incomplete.\n    if (typeof val === 'string') {\n      val = val.trim()\n    }\n    styleMap[camelize(key)] = val\n  }\n\n  return styleMap\n}\n\n/**\n * Intelligently merges data for createElement.\n * Merges arguments left to right, preferring the right argument.\n * Returns new VNodeData object.\n */\nexport default function mergeData (...vNodeData: VNodeData[]): VNodeData\nexport default function mergeData (): VNodeData {\n  const mergeTarget: VNodeData & Dictionary<any> = {}\n  let i: number = arguments.length\n  let prop: string\n  let event: string\n\n  // Allow for variadic argument length.\n  while (i--) {\n    // Iterate through the data properties and execute merge strategies\n    // Object.keys eliminates need for hasOwnProperty call\n    for (prop of Object.keys(arguments[i])) {\n      switch (prop) {\n        // Array merge strategy (array concatenation)\n        case 'class':\n        case 'style':\n        case 'directives':\n          if (!Array.isArray(mergeTarget[prop])) {\n            mergeTarget[prop] = []\n          }\n\n          if (prop === 'style') {\n            let style: any[]\n            if (Array.isArray(arguments[i].style)) {\n              style = arguments[i].style\n            } else {\n              style = [arguments[i].style]\n            }\n            for (let j = 0; j < style.length; j++) {\n              const s = style[j]\n              if (typeof s === 'string') {\n                style[j] = parseStyle(s)\n              }\n            }\n            arguments[i].style = style\n          }\n\n          // Repackaging in an array allows Vue runtime\n          // to merge class/style bindings regardless of type.\n          mergeTarget[prop] = mergeTarget[prop].concat(arguments[i][prop])\n          break\n        // Space delimited string concatenation strategy\n        case 'staticClass':\n          if (!arguments[i][prop]) {\n            break\n          }\n          if (mergeTarget[prop] === undefined) {\n            mergeTarget[prop] = ''\n          }\n          if (mergeTarget[prop]) {\n            // Not an empty string, so concatenate\n            mergeTarget[prop] += ' '\n          }\n          mergeTarget[prop] += arguments[i][prop].trim()\n          break\n        // Object, the properties of which to merge via array merge strategy (array concatenation).\n        // Callback merge strategy merges callbacks to the beginning of the array,\n        // so that the last defined callback will be invoked first.\n        // This is done since to mimic how Object.assign merging\n        // uses the last given value to assign.\n        case 'on':\n        case 'nativeOn':\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = {}\n          }\n          const listeners = mergeTarget[prop]!\n          for (event of Object.keys(arguments[i][prop] || {})) {\n            // Concat function to array of functions if callback present.\n            if (listeners[event]) {\n              // Insert current iteration data in beginning of merged array.\n              listeners[event] = Array<Function>().concat( // eslint-disable-line\n                listeners[event],\n                arguments[i][prop][event]\n              )\n            } else {\n              // Straight assign.\n              listeners[event] = arguments[i][prop][event]\n            }\n          }\n          break\n        // Object merge strategy\n        case 'attrs':\n        case 'props':\n        case 'domProps':\n        case 'scopedSlots':\n        case 'staticStyle':\n        case 'hook':\n        case 'transition':\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = {}\n          }\n          mergeTarget[prop] = { ...arguments[i][prop], ...mergeTarget[prop] }\n          break\n        // Reassignment strategy (no merge)\n        case 'slot':\n        case 'key':\n        case 'ref':\n        case 'tag':\n        case 'show':\n        case 'keepAlive':\n        default:\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = arguments[i][prop]\n          }\n      }\n    }\n  }\n\n  return mergeTarget\n}\n","/* eslint-disable max-len, import/export, no-use-before-define */\nimport Vue, { VueConstructor } from 'vue'\n\nexport default function mixins<T extends VueConstructor[]> (...args: T): ExtractVue<T> extends infer V ? V extends Vue ? VueConstructor<V> : never : never\nexport default function mixins<T extends Vue> (...args: VueConstructor[]): VueConstructor<T>\nexport default function mixins (...args: VueConstructor[]): VueConstructor {\n  return Vue.extend({ mixins: args })\n}\n\n/**\n * Returns the instance type from a VueConstructor\n * Useful for adding types when using mixins().extend()\n */\nexport type ExtractVue<T extends VueConstructor | VueConstructor[]> = T extends (infer U)[]\n  ? UnionToIntersection<\n    U extends VueConstructor<infer V> ? V : never\n  >\n  : T extends VueConstructor<infer V> ? V : never\n\ntype UnionToIntersection<U> =\n  (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never\n","import { CreateElement, VNode } from 'vue'\n\nexport default function rebuildFunctionalSlots (slots: { [key: string]: VNode[] | undefined }, h: CreateElement) {\n  const children: VNode[] = []\n\n  for (const slot in slots) {\n    if (slots.hasOwnProperty(slot)) {\n      children.push(h('template', { slot }, slots[slot]))\n    }\n  }\n\n  return children\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_vue__;"],"sourceRoot":""}]}